{"version":3,"file":"static/js/304.9fdcba6f.chunk.js","mappings":"4NAYO,MAAMA,EACX,CAACC,EAAeC,IAAsBC,IACpCA,GAASC,EAAAA,EAAAA,OACTC,EAAAA,EAAAA,KACQ,eAAgB,CAAEJ,QAAOC,aAC9BI,MAAMC,IACLC,aAAaC,QACX,gCACAF,EAASG,KAAKC,KAEhBR,GAASS,EAAAA,EAAAA,OACTC,OAAOC,SAASC,QAAQ,IAEzBC,OAAOC,IACNd,GAASe,EAAAA,EAAAA,IAAaD,EAAME,UAC5BhB,GACEiB,EAAAA,EAAAA,IAAmB,CACjBD,QAAS,kCACTE,KAAM,UAET,GACD,EAGKC,EAAS,IAAOnB,IAC3BA,GAASoB,EAAAA,EAAAA,OACTlB,EAAAA,EAAAA,KACQ,iBACLC,MAAK,KACJE,aAAagB,WAAW,iCACxBrB,GAASsB,EAAAA,EAAAA,OACTZ,OAAOC,SAASC,QAAQ,IAEzBC,OAAOC,IACNd,GAASuB,EAAAA,EAAAA,IAAcT,EAAME,UAC7BhB,GACEiB,EAAAA,EAAAA,IAAmB,CACjBD,QAAS,mCACTE,KAAM,UAET,GACD,E,mFCtBN,MAAMM,UAAuBC,EAAAA,cAI3BC,YAAYC,GACVC,MAAMD,GAAO,KAQfE,YAAc,KACZ,MAAM,MAAE/B,EAAK,SAAEC,GAAa+B,KAAKC,MACjCD,KAAKH,MAAM9B,MAAMC,EAAOC,EAAS,EACjC,KAEFiC,gBAAkB,KAChBF,KAAKG,SAAS,CAAEC,MAAM,GAAO,EAC7B,KAEFC,YAAc,KACZL,KAAKG,SAAS,CAAEC,MAAM,GAAQ,EAC9B,KAEFE,kBAAqBC,IACnBP,KAAKG,SAAS,CAAEnC,MAAOuC,EAAMC,OAAOC,OAAQ,EAC5C,KAEFC,qBAAwBH,IACtBP,KAAKG,SAAS,CAAElC,SAAUsC,EAAMC,OAAOC,OAAQ,EAzB/CT,KAAKC,MAAQ,CACXG,MAAM,EACNpC,MAAO,GACPC,SAAU,GAEd,CAuBA0C,SACE,MAAM,KAAEP,GAASJ,KAAKC,MACtB,OAAOW,EAAAA,EAAAA,MACL,SAACC,EAAA,EAAM,CACLC,QAAQ,OACRC,GAAI,CACFC,cAAe,OACf,UAAW,CAAEC,gBAAiB,eAC9BC,OAAQ,EACRC,QAAS,GAEXC,QAASpB,KAAKH,MAAMR,OAAO,UAE3B,gBAAKgC,UAAU,+BAA8B,uBAG/C,4BACE,SAACR,EAAA,EAAM,CACLC,QAAQ,OACRC,GAAI,CACFC,cAAe,OACf,UAAW,CAAEC,gBAAiB,eAC9BC,OAAQ,EACRC,QAAS,EACTG,YAAa,UAEfF,QAASpB,KAAKE,gBAAgB,UAE9B,gBAAKmB,UAAU,+BAA8B,sBAE/C,UAACE,EAAA,EAAM,CAACnB,KAAMA,EAAMoB,QAASxB,KAAKK,YAAY,WAC5C,SAACoB,EAAA,EAAW,qBACZ,UAACC,EAAA,EAAa,YACZ,SAACC,EAAA,EAAS,CACRT,OAAO,QACPU,GAAG,QACHC,MAAM,gBACNzC,KAAK,QACL0C,SAAU9B,KAAKM,kBACfyB,WAAS,KAEX,SAACJ,EAAA,EAAS,CACRT,OAAO,QACPU,GAAG,WACHC,MAAM,WACNzC,KAAK,WACL0C,SAAU9B,KAAKU,qBACfqB,WAAS,QAGb,UAACC,EAAA,EAAa,YACZ,SAACnB,EAAA,EAAM,CAACO,QAASpB,KAAKK,YAAY,qBAClC,SAACQ,EAAA,EAAM,CAACO,QAASpB,KAAKD,YAAY,2BAK5C,EAGF,MC5HA,GD0IekC,EAAAA,EAAAA,KAdUhC,IAAgB,CACvCiC,eAAgBjC,EAAMkC,KAAKD,eAC3BE,gBAAiBnC,EAAMkC,KAAKC,oBAGFlE,IAC1BmE,EAAAA,EAAAA,IACE,CACEtE,MAAK,EACLsB,OACF,GACAnB,IAGJ,CAA4DwB,GE1I5D,QCOO,SAAiC4C,GACtC,OAAO,cAAkC3C,EAAAA,cACvCgB,SACE,OACE,4BACE,gBAAKU,UAAU,8BAA6B,UAC1C,iBAAKA,UAAU,yCAAwC,WACrD,gBAAKA,UAAU,8CAA6C,UAC1D,SAAC,EAAc,OAEjB,iBAAKA,UAAU,yCAAwC,WACrD,0BACE,SAAC,KAAO,CACNkB,GAAG,IACHlB,UAAU,oCACVmB,MAAO,CAAEC,eAAgB,QAAS,4BAKtC,iBAAKpB,UAAU,uCAAsC,WACnD,SAAC,KAAO,CACNkB,GAAG,IACHlB,UAAW,QAAC,SAAEqB,GAAU,QACtB,uCACCA,EACG,6CACA,GAAG,EAETF,MAAO,CAAEC,eAAgB,QAAS,mBAIpC,SAAC,KAAO,CACNF,GAAG,QACHlB,UAAW,QAAC,SAAEqB,GAAU,QACtB,uCACCA,EACG,6CACA,GAAG,EAETF,MAAO,CAAEC,eAAgB,QAAS,mBAIpC,SAAC,KAAO,CACNF,GAAG,SACHlB,UAAW,QAAC,SAAEqB,GAAU,QACtB,uCACCA,EACG,6CACA,GAAG,EAETF,MAAO,CAAEC,eAAgB,QAAS,oBAIpC,SAAC,KAAO,CACNF,GAAG,UACHlB,UAAW,QAAC,SAAEqB,GAAU,QACtB,uCACCA,EACG,6CACA,GAAG,EAETF,MAAO,CAAEC,eAAgB,QAAS,qBAIpC,SAAC,KAAO,CACNF,GAAG,SACHlB,UAAW,QAAC,SAAEqB,GAAU,QACtB,uCACCA,EACG,6CACA,GAAG,EAETF,MAAO,CAAEC,eAAgB,QAAS,+BAQ5C,gBAAKpB,UAAU,wCAAuC,UACpD,SAACiB,EAAgB,OAEnB,iBAAKjB,UAAU,8BAA6B,WAC1C,iBAAKA,UAAU,sCAAqC,WAClD,gBAAKA,UAAU,4CAA2C,UACxD,SAACsB,EAAA,EAAU,CACTC,KAAK,6CACLpC,OAAO,SACPqC,IAAI,sBACJ9B,GAAI,CAAEI,QAAS,GAAI,UAEnB,SAAC2B,EAAA,EAAY,CAACzB,UAAU,iDAG5B,gBAAKA,UAAU,4CAA2C,UACxD,SAACsB,EAAA,EAAU,CACTC,KAAK,oCACLpC,OAAO,SACPqC,IAAI,sBACJ9B,GAAI,CAAEI,QAAS,GAAI,UAEnB,SAAC4B,EAAA,EAAU,CAAC1B,UAAU,oDAI5B,gBAAKA,UAAU,yCAAwC,SACpD,mBACC,IAAI2B,MAAOC,cACX,4CAKZ,EAEJ,C,kLChGA,MAAMC,EAAQ,CAAC,uBAAc,6BAE7B,MAAMC,UAAgBxD,EAAAA,cACpBC,YAAYC,GACVC,MAAMD,GAAO,KAgBfuD,aAAe,KACb,MAAMC,EAAOC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,IACtCC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAcC,aAE1BC,EAAMR,EAAKA,EAAKG,OAAS,GAC/BxD,KAAKG,SAAS,CAAE2D,WAAYD,EAAKR,KAAMU,IAAAA,UAAYV,IAAQ,EAC3D,KAEFW,cAAgB,KACd,MAAMC,EAAQf,EAAMO,KAAKC,MAAsB,EAAhBD,KAAKE,WACpC3D,KAAKG,SAAS,CAAE+D,eAAgBD,GAAQ,EACxC,KAEFE,cAAgB,KACd,MAAMF,EAAQf,EAAMO,KAAKC,MAAsB,EAAhBD,KAAKE,WACpC3D,KAAKG,SAAS,CAAEiE,eAAgBH,GAAQ,EACxC,KAEFI,OAAS,KACP,MAAM,WAAEP,GAAe9D,KAAKC,MAC5BD,KAAKG,SAAS,CAAEmE,kBAAmBR,GAAa,EAChD,KAEFS,OAAS,KACP,MAAM,eAAEL,EAAc,eAAEE,EAAc,kBAAEE,GAAsBtE,KAAKC,MAC/DiE,IAAmBE,EACrBpE,KAAKG,SAAS,CAAEqE,kBAAmBF,IAEnCtE,KAAKG,SAAS,CACZqE,kBAAmBf,KAAKC,MAAsB,EAAhBD,KAAKE,UAAcC,YAErD,EACA,KAEFa,OAAS,KACP,MAAM,KAAEpB,EAAI,gBAAEqB,GAAoB1E,KAAKC,MACjC0E,EAAkB,CACtBC,QAAS5E,KAAKC,MAAMiE,eACpBW,QAAS7E,KAAKC,MAAMmE,eACpBU,WAAY9E,KAAKC,MAAMqE,kBACvBS,WAAY/E,KAAKC,MAAMuE,mBAEnBX,EAAMR,EAAKA,EAAKG,OAAS,GAC/BxD,KAAKG,SAAS,CACZ2D,WAAYD,EACZR,KAAMU,IAAAA,UAAYV,GAClBqB,gBAAiB,IAAIA,EAAiBC,GACtCL,kBAAmB,GACnBE,kBAAmB,GACnBN,eAAgB,GAChBE,eAAgB,IAChB,EAlEFpE,KAAKC,MAAQ,CACXoD,KAAM,GACNqB,gBAAiB,GACjBZ,WAAY,GACZQ,kBAAmB,GACnBE,kBAAmB,GACnBN,eAAgB,GAChBE,eAAgB,GAEpB,CAEAY,oBACEhF,KAAKoD,cACP,CAwDAzC,SACE,MAAM,KACJ0C,EAAI,WACJS,EAAU,kBACVQ,EAAiB,kBACjBE,EAAiB,eACjBN,EAAc,eACdE,EAAc,gBACdM,GACE1E,KAAKC,MACT,OACE,iBAAKoB,UAAU,UAAS,WACtB,gBAAKA,UAAU,iBAAgB,4CAC/B,iBAAKA,UAAU,iBAAgB,WAC7B,0DACiC,KAC/B,cACEuB,KAAK,qCACLvB,UAAU,aACVb,OAAO,SACPqC,IAAI,sBAAqB,oDAGvB,kGAIN,0sBAaA,+GAKF,iBAAKxB,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,oBAAmB,6BAAkBgC,MACpD,iBAAKhC,UAAU,uBAAsB,WACnC,iBAAKA,UAAU,gCAA+B,WAC5C,iBAAKA,UAAU,sBAAqB,WAClC,gBAAKA,UAAU,6BAA4B,6BAC3C,SAACR,EAAA,EAAM,CACLQ,UAAU,8BACV4D,WAAYf,EACZ9C,QAASpB,KAAKgE,cACdlD,QAAQ,YACRoE,KAAK,QAAO,qCAId,SAACrE,EAAA,EAAM,CACLQ,UAAU,8BACV4D,UAAWf,KAAoBI,EAC/BlD,QAASpB,KAAKqE,OACdvD,QAAQ,YACRoE,KAAK,QAAO,kCAId,iBAAK7D,UAAU,+BAA8B,WAC3C,8CAAsB6C,MACtB,2CAAmBI,YAGvB,gBAAKjD,UAAU,sBAAqB,UAClC,iBAAKA,UAAU,6BAA4B,0BAC3ByC,QAGlB,iBAAKzC,UAAU,sBAAqB,WAClC,gBAAKA,UAAU,6BAA4B,6BAC3C,SAACR,EAAA,EAAM,CACLQ,UAAU,8BACV4D,UACGf,IAAmBI,KAAuBF,EAE7ChD,QAASpB,KAAKmE,cACdrD,QAAQ,YACRoE,KAAK,QAAO,qCAId,SAACrE,EAAA,EAAM,CACLQ,UAAU,8BACV4D,UACGf,IACAI,IACAF,KACCI,EAEJpD,QAASpB,KAAKuE,OACdzD,QAAQ,YACRoE,KAAK,QAAO,iCAId,iBAAK7D,UAAU,+BAA8B,WAC3C,8CAAsB+C,MACtB,0CACe,IACZF,GAAkBE,EACfF,IAAmBE,EACjB,OACA,MACF,SAEN,2CAAmBI,eAIzB,gBAAKnD,UAAU,sBAAqB,UAClC,SAACR,EAAA,EAAM,CACLQ,UAAU,8BACV4D,UACGf,IACAI,IACAF,IACAI,EAEHpD,QAASpB,KAAKyE,OACd3D,QAAQ,YACRoE,KAAK,QAAO,0BAMlB,SAACC,EAAA,EAAc,CAACC,UAAWC,EAAAA,EAAM,UAC/B,UAACC,EAAA,EAAK,CAACJ,KAAK,QAAO,WACjB,SAACK,EAAA,EAAS,WACR,UAACC,EAAA,EAAQ,YACP,SAACC,EAAA,EAAS,CAACC,MAAM,SAAQ,6BACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,0BACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,6BACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,0BACzB,SAACD,EAAA,EAAS,CAACC,MAAM,SAAQ,wBAG7B,SAACC,EAAA,EAAS,UACPjB,EAAgBkB,KAAKC,IACpB,UAACL,EAAA,EAAQ,CAEPzE,GAAI,CAAE,mCAAoC,CAAE+E,OAAQ,IAAM,WAE1D,SAACL,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEG,EAAajB,WACxC,SAACa,EAAA,EAAS,CAACC,MAAM,SAAQ,SACtBG,EAAaf,cAEhB,SAACW,EAAA,EAAS,CAACC,MAAM,SAAQ,SAAEG,EAAahB,WACxC,SAACY,EAAA,EAAS,CAACC,MAAM,SAAQ,SACtBG,EAAad,cAEhB,SAACU,EAAA,EAAS,CAACC,MAAM,SAAQ,SACtBG,EAAajB,UAAYiB,EAAahB,QACnC,MACA,SAdDgB,EAAaf,0BAwBpC,EAGF,MC5RA,GD4ReiB,EAAAA,EAAAA,GAAwB5C,E","sources":["actions/authActions.ts","views/components/Authentication/Authentication.tsx","views/components/Authentication/index.tsx","views/components/HeaderFooterWrapper/index.tsx","views/components/HeaderFooterWrapper/HeaderFooterWrapper.tsx","views/pages/Quantum/Quantum.tsx","views/pages/Quantum/index.tsx"],"sourcesContent":["import { Dispatch } from \"redux\";\nimport axios from \"axios\";\nimport {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  logoutRequest,\n  logoutSuccess,\n  logoutFailure,\n} from \"../slices/authSlice\";\nimport { createNotification } from \"../slices/notificationSlice\";\n\nexport const login =\n  (email: string, password: string) => (dispatch: Dispatch) => {\n    dispatch(loginRequest());\n    axios\n      .post(\"/auth/login/\", { email, password })\n      .then((response) => {\n        localStorage.setItem(\n          \"michaellin-personal-api-token\",\n          response.data.key\n        );\n        dispatch(loginSuccess());\n        window.location.reload();\n      })\n      .catch((error) => {\n        dispatch(loginFailure(error.message));\n        dispatch(\n          createNotification({\n            message: \"Login failed. Please try again.\",\n            type: \"error\",\n          })\n        );\n      });\n  };\n\nexport const logout = () => (dispatch: Dispatch) => {\n  dispatch(logoutRequest());\n  axios\n    .post(\"/auth/logout/\")\n    .then(() => {\n      localStorage.removeItem(\"michaellin-personal-api-token\");\n      dispatch(logoutSuccess());\n      window.location.reload();\n    })\n    .catch((error) => {\n      dispatch(logoutFailure(error.message));\n      dispatch(\n        createNotification({\n          message: \"Logout failed. Please try again.\",\n          type: \"error\",\n        })\n      );\n    });\n};\n","import \"./Authentication.scss\";\n\nimport { PureComponent } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\n\nimport { RootState } from \"../../../store\";\nimport { login, logout } from \"../../../actions/authActions\";\nimport { loggedIn } from \"../../../Api\";\n\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\n\ntype AuthenticationProps = {\n  isLoadingLogin: boolean;\n  isLoadingLogout: boolean;\n  login: typeof login;\n  logout: typeof logout;\n};\n\ntype AuthenticationState = {\n  open: boolean;\n  email: string;\n  password: string;\n};\n\nclass Authentication extends PureComponent<\n  AuthenticationProps,\n  AuthenticationState\n> {\n  constructor(props: AuthenticationProps) {\n    super(props);\n    this.state = {\n      open: false,\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  handleLogin = () => {\n    const { email, password } = this.state;\n    this.props.login(email, password);\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ email: event.target.value });\n  };\n\n  handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ password: event.target.value });\n  };\n\n  render() {\n    const { open } = this.state;\n    return loggedIn() ? (\n      <Button\n        variant=\"text\"\n        sx={{\n          textTransform: \"none\",\n          \"&:hover\": { backgroundColor: \"transparent\" },\n          margin: 0,\n          padding: 0,\n        }}\n        onClick={this.props.logout}\n      >\n        <div className=\"Authentication__button--text\">Logout</div>\n      </Button>\n    ) : (\n      <div>\n        <Button\n          variant=\"text\"\n          sx={{\n            textTransform: \"none\",\n            \"&:hover\": { backgroundColor: \"transparent\" },\n            margin: 0,\n            padding: 0,\n            fontVariant: \"normal\",\n          }}\n          onClick={this.handleClickOpen}\n        >\n          <div className=\"Authentication__button--text\">Login</div>\n        </Button>\n        <Dialog open={open} onClose={this.handleClose}>\n          <DialogTitle>Login</DialogTitle>\n          <DialogContent>\n            <TextField\n              margin=\"dense\"\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              onChange={this.handleEmailChange}\n              fullWidth\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              onChange={this.handlePasswordChange}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose}>Cancel</Button>\n            <Button onClick={this.handleLogin}>Login</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoadingLogin: state.auth.isLoadingLogin,\n  isLoadingLogout: state.auth.isLoadingLogout,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(\n    {\n      login,\n      logout,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Authentication);\n","import Authentication from \"./Authentication\";\nexport default Authentication;\n","import { withHeaderFooterWrapper } from \"./HeaderFooterWrapper\";\nexport default withHeaderFooterWrapper;\n","import \"./HeaderFooterWrapper.scss\";\nimport { PureComponent, ComponentType } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\nimport { IconButton } from \"@mui/material\";\nimport Authentication from \"../Authentication\";\n\nexport function withHeaderFooterWrapper(WrappedComponent: ComponentType) {\n  return class HeaderFooterWrapper extends PureComponent {\n    render() {\n      return (\n        <div>\n          <div className=\"HeaderFooterWrapper__header\">\n            <div className=\"HeaderFooterWrapper__header--container\">\n              <div className=\"HeaderFooterWrapper__header--authentication\">\n                <Authentication />\n              </div>\n              <div className=\"HeaderFooterWrapper__header--titleMenu\">\n                <div>\n                  <NavLink\n                    to=\"/\"\n                    className=\"HeaderFooterWrapper__header--name\"\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    Michael Lin\n                  </NavLink>\n                </div>\n                <div className=\"HeaderFooterWrapper__header--buttons\">\n                  <NavLink\n                    to=\"/\"\n                    className={({ isActive }) =>\n                      \"HeaderFooterWrapper__header--button\" +\n                      (isActive\n                        ? \" HeaderFooterWrapper__header--buttonActive\"\n                        : \"\")\n                    }\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    Home\n                  </NavLink>\n                  <NavLink\n                    to=\"/work\"\n                    className={({ isActive }) =>\n                      \"HeaderFooterWrapper__header--button\" +\n                      (isActive\n                        ? \" HeaderFooterWrapper__header--buttonActive\"\n                        : \"\")\n                    }\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    Work\n                  </NavLink>\n                  <NavLink\n                    to=\"/music\"\n                    className={({ isActive }) =>\n                      \"HeaderFooterWrapper__header--button\" +\n                      (isActive\n                        ? \" HeaderFooterWrapper__header--buttonActive\"\n                        : \"\")\n                    }\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    Music\n                  </NavLink>\n                  <NavLink\n                    to=\"/travel\"\n                    className={({ isActive }) =>\n                      \"HeaderFooterWrapper__header--button\" +\n                      (isActive\n                        ? \" HeaderFooterWrapper__header--buttonActive\"\n                        : \"\")\n                    }\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    Travel\n                  </NavLink>\n                  <NavLink\n                    to=\"/other\"\n                    className={({ isActive }) =>\n                      \"HeaderFooterWrapper__header--button\" +\n                      (isActive\n                        ? \" HeaderFooterWrapper__header--buttonActive\"\n                        : \"\")\n                    }\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    Other\n                  </NavLink>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"HeaderFooterWrapper__wrappedComponent\">\n            <WrappedComponent />\n          </div>\n          <div className=\"HeaderFooterWrapper__footer\">\n            <div className=\"HeaderFooterWrapper__footer--social\">\n              <div className=\"HeaderFooterWrapper__footer--socialButton\">\n                <IconButton\n                  href=\"https://www.linkedin.com/in/michaellin986/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  sx={{ padding: 0 }}\n                >\n                  <LinkedInIcon className=\"HeaderFooterWrapper__footer--socialIcon\" />\n                </IconButton>\n              </div>\n              <div className=\"HeaderFooterWrapper__footer--socialButton\">\n                <IconButton\n                  href=\"https://github.com/michaellin986/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  sx={{ padding: 0 }}\n                >\n                  <GitHubIcon className=\"HeaderFooterWrapper__footer--socialIcon\" />\n                </IconButton>\n              </div>\n            </div>\n            <div className=\"HeaderFooterWrapper__footer--copyright\">\n              {\"Copyright © \" +\n                new Date().getFullYear() +\n                \" Michael Lin. All rights reserved.\"}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n}\n","import \"./Quantum.scss\";\nimport { PureComponent } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Button from \"@mui/material/Button\";\nimport _ from \"lodash\";\n\nimport withHeaderFooterWrapper from \"../../components/HeaderFooterWrapper\";\n\ninterface Transmitted {\n  encoder: string;\n  decoder: string;\n  bitEncoded: string;\n  bitDecoded: string;\n}\n\ntype QuantumProps = Record<string, never>;\n\ntype QuantumStates = {\n  bits: string[];\n  dataTransmitted: Transmitted[];\n  currentBit: string;\n  currentBitEncoded: string;\n  currentBitDecoded: string;\n  currentEncoder: string;\n  currentDecoder: string;\n};\n\nconst bases = [\"{|0⟩, |1⟩}\", \"{|+⟩, |−⟩}\"];\n\nclass Quantum extends PureComponent<QuantumProps, QuantumStates> {\n  constructor(props: QuantumProps) {\n    super(props);\n    this.state = {\n      bits: [],\n      dataTransmitted: [],\n      currentBit: \"\",\n      currentBitEncoded: \"\",\n      currentBitDecoded: \"\",\n      currentEncoder: \"\",\n      currentDecoder: \"\",\n    };\n  }\n\n  componentDidMount(): void {\n    this.generateBits();\n  }\n\n  generateBits = () => {\n    const bits = Array.from({ length: 20 }, () =>\n      Math.floor(Math.random() * 2).toString()\n    );\n    const bit = bits[bits.length - 1];\n    this.setState({ currentBit: bit, bits: _.dropRight(bits) });\n  };\n\n  chooseEncoder = () => {\n    const basis = bases[Math.floor(Math.random() * 2)];\n    this.setState({ currentEncoder: basis });\n  };\n\n  chooseDecoder = () => {\n    const basis = bases[Math.floor(Math.random() * 2)];\n    this.setState({ currentDecoder: basis });\n  };\n\n  encode = () => {\n    const { currentBit } = this.state;\n    this.setState({ currentBitEncoded: currentBit });\n  };\n\n  decode = () => {\n    const { currentEncoder, currentDecoder, currentBitEncoded } = this.state;\n    if (currentEncoder === currentDecoder) {\n      this.setState({ currentBitDecoded: currentBitEncoded });\n    } else {\n      this.setState({\n        currentBitDecoded: Math.floor(Math.random() * 2).toString(),\n      });\n    }\n  };\n\n  record = () => {\n    const { bits, dataTransmitted } = this.state;\n    const newTransmission = {\n      encoder: this.state.currentEncoder,\n      decoder: this.state.currentDecoder,\n      bitEncoded: this.state.currentBitEncoded,\n      bitDecoded: this.state.currentBitDecoded,\n    };\n    const bit = bits[bits.length - 1];\n    this.setState({\n      currentBit: bit,\n      bits: _.dropRight(bits),\n      dataTransmitted: [...dataTransmitted, newTransmission],\n      currentBitEncoded: \"\",\n      currentBitDecoded: \"\",\n      currentEncoder: \"\",\n      currentDecoder: \"\",\n    });\n  };\n\n  render() {\n    const {\n      bits,\n      currentBit,\n      currentBitEncoded,\n      currentBitDecoded,\n      currentEncoder,\n      currentDecoder,\n      dataTransmitted,\n    } = this.state;\n    return (\n      <div className=\"Quantum\">\n        <div className=\"Quantum__title\">BB84 quantum key distribution</div>\n        <div className=\"Quantum__intro\">\n          <p>\n            The module below simulates the{\" \"}\n            <a\n              href=\"https://en.wikipedia.org/wiki/BB84\"\n              className=\"Work__link\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              BB84 quantum key distribution protocol\n            </a>\n            . The current version does not include an eavesdropper, but it will\n            be added in the future.\n          </p>\n          <p>\n            The protocol is as follows: Alice and Bob share a quantum channel.\n            Alice chooses a basis (a set of two orthonormal vectors, either the\n            standard basis or the Hadamard basis) and encodes a bit (0 or 1) in\n            a qubit in that basis. She then sends the qubit to Bob through the\n            quantum channel. Bob chooses a basis (again, either the standard\n            basis or the Hadamard basis) and measures the qubit in that basis\n            upon receiving the qubit. Alice and Bob will then compare their\n            basis choices. If the two bases are the same, Bob can decode the bit\n            with certainty. If the two bases are different, Bob discard the\n            qubit because 50% of the time the bit will be incorrectly decoded.\n            The process repeats.\n          </p>\n          <p>\n            Whatever bits that are not discarded in the end will be the shared\n            private key.\n          </p>\n        </div>\n        <div className=\"Quantum__simulation\">\n          <div className=\"Quantum__subtitle\">Remaining bits: {bits}</div>\n          <div className=\"Quantum__controllers\">\n            <div className=\"Quantum__controllers--players\">\n              <div className=\"Quantum__controller\">\n                <div className=\"Quantum__controller--title\">Alice (sender)</div>\n                <Button\n                  className=\"Quantum__controller--button\"\n                  disabled={!!currentEncoder}\n                  onClick={this.chooseEncoder}\n                  variant=\"contained\"\n                  size=\"small\"\n                >\n                  Choose basis (encoder)\n                </Button>\n                <Button\n                  className=\"Quantum__controller--button\"\n                  disabled={!currentEncoder || !!currentBitEncoded}\n                  onClick={this.encode}\n                  variant=\"contained\"\n                  size=\"small\"\n                >\n                  Encode and transmit\n                </Button>\n                <div className=\"Quantum__controller--results\">\n                  <div>Encoding basis: {currentEncoder}</div>\n                  <div>Bit encoded: {currentBitEncoded}</div>\n                </div>\n              </div>\n              <div className=\"Quantum__controller\">\n                <div className=\"Quantum__controller--title\">\n                  Current bit: {currentBit}\n                </div>\n              </div>\n              <div className=\"Quantum__controller\">\n                <div className=\"Quantum__controller--title\">Bob (receiver)</div>\n                <Button\n                  className=\"Quantum__controller--button\"\n                  disabled={\n                    !currentEncoder || !currentBitEncoded || !!currentDecoder\n                  }\n                  onClick={this.chooseDecoder}\n                  variant=\"contained\"\n                  size=\"small\"\n                >\n                  Choose basis (decoder)\n                </Button>\n                <Button\n                  className=\"Quantum__controller--button\"\n                  disabled={\n                    !currentEncoder ||\n                    !currentBitEncoded ||\n                    !currentDecoder ||\n                    !!currentBitDecoded\n                  }\n                  onClick={this.decode}\n                  variant=\"contained\"\n                  size=\"small\"\n                >\n                  Receive and decode\n                </Button>\n                <div className=\"Quantum__controller--results\">\n                  <div>Decoding basis: {currentDecoder}</div>\n                  <div>\n                    Probability:{\" \"}\n                    {currentEncoder && currentDecoder\n                      ? currentEncoder === currentDecoder\n                        ? \"100%\"\n                        : \"50%\"\n                      : null}\n                  </div>\n                  <div>Bit decoded: {currentBitDecoded}</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"Quantum__controller\">\n              <Button\n                className=\"Quantum__controller--button\"\n                disabled={\n                  !currentEncoder ||\n                  !currentBitEncoded ||\n                  !currentDecoder ||\n                  !currentBitDecoded\n                }\n                onClick={this.record}\n                variant=\"contained\"\n                size=\"small\"\n              >\n                Record\n              </Button>\n            </div>\n          </div>\n          <TableContainer component={Paper}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\">Encoding basis</TableCell>\n                  <TableCell align=\"center\">Bit encoded</TableCell>\n                  <TableCell align=\"center\">Decoding basis</TableCell>\n                  <TableCell align=\"center\">Bit decoded</TableCell>\n                  <TableCell align=\"center\">Keep</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {dataTransmitted.map((transmission) => (\n                  <TableRow\n                    key={transmission.bitEncoded} // Find better key\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                  >\n                    <TableCell align=\"center\">{transmission.encoder}</TableCell>\n                    <TableCell align=\"center\">\n                      {transmission.bitEncoded}\n                    </TableCell>\n                    <TableCell align=\"center\">{transmission.decoder}</TableCell>\n                    <TableCell align=\"center\">\n                      {transmission.bitDecoded}\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      {transmission.encoder === transmission.decoder\n                        ? \"Yes\"\n                        : \"No\"}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withHeaderFooterWrapper(Quantum);\n","import Quantum from \"./Quantum\";\nexport default Quantum;\n"],"names":["login","email","password","dispatch","loginRequest","axios","then","response","localStorage","setItem","data","key","loginSuccess","window","location","reload","catch","error","loginFailure","message","createNotification","type","logout","logoutRequest","removeItem","logoutSuccess","logoutFailure","Authentication","PureComponent","constructor","props","super","handleLogin","this","state","handleClickOpen","setState","open","handleClose","handleEmailChange","event","target","value","handlePasswordChange","render","loggedIn","Button","variant","sx","textTransform","backgroundColor","margin","padding","onClick","className","fontVariant","Dialog","onClose","DialogTitle","DialogContent","TextField","id","label","onChange","fullWidth","DialogActions","connect","isLoadingLogin","auth","isLoadingLogout","bindActionCreators","WrappedComponent","to","style","textDecoration","isActive","IconButton","href","rel","LinkedIn","GitHub","Date","getFullYear","bases","Quantum","generateBits","bits","Array","from","length","Math","floor","random","toString","bit","currentBit","_","chooseEncoder","basis","currentEncoder","chooseDecoder","currentDecoder","encode","currentBitEncoded","decode","currentBitDecoded","record","dataTransmitted","newTransmission","encoder","decoder","bitEncoded","bitDecoded","componentDidMount","disabled","size","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","transmission","border","withHeaderFooterWrapper"],"sourceRoot":""}