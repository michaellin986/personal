{"version":3,"file":"static/js/549.3bf59fa8.chunk.js","mappings":"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SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,MAAO,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,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AAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,UAAW,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACrqM,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,UAAW,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACvrF,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,S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C,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,YAAc,WAAc,CAAE,KAAQ,QAAS,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACvzH,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE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AAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,MAAO,EAAE,QAAS,MAAO,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,KAAM,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,WAAY,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACxmH,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,YAAa,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC54J,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,MAAO,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,gBAAiB,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAChsE,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAeaAAe,WAAc,CAAE,KAAQ,WAAY,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC10H,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,QAAS,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC7pH,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,QAAS,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,UAAW,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,KAAM,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,MAAO,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,WAAY,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACvrT,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,MAAO,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,YAAa,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC17G,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,MAAO,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EA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S,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,OAAQ,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAa,WAAc,CAAE,KAAQ,UAAW,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACr+G,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAA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U,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,WAAY,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAClvI,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,MAAO,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,WAAa,WAAc,CAAE,KAAQ,OAAQ,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SACxkF,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,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EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,IAAK,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,MAAO,EAAE,OAAQ,MAAO,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAa,WAAc,CAAE,KAAQ,YAAa,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC90E,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,QAAS,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC38P,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,YAAc,WAAc,CAAE,KAAQ,OAAQ,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC7sC,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,MAAO,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,Q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AE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,aAAe,WAAc,CAAE,KAAQ,aAAc,GAAM,QAAS,MAAS,2BAA4B,KAAQ,SAAW,GAAM,SAC3zL,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EA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CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,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C,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAA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,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,MAAO,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,MAAO,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,MAAO,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,MAAO,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,YAAa,GAAM,MAAQ,GAAM,MACt8J,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,mCAAoC,GAAM,MAAQ,GAAM,MAClQ,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,eAAgB,GAAM,MAAQ,GAAM,MAC3O,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,OAAQ,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,aAAe,WAAc,CAAE,KAAQ,aAAc,GAAM,MAAQ,GAAM,MACjvG,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAeaAAe,WAAc,CAAE,KAAQ,gBAAiB,GAAM,MAAQ,GAAM,MAC/o9B,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACr3C,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,KAAM,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CA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AU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,KAAM,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,YAAc,WAAc,CAAE,KAAQ,WAAY,GAAM,MAAQ,GAAM,MAC/+F,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,SAAU,GAAM,MAAQ,GAAM,MACprB,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QA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gB,YAAe,CAAC,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,QAAS,MAAO,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QA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S,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAA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Q,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,KAAM,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAA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S,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,SAAU,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAA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AAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,OAAQ,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,MAAO,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,OAAQ,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,OAAQ,C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,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MAC1yD,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MAC5T,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,QAAS,GAAM,MAAQ,GAAM,MAC1b,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,UAAW,SAAU,EAAE,UAAW,QAAS,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,WAAY,CAAC,CAAC,EAAE,UAAW,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,UAAW,UAAW,CAAC,CAAC,EAAE,UAAW,QAAS,EAAE,UAAW,QAAS,EAAE,UAAW,QAAS,EAAE,UAAW,QAAS,EAAE,UAAW,YAAc,WAAc,CAAE,KAAQ,mBAAoB,GAAM,MAAQ,GAAM,MAC/c,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAa,W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UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,QAAS,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,MAAO,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,OAAQ,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,SAAU,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,MAAO,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,QAAS,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,MAAO,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,MAAO,CAAC,UAAW,QAAS,CAAC,UAAW,OAAQ,CAAC,UAAW,OAAQ,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,YAAc,WAAc,CAAE,KAAQ,mBAAoB,GAAM,MAAQ,GAAM,MACj0L,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,WAAa,WAAc,CAAE,KAAQ,QAAS,GAAM,MAAQ,GAAM,MACpO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,MAAO,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,QAAS,SAAU,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,MAAO,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,MAAO,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,aAAe,WAAc,CAAE,KAAQ,cAAe,GAAM,MAAQ,GAAM,MAC9pS,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,MAAO,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,MAAO,EAAE,SAAU,QAAS,EAAE,QAAS,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,OAAQ,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAS,EAAE,SAAU,MAAQ,EAAE,SAAU,MAAQ,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,MAAQ,EAAE,SAAU,IAAM,EAAE,SAAU,OAAS,EAAE,SAAU,KAAO,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QA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,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC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W,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAA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AC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,OAAQ,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,OAAQ,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,KAAM,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,KAAM,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,MAAO,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,MAAO,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CA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AS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,IAAK,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,OAAQ,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,QAAS,CAAC,OAAQ,OAAQ,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,KAAM,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,KAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,KAAO,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OA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SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,UAAW,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,MAAO,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,QAAS,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,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SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,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QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,aAAe,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACn4K,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,QAAS,GAAM,MAAQ,GAAM,MACpO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EA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AU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,aAAe,WAAc,CAAE,KAAQ,SAAU,GAAM,MAAQ,GAAM,MACv2Q,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,WAAa,WAAc,CAAE,KAAQ,WAAY,GAAM,MAAQ,GAAM,MACjO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,MAAO,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAA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AU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SA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,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,MAAO,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS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CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,GAAI,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,aAAc,GAAM,MAAQ,GAAM,MACpxO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,WAAY,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,MAAO,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SA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,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU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AC,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,OAAQ,GAAM,MAAQ,GAAM,MACh0D,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,MAAO,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC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AAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,KAAM,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,MAAO,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,MAAO,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,Q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,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,OAAQ,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,KAAM,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS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AAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,KAAM,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,MAAO,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,MAAO,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,S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AAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,EAAE,KAAO,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,QAAS,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,QAAS,CAAC,MAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,WAAY,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,aAAe,WAAc,CAAE,KAAQ,SAAU,GAAM,MAAQ,GAAM,MACzjH,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,WAAa,WAAc,CAAE,KAAQ,iCAAkC,GAAM,MAAQ,GAAM,MAC3P,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,gBAAiB,GAAM,MAAQ,GAAM,MAChQ,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,YAAc,WAAc,CAAE,KAAQ,mBAAoB,GAAM,MAAQ,GAAM,MACh9B,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,aAAe,WAAc,CAAE,KAAQ,OAAQ,GAAM,MAAQ,GAAM,MACv9B,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MAC57E,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,KAAM,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAA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AQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,OAAQ,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OA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AAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,SAAU,EAAE,MAAQ,QAAS,EAAE,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,OAAQ,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,MAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAQ,QAAS,CAAC,MAAQ,SAAU,CAAC,MAAQ,QAAS,EAAE,KAAO,SAAU,EAAE,MAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,MAAO,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,E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,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE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AAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,MAAO,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,MAAO,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,MAAQ,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,QAAS,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,KAAO,EAAE,SAAU,OAAS,EAAE,SAAU,IAAM,EAAE,SAAU,MAAQ,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,OAAQ,OAAS,EAAE,OAAQ,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,MAAQ,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,MAAO,QAAS,EAAE,QAAS,MAAO,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,OAAQ,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,MAAO,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,MAAO,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,MAAO,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,WAAY,GAAM,MAAQ,GAAM,MACvvJ,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,UAAW,SAAU,EAAE,UAAW,SAAU,EAAE,SAAU,SAAU,EAAE,UAAW,SAAU,EAAE,UAAW,YAAc,WAAc,CAAE,KAAQ,eAAgB,GAAM,MAAQ,GAAM,MACzP,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,MAAQ,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,MAAO,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,WAAa,WAAc,CAAE,KAAQ,oBAAqB,GAAM,MAAQ,GAAM,MACtjF,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,OAAQ,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,SAAU,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,OAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,MAAO,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,WAAa,WAAc,CAAE,KAAQ,+BAAgC,GAAM,MAAQ,GAAM,MAC7jK,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,MAAO,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,KAAM,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,OAAQ,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,MAAO,MAAO,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,MAAO,QAAS,CAAC,OAAQ,QAAS,CAAC,OAAQ,OAAQ,CAAC,OAAQ,QAAS,CAAC,MAAO,QAAS,CAAC,OAAQ,OAAQ,CAAC,OAAQ,QAAS,CAAC,OAAQ,QAAS,CAAC,KAAM,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS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,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,UAAW,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,MAAO,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,OAAQ,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,MAAO,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU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,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,MAAO,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,OAAQ,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,YAAc,WAAc,CAAE,KAAQ,2BAA4B,GAAM,MAAQ,GAAM,MACnuF,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,KAAM,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,QAAS,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACl3B,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,OAAQ,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,OAAQ,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAA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QAAS,OAAS,EAAE,SAAU,MAAQ,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,MAAO,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,MAAO,EAAE,SAAU,OAAQ,EAAE,OAAQ,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,MAAO,EAAE,OAAQ,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,MAAO,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,QAAS,OAAQ,EAAE,OAAQ,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,IAAK,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,MAAO,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,KAAM,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,MAAO,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,QAAS,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,SAAU,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,MAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,MAAO,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,MAAO,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,OAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,OAAQ,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,QAAS,OAAQ,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,OAAQ,EAAE,OAAQ,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,QAAS,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,SAAU,GAAM,MAAQ,GAAM,MAC3+d,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,KAAM,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACz3G,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACrN,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,SAAU,GAAM,MAAQ,GAAM,MACtnB,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAa,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACphE,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,YAAc,WAAc,CAAE,KAAQ,mBAAoB,GAAM,MAAQ,GAAM,MAC7N,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,OAAQ,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,OAAQ,SAAU,EAAE,OAAQ,SAAU,EAAE,QAAS,QAAS,EAAE,OAAQ,WAAY,CAAC,CAAC,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,QAAS,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACziC,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,UAAW,GAAM,MAAQ,GAAM,MACtO,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,YAAc,WAAc,CAAE,KAAQ,yBAA0B,GAAM,MAAQ,GAAM,MAC3mC,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,YAAc,WAAc,CAAE,KAAQ,WAAY,GAAM,MAAQ,GAAM,MAC59C,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,eAAgB,YAAe,CAAC,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,WAAY,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CA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AY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,QAAS,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,MAAO,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,UAAW,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,WAAY,CAAC,CAAC,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,OAAQ,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,OAAQ,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,QAAS,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,SAAU,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UAAW,SAAU,CAAC,UA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EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,QAAS,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,OAAQ,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,MAAO,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,OAAQ,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,QAAS,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,WAAY,CAAC,CAAC,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,SAAU,QAAS,EAAE,SAAU,SAAU,EAAE,SAAU,SAAU,EAAE,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QAAS,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,QAAS,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,OAAQ,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,OAAQ,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,QAAS,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,QAAS,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,SAAU,CAAC,SAAU,aAAe,WAAc,CAAE,KAAQ,SAAU,GAAM,MAAQ,GAAM,MAC9kG,CAAE,KAAQ,UAAW,SAAY,CAAE,KAAQ,UAAW,YAAe,CAAC,CAAC,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,OAAQ,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,OAAQ,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,MAAO,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,OAAQ,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAAC,QAAS,QAAS,CAAC,QAAS,SAAU,CAAC,QAAS,SAAU,CAA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","sources":["../node_modules/@amcharts/amcharts5-geodata/usaHigh.js","../node_modules/@amcharts/amcharts5-geodata/worldGreatLakesHigh.js","../node_modules/d3-geo/src/path/area.js","../node_modules/src/.internal/charts/map/MapChartDefaultTheme.ts","../node_modules/src/.internal/core/render/Chart.ts","../node_modules/src/.internal/core/render/SerialChart.ts","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/src/.internal/charts/map/MapChart.ts","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/src/.internal/charts/map/MapLine.ts","../node_modules/d3-geo/src/interpolate.js","../node_modules/src/.internal/charts/map/MapLineSeries.ts","../node_modules/src/.internal/charts/map/MapPointSeries.ts","../node_modules/src/.internal/charts/map/MapPolygon.ts","../node_modules/src/.internal/charts/map/MapPolygonSeries.ts","../node_modules/src/.internal/core/util/Data.ts","../node_modules/src/.internal/core/render/Component.ts","../node_modules/src/.internal/core/render/Series.ts","../node_modules/src/.internal/core/util/Time.ts","../node_modules/src/.internal/charts/map/MapSeries.ts","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/bounds.js","../node_modules/src/.internal/charts/map/MapUtils.ts","../node_modules/src/.internal/core/render/RoundedRectangle.ts","../node_modules/src/.internal/core/render/Button.ts","../node_modules/src/.internal/charts/map/ZoomControl.ts","../node_modules/src/.internal/core/Registry.ts","../node_modules/src/.internal/core/util/ResizeSensor.ts","../node_modules/src/.internal/core/util/InterfaceColors.ts","../node_modules/src/.internal/core/render/PointedRectangle.ts","../node_modules/src/.internal/core/render/Tooltip.ts","../node_modules/src/.internal/core/util/NumberFormatter.ts","../node_modules/src/.internal/core/util/Timezone.ts","../node_modules/src/.internal/core/util/DateFormatter.ts","../node_modules/src/.internal/core/util/DurationFormatter.ts","../node_modules/src/locales/en.ts","../node_modules/src/.internal/core/util/Language.ts","../node_modules/src/.internal/core/util/Matrix.ts","../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../node_modules/src/.internal/core/render/backend/CanvasRenderer.ts","../node_modules/src/.internal/core/Root.ts","../node_modules/src/.internal/core/Theme.ts","../node_modules/src/.internal/core/render/Bullet.ts","../node_modules/src/.internal/core/render/Circle.ts","../node_modules/src/.internal/core/util/Children.ts","../node_modules/src/.internal/core/render/Container.ts","../node_modules/src/.internal/core/render/patterns/Pattern.ts","../node_modules/src/.internal/core/render/patterns/PicturePattern.ts","../node_modules/src/.internal/core/render/Graphics.ts","../node_modules/src/.internal/core/render/GridLayout.ts","../node_modules/src/.internal/core/render/HorizontalLayout.ts","../node_modules/src/.internal/core/render/Label.ts","../node_modules/src/.internal/core/render/Layout.ts","../node_modules/src/.internal/core/render/Rectangle.ts","../node_modules/src/.internal/core/render/Sprite.ts","../node_modules/src/.internal/core/render/Text.ts","../node_modules/src/.internal/core/render/VerticalLayout.ts","../node_modules/src/.internal/core/render/backend/Renderer.ts","../node_modules/src/.internal/core/util/Animation.ts","../node_modules/src/.internal/core/util/Array.ts","../node_modules/src/.internal/core/util/Color.ts","../node_modules/src/.internal/core/util/Disposer.ts","../node_modules/src/.internal/core/util/Ease.ts","../node_modules/src/.internal/core/util/States.ts","../node_modules/src/.internal/core/util/Entity.ts","../node_modules/src/.internal/core/util/EventDispatcher.ts","../node_modules/src/.internal/core/util/List.ts","../node_modules/src/.internal/core/util/Math.ts","../node_modules/src/.internal/core/util/Object.ts","../node_modules/src/.internal/core/util/Order.ts","../node_modules/src/.internal/core/util/Percent.ts","../node_modules/src/.internal/core/util/PopulateString.ts","../node_modules/src/.internal/core/util/Template.ts","../node_modules/src/.internal/core/util/TextFormatter.ts","../node_modules/src/.internal/core/util/Type.ts","../node_modules/src/.internal/core/util/Utils.ts","../node_modules/src/.internal/themes/DefaultTheme.ts","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js","../node_modules/tslib/tslib.es6.js","../node_modules/d3-array/src/fsum.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/stream.js"],"sourcesContent":["var map = { \"type\": \"FeatureCollection\", \"features\": [\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-166.1098, 66.2274], [-166.1465, 66.2372], [-166.0325, 66.2778], [-165.9423, 66.2782], [-166.1098, 66.2274]]], [[[-134.6803, 58.1617], [-134.4262, 58.1388], [-134.2401, 58.1441], [-134.0701, 57.9946], [-133.9655, 57.8738], [-133.9042, 57.7892], [-133.8693, 57.7075], [-133.8228, 57.6286], [-133.9251, 57.6708], [-133.9955, 57.7785], [-134.0317, 57.8206], [-134.1047, 57.8794], [-134.1775, 57.9821], [-134.1803, 58.0112], [-134.25, 58.0492], [-134.3069, 58.0344], [-134.3004, 57.9635], [-134.2671, 57.8845], [-134.0837, 57.7123], [-133.9611, 57.6142], [-133.937, 57.5816], [-133.9209, 57.492], [-133.9737, 57.4513], [-133.9088, 57.3688], [-133.9253, 57.3368], [-134.1, 57.3001], [-134.2602, 57.1468], [-134.4353, 57.057], [-134.5161, 57.0426], [-134.5915, 57.0919], [-134.6131, 57.138], [-134.6195, 57.1956], [-134.5759, 57.2318], [-134.4892, 57.4202], [-134.4868, 57.482], [-134.5948, 57.5679], [-134.6599, 57.6381], [-134.6951, 57.736], [-134.7541, 57.995], [-134.7815, 58.0778], [-134.8201, 58.1469], [-134.87, 58.2021], [-134.9077, 58.2628], [-134.9331, 58.3289], [-134.9235, 58.3547], [-134.8369, 58.3201], [-134.7332, 58.2251], [-134.6803, 58.1617]]], [[[-152.4861, 58.4851], [-152.5155, 58.4786], [-152.5886, 58.5092], [-152.6366, 58.5417], [-152.6049, 58.5664], [-152.4631, 58.6185], [-152.3955, 58.6193], [-152.3568, 58.5949], [-152.3928, 58.5409], [-152.4861, 58.4851]]], [[[-174.6774, 52.035], [-175.2139, 51.994], [-175.2955, 52.0221], [-175.2142, 52.0383], [-175.1176, 52.047], [-174.9159, 52.0942], [-174.6678, 52.1349], [-174.4742, 52.184], [-174.3061, 52.2161], [-174.2588, 52.269], [-174.4065, 52.2961], [-174.4355, 52.3172], [-174.3654, 52.342], [-174.3068, 52.3779], [-174.1689, 52.4202], [-174.0456, 52.3672], [-174.0184, 52.3318], [-174.0549, 52.246], [-174.1633, 52.2234], [-174.1794, 52.2003], [-174.1206, 52.1352], [-174.3435, 52.0778], [-174.6774, 52.035]]], [[[-170.7334, 52.5815], [-170.7973, 52.5497], [-170.8271, 52.6007], [-170.7911, 52.6312], [-170.6821, 52.6975], [-170.6081, 52.6851], [-170.5866, 52.6424], [-170.6493, 52.5931], [-170.7334, 52.5815]]], [[[-170.1606, 57.1839], [-170.264, 57.1368], [-170.358, 57.1542], [-170.3866, 57.203], [-170.1162, 57.2418], [-170.1606, 57.1839]]], [[[-148.0218, 60.0653], [-148.0742, 60.0347], [-148.2719, 60.0532], [-148.2307, 60.1135], [-148.0795, 60.1517], [-147.9142, 60.0923], [-148.0218, 60.0653]]], [[[-172.7422, 60.4575], [-172.5261, 60.3918], [-172.3875, 60.3985], [-172.2775, 60.3436], [-172.232, 60.2991], [-172.3972, 60.3312], [-172.6358, 60.3288], [-172.9584, 60.4628], [-173.074, 60.4932], [-173.0476, 60.5682], [-172.9239, 60.6068], [-172.8602, 60.5057], [-172.7422, 60.4575]]], [[[-176.5933, 51.8667], [-176.5879, 51.8333], [-176.4734, 51.8374], [-176.4375, 51.8201], [-176.4373, 51.7543], [-176.4698, 51.7311], [-176.511, 51.7456], [-176.5576, 51.712], [-176.7709, 51.6299], [-176.8371, 51.6758], [-176.9617, 51.6037], [-176.8744, 51.7905], [-176.7737, 51.8187], [-176.7364, 51.84], [-176.7451, 51.8947], [-176.6984, 51.986], [-176.5968, 51.9818], [-176.5499, 51.9441], [-176.5516, 51.9195], [-176.5933, 51.8667]]], [[[-165.8416, 54.0707], [-165.8793, 54.053], [-165.9329, 54.0592], [-166.0364, 54.0472], [-166.0566, 54.0544], [-166.1029, 54.1139], [-166.0877, 54.1691], [-165.9664, 54.211], [-165.8928, 54.207], [-165.7645, 54.1521], [-165.7042, 54.1199], [-165.6929, 54.0999], [-165.7379, 54.0811], [-165.8416, 54.0707]]], [[[-145.1185, 60.3371], [-145.1505, 60.3126], [-145.2377, 60.3213], [-145.2843, 60.3368], [-145.1282, 60.4011], [-145.1024, 60.3882], [-145.1185, 60.3371]]], [[[-144.5656, 59.8185], [-144.5416, 59.8782], [-144.4449, 59.9506], [-144.354, 59.9962], [-144.2357, 60.0152], [-144.249, 59.9822], [-144.4033, 59.921], [-144.5656, 59.8185]]], [[[-171.463, 63.64], [-171.4478, 63.6157], [-171.3433, 63.6196], [-171.197, 63.6091], [-171.0349, 63.5855], [-170.8746, 63.594], [-170.6725, 63.6688], [-170.5518, 63.6885], [-170.4304, 63.6988], [-170.2993, 63.6806], [-170.1713, 63.641], [-170.1218, 63.6175], [-170.0563, 63.5271], [-170.0174, 63.4917], [-169.7775, 63.448], [-169.6242, 63.4305], [-169.5545, 63.3735], [-169.4276, 63.3483], [-169.2951, 63.3575], [-169.2211, 63.3486], [-168.996, 63.3473], [-168.716, 63.3106], [-168.7614, 63.2138], [-168.8524, 63.1712], [-169.1091, 63.185], [-169.3647, 63.1711], [-169.4709, 63.1213], [-169.5593, 63.0582], [-169.5713, 62.9968], [-169.6763, 62.9561], [-169.7198, 62.9901], [-169.7778, 63.0938], [-169.8634, 63.1404], [-169.9885, 63.1731], [-170.1154, 63.1939], [-170.1896, 63.1963], [-170.2431, 63.2323], [-170.2727, 63.2843], [-170.4242, 63.3493], [-170.5271, 63.3793], [-170.8484, 63.4444], [-170.954, 63.453], [-171.0613, 63.4459], [-171.176, 63.4162], [-171.2873, 63.3721], [-171.4012, 63.3392], [-171.5191, 63.332], [-171.6318, 63.3512], [-171.791, 63.4247], [-171.8194, 63.4772], [-171.8036, 63.5806], [-171.7464, 63.7031], [-171.6465, 63.727], [-171.463, 63.64]]], [[[-162.5545, 54.4013], [-162.6411, 54.3795], [-162.7331, 54.4023], [-162.8117, 54.4444], [-162.8206, 54.4945], [-162.6454, 54.462], [-162.6079, 54.4467], [-162.5545, 54.4013]]], [[[-147.6583, 60.4505], [-147.69, 60.3989], [-147.66, 60.3526], [-147.712, 60.2727], [-147.7321, 60.222], [-147.7879, 60.178], [-147.8714, 60.2297], [-147.8914, 60.2993], [-147.8549, 60.3214], [-147.7945, 60.4599], [-147.7373, 60.4474], [-147.703, 60.4868], [-147.6583, 60.4505]]], [[[-176.2867, 51.792], [-176.3497, 51.7333], [-176.3961, 51.7598], [-176.4137, 51.8405], [-176.3786, 51.8611], [-176.2802, 51.8028], [-176.2867, 51.792]]], [[[-152.4169, 58.3602], [-152.3808, 58.3521], [-152.343, 58.4116], [-152.3163, 58.4135], [-152.1979, 58.3632], [-152.1252, 58.3743], [-152.0785, 58.3123], [-151.9744, 58.3098], [-151.9825, 58.2443], [-152.0689, 58.1779], [-152.1091, 58.1612], [-152.1866, 58.1846], [-152.2684, 58.2517], [-152.3344, 58.2081], [-152.3093, 58.1339], [-152.3811, 58.1243], [-152.4516, 58.1292], [-152.5377, 58.101], [-152.5982, 58.1626], [-152.6388, 58.1018], [-152.683, 58.0633], [-152.7815, 58.016], [-152.8407, 58.0138], [-152.9285, 57.9938], [-152.9826, 57.9971], [-153.3055, 58.063], [-153.3813, 58.0872], [-153.1158, 58.2385], [-152.9762, 58.2969], [-152.8954, 58.2939], [-152.8145, 58.2756], [-152.7719, 58.2786], [-152.7687, 58.3456], [-152.8439, 58.3955], [-152.8411, 58.4164], [-152.6747, 58.4505], [-152.5436, 58.4282], [-152.4169, 58.3602]]], [[[-134.9697, 57.3515], [-134.8232, 57.1565], [-134.7685, 57.0542], [-134.6768, 56.8422], [-134.6341, 56.7621], [-134.6207, 56.7183], [-134.6105, 56.6035], [-134.6517, 56.556], [-134.6571, 56.5233], [-134.6317, 56.4356], [-134.6301, 56.3025], [-134.654, 56.2275], [-134.6819, 56.2161], [-134.7503, 56.2408], [-134.848, 56.3235], [-134.9501, 56.4568], [-134.9806, 56.5189], [-134.9666, 56.5961], [-134.8751, 56.6704], [-135.0178, 56.6601], [-135.0971, 56.7029], [-135.159, 56.7254], [-135.1466, 56.8023], [-135.1631, 56.8241], [-135.2848, 56.8004], [-135.3306, 56.8218], [-135.3384, 56.894], [-135.3151, 56.9318], [-135.1996, 57.0273], [-135.3413, 57.0816], [-135.3753, 57.1885], [-135.4549, 57.2495], [-135.5019, 57.2438], [-135.6089, 57.0715], [-135.6619, 57.0338], [-135.8124, 57.0095], [-135.7677, 57.1004], [-135.8211, 57.2304], [-135.8228, 57.2805], [-135.7871, 57.3172], [-135.6809, 57.3326], [-135.6245, 57.3544], [-135.5805, 57.39], [-135.5696, 57.4247], [-135.4872, 57.5164], [-135.4486, 57.5344], [-135.3463, 57.5332], [-135.1306, 57.4317], [-135.0652, 57.4168], [-134.9697, 57.3515]]], [[[-159.873, 55.1287], [-159.934, 55.1068], [-159.9531, 55.079], [-160.0384, 55.0445], [-160.1696, 54.9417], [-160.2271, 54.9226], [-160.1636, 55.0104], [-160.1524, 55.0569], [-160.1721, 55.1231], [-160.1022, 55.1339], [-160.0387, 55.1925], [-159.9817, 55.1977], [-159.9205, 55.2675], [-159.8711, 55.2635], [-159.8983, 55.2213], [-159.8394, 55.1823], [-159.873, 55.1287]]], [[[-176.0216, 52.0025], [-176.0451, 51.973], [-176.1428, 52.0043], [-176.1845, 52.0561], [-176.1556, 52.0994], [-176.0774, 52.1], [-176.0312, 52.0823], [-175.9753, 52.0289], [-176.0216, 52.0025]]], [[[-165.5611, 54.1366], [-165.6153, 54.1395], [-165.6205, 54.1835], [-165.6541, 54.2533], [-165.5506, 54.2845], [-165.4877, 54.2219], [-165.4078, 54.1968], [-165.4676, 54.1809], [-165.5611, 54.1366]]], [[[-141.0022, 69.6508], [-141.0022, 69.3586], [-141.0022, 69.0664], [-141.0022, 68.7742], [-141.0022, 68.482], [-141.0022, 68.1897], [-141.0022, 67.8976], [-141.0022, 67.6054], [-141.0022, 67.3132], [-141.0022, 67.021], [-141.0022, 66.7287], [-141.0022, 66.4365], [-141.0022, 66.1443], [-141.0022, 65.8521], [-141.0022, 65.5599], [-141.0022, 65.2677], [-141.0022, 64.9755], [-141.0022, 64.6833], [-141.0022, 64.3911], [-141.0022, 64.0989], [-141.0022, 63.8067], [-141.0022, 63.5145], [-141.0022, 63.2223], [-141.0022, 62.9301], [-141.0022, 62.6379], [-141.0022, 62.3457], [-141.0022, 62.0535], [-141.0022, 61.7612], [-141.0022, 61.4691], [-141.0022, 61.1768], [-141.0022, 60.8847], [-141.0022, 60.5924], [-141.0022, 60.3002], [-140.5254, 60.2183], [-140.4529, 60.2998], [-139.9733, 60.1832], [-139.6763, 60.3283], [-139.0793, 60.3436], [-139.0793, 60.2795], [-139.1852, 60.0835], [-139.0434, 59.9933], [-138.7054, 59.9013], [-138.6323, 59.7783], [-138.1875, 59.5419], [-137.5933, 59.2262], [-137.4841, 58.9912], [-137.5209, 58.9154], [-137.4386, 58.9032], [-137.2776, 58.9882], [-136.8133, 59.15], [-136.5788, 59.1523], [-136.4667, 59.28], [-136.4664, 59.4591], [-136.3478, 59.456], [-136.278, 59.4803], [-136.2472, 59.533], [-136.3218, 59.6048], [-135.9347, 59.6627], [-135.4759, 59.7932], [-135.2608, 59.695], [-135.051, 59.5786], [-135.0367, 59.5507], [-135.0713, 59.4414], [-134.9437, 59.2882], [-134.9073, 59.2712], [-134.8024, 59.25], [-134.6772, 59.1992], [-134.622, 59.1553], [-134.4407, 59.0854], [-134.4102, 59.0562], [-134.3931, 59.0092], [-134.297, 58.8985], [-134.2185, 58.8498], [-133.8207, 58.705], [-133.5464, 58.5035], [-133.4011, 58.4109], [-133.4226, 58.337], [-133.2753, 58.2229], [-133.1204, 58.0777], [-133.0014, 57.9489], [-132.9168, 57.8769], [-132.5505, 57.4999], [-132.4425, 57.4067], [-132.3017, 57.2763], [-132.2322, 57.1986], [-132.3379, 57.0794], [-132.0315, 57.0265], [-132.1043, 56.8568], [-131.8662, 56.7929], [-131.8861, 56.7421], [-131.8331, 56.6848], [-131.8243, 56.5899], [-131.5751, 56.5988], [-131.3358, 56.5012], [-131.0829, 56.4048], [-130.9302, 56.3786], [-130.7416, 56.3408], [-130.6491, 56.2637], [-130.4771, 56.2306], [-130.4132, 56.1225], [-130.2147, 56.0828], [-130.0978, 56.1093], [-130.0229, 56.0145], [-130.0141, 55.9505], [-130.0251, 55.8883], [-130.0746, 55.836], [-130.112, 55.7798], [-130.1371, 55.7193], [-130.1465, 55.6545], [-130.1404, 55.5851], [-130.1204, 55.5245], [-130.0594, 55.4123], [-130.0365, 55.2979], [-130.1718, 55.137], [-130.2185, 55.0603], [-130.2141, 55.0259], [-130.3126, 54.9459], [-130.4932, 54.8342], [-130.5753, 54.7697], [-130.6158, 54.7909], [-130.8496, 54.8076], [-130.9346, 54.9503], [-130.9797, 55.0611], [-131.0478, 55.1577], [-131.0459, 55.1796], [-130.9839, 55.2439], [-130.7504, 55.297], [-130.7482, 55.318], [-130.8351, 55.3321], [-130.856, 55.3551], [-130.8798, 55.4595], [-130.8734, 55.5511], [-130.8796, 55.6118], [-130.9185, 55.736], [-130.977, 55.812], [-131.1277, 55.9601], [-131.1403, 55.9975], [-131.074, 56.0444], [-131.0327, 56.0882], [-131.2876, 56.0121], [-131.6353, 55.9323], [-131.7842, 55.8765], [-131.8261, 55.8353], [-131.7991, 55.7828], [-131.8336, 55.735], [-131.8694, 55.6472], [-131.945, 55.5541], [-131.9834, 55.535], [-132.119, 55.5697], [-132.1554, 55.5996], [-132.2234, 55.7211], [-132.2075, 55.7533], [-132.158, 55.7806], [-132.0907, 55.8396], [-132.0058, 55.9301], [-131.8438, 56.16], [-131.738, 56.1613], [-131.5513, 56.2068], [-131.8442, 56.2297], [-131.8879, 56.2416], [-131.9273, 56.273], [-131.9623, 56.3238], [-132.0219, 56.3801], [-132.1333, 56.3999], [-132.182, 56.4206], [-132.2556, 56.4891], [-132.305, 56.5198], [-132.332, 56.5578], [-132.3366, 56.6031], [-132.3577, 56.6258], [-132.4344, 56.6341], [-132.476, 56.6497], [-132.4871, 56.7664], [-132.6395, 56.7964], [-132.7019, 56.8223], [-132.8022, 56.8951], [-132.8389, 56.9601], [-132.8143, 57.0406], [-132.8246, 57.0559], [-132.9134, 57.0475], [-133.4658, 57.1721], [-133.4367, 57.3368], [-133.539, 57.5542], [-133.6487, 57.6423], [-133.6034, 57.6947], [-133.5542, 57.6951], [-133.3423, 57.6311], [-133.1429, 57.5551], [-133.1171, 57.5662], [-133.4357, 57.7271], [-133.5155, 57.7752], [-133.5364, 57.8639], [-133.5111, 57.8801], [-133.212, 57.8657], [-133.1943, 57.8778], [-133.4975, 57.9247], [-133.5594, 57.9244], [-133.6257, 57.8569], [-133.6573, 57.841], [-133.7441, 57.8546], [-133.8213, 57.9363], [-133.8945, 57.9932], [-134.0311, 58.0722], [-134.0567, 58.1284], [-134.0633, 58.2111], [-134.0453, 58.2893], [-133.9336, 58.4678], [-133.9439, 58.4982], [-134.0361, 58.4154], [-134.1312, 58.2794], [-134.2088, 58.2329], [-134.2577, 58.2442], [-134.3314, 58.2996], [-134.4854, 58.3672], [-134.6636, 58.3847], [-134.7761, 58.4538], [-134.9425, 58.6463], [-134.9648, 58.7422], [-134.9861, 58.7656], [-135.0765, 58.7968], [-135.1319, 58.8428], [-135.2174, 59.0766], [-135.3303, 59.2391], [-135.3585, 59.325], [-135.4841, 59.3086], [-135.417, 59.2414], [-135.4338, 59.2107], [-135.5023, 59.2024], [-135.3862, 59.0876], [-135.334, 58.9096], [-135.257, 58.7777], [-135.2071, 58.6709], [-135.1845, 58.5897], [-135.1519, 58.5122], [-135.062, 58.3408], [-135.0497, 58.3068], [-135.0903, 58.2458], [-135.1415, 58.2335], [-135.3025, 58.2559], [-135.3631, 58.2983], [-135.4499, 58.3761], [-135.5718, 58.412], [-135.8735, 58.3942], [-135.8976, 58.4002], [-135.8963, 58.4638], [-135.8617, 58.5771], [-135.8896, 58.6228], [-136.0455, 58.7891], [-136.0431, 58.8216], [-135.8264, 58.898], [-135.9317, 58.9037], [-136.0166, 58.874], [-136.0494, 58.8932], [-136.1007, 58.9998], [-136.1501, 59.0481], [-136.1595, 58.9468], [-136.1235, 58.8934], [-136.1242, 58.8197], [-136.1469, 58.7888], [-136.2258, 58.7655], [-136.299, 58.7869], [-136.3802, 58.8273], [-136.4511, 58.8463], [-136.5112, 58.9071], [-136.5662, 58.9409], [-136.831, 58.9838], [-136.989, 59.0345], [-137.0021, 59.0211], [-136.9528, 58.9669], [-136.9481, 58.9348], [-136.9879, 58.9251], [-137.059, 58.8737], [-136.9631, 58.8836], [-136.8791, 58.8815], [-136.7401, 58.8502], [-136.6139, 58.8092], [-136.5682, 58.7863], [-136.5335, 58.7403], [-136.4101, 58.7006], [-136.4042, 58.6798], [-136.4838, 58.6177], [-136.3199, 58.6245], [-136.2246, 58.6023], [-136.1029, 58.5063], [-136.0614, 58.4527], [-136.056, 58.3842], [-136.1296, 58.3504], [-136.4624, 58.3279], [-136.5826, 58.2453], [-136.6989, 58.2665], [-136.865, 58.3325], [-137.072, 58.3951], [-137.544, 58.5812], [-137.5646, 58.6259], [-137.6611, 58.6599], [-137.75, 58.7071], [-137.8637, 58.7855], [-137.934, 58.8469], [-137.9609, 58.891], [-138.0269, 58.9414], [-138.2407, 59.0469], [-138.3525, 59.0873], [-138.4513, 59.1101], [-138.5372, 59.115], [-138.5603, 59.1291], [-138.5149, 59.1659], [-138.7042, 59.1876], [-138.8843, 59.2369], [-139.3409, 59.3757], [-139.5768, 59.4625], [-139.7144, 59.5039], [-139.7991, 59.5463], [-139.7661, 59.566], [-139.6741, 59.5869], [-139.6116, 59.6103], [-139.5131, 59.6981], [-139.5056, 59.7263], [-139.5585, 59.7902], [-139.5822, 59.8484], [-139.5542, 59.9334], [-139.4831, 59.9638], [-139.4469, 59.9568], [-139.331, 59.877], [-139.3147, 59.8479], [-139.32, 59.7388], [-139.2867, 59.6109], [-139.2656, 59.6626], [-139.2587, 59.7433], [-139.2208, 59.8198], [-139.1788, 59.8399], [-139.0483, 59.8282], [-138.9881, 59.8351], [-139.2425, 59.8928], [-139.4025, 60.001], [-139.5189, 60.0172], [-139.6117, 59.9734], [-139.8502, 59.8307], [-139.9168, 59.8057], [-140.2167, 59.7266], [-140.4199, 59.7107], [-140.6484, 59.7232], [-140.8432, 59.7488], [-141.3319, 59.8737], [-141.4083, 59.9028], [-141.2946, 59.98], [-141.29, 60.0041], [-141.3295, 60.0828], [-141.4087, 60.1177], [-141.4222, 60.0856], [-141.4097, 60.0422], [-141.4471, 60.0195], [-141.5302, 59.9948], [-141.6702, 59.9698], [-142.1041, 60.0335], [-142.5486, 60.0861], [-142.9457, 60.097], [-143.5061, 60.055], [-143.805, 60.0129], [-143.9795, 60.0088], [-144.1472, 60.0163], [-144.1609, 60.0458], [-144.0843, 60.0629], [-144.0885, 60.0843], [-144.1855, 60.1507], [-144.3326, 60.191], [-144.53, 60.2053], [-144.643, 60.2246], [-144.6716, 60.2493], [-144.7414, 60.2727], [-144.8524, 60.2951], [-144.9013, 60.3351], [-144.8625, 60.4592], [-144.8245, 60.5336], [-144.7244, 60.6629], [-144.8631, 60.6009], [-144.984, 60.537], [-145.096, 60.4536], [-145.1627, 60.4154], [-145.2483, 60.3801], [-145.3817, 60.3886], [-145.5631, 60.4407], [-145.7184, 60.4676], [-145.8477, 60.4692], [-145.8989, 60.4782], [-145.8106, 60.5246], [-145.6902, 60.622], [-145.6749, 60.6511], [-146.1491, 60.6607], [-146.1824, 60.7347], [-146.251, 60.7491], [-146.3472, 60.7381], [-146.503, 60.7008], [-146.5705, 60.7292], [-146.4956, 60.7568], [-146.392, 60.8108], [-146.5319, 60.8389], [-146.6385, 60.8973], [-146.6361, 60.9925], [-146.5991, 61.0535], [-146.2849, 61.1126], [-146.3844, 61.1358], [-146.5828, 61.1278], [-146.7159, 61.0775], [-146.874, 61.0048], [-146.9802, 60.9778], [-147.0343, 60.9962], [-147.106, 61.0025], [-147.195, 60.9969], [-147.255, 60.9782], [-147.321, 60.9255], [-147.3906, 60.918], [-147.4334, 60.9503], [-147.5926, 60.9795], [-147.6557, 60.9095], [-147.8076, 60.8854], [-147.8911, 60.8899], [-147.9908, 60.9482], [-148.0052, 60.9686], [-147.9711, 61.0191], [-147.7518, 61.2189], [-147.8448, 61.1864], [-147.9864, 61.1065], [-148.0494, 61.0827], [-148.27, 61.0818], [-148.3888, 61.0369], [-148.3959, 61.0072], [-148.2873, 61.0362], [-148.2086, 61.0299], [-148.2932, 60.9397], [-148.3444, 60.8536], [-148.3933, 60.8319], [-148.4711, 60.8355], [-148.5562, 60.827], [-148.5574, 60.8029], [-148.3987, 60.734], [-148.2679, 60.6997], [-148.2568, 60.6753], [-148.2843, 60.6094], [-148.3384, 60.5699], [-148.4677, 60.5721], [-148.5096, 60.5652], [-148.5966, 60.5238], [-148.5491, 60.5148], [-148.4398, 60.53], [-148.2964, 60.532], [-148.1894, 60.5471], [-148.1192, 60.5752], [-148.0507, 60.5671], [-147.984, 60.5234], [-147.9641, 60.4849], [-147.991, 60.4518], [-148.046, 60.4282], [-148.1292, 60.4143], [-148.1817, 60.393], [-148.2159, 60.3231], [-148.2186, 60.2677], [-148.1976, 60.1678], [-148.2913, 60.1455], [-148.3331, 60.122], [-148.4307, 59.9892], [-148.5061, 59.9889], [-148.6436, 59.9568], [-148.7509, 59.9478], [-148.8427, 59.9512], [-149.0042, 59.98], [-149.0701, 60.0003], [-149.1216, 60.0335], [-149.2666, 59.9982], [-149.3049, 60.0137], [-149.3952, 60.1057], [-149.4148, 60.1002], [-149.4323, 60.0011], [-149.4597, 59.9663], [-149.5491, 59.8943], [-149.598, 59.7705], [-149.6296, 59.7847], [-149.6847, 59.8954], [-149.7138, 59.9197], [-149.7948, 59.8559], [-149.8036, 59.8327], [-149.7825, 59.7503], [-149.8013, 59.738], [-149.965, 59.7823], [-150.016, 59.7769], [-149.9602, 59.713], [-149.9666, 59.6901], [-150.198, 59.5666], [-150.3382, 59.5814], [-150.4854, 59.5353], [-150.526, 59.5374], [-150.5815, 59.5645], [-150.6212, 59.535], [-150.6229, 59.4796], [-150.6775, 59.427], [-150.8528, 59.3418], [-150.8993, 59.3027], [-150.9345, 59.2491], [-150.9608, 59.2439], [-151.0636, 59.2783], [-151.1828, 59.3008], [-151.1707, 59.2369], [-151.2875, 59.2323], [-151.3664, 59.2456], [-151.477, 59.2305], [-151.6194, 59.1873], [-151.7382, 59.1885], [-151.9641, 59.2852], [-151.9317, 59.3428], [-151.8499, 59.4064], [-151.6926, 59.4622], [-151.5127, 59.4826], [-151.3996, 59.5164], [-151.2622, 59.5856], [-151.1894, 59.6377], [-151.0465, 59.7718], [-151.0894, 59.7894], [-151.4037, 59.6623], [-151.5126, 59.6513], [-151.7638, 59.7], [-151.8169, 59.721], [-151.8532, 59.7821], [-151.7834, 59.9212], [-151.7345, 59.9884], [-151.6119, 60.092], [-151.4515, 60.2027], [-151.396, 60.2744], [-151.3127, 60.4665], [-151.3175, 60.5536], [-151.3551, 60.6598], [-151.3565, 60.7229], [-151.3218, 60.7429], [-150.9538, 60.8413], [-150.7795, 60.9148], [-150.4413, 61.0236], [-150.3491, 61.0227], [-150.2815, 60.9852], [-150.2028, 60.9552], [-150.1131, 60.9329], [-149.9975, 60.9352], [-149.8562, 60.9623], [-149.6325, 60.9519], [-149.1728, 60.8805], [-149.0713, 60.8855], [-149.1422, 60.9357], [-149.4591, 60.9648], [-149.5925, 60.9939], [-149.9677, 61.1218], [-150.0533, 61.171], [-150.0185, 61.1942], [-149.9268, 61.2133], [-149.8292, 61.3075], [-149.7369, 61.3633], [-149.596, 61.4173], [-149.3291, 61.4974], [-149.4336, 61.5008], [-149.6255, 61.486], [-149.6953, 61.4706], [-149.8237, 61.4133], [-149.8737, 61.373], [-149.9452, 61.2943], [-149.9757, 61.2794], [-150.109, 61.2678], [-150.4718, 61.26], [-150.5332, 61.3002], [-150.6123, 61.3012], [-150.9455, 61.1982], [-151.065, 61.1457], [-151.1502, 61.0859], [-151.2819, 61.042], [-151.4602, 61.0142], [-151.5935, 60.9796], [-151.734, 60.9108], [-151.7816, 60.858], [-151.7845, 60.8332], [-151.7504, 60.7549], [-151.7851, 60.7402], [-151.8662, 60.734], [-151.9962, 60.6822], [-152.2707, 60.5281], [-152.305, 60.4531], [-152.2603, 60.4095], [-152.3689, 60.3364], [-152.5409, 60.2655], [-152.6539, 60.2385], [-152.7979, 60.2471], [-152.9234, 60.2929], [-153.0313, 60.2892], [-152.893, 60.2404], [-152.7524, 60.1774], [-152.6648, 60.1252], [-152.6302, 60.0838], [-152.6286, 60.0411], [-152.6601, 59.9973], [-152.7595, 59.9209], [-152.8569, 59.8981], [-153.106, 59.8751], [-153.2112, 59.8427], [-153.0401, 59.8105], [-153.0247, 59.7941], [-153.0482, 59.73], [-153.0936, 59.7092], [-153.2362, 59.6709], [-153.364, 59.6598], [-153.3835, 59.6672], [-153.3596, 59.7175], [-153.4144, 59.7402], [-153.4826, 59.721], [-153.6525, 59.6471], [-153.6094, 59.615], [-153.8141, 59.4737], [-154.0883, 59.3634], [-154.0675, 59.3363], [-154.1388, 59.2402], [-154.1783, 59.1556], [-154.1298, 59.1198], [-153.8996, 59.078], [-153.7879, 59.068], [-153.6564, 59.0386], [-153.4183, 58.9599], [-153.339, 58.9085], [-153.3344, 58.8579], [-153.4376, 58.7548], [-153.6173, 58.6547], [-153.6985, 58.6263], [-153.8215, 58.6041], [-153.8619, 58.5878], [-154.0199, 58.4929], [-154.0625, 58.4418], [-154.0557, 58.3972], [-154.0859, 58.3658], [-154.2891, 58.3044], [-154.2081, 58.2887], [-154.2352, 58.2347], [-154.247, 58.1594], [-154.2823, 58.1468], [-154.4093, 58.1473], [-154.5706, 58.118], [-154.5849, 58.0556], [-155.0069, 58.0161], [-155.0993, 57.9133], [-155.1474, 57.8817], [-155.3128, 57.8071], [-155.414, 57.777], [-155.5296, 57.7589], [-155.5903, 57.7336], [-155.5958, 57.701], [-155.6287, 57.673], [-155.7289, 57.6267], [-155.7779, 57.5683], [-155.8137, 57.559], [-156.0002, 57.545], [-156.0374, 57.5265], [-156.0554, 57.4476], [-156.156, 57.4634], [-156.2422, 57.4493], [-156.4359, 57.36], [-156.4784, 57.3279], [-156.3976, 57.2406], [-156.4005, 57.2049], [-156.4751, 57.1052], [-156.592, 57.065], [-156.629, 57.0099], [-156.7126, 57.0161], [-156.7799, 57.0057], [-156.8239, 56.9688], [-156.9234, 56.942], [-156.9885, 56.913], [-157.0667, 56.8602], [-157.1392, 56.8266], [-157.2058, 56.812], [-157.3335, 56.8159], [-157.3902, 56.8099], [-157.4897, 56.7597], [-157.5287, 56.6731], [-157.5784, 56.6345], [-157.6739, 56.6335], [-157.7707, 56.6518], [-157.8691, 56.6452], [-158.0279, 56.5921], [-158.0783, 56.5521], [-157.9783, 56.5432], [-157.9822, 56.5096], [-158.071, 56.5104], [-158.1894, 56.4782], [-158.3525, 56.4535], [-158.4144, 56.4358], [-158.5374, 56.3354], [-158.5364, 56.3077], [-158.4673, 56.3183], [-158.3861, 56.3015], [-158.317, 56.2541], [-158.2757, 56.1962], [-158.4319, 56.1115], [-158.4761, 56.0756], [-158.5233, 56.0724], [-158.5427, 56.1669], [-158.5911, 56.1846], [-158.6267, 56.1547], [-158.7049, 56.0431], [-158.7898, 55.987], [-159.4294, 55.8427], [-159.5232, 55.81], [-159.5676, 55.6952], [-159.6101, 55.6528], [-159.6702, 55.645], [-159.6653, 55.7949], [-159.6785, 55.8246], [-159.743, 55.8438], [-159.8104, 55.8327], [-159.8743, 55.8002], [-159.9623, 55.7949], [-160.0456, 55.7629], [-160.2438, 55.6605], [-160.3732, 55.6351], [-160.4627, 55.5578], [-160.4993, 55.5374], [-160.5535, 55.5354], [-160.6252, 55.5524], [-160.6829, 55.5405], [-160.7266, 55.4996], [-160.7708, 55.4836], [-160.8967, 55.5136], [-160.9522, 55.4931], [-161.0242, 55.4404], [-161.0995, 55.4057], [-161.178, 55.3889], [-161.3819, 55.3713], [-161.4639, 55.3825], [-161.4805, 55.3978], [-161.4767, 55.465], [-161.4438, 55.5134], [-161.3727, 55.5563], [-161.3133, 55.5586], [-161.2021, 55.5435], [-161.2551, 55.579], [-161.3575, 55.6122], [-161.4588, 55.6291], [-161.5988, 55.5929], [-161.6543, 55.5634], [-161.6836, 55.53], [-161.7203, 55.4207], [-161.7416, 55.3912], [-161.9803, 55.1987], [-162.074, 55.1393], [-162.1666, 55.1438], [-162.2747, 55.0732], [-162.3329, 55.0503], [-162.3864, 55.0524], [-162.4575, 55.0777], [-162.4125, 55.1069], [-162.4268, 55.1455], [-162.5419, 55.2427], [-162.6304, 55.2467], [-162.6441, 55.218], [-162.6143, 55.0714], [-162.6189, 55.0385], [-162.6744, 54.9965], [-162.8195, 54.9499], [-162.865, 54.9546], [-162.9959, 55.0465], [-163.1196, 55.0647], [-163.1278, 55.0348], [-163.1002, 54.9736], [-163.1311, 54.9166], [-163.2205, 54.8634], [-163.2887, 54.8376], [-163.3353, 54.8393], [-163.3379, 54.8764], [-163.2964, 54.9492], [-163.2857, 55.01], [-163.306, 55.0585], [-163.3036, 55.0958], [-163.2788, 55.1219], [-163.1145, 55.194], [-163.0454, 55.2047], [-162.962, 55.1839], [-162.9066, 55.1955], [-162.8716, 55.2185], [-162.8572, 55.253], [-162.7863, 55.2971], [-162.659, 55.3507], [-162.5133, 55.45], [-162.3493, 55.5948], [-162.1571, 55.7195], [-161.9366, 55.8242], [-161.6973, 55.9072], [-161.2156, 56.0214], [-161.1786, 56.0144], [-161.2226, 55.9774], [-161.1926, 55.9543], [-161.1451, 55.9513], [-160.9686, 55.9696], [-160.8986, 55.9936], [-160.8779, 55.9705], [-160.9023, 55.9413], [-161.0084, 55.9117], [-161.0054, 55.8872], [-160.8513, 55.7718], [-160.8029, 55.7544], [-160.7455, 55.7714], [-160.7584, 55.8547], [-160.7063, 55.8704], [-160.5997, 55.8743], [-160.5303, 55.8634], [-160.4979, 55.8379], [-160.437, 55.8167], [-160.3473, 55.7999], [-160.2917, 55.805], [-160.2701, 55.8322], [-160.3085, 55.8645], [-160.4799, 55.9354], [-160.5275, 55.965], [-160.5391, 56.0063], [-160.5147, 56.0591], [-160.4609, 56.1375], [-160.3775, 56.2415], [-160.302, 56.3142], [-160.1493, 56.3963], [-160.0463, 56.437], [-159.7851, 56.5617], [-159.2831, 56.6886], [-159.159, 56.7701], [-158.9904, 56.86], [-158.918, 56.8821], [-158.8949, 56.8164], [-158.7821, 56.7957], [-158.6752, 56.7949], [-158.6659, 56.828], [-158.6848, 56.9442], [-158.6608, 57.0394], [-158.5856, 57.1141], [-158.4737, 57.1991], [-158.3209, 57.2979], [-158.2245, 57.3427], [-158.1336, 57.3664], [-158.0457, 57.4095], [-157.8944, 57.5114], [-157.8457, 57.5281], [-157.7372, 57.5481], [-157.6974, 57.5393], [-157.6455, 57.4978], [-157.5353, 57.4835], [-157.4619, 57.5062], [-157.5716, 57.5407], [-157.6076, 57.6015], [-157.6807, 57.6381], [-157.6972, 57.6795], [-157.684, 57.7439], [-157.6212, 57.8952], [-157.6109, 58.0508], [-157.555, 58.1399], [-157.4427, 58.1722], [-157.1937, 58.1942], [-157.3394, 58.2346], [-157.3936, 58.2348], [-157.4884, 58.2538], [-157.5245, 58.3507], [-157.5236, 58.4213], [-157.4609, 58.503], [-157.2288, 58.6409], [-156.9747, 58.7363], [-157.0405, 58.7725], [-156.9232, 58.9636], [-156.8089, 59.1342], [-156.9634, 58.9889], [-157.142, 58.8777], [-157.6657, 58.7485], [-158.0219, 58.6402], [-158.1909, 58.6143], [-158.3026, 58.6418], [-158.3896, 58.7456], [-158.4393, 58.7826], [-158.5032, 58.8504], [-158.4762, 58.9384], [-158.4256, 58.9993], [-158.3145, 59.0093], [-158.1892, 58.98], [-158.0806, 58.9775], [-158.2206, 59.0375], [-158.4228, 59.0898], [-158.5144, 59.0728], [-158.5844, 58.9878], [-158.6783, 58.9294], [-158.7606, 58.9501], [-158.7756, 58.9026], [-158.8378, 58.794], [-158.8614, 58.7187], [-158.7721, 58.5203], [-158.7886, 58.4409], [-158.9507, 58.4046], [-159.0827, 58.4697], [-159.3583, 58.7213], [-159.4542, 58.7929], [-159.6702, 58.9111], [-159.7414, 58.8943], [-159.8322, 58.836], [-159.9202, 58.8199], [-160.1526, 58.9059], [-160.2608, 58.9716], [-160.3631, 59.0511], [-160.5199, 59.0072], [-160.6567, 58.955], [-160.8171, 58.8718], [-160.9243, 58.8725], [-161.2159, 58.801], [-161.2469, 58.7995], [-161.3281, 58.7437], [-161.3613, 58.6695], [-161.7555, 58.6121], [-162.1449, 58.6443], [-162.0087, 58.685], [-161.8564, 58.7171], [-161.7244, 58.7943], [-161.7805, 58.8974], [-161.7887, 59.0164], [-161.6444, 59.1097], [-161.7945, 59.1094], [-161.8908, 59.0761], [-161.9811, 59.1461], [-162.0233, 59.284], [-161.9201, 59.3654], [-161.8722, 59.4282], [-161.8317, 59.5145], [-161.8287, 59.5886], [-161.9087, 59.7141], [-162.1382, 59.98], [-162.2425, 60.1783], [-162.4213, 60.284], [-162.2878, 60.4569], [-162.1389, 60.6143], [-161.9466, 60.6848], [-161.962, 60.6954], [-162.0682, 60.6948], [-162.138, 60.6856], [-162.1999, 60.6343], [-162.2651, 60.5953], [-162.4687, 60.3946], [-162.5996, 60.297], [-162.685, 60.2689], [-162.5477, 60.2311], [-162.5005, 60.1266], [-162.5357, 60.0384], [-162.5707, 59.9897], [-162.7326, 59.9937], [-162.8779, 59.9228], [-163.2194, 59.8456], [-163.6804, 59.8015], [-163.9069, 59.8068], [-164.1428, 59.8968], [-164.1316, 59.9943], [-164.4705, 60.1493], [-164.6623, 60.3039], [-164.7999, 60.3073], [-164.9198, 60.3484], [-165.0611, 60.4125], [-165.0265, 60.5006], [-165.1133, 60.526], [-165.2245, 60.5235], [-165.3538, 60.5412], [-165.016, 60.7401], [-164.8998, 60.8731], [-164.8051, 60.892], [-164.6823, 60.8716], [-164.5129, 60.819], [-164.37, 60.7959], [-164.3185, 60.7713], [-164.2656, 60.7247], [-164.3214, 60.6467], [-164.3097, 60.6066], [-164.1319, 60.6915], [-163.9996, 60.7661], [-163.8949, 60.7451], [-163.8214, 60.6683], [-163.73, 60.5899], [-163.5287, 60.6645], [-163.421, 60.7575], [-163.5119, 60.7982], [-163.623, 60.8222], [-163.9066, 60.8539], [-163.8373, 60.8805], [-163.6554, 60.8775], [-163.5869, 60.903], [-163.6589, 60.9382], [-163.749, 60.9697], [-163.9946, 60.8647], [-164.4415, 60.8699], [-164.754, 60.9313], [-165.0657, 60.9207], [-165.1755, 60.9656], [-164.9999, 61.0436], [-164.8756, 61.0867], [-164.869, 61.1118], [-164.9412, 61.1148], [-165.0771, 61.0942], [-165.1377, 61.1302], [-165.1278, 61.1924], [-165.2037, 61.1528], [-165.2798, 61.1697], [-165.3449, 61.1976], [-165.244, 61.2688], [-165.3337, 61.2662], [-165.3921, 61.2123], [-165.3808, 61.1063], [-165.4805, 61.0948], [-165.5659, 61.1023], [-165.6276, 61.1651], [-165.6914, 61.2999], [-165.864, 61.3357], [-165.9063, 61.4037], [-165.7971, 61.4912], [-165.8453, 61.5362], [-165.9613, 61.5509], [-166.094, 61.5067], [-166.1527, 61.5459], [-166.1681, 61.6508], [-166.1005, 61.6451], [-165.8346, 61.6793], [-165.8089, 61.6961], [-166.02, 61.7483], [-166.0788, 61.8031], [-165.9914, 61.8342], [-165.8339, 61.8368], [-165.6128, 61.8693], [-165.7058, 61.9275], [-165.7439, 62.0117], [-165.7073, 62.1005], [-165.4477, 62.3039], [-165.1946, 62.4735], [-165.1156, 62.5126], [-164.9997, 62.5338], [-164.8919, 62.5176], [-164.7792, 62.4812], [-164.8444, 62.5811], [-164.688, 62.6083], [-164.5963, 62.6867], [-164.689, 62.6768], [-164.7927, 62.6232], [-164.8187, 62.6771], [-164.8454, 62.801], [-164.7996, 62.9181], [-164.7641, 62.9706], [-164.6775, 63.0205], [-164.4282, 63.0404], [-164.3751, 63.054], [-164.5252, 63.1276], [-164.4633, 63.1852], [-164.409, 63.2151], [-164.1076, 63.2617], [-163.9428, 63.2472], [-163.7363, 63.1928], [-163.6163, 63.1252], [-163.6494, 63.0567], [-163.5043, 63.1059], [-163.4231, 63.0845], [-163.3588, 63.0458], [-163.2879, 63.0465], [-163.0622, 63.0797], [-162.9477, 63.115], [-162.8078, 63.2066], [-162.6215, 63.2658], [-162.3598, 63.4526], [-162.2828, 63.5292], [-162.1933, 63.541], [-162.1125, 63.5342], [-162.0562, 63.4713], [-161.974, 63.453], [-161.5054, 63.4682], [-161.2661, 63.497], [-161.0997, 63.5579], [-160.9267, 63.6606], [-160.8265, 63.7293], [-160.7786, 63.8189], [-160.8404, 63.9349], [-160.904, 64.0312], [-160.9876, 64.2513], [-161.2201, 64.3966], [-161.3857, 64.44], [-161.4907, 64.4338], [-161.4146, 64.5264], [-161.193, 64.5164], [-161.0488, 64.5344], [-160.932, 64.5791], [-160.836, 64.6819], [-160.8559, 64.7556], [-160.887, 64.7955], [-161.0633, 64.904], [-161.1302, 64.9255], [-161.1869, 64.9241], [-161.4663, 64.7948], [-161.634, 64.7925], [-161.7594, 64.8162], [-161.8684, 64.7427], [-162.1722, 64.6781], [-162.3346, 64.6129], [-162.6357, 64.4509], [-162.7111, 64.3775], [-162.807, 64.3742], [-162.8764, 64.5164], [-163.2039, 64.652], [-163.3029, 64.6059], [-163.2483, 64.5633], [-163.1741, 64.5329], [-163.0517, 64.5197], [-163.1045, 64.4786], [-163.1444, 64.4238], [-163.2671, 64.4751], [-163.4862, 64.5498], [-163.7131, 64.5883], [-164.3039, 64.5839], [-164.6919, 64.5074], [-164.7649, 64.5296], [-164.8295, 64.5114], [-164.8995, 64.4607], [-164.9787, 64.4537], [-165.1381, 64.4652], [-165.4462, 64.5128], [-166.1428, 64.5828], [-166.3251, 64.6257], [-166.4814, 64.7281], [-166.4781, 64.7975], [-166.4087, 64.8269], [-166.4152, 64.9265], [-166.5509, 64.953], [-166.8269, 65.0961], [-166.9285, 65.1571], [-166.7625, 65.1349], [-166.531, 65.1547], [-166.4516, 65.2473], [-166.2797, 65.2738], [-166.1215, 65.2607], [-166.1974, 65.3056], [-166.6094, 65.3527], [-166.6654, 65.3383], [-167.404, 65.4221], [-167.9873, 65.5678], [-168.035, 65.5956], [-168.0884, 65.6578], [-168.0097, 65.7191], [-167.9306, 65.7482], [-167.9144, 65.6812], [-167.58, 65.7583], [-167.4053, 65.8593], [-167.0742, 65.8771], [-166.9972, 65.9049], [-166.8945, 65.9591], [-166.7477, 66.0518], [-166.5401, 66.1007], [-166.3988, 66.1445], [-166.2146, 66.1703], [-166.0574, 66.1273], [-166.0089, 66.1214], [-165.7237, 66.1125], [-165.6299, 66.1312], [-165.5602, 66.1671], [-165.8403, 66.245], [-165.7762, 66.319], [-165.4494, 66.4099], [-165.1983, 66.44], [-165.0639, 66.4378], [-164.6741, 66.555], [-164.4605, 66.5885], [-164.0583, 66.6108], [-163.7277, 66.6164], [-163.6382, 66.5747], [-163.8157, 66.5835], [-163.8382, 66.5616], [-163.7755, 66.5311], [-163.7937, 66.4926], [-163.9029, 66.3784], [-163.894, 66.2869], [-164.0337, 66.2156], [-163.6954, 66.0839], [-163.1715, 66.0754], [-162.8865, 66.0992], [-162.7218, 66.0598], [-162.5868, 66.0509], [-162.2143, 66.071], [-161.9336, 66.0429], [-161.8163, 66.0536], [-161.5569, 66.2505], [-161.4554, 66.2814], [-161.3451, 66.2472], [-161.2011, 66.2193], [-161.1093, 66.2395], [-161.0343, 66.1888], [-161.0696, 66.2946], [-161.1203, 66.3343], [-161.5444, 66.4071], [-161.8281, 66.3709], [-161.9169, 66.4119], [-161.8876, 66.4931], [-162.1912, 66.6932], [-162.3177, 66.7337], [-162.4675, 66.7357], [-162.5436, 66.8051], [-162.6075, 66.8944], [-162.4784, 66.9308], [-162.3617, 66.9473], [-162.2535, 66.9186], [-162.1314, 66.8014], [-162.0176, 66.7841], [-162.0507, 66.6672], [-161.9096, 66.5596], [-161.591, 66.4595], [-161.3359, 66.4964], [-161.1558, 66.4953], [-161.0481, 66.4742], [-160.7846, 66.3844], [-160.6505, 66.3731], [-160.2317, 66.4203], [-160.2274, 66.5085], [-160.2625, 66.5724], [-160.3609, 66.6125], [-160.6438, 66.605], [-160.864, 66.6709], [-161.0515, 66.6528], [-161.398, 66.5519], [-161.5718, 66.5916], [-161.6809, 66.6455], [-161.8566, 66.7004], [-161.8787, 66.804], [-161.7313, 66.9228], [-161.6222, 66.9793], [-161.7199, 67.0205], [-161.9655, 67.0495], [-162.3915, 67.0199], [-162.4094, 67.104], [-162.5831, 67.0185], [-162.7614, 67.0365], [-163.0017, 67.0273], [-163.5318, 67.1025], [-163.7206, 67.1955], [-163.7998, 67.271], [-163.9427, 67.4776], [-164.1252, 67.6067], [-165.386, 68.0456], [-165.9596, 68.1559], [-166.236, 68.278], [-166.4091, 68.308], [-166.5745, 68.3203], [-166.7863, 68.3596], [-166.6439, 68.408], [-166.6478, 68.3738], [-166.5704, 68.3611], [-166.447, 68.3903], [-166.3805, 68.4251], [-166.283, 68.5733], [-166.182, 68.7972], [-166.2091, 68.8853], [-165.5095, 68.8676], [-165.0439, 68.8825], [-164.8897, 68.9025], [-164.3024, 68.9365], [-164.1502, 68.9612], [-163.868, 69.0367], [-163.5356, 69.1701], [-163.2506, 69.3454], [-163.2052, 69.3925], [-163.1615, 69.388], [-163.131, 69.4543], [-163.0936, 69.6107], [-162.9521, 69.7581], [-162.3504, 70.0941], [-162.0712, 70.2272], [-161.9779, 70.2876], [-161.881, 70.3318], [-161.7611, 70.2577], [-161.8184, 70.2484], [-161.9974, 70.1652], [-161.7681, 70.1965], [-161.639, 70.2346], [-160.9963, 70.3046], [-160.6476, 70.4206], [-160.6341, 70.4464], [-160.1172, 70.5912], [-159.9632, 70.5682], [-160.1063, 70.4725], [-160.0056, 70.4475], [-160.095, 70.3333], [-159.8552, 70.3242], [-159.8575, 70.3892], [-159.815, 70.4971], [-159.6833, 70.4772], [-159.3867, 70.5245], [-159.7463, 70.5305], [-159.9618, 70.6341], [-160.0816, 70.6349], [-159.6809, 70.7868], [-159.3145, 70.8785], [-159.2317, 70.8768], [-159.1832, 70.8319], [-159.3398, 70.7813], [-159.2511, 70.7484], [-159.0751, 70.7721], [-158.9963, 70.8016], [-158.6209, 70.799], [-158.5109, 70.8201], [-158.4844, 70.8411], [-157.9985, 70.8453], [-157.9094, 70.8601], [-157.6056, 70.9412], [-157.3247, 71.0396], [-157.1953, 71.0933], [-156.9734, 71.23], [-156.7833, 71.3189], [-156.4702, 71.4077], [-156.5672, 71.3415], [-156.47, 71.2916], [-155.8112, 71.1885], [-155.6456, 71.1828], [-155.5795, 71.1211], [-155.6346, 71.0615], [-155.8043, 70.9955], [-156.1466, 70.9279], [-156.042, 70.9022], [-155.9735, 70.842], [-155.8722, 70.8346], [-155.7081, 70.8573], [-155.5794, 70.8943], [-155.3134, 71.015], [-155.2297, 71.0823], [-155.1669, 71.0993], [-154.9438, 71.0831], [-154.8175, 71.0485], [-154.6737, 70.9871], [-154.7263, 70.9278], [-154.7852, 70.8943], [-154.5986, 70.848], [-154.3922, 70.8383], [-154.1953, 70.8011], [-153.9182, 70.8773], [-153.7014, 70.8936], [-153.4977, 70.8911], [-153.2329, 70.9326], [-152.7849, 70.876], [-152.6708, 70.8907], [-152.4912, 70.881], [-152.3004, 70.8468], [-152.2329, 70.8103], [-152.4373, 70.7333], [-152.4705, 70.6536], [-152.3992, 70.6205], [-152.2697, 70.6147], [-152.2533, 70.5682], [-152.1729, 70.5567], [-151.769, 70.5602], [-151.8196, 70.5113], [-151.9447, 70.4521], [-151.2248, 70.4188], [-151.128, 70.4516], [-150.9791, 70.4647], [-150.6627, 70.5099], [-150.5435, 70.4902], [-150.4032, 70.4439], [-150.2736, 70.4343], [-150.1525, 70.4437], [-149.8701, 70.5096], [-149.5441, 70.5129], [-149.4106, 70.4914], [-149.2695, 70.5008], [-148.8448, 70.4252], [-148.6884, 70.4163], [-148.4793, 70.3179], [-148.3711, 70.315], [-148.2487, 70.3567], [-148.1428, 70.3554], [-148.039, 70.3155], [-147.8695, 70.3033], [-147.7906, 70.2402], [-147.7054, 70.2172], [-147.0629, 70.1704], [-146.7449, 70.1917], [-146.2812, 70.1862], [-146.0577, 70.1563], [-145.8232, 70.16], [-145.4401, 70.051], [-145.2369, 70.0339], [-145.1974, 70.0087], [-144.6192, 69.9821], [-144.4169, 70.039], [-144.0641, 70.0541], [-143.7465, 70.102], [-143.5664, 70.1015], [-143.357, 70.0896], [-143.2183, 70.1162], [-142.7079, 70.0338], [-142.4221, 69.9395], [-142.2969, 69.8699], [-141.6992, 69.7704], [-141.5264, 69.7147], [-141.4079, 69.6534], [-141.2896, 69.6647], [-141.0808, 69.6594], [-141.0022, 69.6508]]], [[[-134.3127, 58.2289], [-134.3198, 58.2041], [-134.4562, 58.2066], [-134.594, 58.2431], [-134.6616, 58.2909], [-134.648, 58.3124], [-134.52, 58.3326], [-134.3989, 58.2872], [-134.3127, 58.2289]]], [[[-132.8623, 54.8944], [-132.8129, 54.8904], [-132.7723, 54.9261], [-132.7006, 54.9191], [-132.6173, 54.8925], [-132.6469, 54.7562], [-132.7058, 54.6842], [-132.8073, 54.7091], [-132.8896, 54.7626], [-133.0089, 54.8549], [-133.0754, 54.9214], [-133.0805, 54.9494], [-133.1227, 54.9698], [-133.2046, 55.0844], [-133.2511, 55.1751], [-133.3249, 55.1855], [-133.418, 55.2107], [-133.4538, 55.2604], [-133.429, 55.3038], [-133.2966, 55.3258], [-133.0974, 55.2137], [-133.067, 55.1662], [-132.9957, 55.1106], [-132.9822, 55.033], [-132.946, 55.0026], [-132.8623, 54.8944]]], [[[-162.2981, 54.8471], [-162.3219, 54.8424], [-162.3907, 54.873], [-162.4339, 54.9316], [-162.2937, 54.9828], [-162.2647, 54.9835], [-162.2338, 54.9321], [-162.2725, 54.8672], [-162.2981, 54.8471]]], [[[-160.919, 58.5771], [-160.9924, 58.561], [-161.0703, 58.5691], [-161.1315, 58.6681], [-161.0846, 58.6713], [-160.9863, 58.7364], [-160.7686, 58.7892], [-160.7151, 58.7953], [-160.919, 58.5771]]], [[[-166.2097, 53.7232], [-166.2494, 53.7452], [-166.2507, 53.7678], [-166.1877, 53.8225], [-166.1026, 53.8328], [-166.1386, 53.7874], [-166.2097, 53.7232]]], [[[-167.9644, 53.345], [-168.2707, 53.2381], [-168.3701, 53.1598], [-168.446, 53.0844], [-168.5056, 53.0431], [-168.549, 53.0361], [-168.6986, 52.9634], [-168.741, 52.9568], [-169.0659, 52.834], [-169.0731, 52.8642], [-168.9739, 52.9097], [-168.9091, 52.9512], [-168.8361, 53.0198], [-168.7959, 53.0449], [-168.7778, 53.1488], [-168.7596, 53.175], [-168.639, 53.2558], [-168.5722, 53.2656], [-168.4367, 53.2569], [-168.363, 53.3035], [-168.3973, 53.3219], [-168.4053, 53.3538], [-168.3964, 53.4088], [-168.3572, 53.4576], [-168.2877, 53.5001], [-168.1931, 53.5333], [-168.0732, 53.557], [-167.9857, 53.5581], [-167.8281, 53.5079], [-167.8047, 53.4849], [-167.8652, 53.3873], [-167.9644, 53.345]]], [[[-152.0208, 60.3617], [-151.9598, 60.5038], [-151.8873, 60.4727], [-151.9869, 60.3739], [-152.0208, 60.3617]]], [[[-166.1354, 60.3835], [-166.0436, 60.3339], [-165.9949, 60.3312], [-165.8409, 60.3462], [-165.7297, 60.3142], [-165.6959, 60.2815], [-165.6894, 60.2241], [-165.7144, 60.1729], [-165.7123, 60.0694], [-165.6306, 60.0284], [-165.5918, 59.9131], [-165.7693, 59.8932], [-165.9467, 59.89], [-166.0998, 59.8496], [-166.1312, 59.8197], [-166.1067, 59.7754], [-166.1876, 59.7738], [-166.2616, 59.8149], [-166.343, 59.8345], [-166.6276, 59.8647], [-166.985, 59.9838], [-167.1389, 60.0085], [-167.2951, 60.0957], [-167.4364, 60.2067], [-167.2517, 60.2335], [-166.8363, 60.2169], [-166.7844, 60.2965], [-166.7309, 60.3162], [-166.599, 60.3387], [-166.4757, 60.3827], [-166.3639, 60.3648], [-166.247, 60.3912], [-166.1849, 60.3968], [-166.1354, 60.3835]]], [[[-177.1482, 51.7167], [-177.2299, 51.6935], [-177.3824, 51.7049], [-177.5776, 51.6942], [-177.6549, 51.6765], [-177.6676, 51.7212], [-177.3347, 51.7762], [-177.2573, 51.8049], [-177.2098, 51.8414], [-177.1664, 51.9094], [-177.11, 51.9287], [-177.0631, 51.902], [-177.0795, 51.8666], [-177.1214, 51.8357], [-177.1351, 51.8069], [-177.1482, 51.7167]]], [[[-146.394, 60.4496], [-146.3717, 60.4222], [-146.1796, 60.4288], [-146.1242, 60.4239], [-146.1283, 60.3926], [-146.2024, 60.368], [-146.4192, 60.325], [-146.5953, 60.2685], [-146.6184, 60.2737], [-146.6504, 60.3357], [-146.683, 60.3606], [-146.7026, 60.4085], [-146.606, 60.4679], [-146.5603, 60.4805], [-146.394, 60.4496]]], [[[-147.7358, 59.8132], [-147.8463, 59.7989], [-147.8725, 59.8283], [-147.8143, 59.902], [-147.7681, 59.9438], [-147.7337, 59.9537], [-147.6067, 60.0366], [-147.4658, 60.097], [-147.3365, 60.1854], [-147.2052, 60.3113], [-147.1808, 60.3583], [-147.12, 60.3631], [-147.0199, 60.3323], [-146.9579, 60.2889], [-146.9867, 60.2544], [-147.3184, 60.0753], [-147.3463, 60.052], [-147.3765, 59.9912], [-147.4475, 59.9602], [-147.4993, 59.8902], [-147.5402, 59.8676], [-147.6021, 59.8656], [-147.6687, 59.8315], [-147.7358, 59.8132]]], [[[-172.4648, 52.2723], [-172.5391, 52.2575], [-172.6198, 52.2729], [-172.5822, 52.3257], [-172.5437, 52.3538], [-172.4704, 52.3881], [-172.3831, 52.373], [-172.3136, 52.3295], [-172.4648, 52.2723]]], [[[-177.8791, 51.6497], [-177.9253, 51.6174], [-178.0589, 51.6726], [-178.0785, 51.6912], [-178.0001, 51.7174], [-177.9864, 51.7643], [-178.0451, 51.801], [-178.1535, 51.8482], [-178.1945, 51.8822], [-178.1682, 51.9031], [-178.1166, 51.9158], [-177.9538, 51.9184], [-177.8659, 51.8604], [-177.7996, 51.84], [-177.6445, 51.8263], [-177.7249, 51.8016], [-177.7706, 51.7779], [-177.827, 51.6859], [-177.8791, 51.6497]]], [[[-153.2406, 57.8501], [-153.2686, 57.8224], [-153.465, 57.9094], [-153.5171, 57.9419], [-153.4811, 57.971], [-153.347, 57.9328], [-153.2901, 57.8979], [-153.2406, 57.8501]]], [[[-176.009, 51.8124], [-176.0934, 51.7905], [-176.2044, 51.8348], [-176.1937, 51.8862], [-176.0717, 51.8433], [-176.009, 51.8124]]], [[[-135.7304, 58.2443], [-135.5875, 58.1468], [-135.6154, 58.0575], [-135.6931, 58.0385], [-135.6711, 58.0119], [-135.6133, 57.9919], [-135.572, 58.0086], [-135.4212, 58.1024], [-135.3466, 58.124], [-135.1629, 58.0958], [-135.0021, 58.0511], [-134.9547, 58.0153], [-134.928, 57.9528], [-134.9706, 57.8173], [-135.1026, 57.7937], [-135.1648, 57.7962], [-135.2312, 57.8158], [-135.3385, 57.7686], [-135.2495, 57.7326], [-134.9789, 57.7243], [-134.8966, 57.6481], [-134.8731, 57.5893], [-134.9315, 57.4811], [-135.0848, 57.511], [-135.2203, 57.5736], [-135.4979, 57.6623], [-135.5642, 57.6665], [-135.6086, 57.6507], [-135.6207, 57.5969], [-135.6178, 57.4804], [-135.692, 57.4199], [-135.9108, 57.4465], [-135.9966, 57.5348], [-136.0766, 57.6745], [-136.3783, 57.8399], [-136.4599, 57.8731], [-136.5686, 57.9722], [-136.525, 58.0505], [-136.5123, 58.0959], [-136.4544, 58.108], [-136.3695, 58.1431], [-136.322, 58.2189], [-136.2457, 58.1575], [-136.1437, 58.0984], [-136.1424, 58.1539], [-136.0943, 58.1981], [-135.9944, 58.1966], [-135.9474, 58.2058], [-135.8817, 58.2472], [-135.7871, 58.2684], [-135.7304, 58.2443]]], [[[-166.6153, 53.9009], [-166.5722, 53.8535], [-166.4975, 53.8835], [-166.4428, 53.9248], [-166.3724, 53.999], [-166.3356, 53.9709], [-166.2309, 53.9326], [-166.319, 53.8738], [-166.4887, 53.7855], [-166.5456, 53.7265], [-166.5492, 53.701], [-166.3847, 53.7205], [-166.3388, 53.7176], [-166.3095, 53.6974], [-166.3545, 53.6735], [-166.4442, 53.6518], [-166.522, 53.6097], [-166.7021, 53.5367], [-166.7704, 53.476], [-166.851, 53.4528], [-166.9608, 53.4473], [-167.1537, 53.4078], [-167.2708, 53.3705], [-167.3373, 53.3409], [-167.3813, 53.342], [-167.4288, 53.3257], [-167.5225, 53.2762], [-167.6695, 53.2599], [-167.7809, 53.3002], [-167.8088, 53.3238], [-167.7101, 53.371], [-167.6387, 53.3866], [-167.5302, 53.3937], [-167.4235, 53.4373], [-167.2041, 53.4949], [-167.1361, 53.5265], [-167.0923, 53.6359], [-167.0424, 53.6545], [-167.0157, 53.6984], [-166.8941, 53.6972], [-166.8383, 53.6481], [-166.8037, 53.6854], [-166.7413, 53.7129], [-166.7772, 53.7331], [-166.8896, 53.7586], [-166.973, 53.7705], [-167.0273, 53.7692], [-167.0715, 53.7834], [-167.1056, 53.8133], [-167.1182, 53.8726], [-167.0381, 53.9422], [-166.9781, 53.9629], [-166.8487, 53.9779], [-166.7341, 54.0021], [-166.6733, 54.006], [-166.6274, 53.9957], [-166.6153, 53.9009]]], [[[-159.362, 54.9724], [-159.4214, 54.9782], [-159.4584, 55.0349], [-159.3904, 55.0408], [-159.362, 54.9724]]], [[[-159.5151, 55.1519], [-159.5204, 55.0721], [-159.5615, 55.0809], [-159.6177, 55.0573], [-159.6485, 55.0746], [-159.6397, 55.1239], [-159.598, 55.1257], [-159.5952, 55.1821], [-159.5748, 55.2177], [-159.5451, 55.226], [-159.5151, 55.1519]]], [[[-131.3398, 55.0798], [-131.2375, 54.9495], [-131.232, 54.9037], [-131.3295, 54.8878], [-131.4062, 54.8943], [-131.4561, 54.9306], [-131.4314, 54.9965], [-131.4817, 55.0352], [-131.54, 55.0485], [-131.5922, 55.0258], [-131.5951, 55.0908], [-131.556, 55.1374], [-131.5778, 55.2009], [-131.5655, 55.2641], [-131.5127, 55.2627], [-131.4046, 55.2133], [-131.3398, 55.0798]]], [[[-152.898, 57.8239], [-152.8908, 57.769], [-152.8502, 57.7757], [-152.6962, 57.8322], [-152.616, 57.8488], [-152.5115, 57.8514], [-152.4288, 57.8257], [-152.4192, 57.7823], [-152.4854, 57.7345], [-152.4826, 57.7033], [-152.4115, 57.6462], [-152.2365, 57.6149], [-152.2163, 57.5771], [-152.3366, 57.4822], [-152.4122, 57.4547], [-152.631, 57.4719], [-152.8311, 57.5029], [-152.9121, 57.5082], [-152.9974, 57.469], [-152.9568, 57.4604], [-152.7814, 57.4534], [-152.7195, 57.4109], [-152.679, 57.3452], [-152.7891, 57.3206], [-152.879, 57.3208], [-152.9903, 57.282], [-153.0516, 57.2377], [-153.2744, 57.2263], [-153.4437, 57.1672], [-153.5036, 57.138], [-153.5244, 57.103], [-153.5883, 57.0777], [-153.7326, 57.0523], [-153.6465, 57.0295], [-153.6314, 56.9837], [-153.6434, 56.9608], [-153.7572, 56.8584], [-153.9727, 56.7742], [-154.0274, 56.778], [-154.0709, 56.8207], [-153.7932, 56.9895], [-153.8798, 57.0035], [-153.9994, 57.05], [-154.0838, 57.0201], [-154.0805, 57.0611], [-154.0254, 57.1085], [-154.0653, 57.1336], [-154.2437, 57.1431], [-154.3244, 57.1318], [-154.3811, 57.0966], [-154.2695, 57.0995], [-154.2092, 57.0634], [-154.1843, 57.0053], [-154.2077, 56.9638], [-154.261, 56.9117], [-154.3389, 56.9209], [-154.4988, 57.0365], [-154.5693, 57.2059], [-154.706, 57.3353], [-154.7122, 57.3663], [-154.6732, 57.4461], [-154.5353, 57.5595], [-154.3871, 57.5905], [-154.2814, 57.6381], [-154.1794, 57.6525], [-154.1162, 57.6512], [-154.0298, 57.6307], [-153.995, 57.5873], [-154.0079, 57.5562], [-153.9474, 57.53], [-153.8819, 57.439], [-153.8054, 57.3582], [-153.7569, 57.3668], [-153.7978, 57.4432], [-153.8184, 57.5956], [-153.8381, 57.6359], [-153.7995, 57.6467], [-153.6902, 57.6407], [-153.6931, 57.6634], [-153.8085, 57.7147], [-153.8794, 57.7572], [-153.9044, 57.8199], [-153.8416, 57.8628], [-153.769, 57.8804], [-153.6627, 57.8579], [-153.5686, 57.7611], [-153.5245, 57.731], [-153.4541, 57.7471], [-153.4227, 57.7792], [-153.3571, 57.8047], [-153.2524, 57.7904], [-153.2003, 57.82], [-153.201, 57.8632], [-153.1688, 57.9107], [-153.226, 57.9576], [-153.1605, 57.972], [-152.9433, 57.936], [-152.8504, 57.8968], [-152.898, 57.8239]]], [[[-160.3292, 55.3377], [-160.3433, 55.2589], [-160.4807, 55.309], [-160.5175, 55.3339], [-160.493, 55.3524], [-160.3623, 55.357], [-160.3292, 55.3377]]], [[[-173.5533, 52.1363], [-173.3572, 52.0956], [-173.1133, 52.1004], [-173.0229, 52.0791], [-173.1789, 52.0625], [-173.2322, 52.068], [-173.3684, 52.0457], [-173.461, 52.0416], [-173.6726, 52.0627], [-173.8357, 52.0481], [-173.9302, 52.0721], [-173.9896, 52.1037], [-173.9389, 52.1312], [-173.7941, 52.1044], [-173.779, 52.1183], [-173.6568, 52.1437], [-173.5533, 52.1363]]], [[[-163.4761, 54.9808], [-163.379, 54.8155], [-163.3369, 54.7832], [-163.1871, 54.7478], [-163.135, 54.7233], [-163.0833, 54.669], [-163.3581, 54.7356], [-163.5308, 54.6384], [-163.583, 54.6256], [-164.0733, 54.621], [-164.1713, 54.603], [-164.2346, 54.5713], [-164.3467, 54.4825], [-164.4035, 54.4478], [-164.4635, 54.4273], [-164.5908, 54.4043], [-164.7438, 54.4075], [-164.8234, 54.4191], [-164.8662, 54.4614], [-164.9039, 54.5447], [-164.8877, 54.6078], [-164.7515, 54.6629], [-164.7062, 54.692], [-164.5298, 54.8808], [-164.4786, 54.9069], [-164.4243, 54.9132], [-164.2737, 54.9], [-164.1451, 54.9551], [-163.868, 55.0392], [-163.8071, 55.0491], [-163.6075, 55.0508], [-163.553, 55.0378], [-163.4761, 54.9808]]], [[[-147.9307, 60.8262], [-148.0574, 60.8179], [-148.1238, 60.8444], [-148.1017, 60.9161], [-148.0378, 60.9241], [-147.9644, 60.9002], [-147.9307, 60.8262]]], [[[-169.692, 52.8474], [-169.7228, 52.7923], [-169.8773, 52.8137], [-169.9806, 52.806], [-169.9825, 52.851], [-169.8207, 52.8834], [-169.7549, 52.8836], [-169.692, 52.8474]]], [[[-133.9896, 56.845], [-133.9248, 56.7757], [-133.8309, 56.7813], [-133.7781, 56.729], [-133.7384, 56.6505], [-133.7673, 56.6001], [-133.809, 56.6113], [-133.8553, 56.5822], [-133.8836, 56.4854], [-133.8705, 56.3886], [-133.8846, 56.2921], [-133.9385, 56.1936], [-133.9497, 56.1277], [-133.994, 56.1011], [-134.0675, 56.133], [-134.1225, 56.0773], [-134.1896, 56.0769], [-134.245, 56.2032], [-134.1955, 56.4134], [-134.0844, 56.4564], [-134.1505, 56.5135], [-134.2902, 56.58], [-134.2784, 56.6171], [-134.3844, 56.724], [-134.3906, 56.7495], [-134.3737, 56.8387], [-134.2745, 56.9182], [-134.1433, 56.9323], [-134.0518, 56.8983], [-134.0006, 56.8692], [-133.9896, 56.845]]], [[[-133.5661, 56.3393], [-133.3766, 56.3177], [-133.203, 56.3198], [-133.1437, 56.2785], [-133.0818, 56.1942], [-133.0755, 56.1559], [-133.0966, 56.09], [-132.7576, 55.9949], [-132.5977, 55.8951], [-132.5338, 55.8425], [-132.4969, 55.798], [-132.4302, 55.687], [-132.2889, 55.5581], [-132.2147, 55.5188], [-132.1964, 55.4792], [-132.2959, 55.5075], [-132.5113, 55.5939], [-132.5817, 55.5027], [-132.5916, 55.4644], [-132.4178, 55.4829], [-132.2721, 55.3986], [-132.2153, 55.3835], [-132.1602, 55.323], [-132.1584, 55.2999], [-132.2066, 55.2244], [-132.166, 55.218], [-132.0051, 55.2306], [-131.9764, 55.2085], [-132.0004, 55.0338], [-131.9777, 54.9694], [-131.9973, 54.8686], [-131.9809, 54.8048], [-132.0217, 54.7263], [-132.0648, 54.7131], [-132.1343, 54.7126], [-132.1892, 54.7349], [-132.2664, 54.8024], [-132.3413, 54.9073], [-132.3702, 54.9222], [-132.5494, 54.9525], [-132.5938, 54.9957], [-132.5885, 55.0524], [-132.627, 55.1101], [-132.6221, 55.136], [-132.6653, 55.1467], [-132.7017, 55.1305], [-132.6829, 55.0739], [-132.7041, 55.0301], [-132.7823, 55.0485], [-132.9126, 55.1885], [-133.0606, 55.301], [-133.1186, 55.3277], [-133.103, 55.3602], [-133.03, 55.3776], [-132.9708, 55.3761], [-132.9589, 55.3956], [-133.0824, 55.504], [-133.0784, 55.5349], [-133.0334, 55.5897], [-133.0896, 55.6126], [-133.2438, 55.5954], [-133.2983, 55.6069], [-133.369, 55.689], [-133.5027, 55.6959], [-133.5533, 55.6912], [-133.6405, 55.7488], [-133.6802, 55.7851], [-133.6645, 55.8038], [-133.584, 55.8366], [-133.5371, 55.8319], [-133.4469, 55.7971], [-133.4117, 55.7983], [-133.3221, 55.8447], [-133.3084, 55.8865], [-133.2415, 55.9209], [-133.2892, 56.0187], [-133.3712, 56.0359], [-133.5386, 55.9993], [-133.6842, 55.9428], [-133.7425, 55.9649], [-133.7552, 55.9995], [-133.5992, 56.0937], [-133.5308, 56.1456], [-133.5441, 56.1765], [-133.5944, 56.2164], [-133.5986, 56.3162], [-133.5661, 56.3393]]], [[[-133.3051, 55.5438], [-133.2817, 55.4979], [-133.4265, 55.4315], [-133.4631, 55.3767], [-133.5474, 55.3173], [-133.6502, 55.2693], [-133.635, 55.4133], [-133.7371, 55.4969], [-133.6342, 55.5393], [-133.5667, 55.5272], [-133.4548, 55.5223], [-133.3456, 55.559], [-133.3051, 55.5438]]], [[[-155.566, 55.8212], [-155.6049, 55.7895], [-155.7232, 55.8021], [-155.7374, 55.8298], [-155.6207, 55.9131], [-155.5732, 55.921], [-155.566, 55.8212]]], [[[-154.6828, 56.4358], [-154.7512, 56.4122], [-154.7772, 56.4399], [-154.7294, 56.5022], [-154.6238, 56.5613], [-154.5175, 56.6005], [-154.4633, 56.5981], [-154.4449, 56.5732], [-154.5112, 56.5215], [-154.6828, 56.4358]]], [[[-132.7799, 56.2472], [-132.831, 56.2442], [-132.8914, 56.2594], [-133.0351, 56.3409], [-133.0171, 56.392], [-132.9021, 56.4537], [-132.7061, 56.4485], [-132.6433, 56.4351], [-132.6323, 56.3883], [-132.6528, 56.3643], [-132.6466, 56.3132], [-132.6694, 56.2873], [-132.7799, 56.2472]]], [[[-154.2086, 56.5149], [-154.2578, 56.5127], [-154.3321, 56.539], [-154.3222, 56.5706], [-154.2168, 56.6087], [-154.1104, 56.6029], [-154.1159, 56.5438], [-154.2086, 56.5149]]], [[[-153.007, 57.1248], [-153.1342, 57.0926], [-153.1568, 57.094], [-153.2354, 57.0286], [-153.2954, 57.0005], [-153.3746, 57.0519], [-153.3544, 57.132], [-153.2852, 57.185], [-152.9355, 57.1673], [-152.9334, 57.1292], [-153.007, 57.1248]]], [[[-169.7552, 56.635], [-169.624, 56.6151], [-169.5505, 56.6282], [-169.4857, 56.6177], [-169.4744, 56.594], [-169.5869, 56.5425], [-169.6327, 56.5458], [-169.7661, 56.6079], [-169.7552, 56.635]]], [[[-133.3662, 57.0035], [-133.2997, 56.9722], [-133.2635, 57.005], [-133.196, 57.0035], [-133.0708, 56.9743], [-132.9962, 56.9304], [-132.9541, 56.8803], [-132.9633, 56.7826], [-132.954, 56.713], [-132.9758, 56.6472], [-133.0349, 56.6208], [-133.1324, 56.6833], [-133.244, 56.7959], [-133.3289, 56.83], [-133.3091, 56.7863], [-133.2397, 56.7257], [-133.2273, 56.6892], [-133.1784, 56.6448], [-133.1442, 56.5669], [-133.1582, 56.4952], [-133.2126, 56.4646], [-133.3827, 56.4739], [-133.4842, 56.4517], [-133.6028, 56.464], [-133.6493, 56.5168], [-133.6583, 56.5964], [-133.6881, 56.71], [-133.681, 56.7975], [-133.7576, 56.8766], [-133.823, 56.9244], [-133.9173, 56.9671], [-133.9794, 57.0096], [-133.9624, 57.0434], [-133.866, 57.0687], [-133.7077, 57.0628], [-133.3662, 57.0035]]], [[[-130.9791, 55.4892], [-131.014, 55.3793], [-131.0828, 55.2668], [-131.1879, 55.2063], [-131.2619, 55.2198], [-131.3163, 55.2685], [-131.4207, 55.2759], [-131.451, 55.3163], [-131.4224, 55.3684], [-131.4745, 55.3735], [-131.5219, 55.3411], [-131.6413, 55.2989], [-131.7237, 55.2183], [-131.7625, 55.1659], [-131.811, 55.2231], [-131.842, 55.3587], [-131.8461, 55.4163], [-131.7595, 55.5031], [-131.6476, 55.5855], [-131.625, 55.8316], [-131.2692, 55.9554], [-131.2362, 55.949], [-131.1207, 55.8566], [-130.9978, 55.7277], [-130.966, 55.6695], [-130.965, 55.5681], [-130.9791, 55.4892]]], [[[-160.6849, 55.3148], [-160.6388, 55.3219], [-160.574, 55.3783], [-160.5525, 55.3634], [-160.5832, 55.3077], [-160.4875, 55.1848], [-160.6091, 55.159], [-160.7018, 55.1775], [-160.7506, 55.1712], [-160.7951, 55.1452], [-160.8255, 55.174], [-160.8465, 55.3114], [-160.8397, 55.3354], [-160.7892, 55.3831], [-160.7239, 55.4046], [-160.6957, 55.3983], [-160.6664, 55.3594], [-160.6849, 55.3148]]], [[[-132.1123, 56.1094], [-132.1329, 55.9432], [-132.2103, 55.953], [-132.2873, 55.9294], [-132.3686, 55.9397], [-132.4206, 55.9796], [-132.4061, 56.0289], [-132.4511, 56.0564], [-132.603, 56.0664], [-132.6599, 56.0782], [-132.6914, 56.13], [-132.6991, 56.1982], [-132.6752, 56.2237], [-132.5987, 56.2416], [-132.539, 56.3242], [-132.506, 56.3353], [-132.3798, 56.4987], [-132.3165, 56.4875], [-132.2056, 56.3879], [-132.0669, 56.2442], [-132.1123, 56.1094]]], [[[-132.7468, 56.5257], [-132.7577, 56.5111], [-132.8846, 56.5124], [-132.9308, 56.5245], [-132.948, 56.5673], [-132.9362, 56.6068], [-132.8706, 56.6963], [-132.8425, 56.7948], [-132.6559, 56.6847], [-132.5987, 56.6357], [-132.568, 56.5758], [-132.6343, 56.5534], [-132.7145, 56.5426], [-132.7468, 56.5257]]]] }, \"properties\": { \"name\": \"Alaska\", \"id\": \"US-AK\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-AK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-85.6235, 35.0009], [-85.5179, 34.4897], [-85.4387, 34.1063], [-85.3859, 33.8507], [-85.3066, 33.4674], [-85.2009, 32.9562], [-85.1764, 32.8982], [-85.1565, 32.8042], [-85.0151, 32.5261], [-84.9738, 32.4093], [-84.986, 32.3609], [-84.9685, 32.3198], [-84.9216, 32.2859], [-84.9297, 32.2466], [-84.9929, 32.2018], [-85.0346, 32.1474], [-85.0645, 32.0506], [-85.1241, 31.8804], [-85.1248, 31.7768], [-85.0672, 31.6354], [-85.0549, 31.5726], [-85.0926, 31.2957], [-85.0675, 31.1176], [-85.0073, 31.0016], [-85.3299, 31.0011], [-85.9769, 31.0009], [-86.3002, 31.0009], [-86.6236, 31.0009], [-87.2702, 31.0008], [-87.5937, 31.0008], [-87.6074, 30.9294], [-87.6011, 30.8605], [-87.5663, 30.7957], [-87.4216, 30.6716], [-87.4083, 30.6415], [-87.4338, 30.546], [-87.4294, 30.4778], [-87.4448, 30.4426], [-87.4802, 30.4117], [-87.4896, 30.3777], [-87.5132, 30.3681], [-87.6222, 30.2647], [-88.006, 30.231], [-87.9851, 30.2544], [-87.904, 30.2591], [-87.7903, 30.2919], [-87.8134, 30.3469], [-87.8571, 30.4073], [-87.8977, 30.414], [-87.9243, 30.4496], [-87.9229, 30.5616], [-87.9489, 30.627], [-88.0112, 30.6942], [-88.0325, 30.6812], [-88.0784, 30.5663], [-88.1166, 30.4154], [-88.1355, 30.3666], [-88.2493, 30.3632], [-88.3499, 30.3735], [-88.3996, 30.3709], [-88.4232, 30.7643], [-88.4443, 31.1397], [-88.4653, 31.5151], [-88.4862, 31.8904], [-88.4373, 32.26], [-88.3886, 32.6294], [-88.3397, 32.9988], [-88.2664, 33.5531], [-88.2177, 33.9226], [-88.1688, 34.292], [-88.1201, 34.6614], [-88.0847, 34.9331], [-88.1733, 34.999], [-88.1905, 35.0249], [-87.7092, 35.0204], [-87.3883, 35.0174], [-86.9071, 35.0129], [-86.4257, 35.0083], [-86.1048, 35.0055], [-85.6235, 35.0009]]], [[[-88.0713, 30.2522], [-88.1593, 30.231], [-88.2897, 30.2329], [-88.264, 30.2547], [-88.1094, 30.2738], [-88.0713, 30.2522]]]] }, \"properties\": { \"name\": \"Alabama\", \"id\": \"US-AL\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-AL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.7047, 36.0015], [-89.6892, 35.9436], [-89.7037, 35.9069], [-89.7635, 35.8888], [-89.7635, 35.8281], [-89.7796, 35.8057], [-89.8946, 35.7506], [-89.9436, 35.6791], [-89.9266, 35.5917], [-89.9674, 35.5033], [-90.066, 35.4141], [-90.1078, 35.3143], [-90.0929, 35.2036], [-90.1423, 35.1142], [-90.2559, 35.0463], [-90.2938, 35.0012], [-90.2821, 34.9453], [-90.3198, 34.8992], [-90.416, 34.8516], [-90.4675, 34.8053], [-90.4748, 34.76], [-90.4971, 34.7381], [-90.5392, 34.7281], [-90.5638, 34.6611], [-90.5841, 34.5037], [-90.6354, 34.4139], [-90.718, 34.3917], [-90.7623, 34.3565], [-90.7682, 34.3082], [-90.8172, 34.2522], [-90.9097, 34.1888], [-90.9403, 34.1286], [-90.9088, 34.0717], [-90.9431, 34.0297], [-91.0432, 34.0028], [-91.0702, 33.9743], [-91.05, 33.9452], [-91.0382, 33.9013], [-91.0528, 33.8276], [-91.1003, 33.7674], [-91.1841, 33.7157], [-91.2076, 33.6756], [-91.1704, 33.6474], [-91.1727, 33.6167], [-91.2146, 33.5834], [-91.193, 33.5225], [-91.1542, 33.5003], [-91.1411, 33.4386], [-91.1685, 33.3594], [-91.1633, 33.2944], [-91.1068, 33.2179], [-91.1529, 33.0405], [-91.15, 33.0159], [-91.7056, 33.0147], [-92.0649, 33.0143], [-92.4243, 33.0139], [-92.7837, 33.0135], [-93.3227, 33.0128], [-93.6819, 33.0124], [-94.0413, 33.012], [-94.0472, 33.5544], [-94.0988, 33.5773], [-94.1915, 33.589], [-94.2385, 33.5812], [-94.2947, 33.5875], [-94.3326, 33.565], [-94.3778, 33.5661], [-94.3902, 33.5857], [-94.432, 33.5997], [-94.4841, 33.6485], [-94.473, 34.0832], [-94.4616, 34.5178], [-94.4475, 35.0613], [-94.4391, 35.3872], [-94.5288, 35.9441], [-94.6184, 36.5009], [-94.3399, 36.5009], [-93.7829, 36.5009], [-93.5044, 36.5009], [-92.9474, 36.5009], [-92.3904, 36.5009], [-92.1118, 36.5009], [-91.5548, 36.5009], [-90.9978, 36.5009], [-90.7191, 36.5009], [-90.1623, 36.5009], [-90.1181, 36.4226], [-90.0744, 36.3719], [-90.0671, 36.3343], [-90.0758, 36.2967], [-90.1493, 36.216], [-90.2162, 36.1784], [-90.2526, 36.1377], [-90.303, 36.0993], [-90.3811, 35.9927], [-89.7047, 36.0015]]] }, \"properties\": { \"name\": \"Arkansas\", \"id\": \"US-AR\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-AR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-109.0467, 37.0009], [-109.0467, 36.6464], [-109.0468, 36.2918], [-109.0468, 35.9373], [-109.0469, 35.5829], [-109.0469, 35.2283], [-109.0469, 34.8738], [-109.0469, 34.5194], [-109.0471, 34.1648], [-109.0471, 33.8103], [-109.0472, 33.4558], [-109.0472, 33.1012], [-109.0473, 32.7468], [-109.0473, 32.3922], [-109.0473, 32.0377], [-109.0473, 31.6833], [-109.0478, 31.328], [-109.6282, 31.3269], [-109.9817, 31.3262], [-110.3351, 31.3255], [-110.6886, 31.3248], [-111.0421, 31.3243], [-111.5162, 31.4722], [-111.9905, 31.6202], [-112.4647, 31.7683], [-112.939, 31.9162], [-113.4132, 32.0643], [-113.8875, 32.2123], [-114.3617, 32.3604], [-114.836, 32.5083], [-114.788, 32.5648], [-114.7248, 32.7154], [-114.7209, 32.7244], [-114.5822, 32.7347], [-114.5165, 32.7728], [-114.4775, 32.8419], [-114.469, 32.9123], [-114.4908, 32.9836], [-114.5506, 33.0368], [-114.6481, 33.0718], [-114.7045, 33.1698], [-114.7194, 33.3309], [-114.7017, 33.4179], [-114.6511, 33.4306], [-114.6026, 33.47], [-114.556, 33.5356], [-114.5215, 33.6076], [-114.4992, 33.6858], [-114.4951, 33.7847], [-114.5091, 33.904], [-114.4183, 34.0511], [-114.3293, 34.142], [-114.1635, 34.2533], [-114.1255, 34.2865], [-114.1251, 34.3172], [-114.1589, 34.3552], [-114.308, 34.4328], [-114.371, 34.4885], [-114.3769, 34.5398], [-114.398, 34.5897], [-114.5575, 34.7946], [-114.611, 34.9074], [-114.6105, 34.9912], [-114.5909, 35.3528], [-114.6485, 35.4759], [-114.6621, 35.5453], [-114.6452, 35.6305], [-114.65, 35.6835], [-114.677, 35.7299], [-114.6871, 35.9173], [-114.7323, 35.9837], [-114.7414, 36.0136], [-114.7157, 36.0849], [-114.6691, 36.1218], [-114.593, 36.1475], [-114.5052, 36.1565], [-114.4061, 36.1484], [-114.3315, 36.1163], [-114.2816, 36.0603], [-114.2321, 36.0317], [-114.1833, 36.0303], [-114.1194, 36.0767], [-114.0619, 36.1751], [-114.0429, 36.1817], [-114.0412, 36.6125], [-114.0402, 37.0042], [-113.4161, 37.0037], [-113.104, 37.0035], [-112.4798, 37.0031], [-111.8556, 37.0026], [-111.2313, 37.0022], [-110.6071, 37.0018], [-109.9829, 37.0014], [-109.3587, 37.001], [-109.0467, 37.0009]]] }, \"properties\": { \"name\": \"Arizona\", \"id\": \"US-AZ\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-AZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-120.0008, 42.0005], [-120.0007, 41.438], [-120.0006, 41.063], [-120.0006, 40.6879], [-120.0004, 40.1253], [-120.0001, 39.5627], [-120.0001, 39.0002], [-119.7658, 38.8368], [-119.2974, 38.5098], [-119.0632, 38.3463], [-118.5948, 38.0193], [-118.1262, 37.6924], [-117.943, 37.5546], [-117.5762, 37.2789], [-117.2097, 37.0033], [-117.0262, 36.8655], [-116.6596, 36.5899], [-116.4057, 36.3918], [-116.1518, 36.1936], [-115.8978, 35.9955], [-115.6439, 35.7973], [-115.3901, 35.5991], [-115.1361, 35.4009], [-114.8822, 35.2028], [-114.6105, 34.9912], [-114.611, 34.9074], [-114.5575, 34.7946], [-114.398, 34.5897], [-114.3769, 34.5398], [-114.371, 34.4885], [-114.308, 34.4328], [-114.1589, 34.3552], [-114.1251, 34.3172], [-114.1255, 34.2865], [-114.1635, 34.2533], [-114.3293, 34.142], [-114.4183, 34.0511], [-114.5091, 33.904], [-114.4951, 33.7847], [-114.4992, 33.6858], [-114.5215, 33.6076], [-114.556, 33.5356], [-114.6026, 33.47], [-114.6511, 33.4306], [-114.7017, 33.4179], [-114.7194, 33.3309], [-114.7045, 33.1698], [-114.6481, 33.0718], [-114.5506, 33.0368], [-114.4908, 32.9836], [-114.469, 32.9123], [-114.4775, 32.8419], [-114.5165, 32.7728], [-114.5822, 32.7347], [-114.7209, 32.7244], [-114.7248, 32.7154], [-114.8391, 32.7047], [-115.1253, 32.6833], [-115.6975, 32.6404], [-115.9837, 32.619], [-116.556, 32.5762], [-117.1282, 32.5334], [-117.1374, 32.6491], [-117.1838, 32.6879], [-117.2436, 32.6641], [-117.2707, 32.8063], [-117.2558, 32.8733], [-117.2629, 32.9389], [-117.3188, 33.1], [-117.4675, 33.2955], [-117.7885, 33.5385], [-117.9521, 33.6196], [-118.0806, 33.7221], [-118.1619, 33.7506], [-118.2644, 33.7586], [-118.2942, 33.7123], [-118.4105, 33.7439], [-118.3929, 33.8583], [-118.5062, 34.0175], [-118.5989, 34.035], [-118.832, 34.0245], [-119.1437, 34.112], [-119.2358, 34.1641], [-119.2676, 34.2575], [-119.4137, 34.3386], [-119.606, 34.418], [-119.7131, 34.3996], [-119.8533, 34.412], [-120.0529, 34.4692], [-120.1695, 34.4764], [-120.3964, 34.4596], [-120.4812, 34.4716], [-120.5599, 34.5439], [-120.6446, 34.58], [-120.6268, 34.669], [-120.6376, 34.7493], [-120.6249, 34.812], [-120.663, 34.9494], [-120.6336, 35.0765], [-120.6592, 35.1224], [-120.707, 35.1577], [-120.8574, 35.2096], [-120.8849, 35.2749], [-120.8603, 35.3654], [-120.8997, 35.4252], [-121.0228, 35.4809], [-121.138, 35.6071], [-121.2839, 35.6764], [-121.3438, 35.7923], [-121.4338, 35.8638], [-121.465, 35.9275], [-121.6644, 36.154], [-121.8775, 36.331], [-121.9101, 36.4329], [-121.9186, 36.5724], [-121.8351, 36.6575], [-121.79, 36.7322], [-121.7945, 36.8009], [-121.8074, 36.8513], [-121.8806, 36.9389], [-122.1642, 36.991], [-122.3948, 37.2075], [-122.4084, 37.3731], [-122.4993, 37.5426], [-122.5004, 37.6527], [-122.5142, 37.772], [-122.4456, 37.7981], [-122.3842, 37.7886], [-122.3903, 37.741], [-122.3698, 37.6559], [-122.2976, 37.5919], [-122.2287, 37.5639], [-122.166, 37.5016], [-122.1191, 37.4828], [-122.0706, 37.4783], [-122.1242, 37.5439], [-122.158, 37.6264], [-122.2222, 37.7321], [-122.296, 37.7904], [-122.3334, 37.8965], [-122.3655, 37.9212], [-122.3854, 37.9606], [-122.3142, 38.0073], [-122.217, 38.0407], [-122.0867, 38.0496], [-121.7168, 38.0341], [-121.6381, 38.0612], [-121.6822, 38.0748], [-121.7486, 38.0806], [-121.8808, 38.0749], [-121.9341, 38.0869], [-121.9932, 38.1201], [-122.0315, 38.1235], [-122.1538, 38.0655], [-122.2084, 38.0726], [-122.3371, 38.136], [-122.3933, 38.1447], [-122.4839, 38.1088], [-122.4949, 37.9536], [-122.4669, 37.8381], [-122.5213, 37.8265], [-122.5842, 37.8741], [-122.6807, 37.9023], [-122.7604, 37.9456], [-122.8729, 38.026], [-122.932, 38.0555], [-122.9988, 37.9886], [-123.0015, 38.0193], [-122.9682, 38.097], [-122.9776, 38.2273], [-122.8768, 38.1233], [-122.9082, 38.1966], [-122.9865, 38.2771], [-123.0462, 38.305], [-123.1212, 38.4493], [-123.2897, 38.5359], [-123.4248, 38.6757], [-123.7011, 38.9073], [-123.7195, 39.111], [-123.8202, 39.3684], [-123.7778, 39.515], [-123.7835, 39.6187], [-123.8329, 39.7755], [-123.8845, 39.8608], [-124.1085, 40.0945], [-124.324, 40.2519], [-124.3565, 40.3711], [-124.3717, 40.4912], [-124.3245, 40.598], [-124.2837, 40.7106], [-124.22, 40.6965], [-124.2084, 40.7461], [-124.2225, 40.775], [-124.1331, 40.9697], [-124.14, 41.1558], [-124.0685, 41.3841], [-124.0719, 41.4595], [-124.1177, 41.6218], [-124.1632, 41.719], [-124.2446, 41.7879], [-124.2087, 41.8886], [-124.2117, 41.9846], [-124.2284, 42.0008], [-123.9556, 42.0005], [-123.4283, 42.0005], [-122.901, 42.0005], [-122.3737, 42.0005], [-122.11, 42.0005], [-121.5828, 42.0005], [-121.0554, 42.0005], [-120.7917, 42.0005], [-120.2645, 42.0005], [-120.0008, 42.0005]]], [[[-119.8824, 34.0797], [-119.6789, 34.0285], [-119.5692, 34.053], [-119.5493, 34.0282], [-119.5622, 34.0065], [-119.8095, 33.9677], [-119.8855, 33.9949], [-119.8924, 34.0322], [-119.918, 34.0679], [-119.8824, 34.0797]]], [[[-120.3066, 34.0249], [-120.3597, 34.0223], [-120.4415, 34.0328], [-120.4129, 34.0563], [-120.3678, 34.0733], [-120.3066, 34.0249]]], [[[-120.0436, 33.9188], [-120.114, 33.9048], [-120.1672, 33.9181], [-120.2519, 34.0138], [-120.0719, 34.0265], [-119.984, 33.9733], [-120.0436, 33.9188]]], [[[-118.3504, 32.8277], [-118.4086, 32.8185], [-118.4731, 32.8389], [-118.529, 32.9356], [-118.5901, 33.0111], [-118.5571, 33.0327], [-118.5074, 32.9599], [-118.3832, 32.8495], [-118.3504, 32.8277]]], [[[-118.348, 33.3858], [-118.2975, 33.3121], [-118.3702, 33.3212], [-118.4463, 33.3171], [-118.4921, 33.4128], [-118.5073, 33.427], [-118.5594, 33.432], [-118.5549, 33.4771], [-118.3917, 33.4151], [-118.348, 33.3858]]], [[[-119.4381, 33.2172], [-119.4825, 33.2153], [-119.5437, 33.2246], [-119.5752, 33.2783], [-119.5251, 33.2821], [-119.4788, 33.2747], [-119.4381, 33.2172]]]] }, \"properties\": { \"name\": \"California\", \"id\": \"US-CA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-CA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-102.0245, 40.0011], [-102.0231, 39.6261], [-102.0209, 39.0636], [-102.0194, 38.6884], [-102.018, 38.3135], [-102.0164, 37.9384], [-102.015, 37.5633], [-102.0128, 37.0009], [-102.5067, 37.0009], [-103.0008, 37.0009], [-103.3787, 37.0009], [-103.7566, 37.0009], [-104.1345, 37.0009], [-104.5123, 37.0009], [-104.8901, 37.0009], [-105.2681, 37.0009], [-105.6459, 37.0009], [-106.0238, 37.0009], [-106.4016, 37.0009], [-106.7795, 37.0009], [-107.1574, 37.0009], [-107.5352, 37.0009], [-107.9131, 37.0009], [-108.291, 37.0009], [-108.6687, 37.0009], [-109.0467, 37.0009], [-109.0467, 37.5008], [-109.0465, 38.0009], [-109.0465, 38.5008], [-109.0465, 39.0008], [-109.0465, 39.2509], [-109.0465, 39.7509], [-109.0465, 40.0008], [-109.0465, 40.5009], [-109.0464, 41.0009], [-108.7324, 41.0009], [-108.1044, 41.0009], [-107.7902, 41.0009], [-107.1622, 41.0009], [-106.534, 41.0009], [-105.906, 41.0009], [-105.5919, 41.0009], [-104.9638, 41.0009], [-104.6497, 41.0009], [-104.0217, 41.0009], [-103.7721, 41.0009], [-103.273, 41.0007], [-103.0233, 41.0007], [-102.5243, 41.0007], [-102.025, 41.0006], [-102.0248, 40.6258], [-102.0248, 40.376], [-102.0245, 40.0011]]] }, \"properties\": { \"name\": \"Colorado\", \"id\": \"US-CO\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-CO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.8009, 42.0119], [-71.7958, 41.5199], [-71.8046, 41.4168], [-71.8298, 41.3928], [-71.8423, 41.3354], [-71.9299, 41.3411], [-72.0739, 41.3261], [-72.2653, 41.2917], [-72.371, 41.3121], [-72.4794, 41.2758], [-72.8471, 41.2659], [-72.9247, 41.2853], [-73.0238, 41.2164], [-73.1823, 41.1758], [-73.5829, 41.0218], [-73.6305, 40.9918], [-73.7231, 41.1045], [-73.4841, 41.2189], [-73.5447, 41.296], [-73.5126, 41.6758], [-73.4806, 42.0556], [-72.8078, 42.0341], [-72.8066, 42.008], [-72.7634, 42.0112], [-72.7576, 42.0341], [-72.1602, 42.027], [-71.8017, 42.0227], [-71.8009, 42.0119]]] }, \"properties\": { \"name\": \"Connecticut\", \"id\": \"US-CT\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-CT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-77.0303, 38.8893], [-77.0531, 38.9154], [-77.1221, 38.9435], [-77.0421, 39.0118], [-76.9312, 38.8882], [-77.0198, 38.8065], [-77.0303, 38.8893]]] }, \"properties\": { \"name\": \"District of Columbia\", \"id\": \"US-DC\", \"CNTRY\": \"United States of America\", \"TYPE\": \"Federal District\" }, \"id\": \"US-DC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-75.4211, 39.8154], [-75.4644, 39.7809], [-75.5021, 39.7174], [-75.5877, 39.6407], [-75.5672, 39.553], [-75.5738, 39.477], [-75.5198, 39.4028], [-75.4127, 39.2813], [-75.3921, 39.0927], [-75.3104, 38.9667], [-75.1851, 38.8194], [-75.0887, 38.7776], [-75.084, 38.7228], [-75.1284, 38.6325], [-75.1871, 38.5911], [-75.1109, 38.5994], [-75.0729, 38.5787], [-75.0359, 38.5033], [-75.0377, 38.4556], [-75.3662, 38.4549], [-75.7071, 38.455], [-75.7362, 38.9303], [-75.7654, 39.4056], [-75.7847, 39.7223], [-75.7092, 39.803], [-75.6768, 39.8272], [-75.6346, 39.8394], [-75.5105, 39.8434], [-75.4211, 39.8154]]] }, \"properties\": { \"name\": \"Delaware\", \"id\": \"US-DE\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-DE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-81.0442, 24.7167], [-81.09, 24.693], [-81.1373, 24.7106], [-81.0853, 24.7342], [-80.9305, 24.7595], [-80.9889, 24.7278], [-81.0442, 24.7167]]], [[[-81.5668, 24.5999], [-81.5792, 24.6294], [-81.5622, 24.689], [-81.5317, 24.6424], [-81.5323, 24.6142], [-81.5668, 24.5999]]], [[[-81.3347, 24.6505], [-81.3648, 24.6299], [-81.379, 24.6663], [-81.4217, 24.7326], [-81.4202, 24.7501], [-81.3223, 24.6851], [-81.3347, 24.6505]]], [[[-81.504, 30.7313], [-81.4572, 30.6407], [-81.3858, 30.2699], [-81.3371, 30.1412], [-81.2495, 29.7938], [-81.1045, 29.4569], [-80.8999, 29.0498], [-80.5643, 28.5563], [-80.5241, 28.4861], [-80.5678, 28.4265], [-80.5811, 28.3646], [-80.585, 28.2715], [-80.5729, 28.1809], [-80.5331, 28.0701], [-80.4569, 27.9007], [-80.4995, 27.9345], [-80.6101, 28.1776], [-80.6229, 28.3203], [-80.6069, 28.5229], [-80.6328, 28.5181], [-80.6539, 28.4521], [-80.6656, 28.3749], [-80.6936, 28.3449], [-80.7317, 28.4629], [-80.7291, 28.5163], [-80.6885, 28.5785], [-80.7003, 28.601], [-80.766, 28.6328], [-80.7798, 28.683], [-80.771, 28.7324], [-80.8087, 28.759], [-80.8381, 28.7576], [-80.8185, 28.6357], [-80.7872, 28.5607], [-80.7487, 28.3809], [-80.6864, 28.2722], [-80.6501, 28.1809], [-80.2261, 27.207], [-80.1257, 27.0829], [-80.0886, 26.9939], [-80.05, 26.8077], [-80.0413, 26.5686], [-80.1107, 26.1316], [-80.1264, 25.8335], [-80.1429, 25.8741], [-80.1589, 25.8783], [-80.219, 25.7417], [-80.3008, 25.6186], [-80.3277, 25.427], [-80.3669, 25.3312], [-80.4846, 25.2299], [-80.5577, 25.2325], [-80.7366, 25.1564], [-80.8622, 25.1761], [-81.012, 25.1333], [-81.1104, 25.138], [-81.1675, 25.2285], [-81.1587, 25.2691], [-81.1359, 25.3097], [-81.0977, 25.3191], [-80.9653, 25.2242], [-80.9404, 25.2641], [-80.9804, 25.3116], [-81.0568, 25.3382], [-81.1133, 25.3673], [-81.2272, 25.5834], [-81.3452, 25.7319], [-81.3649, 25.831], [-81.5683, 25.8916], [-81.7155, 25.9832], [-81.8114, 26.1461], [-81.8665, 26.435], [-81.9315, 26.4674], [-81.9589, 26.4899], [-81.8954, 26.5971], [-81.8287, 26.6871], [-81.8816, 26.6647], [-81.9205, 26.6314], [-81.9702, 26.5521], [-82.0064, 26.5398], [-82.0396, 26.5521], [-82.0778, 26.7043], [-82.067, 26.8915], [-82.0132, 26.9616], [-82.0956, 26.9634], [-82.1811, 26.9368], [-82.1686, 26.8744], [-82.1807, 26.8401], [-82.2429, 26.8489], [-82.2901, 26.8708], [-82.354, 26.9357], [-82.4413, 27.0596], [-82.6204, 27.4011], [-82.6554, 27.4493], [-82.7146, 27.4996], [-82.6866, 27.5153], [-82.6359, 27.5246], [-82.5209, 27.6783], [-82.4306, 27.7711], [-82.4006, 27.8353], [-82.4058, 27.8629], [-82.4457, 27.9028], [-82.4981, 27.868], [-82.5206, 27.8778], [-82.5797, 27.9585], [-82.636, 27.9812], [-82.6751, 27.9637], [-82.6338, 27.8977], [-82.5965, 27.8733], [-82.6109, 27.7772], [-82.626, 27.7459], [-82.6609, 27.7185], [-82.7153, 27.7332], [-82.7429, 27.7094], [-82.7754, 27.7344], [-82.8076, 27.7766], [-82.8435, 27.846], [-82.7485, 28.2368], [-82.6607, 28.4858], [-82.6506, 28.7699], [-82.644, 28.812], [-82.6515, 28.8875], [-82.7693, 29.0515], [-83.2905, 29.4519], [-83.6944, 29.926], [-84.0443, 30.1037], [-84.3098, 30.0648], [-84.3557, 30.029], [-84.3754, 29.9822], [-84.3587, 29.9295], [-84.3828, 29.9074], [-84.454, 29.9101], [-84.55, 29.8979], [-84.8005, 29.7731], [-84.889, 29.7777], [-85.0292, 29.7212], [-85.186, 29.7079], [-85.3188, 29.6802], [-85.3764, 29.6952], [-85.4139, 29.7675], [-85.3834, 29.7851], [-85.3364, 29.7401], [-85.3149, 29.7581], [-85.3069, 29.7978], [-85.3537, 29.8757], [-85.5042, 29.9758], [-85.6758, 30.1218], [-85.6235, 30.1172], [-85.6104, 30.1484], [-85.6634, 30.1894], [-85.6409, 30.2369], [-85.6035, 30.2868], [-85.6759, 30.2793], [-85.7408, 30.2444], [-85.7557, 30.167], [-85.7907, 30.172], [-85.8557, 30.2144], [-86.1752, 30.3325], [-86.4545, 30.3992], [-86.2402, 30.4291], [-86.1239, 30.4058], [-86.1377, 30.4415], [-86.1657, 30.4642], [-86.2574, 30.493], [-86.3741, 30.4821], [-86.4479, 30.4956], [-86.5233, 30.4671], [-86.6061, 30.4247], [-86.6796, 30.4028], [-86.9676, 30.3724], [-87.2011, 30.3393], [-87.1637, 30.3741], [-87.1238, 30.3966], [-86.9858, 30.4308], [-86.9651, 30.5019], [-86.9976, 30.5704], [-87.034, 30.5539], [-87.072, 30.5004], [-87.1188, 30.539], [-87.1705, 30.5388], [-87.1847, 30.4537], [-87.251, 30.3966], [-87.2811, 30.3393], [-87.4758, 30.2942], [-87.5007, 30.3093], [-87.4437, 30.3639], [-87.4482, 30.3942], [-87.4896, 30.3777], [-87.4802, 30.4117], [-87.4448, 30.4426], [-87.4294, 30.4778], [-87.4338, 30.546], [-87.4083, 30.6415], [-87.4216, 30.6716], [-87.5663, 30.7957], [-87.6011, 30.8605], [-87.6074, 30.9294], [-87.5937, 31.0008], [-87.2702, 31.0008], [-86.6236, 31.0009], [-86.3002, 31.0009], [-85.9769, 31.0009], [-85.3299, 31.0011], [-85.0073, 31.0016], [-84.8869, 30.7593], [-84.8839, 30.7209], [-84.4716, 30.6965], [-84.1528, 30.6777], [-83.5151, 30.6404], [-82.8775, 30.603], [-82.2399, 30.5657], [-82.2389, 30.5327], [-82.2127, 30.4808], [-82.2063, 30.4216], [-82.1942, 30.3935], [-82.1626, 30.3757], [-82.1122, 30.3714], [-82.0618, 30.4046], [-82.0298, 30.4777], [-82.0219, 30.5598], [-82.0411, 30.6532], [-82.0382, 30.7319], [-82.013, 30.7781], [-81.9356, 30.8195], [-81.8805, 30.8064], [-81.6733, 30.7403], [-81.504, 30.7313]]], [[[-84.9079, 29.6426], [-85.0083, 29.6065], [-85.0006, 29.6271], [-84.8769, 29.6787], [-84.8122, 29.7176], [-84.7372, 29.7324], [-84.9079, 29.6426]]], [[[-80.1868, 27.2785], [-80.1704, 27.2047], [-80.2624, 27.3755], [-80.3761, 27.6435], [-80.4369, 27.8505], [-80.3957, 27.7946], [-80.3554, 27.6786], [-80.1868, 27.2785]]], [[[-82.0837, 26.5524], [-82.0852, 26.4936], [-82.1357, 26.592], [-82.1691, 26.7006], [-82.1211, 26.6655], [-82.0837, 26.5524]]], [[[-82.0372, 26.4535], [-82.0729, 26.4275], [-82.145, 26.4467], [-82.1844, 26.481], [-82.2014, 26.548], [-82.1387, 26.477], [-82.1161, 26.4609], [-82.0372, 26.4535]]], [[[-80.3817, 25.1422], [-80.5806, 24.9542], [-80.5586, 25.0013], [-80.481, 25.1019], [-80.4559, 25.1494], [-80.4037, 25.1794], [-80.3549, 25.2337], [-80.3513, 25.2969], [-80.2805, 25.3412], [-80.2571, 25.3475], [-80.3817, 25.1422]]], [[[-80.8295, 24.8037], [-80.8389, 24.8179], [-80.7994, 24.8463], [-80.7868, 24.8211], [-80.8295, 24.8037]]]] }, \"properties\": { \"name\": \"Florida\", \"id\": \"US-FL\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-FL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-81.4189, 30.9715], [-81.4635, 30.7278], [-81.4827, 30.814], [-81.4846, 30.8978], [-81.4509, 30.9475], [-81.4189, 30.9715]]], [[[-80.8724, 32.0295], [-80.9234, 31.9449], [-81.0456, 31.892], [-81.0829, 31.8941], [-81.1133, 31.8787], [-81.0955, 31.8409], [-81.065, 31.8135], [-81.0661, 31.788], [-81.0985, 31.7533], [-81.1621, 31.7437], [-81.1979, 31.7042], [-81.1867, 31.6669], [-81.1655, 31.6461], [-81.1699, 31.6103], [-81.2425, 31.5744], [-81.2593, 31.5389], [-81.2234, 31.5284], [-81.1754, 31.5313], [-81.2189, 31.4721], [-81.2578, 31.436], [-81.295, 31.3712], [-81.381, 31.3533], [-81.3777, 31.3322], [-81.3291, 31.3137], [-81.2885, 31.2639], [-81.3648, 31.1719], [-81.4126, 31.1795], [-81.4418, 31.1998], [-81.4604, 31.1271], [-81.4532, 31.0883], [-81.4713, 31.009], [-81.5007, 30.9137], [-81.5204, 30.8746], [-81.5162, 30.8018], [-81.504, 30.7313], [-81.6733, 30.7403], [-81.8805, 30.8064], [-81.9356, 30.8195], [-82.013, 30.7781], [-82.0382, 30.7319], [-82.0411, 30.6532], [-82.0219, 30.5598], [-82.0298, 30.4777], [-82.0618, 30.4046], [-82.1122, 30.3714], [-82.1626, 30.3757], [-82.1942, 30.3935], [-82.2063, 30.4216], [-82.2127, 30.4808], [-82.2389, 30.5327], [-82.2399, 30.5657], [-82.8775, 30.603], [-83.5151, 30.6404], [-84.1528, 30.6777], [-84.4716, 30.6965], [-84.8839, 30.7209], [-84.8869, 30.7593], [-85.0073, 31.0016], [-85.0675, 31.1176], [-85.0926, 31.2957], [-85.0549, 31.5726], [-85.0672, 31.6354], [-85.1248, 31.7768], [-85.1241, 31.8804], [-85.0645, 32.0506], [-85.0346, 32.1474], [-84.9929, 32.2018], [-84.9297, 32.2466], [-84.9216, 32.2859], [-84.9685, 32.3198], [-84.986, 32.3609], [-84.9738, 32.4093], [-85.0151, 32.5261], [-85.1565, 32.8042], [-85.1764, 32.8982], [-85.2009, 32.9562], [-85.3066, 33.4674], [-85.3859, 33.8507], [-85.4387, 34.1063], [-85.5179, 34.4897], [-85.6235, 35.0009], [-84.9741, 34.9945], [-84.3247, 34.988], [-83.7197, 34.9948], [-83.1149, 35.0015], [-83.1704, 34.9329], [-83.3167, 34.8057], [-83.3557, 34.7083], [-83.1664, 34.5996], [-83.0528, 34.5109], [-82.9757, 34.4763], [-82.8967, 34.4657], [-82.8478, 34.4369], [-82.8187, 34.3661], [-82.5894, 34.0176], [-82.3519, 33.8377], [-82.2566, 33.7493], [-82.2084, 33.6636], [-82.0057, 33.5229], [-81.9363, 33.4473], [-81.9329, 33.3899], [-81.9087, 33.3493], [-81.864, 33.3254], [-81.8213, 33.274], [-81.7803, 33.1953], [-81.6994, 33.1267], [-81.5783, 33.0686], [-81.4897, 32.9356], [-81.4339, 32.7281], [-81.377, 32.6075], [-81.2903, 32.5573], [-81.1714, 32.3801], [-81.133, 32.2747], [-81.1351, 32.1818], [-81.0748, 32.1097], [-80.8724, 32.0295]]]] }, \"properties\": { \"name\": \"Georgia\", \"id\": \"US-GA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-GA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-156.4868, 20.9326], [-156.4608, 20.9147], [-156.3544, 20.9415], [-156.2775, 20.9514], [-156.1484, 20.8855], [-156.1035, 20.8403], [-156.0187, 20.792], [-155.9899, 20.7572], [-156.0136, 20.7148], [-156.1072, 20.6448], [-156.2348, 20.6286], [-156.31, 20.5988], [-156.4088, 20.6051], [-156.4383, 20.6179], [-156.4489, 20.7062], [-156.4801, 20.8012], [-156.5438, 20.79], [-156.6155, 20.8218], [-156.6897, 20.9014], [-156.6978, 20.949], [-156.6568, 21.0244], [-156.5855, 21.0343], [-156.5323, 20.9928], [-156.4868, 20.9326]]], [[[-157.2136, 21.2155], [-157.0023, 21.1879], [-156.9524, 21.1997], [-156.9172, 21.1773], [-156.7423, 21.1635], [-156.7122, 21.1551], [-156.7479, 21.1036], [-156.8599, 21.0563], [-157.0209, 21.0978], [-157.2903, 21.1126], [-157.2795, 21.1524], [-157.2539, 21.1806], [-157.2499, 21.2297], [-157.2136, 21.2155]]], [[[-156.8496, 20.7727], [-156.9089, 20.7444], [-156.9734, 20.7575], [-156.9885, 20.8258], [-157.0506, 20.9126], [-156.9418, 20.9301], [-156.8805, 20.9047], [-156.8482, 20.8779], [-156.8094, 20.8311], [-156.8496, 20.7727]]], [[[-155.5813, 19.012], [-155.6256, 18.9639], [-155.6808, 18.9676], [-155.8813, 19.0704], [-155.9056, 19.1258], [-155.8907, 19.3825], [-155.9659, 19.5908], [-156.0487, 19.7499], [-155.9884, 19.8316], [-155.9089, 19.8947], [-155.8203, 20.0143], [-155.8928, 20.1674], [-155.8743, 20.2597], [-155.8316, 20.2758], [-155.6221, 20.1633], [-155.1988, 19.9944], [-155.0861, 19.8756], [-155.0659, 19.7481], [-154.989, 19.7319], [-154.9525, 19.6446], [-154.8413, 19.5681], [-154.8042, 19.5245], [-154.8503, 19.4541], [-155.0535, 19.3192], [-155.3097, 19.2601], [-155.5352, 19.109], [-155.5813, 19.012]]], [[[-160.1801, 21.841], [-160.2003, 21.7969], [-160.2347, 21.8036], [-160.2435, 21.8431], [-160.2209, 21.8972], [-160.1639, 21.944], [-160.1006, 22.0153], [-160.0488, 22.0046], [-160.0767, 21.9581], [-160.08, 21.9075], [-160.1534, 21.8789], [-160.1801, 21.841]]], [[[-157.7993, 21.4567], [-157.765, 21.4509], [-157.7209, 21.4578], [-157.7055, 21.3781], [-157.6542, 21.3339], [-157.6355, 21.3076], [-157.6909, 21.2798], [-157.7988, 21.2687], [-157.8494, 21.2909], [-157.9018, 21.3405], [-157.9585, 21.3269], [-157.9785, 21.3785], [-158.0173, 21.3677], [-157.981, 21.3161], [-158.0791, 21.3121], [-158.1104, 21.3186], [-158.1379, 21.3771], [-158.2391, 21.4893], [-158.2387, 21.533], [-158.2732, 21.5851], [-158.1231, 21.6002], [-158.0204, 21.6918], [-157.9625, 21.7014], [-157.8515, 21.5533], [-157.8543, 21.5119], [-157.8296, 21.4715], [-157.7993, 21.4567]]], [[[-159.3728, 21.9323], [-159.4607, 21.8761], [-159.5119, 21.9004], [-159.6089, 21.9094], [-159.6464, 21.9518], [-159.748, 21.9898], [-159.7892, 22.0419], [-159.7267, 22.1402], [-159.5792, 22.2232], [-159.3521, 22.2196], [-159.3048, 22.1541], [-159.3007, 22.1052], [-159.3302, 22.0507], [-159.3437, 21.9736], [-159.3728, 21.9323]]]] }, \"properties\": { \"name\": \"Hawaii\", \"id\": \"US-HI\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-HI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-90.6506, 42.5129], [-90.5897, 42.4448], [-90.4848, 42.3833], [-90.4251, 42.3256], [-90.4105, 42.272], [-90.3466, 42.2148], [-90.2332, 42.1541], [-90.1675, 42.1003], [-90.1495, 42.0537], [-90.1524, 41.9816], [-90.1767, 41.8837], [-90.2177, 41.813], [-90.276, 41.77], [-90.3193, 41.7096], [-90.3475, 41.632], [-90.4367, 41.5603], [-90.5867, 41.4948], [-90.7541, 41.4498], [-90.9387, 41.4255], [-91.0482, 41.369], [-91.0821, 41.2803], [-91.0665, 41.2059], [-91.0013, 41.1459], [-90.9638, 41.0825], [-90.954, 41.0157], [-91.0001, 40.9047], [-91.1021, 40.7498], [-91.2151, 40.6496], [-91.3391, 40.604], [-91.3942, 40.5367], [-91.3806, 40.4476], [-91.3908, 40.3971], [-91.4419, 40.3794], [-91.5299, 40.4322], [-91.5454, 40.4692], [-91.6169, 40.5069], [-91.6274, 40.5308], [-91.682, 40.5519], [-91.7315, 40.6246], [-92.2361, 40.6217], [-92.7406, 40.6188], [-93.2451, 40.616], [-93.7495, 40.6131], [-94.2542, 40.6102], [-94.5063, 40.6087], [-95.0109, 40.6058], [-95.5154, 40.6029], [-95.765, 40.6018], [-95.8261, 40.6762], [-95.859, 40.7451], [-95.8382, 40.7778], [-95.8341, 40.8895], [-95.8466, 41.0803], [-95.8708, 41.1879], [-95.9069, 41.212], [-95.9111, 41.2452], [-95.8836, 41.2876], [-95.8919, 41.3161], [-95.936, 41.3309], [-95.9497, 41.3674], [-95.9329, 41.4254], [-95.9435, 41.4609], [-95.9816, 41.4738], [-95.9909, 41.5204], [-96.0114, 41.538], [-96.0586, 41.5458], [-96.0777, 41.6113], [-96.0688, 41.7343], [-96.0867, 41.8214], [-96.1312, 41.8724], [-96.1537, 41.9204], [-96.1543, 41.9652], [-96.2013, 42.0361], [-96.2954, 42.1329], [-96.3561, 42.2602], [-96.3837, 42.4177], [-96.451, 42.5059], [-96.4809, 42.5113], [-96.5064, 42.5935], [-96.5388, 42.6587], [-96.6218, 42.7296], [-96.6161, 42.7914], [-96.5626, 42.8586], [-96.5132, 42.9691], [-96.5021, 43.0433], [-96.4627, 43.0992], [-96.4681, 43.1703], [-96.4902, 43.2055], [-96.5555, 43.2317], [-96.5699, 43.2834], [-96.5426, 43.309], [-96.5416, 43.3735], [-96.5813, 43.4349], [-96.5985, 43.4976], [-96.4536, 43.5012], [-95.8032, 43.5013], [-95.478, 43.5013], [-94.8275, 43.5014], [-94.5023, 43.5014], [-93.852, 43.5016], [-93.5267, 43.5016], [-92.8762, 43.5017], [-92.2258, 43.5018], [-91.5753, 43.502], [-91.2453, 43.5024], [-91.2383, 43.4403], [-91.2187, 43.3953], [-91.1784, 43.359], [-91.1172, 43.3311], [-91.1069, 43.2781], [-91.1475, 43.1995], [-91.1614, 43.1023], [-91.1482, 42.9863], [-91.1176, 42.8816], [-91.0695, 42.7885], [-90.9599, 42.7204], [-90.7887, 42.6769], [-90.6879, 42.6104], [-90.6506, 42.5129]]] }, \"properties\": { \"name\": \"Iowa\", \"id\": \"US-IA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-IA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-111.0514, 44.4989], [-111.0513, 44.0304], [-111.051, 43.7182], [-111.051, 43.406], [-111.0508, 43.0938], [-111.0506, 42.7815], [-111.0506, 42.4693], [-111.0503, 42.0009], [-111.6114, 42.0009], [-111.9855, 42.0009], [-112.3594, 42.001], [-112.7333, 42.001], [-113.1075, 42.001], [-113.4815, 42.001], [-114.0426, 42.001], [-114.4143, 42.001], [-114.7861, 42.001], [-115.1578, 42.0009], [-115.5297, 42.0009], [-115.9014, 42.0008], [-116.2731, 42.0008], [-116.6449, 42.0006], [-117.0166, 42.0005], [-117.0172, 42.2237], [-117.018, 42.6702], [-117.019, 43.1165], [-117.0198, 43.5629], [-117.0205, 43.8132], [-116.9577, 43.9642], [-116.944, 44.0377], [-116.9607, 44.0791], [-116.9497, 44.119], [-116.9113, 44.1574], [-116.9124, 44.1995], [-116.9531, 44.2453], [-117.029, 44.2756], [-117.1398, 44.2903], [-117.1974, 44.3438], [-117.2017, 44.4362], [-117.1189, 44.5783], [-116.9489, 44.7701], [-116.8559, 44.9057], [-116.8396, 44.9851], [-116.7373, 45.1688], [-116.5492, 45.4567], [-116.4771, 45.6411], [-116.5209, 45.7219], [-116.6168, 45.7992], [-116.7647, 45.873], [-116.8692, 45.9585], [-116.8965, 46.0021], [-116.9302, 46.056], [-116.9478, 46.1243], [-116.9222, 46.1637], [-116.943, 46.2321], [-117.0105, 46.3297], [-117.039, 46.3965], [-117.025, 46.4291], [-117.0266, 46.7497], [-117.0283, 47.0703], [-117.0301, 47.3909], [-117.0317, 47.7115], [-117.034, 48.1925], [-117.0357, 48.513], [-117.039, 48.993], [-116.717, 48.993], [-116.0485, 48.993], [-116.0487, 48.4993], [-116.0491, 48.0047], [-115.9415, 47.904], [-115.8622, 47.8425], [-115.8113, 47.7759], [-115.7337, 47.7064], [-115.6909, 47.6066], [-115.7108, 47.5526], [-115.6697, 47.4979], [-115.7024, 47.4377], [-115.5933, 47.3849], [-115.4859, 47.3117], [-115.3495, 47.2612], [-115.3067, 47.2312], [-115.1267, 47.0846], [-115.0336, 46.9909], [-114.9357, 46.9229], [-114.887, 46.8449], [-114.7861, 46.7767], [-114.7537, 46.7345], [-114.678, 46.7501], [-114.6307, 46.7186], [-114.624, 46.6776], [-114.6015, 46.6603], [-114.5187, 46.6477], [-114.3809, 46.6676], [-114.3368, 46.6592], [-114.332, 46.6014], [-114.3459, 46.5506], [-114.387, 46.4999], [-114.3802, 46.453], [-114.4128, 46.3436], [-114.4442, 46.2708], [-114.4467, 46.1993], [-114.4853, 46.1582], [-114.4635, 46.1098], [-114.4784, 46.0356], [-114.416, 45.9821], [-114.3968, 45.8909], [-114.4051, 45.8742], [-114.4926, 45.8387], [-114.5225, 45.8151], [-114.5338, 45.7819], [-114.4958, 45.6859], [-114.5327, 45.633], [-114.5292, 45.5757], [-114.4485, 45.5513], [-114.3506, 45.4971], [-114.2976, 45.4875], [-114.2562, 45.5056], [-114.2103, 45.5425], [-114.1166, 45.5791], [-114.0064, 45.6585], [-113.992, 45.6931], [-113.9426, 45.6815], [-113.873, 45.6335], [-113.8023, 45.601], [-113.7996, 45.5402], [-113.7661, 45.5026], [-113.7561, 45.4409], [-113.722, 45.3793], [-113.697, 45.305], [-113.6065, 45.2092], [-113.5574, 45.1405], [-113.5035, 45.1093], [-113.4711, 45.0729], [-113.4381, 44.994], [-113.4693, 44.93], [-113.4321, 44.8742], [-113.3389, 44.8081], [-113.2342, 44.8099], [-113.1872, 44.7986], [-113.1407, 44.7654], [-113.0933, 44.7154], [-113.0627, 44.6651], [-113.0542, 44.6051], [-113.0063, 44.5392], [-112.9998, 44.4803], [-112.9104, 44.4193], [-112.8539, 44.3983], [-112.8156, 44.406], [-112.7871, 44.4631], [-112.7159, 44.498], [-112.6482, 44.4971], [-112.3929, 44.468], [-112.3639, 44.4795], [-112.32, 44.5331], [-112.2851, 44.554], [-112.2313, 44.5607], [-112.0742, 44.5477], [-111.8921, 44.5549], [-111.7972, 44.5399], [-111.6593, 44.5596], [-111.4998, 44.5448], [-111.4745, 44.5647], [-111.491, 44.6242], [-111.4592, 44.6711], [-111.4481, 44.7111], [-111.4156, 44.7336], [-111.3374, 44.7449], [-111.2652, 44.6875], [-111.1976, 44.5906], [-111.1172, 44.5253], [-111.0514, 44.4989]]] }, \"properties\": { \"name\": \"Idaho\", \"id\": \"US-ID\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-ID\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-87.8121, 42.4971], [-87.8126, 42.3411], [-87.7975, 42.2114], [-87.7669, 42.1539], [-87.7325, 42.1116], [-87.6946, 42.0844], [-87.651, 42.0002], [-87.6021, 41.8591], [-87.5565, 41.766], [-87.5212, 41.7277], [-87.524, 41.1612], [-87.5254, 40.8615], [-87.5269, 40.5617], [-87.5283, 40.2619], [-87.5298, 39.9622], [-87.5313, 39.6624], [-87.533, 39.3749], [-87.579, 39.344], [-87.611, 39.2914], [-87.6029, 39.2342], [-87.615, 39.1933], [-87.6472, 39.1688], [-87.6317, 39.1067], [-87.5683, 39.0071], [-87.5304, 38.9089], [-87.5177, 38.8118], [-87.5295, 38.7423], [-87.5837, 38.6794], [-87.6359, 38.5427], [-87.6806, 38.488], [-87.7352, 38.47], [-87.784, 38.4191], [-87.8271, 38.3356], [-87.873, 38.295], [-87.9214, 38.2975], [-87.9572, 38.2821], [-87.9805, 38.2492], [-87.9775, 38.2144], [-87.9484, 38.1781], [-87.958, 38.1443], [-88.006, 38.1133], [-87.9903, 38.0893], [-88.0261, 38.0596], [-88.0444, 38.0134], [-88.0425, 37.9366], [-88.0591, 37.8983], [-88.0953, 37.8756], [-88.042, 37.7888], [-88.0732, 37.7709], [-88.1289, 37.6995], [-88.1403, 37.6207], [-88.1075, 37.5343], [-88.1906, 37.4646], [-88.3893, 37.4113], [-88.4947, 37.3642], [-88.5067, 37.3236], [-88.4928, 37.2615], [-88.4533, 37.1782], [-88.4462, 37.1204], [-88.4717, 37.0883], [-88.6138, 37.1101], [-88.8726, 37.1856], [-89.0462, 37.183], [-89.1345, 37.1025], [-89.1651, 37.0416], [-89.1543, 36.9921], [-89.2249, 37.0527], [-89.2725, 37.08], [-89.2958, 37.0516], [-89.3009, 37.012], [-89.3519, 37.0354], [-89.414, 37.1023], [-89.4868, 37.2127], [-89.503, 37.3005], [-89.462, 37.3656], [-89.462, 37.4342], [-89.503, 37.5057], [-89.5234, 37.576], [-89.5234, 37.6445], [-89.6233, 37.7472], [-89.823, 37.8841], [-89.9698, 37.9685], [-90.0638, 38.0005], [-90.1737, 38.069], [-90.299, 38.1739], [-90.3658, 38.2542], [-90.374, 38.3097], [-90.3165, 38.4578], [-90.1508, 38.7806], [-90.1268, 38.8325], [-90.1498, 38.86], [-90.2201, 38.8977], [-90.3544, 38.9302], [-90.4781, 38.9481], [-90.5771, 38.9096], [-90.6635, 38.9875], [-90.7372, 39.1818], [-90.9195, 39.3869], [-91.2099, 39.6029], [-91.3787, 39.7493], [-91.4259, 39.8268], [-91.4669, 39.9428], [-91.5016, 40.0975], [-91.4998, 40.226], [-91.4419, 40.3794], [-91.3908, 40.3971], [-91.3806, 40.4476], [-91.3942, 40.5367], [-91.3391, 40.604], [-91.2151, 40.6496], [-91.1021, 40.7498], [-91.0001, 40.9047], [-90.954, 41.0157], [-90.9638, 41.0825], [-91.0013, 41.1459], [-91.0665, 41.2059], [-91.0821, 41.2803], [-91.0482, 41.369], [-90.9387, 41.4255], [-90.7541, 41.4498], [-90.5867, 41.4948], [-90.4367, 41.5603], [-90.3475, 41.632], [-90.3193, 41.7096], [-90.276, 41.77], [-90.2177, 41.813], [-90.1767, 41.8837], [-90.1524, 41.9816], [-90.1495, 42.0537], [-90.1675, 42.1003], [-90.2332, 42.1541], [-90.3466, 42.2148], [-90.4105, 42.272], [-90.4251, 42.3256], [-90.4848, 42.3833], [-90.5897, 42.4448], [-90.6506, 42.5129], [-90.1911, 42.5103], [-89.7408, 42.5078], [-89.2905, 42.5052], [-88.8403, 42.5028], [-88.39, 42.5003], [-87.8121, 42.4971]]] }, \"properties\": { \"name\": \"Illinois\", \"id\": \"US-IL\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-IL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-84.7961, 41.7014], [-84.7996, 41.376], [-84.803, 41.0506], [-84.8064, 40.7254], [-84.8098, 40.4], [-84.8133, 40.0745], [-84.8167, 39.7492], [-84.8201, 39.4238], [-84.8216, 39.092], [-84.8606, 39.0397], [-84.8355, 38.9961], [-84.8366, 38.9606], [-84.8639, 38.9332], [-84.8541, 38.9129], [-84.8075, 38.8995], [-84.7897, 38.8683], [-84.8007, 38.8194], [-84.9013, 38.7696], [-85.1699, 38.6903], [-85.2466, 38.727], [-85.3068, 38.7372], [-85.4054, 38.73], [-85.4447, 38.6831], [-85.4248, 38.5966], [-85.4586, 38.5302], [-85.5463, 38.484], [-85.6089, 38.423], [-85.6464, 38.3473], [-85.7062, 38.3013], [-85.7885, 38.2852], [-85.8549, 38.2151], [-85.9056, 38.0908], [-85.9611, 38.0139], [-86.0213, 37.9843], [-86.1035, 37.9918], [-86.2075, 38.0365], [-86.2676, 38.0825], [-86.2838, 38.1298], [-86.3427, 38.1787], [-86.3651, 38.1446], [-86.4297, 38.1397], [-86.4574, 38.1202], [-86.4483, 38.086], [-86.4626, 38.0618], [-86.5, 38.0475], [-86.5199, 38.0149], [-86.5222, 37.9637], [-86.5487, 37.9171], [-86.5993, 37.8747], [-86.6731, 37.889], [-86.7703, 37.9598], [-86.8691, 37.9761], [-86.9694, 37.938], [-87.0443, 37.8865], [-87.0936, 37.8213], [-87.1411, 37.8052], [-87.2093, 37.8549], [-87.3724, 37.9234], [-87.4573, 37.9381], [-87.5186, 37.9216], [-87.5995, 37.9465], [-87.6007, 37.8867], [-87.6154, 37.8488], [-87.6646, 37.8455], [-87.6794, 37.8864], [-87.7145, 37.8997], [-87.7696, 37.8853], [-87.8253, 37.8915], [-87.8744, 37.9157], [-87.9059, 37.9019], [-87.9021, 37.855], [-87.9125, 37.8177], [-87.9382, 37.7938], [-87.9745, 37.7879], [-88.0218, 37.8004], [-88.042, 37.7888], [-88.0953, 37.8756], [-88.0591, 37.8983], [-88.0425, 37.9366], [-88.0444, 38.0134], [-88.0261, 38.0596], [-87.9903, 38.0893], [-88.006, 38.1133], [-87.958, 38.1443], [-87.9484, 38.1781], [-87.9775, 38.2144], [-87.9805, 38.2492], [-87.9572, 38.2821], [-87.9214, 38.2975], [-87.873, 38.295], [-87.8271, 38.3356], [-87.784, 38.4191], [-87.7352, 38.47], [-87.6806, 38.488], [-87.6359, 38.5427], [-87.5837, 38.6794], [-87.5295, 38.7423], [-87.5177, 38.8118], [-87.5304, 38.9089], [-87.5683, 39.0071], [-87.6317, 39.1067], [-87.6472, 39.1688], [-87.615, 39.1933], [-87.6029, 39.2342], [-87.611, 39.2914], [-87.579, 39.344], [-87.533, 39.3749], [-87.5313, 39.6624], [-87.5298, 39.9622], [-87.5283, 40.2619], [-87.5269, 40.5617], [-87.5254, 40.8615], [-87.524, 41.1612], [-87.5212, 41.7277], [-87.477, 41.6954], [-87.425, 41.6785], [-87.4124, 41.6564], [-87.3562, 41.6431], [-87.2532, 41.6377], [-87.1588, 41.6464], [-87.0726, 41.6695], [-86.8627, 41.7607], [-86.3119, 41.7604], [-85.7058, 41.7601], [-85.4026, 41.76], [-84.7964, 41.7597], [-84.7961, 41.7014]]] }, \"properties\": { \"name\": \"Indiana\", \"id\": \"US-IN\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-IN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-94.6181, 37.0009], [-94.8493, 37.0009], [-95.5424, 37.0009], [-96.0045, 37.0009], [-96.4668, 37.0009], [-97.1601, 37.0009], [-97.6222, 37.0009], [-98.0844, 37.0009], [-98.5465, 37.0009], [-99.0086, 37.0009], [-99.4708, 37.0009], [-99.9329, 37.0009], [-100.6262, 37.0009], [-101.0885, 37.0009], [-101.5506, 37.0009], [-102.0128, 37.0009], [-102.015, 37.5633], [-102.0164, 37.9384], [-102.018, 38.3135], [-102.0194, 38.6884], [-102.0209, 39.0636], [-102.0231, 39.6261], [-102.0245, 40.0011], [-101.6053, 40.0011], [-101.1861, 40.0011], [-100.7669, 40.0011], [-100.3476, 40.0011], [-99.7189, 40.0011], [-99.2997, 40.0011], [-98.6709, 40.0011], [-98.2517, 40.0011], [-97.8325, 40.0011], [-97.4132, 40.0011], [-96.7845, 40.0011], [-96.3653, 40.0011], [-95.9461, 40.0011], [-95.3466, 40.0015], [-95.1162, 39.8721], [-95.0555, 39.8708], [-94.9841, 39.8911], [-94.9299, 39.8615], [-94.8933, 39.7818], [-94.8986, 39.7411], [-94.9458, 39.7395], [-95.0048, 39.6915], [-95.0754, 39.5974], [-95.058, 39.509], [-94.9525, 39.4264], [-94.8823, 39.3432], [-94.8472, 39.2591], [-94.7778, 39.194], [-94.6225, 39.1245], [-94.6245, 39.0861], [-94.623, 38.5647], [-94.6212, 38.0434], [-94.62, 37.6525], [-94.6189, 37.2615], [-94.6181, 37.0009]]] }, \"properties\": { \"name\": \"Kansas\", \"id\": \"US-KS\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-KS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-82.6129, 38.4482], [-82.5896, 38.4204], [-82.5784, 38.272], [-82.5853, 38.2428], [-82.6196, 38.182], [-82.6177, 38.1498], [-82.5887, 38.0998], [-82.4822, 37.9835], [-82.4719, 37.9384], [-82.4299, 37.8942], [-82.3939, 37.8283], [-82.2802, 37.6872], [-82.1035, 37.5706], [-81.9652, 37.5396], [-82.3431, 37.2969], [-82.5165, 37.2089], [-82.6816, 37.1381], [-82.6949, 37.1262], [-82.7319, 37.048], [-82.832, 36.9792], [-82.8945, 36.9064], [-83.0438, 36.8455], [-83.1502, 36.7624], [-83.417, 36.681], [-83.5663, 36.6526], [-83.6676, 36.605], [-83.7304, 36.5868], [-84.0775, 36.5966], [-84.4247, 36.6062], [-84.7719, 36.6161], [-85.1191, 36.6258], [-85.4661, 36.6356], [-85.8133, 36.6453], [-86.1605, 36.6552], [-86.5076, 36.6648], [-86.8405, 36.6596], [-87.5062, 36.6491], [-87.8392, 36.6439], [-87.8688, 36.6751], [-88.0964, 36.693], [-88.0568, 36.5903], [-88.0591, 36.4997], [-88.3883, 36.4997], [-88.7336, 36.4998], [-89.079, 36.5], [-89.4503, 36.5], [-89.3974, 36.5878], [-89.3305, 36.616], [-89.2562, 36.5944], [-89.203, 36.6256], [-89.1564, 36.7156], [-89.1295, 36.8111], [-89.1225, 36.9116], [-89.1543, 36.9921], [-89.1651, 37.0416], [-89.1345, 37.1025], [-89.0462, 37.183], [-88.8726, 37.1856], [-88.6138, 37.1101], [-88.4717, 37.0883], [-88.4462, 37.1204], [-88.4533, 37.1782], [-88.4928, 37.2615], [-88.5067, 37.3236], [-88.4947, 37.3642], [-88.3893, 37.4113], [-88.1906, 37.4646], [-88.1075, 37.5343], [-88.1403, 37.6207], [-88.1289, 37.6995], [-88.0732, 37.7709], [-88.042, 37.7888], [-88.0218, 37.8004], [-87.9745, 37.7879], [-87.9382, 37.7938], [-87.9125, 37.8177], [-87.9021, 37.855], [-87.9059, 37.9019], [-87.8744, 37.9157], [-87.8253, 37.8915], [-87.7696, 37.8853], [-87.7145, 37.8997], [-87.6794, 37.8864], [-87.6646, 37.8455], [-87.6154, 37.8488], [-87.6007, 37.8867], [-87.5995, 37.9465], [-87.5186, 37.9216], [-87.4573, 37.9381], [-87.3724, 37.9234], [-87.2093, 37.8549], [-87.1411, 37.8052], [-87.0936, 37.8213], [-87.0443, 37.8865], [-86.9694, 37.938], [-86.8691, 37.9761], [-86.7703, 37.9598], [-86.6731, 37.889], [-86.5993, 37.8747], [-86.5487, 37.9171], [-86.5222, 37.9637], [-86.5199, 38.0149], [-86.5, 38.0475], [-86.4626, 38.0618], [-86.4483, 38.086], [-86.4574, 38.1202], [-86.4297, 38.1397], [-86.3651, 38.1446], [-86.3427, 38.1787], [-86.2838, 38.1298], [-86.2676, 38.0825], [-86.2075, 38.0365], [-86.1035, 37.9918], [-86.0213, 37.9843], [-85.9611, 38.0139], [-85.9056, 38.0908], [-85.8549, 38.2151], [-85.7885, 38.2852], [-85.7062, 38.3013], [-85.6464, 38.3473], [-85.6089, 38.423], [-85.5463, 38.484], [-85.4586, 38.5302], [-85.4248, 38.5966], [-85.4447, 38.6831], [-85.4054, 38.73], [-85.3068, 38.7372], [-85.2466, 38.727], [-85.1699, 38.6903], [-84.9013, 38.7696], [-84.8007, 38.8194], [-84.7897, 38.8683], [-84.8075, 38.8995], [-84.8541, 38.9129], [-84.8639, 38.9332], [-84.8366, 38.9606], [-84.8355, 38.9961], [-84.8606, 39.0397], [-84.8216, 39.092], [-84.7658, 39.125], [-84.7069, 39.1289], [-84.6605, 39.0944], [-84.5946, 39.0858], [-84.5089, 39.1028], [-84.43, 39.0909], [-84.358, 39.0499], [-84.2904, 38.9747], [-84.2272, 38.8652], [-84.1133, 38.7984], [-83.9484, 38.7743], [-83.828, 38.7312], [-83.7524, 38.6694], [-83.6898, 38.6495], [-83.6163, 38.6828], [-83.5384, 38.6998], [-83.4606, 38.6795], [-83.357, 38.6274], [-83.2035, 38.6389], [-83.0001, 38.7141], [-82.8805, 38.7102], [-82.8446, 38.6277], [-82.7582, 38.5412], [-82.6129, 38.4482]]], [[[-89.4872, 36.5031], [-89.5573, 36.5011], [-89.5496, 36.553], [-89.5196, 36.5548], [-89.4872, 36.5031]]]] }, \"properties\": { \"name\": \"Kentucky\", \"id\": \"US-KY\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-KY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-91.7938, 29.5007], [-91.8309, 29.4865], [-91.9963, 29.5731], [-92.0066, 29.6104], [-91.9251, 29.644], [-91.8754, 29.6409], [-91.7677, 29.5847], [-91.762, 29.5391], [-91.7938, 29.5007]]], [[[-89.521, 30.1926], [-89.5884, 30.166], [-89.9543, 30.2688], [-90.0452, 30.3514], [-90.1259, 30.3691], [-90.2252, 30.3794], [-90.332, 30.2776], [-90.4131, 30.1403], [-90.285, 30.0651], [-90.1753, 30.0291], [-89.9942, 30.0593], [-89.8941, 30.1258], [-89.8122, 30.1238], [-89.7731, 30.1372], [-89.7373, 30.172], [-89.6675, 30.1445], [-89.6651, 30.117], [-89.7147, 30.0784], [-89.7772, 30.0457], [-89.8152, 30.0073], [-89.7438, 29.9299], [-89.6318, 29.9038], [-89.5895, 29.9151], [-89.5635, 30.002], [-89.4945, 30.0582], [-89.4007, 30.046], [-89.414, 30.0109], [-89.401, 29.9777], [-89.3578, 29.9211], [-89.3629, 29.8398], [-89.3545, 29.8202], [-89.4554, 29.7844], [-89.5307, 29.7722], [-89.5909, 29.7253], [-89.5592, 29.698], [-89.6206, 29.6741], [-89.6621, 29.6837], [-89.7209, 29.6193], [-89.6748, 29.5387], [-89.5803, 29.486], [-89.5137, 29.42], [-89.2456, 29.3331], [-89.1808, 29.3357], [-89.1169, 29.2482], [-89.0654, 29.2181], [-89.0158, 29.2028], [-89.0214, 29.1428], [-89.1095, 29.0986], [-89.1555, 29.0166], [-89.2362, 29.0811], [-89.3305, 28.9987], [-89.3762, 28.9813], [-89.3535, 29.0702], [-89.3893, 29.1051], [-89.4431, 29.1942], [-89.5218, 29.2493], [-89.5772, 29.2676], [-89.6202, 29.3024], [-89.6725, 29.3165], [-89.7169, 29.313], [-89.7923, 29.3331], [-89.7974, 29.3806], [-89.8184, 29.4161], [-89.8772, 29.458], [-90.1591, 29.5371], [-90.1608, 29.5044], [-90.1413, 29.4798], [-90.0523, 29.4314], [-90.0527, 29.3368], [-90.0737, 29.2968], [-90.0828, 29.2397], [-90.1013, 29.1817], [-90.1358, 29.1361], [-90.2129, 29.1049], [-90.2466, 29.131], [-90.3016, 29.2558], [-90.3792, 29.2951], [-90.5025, 29.2998], [-90.5863, 29.2715], [-90.6775, 29.1506], [-90.7511, 29.1309], [-91.0027, 29.1935], [-91.2901, 29.289], [-91.2827, 29.3208], [-91.2375, 29.3309], [-91.1508, 29.3179], [-91.1555, 29.3507], [-91.244, 29.4573], [-91.2602, 29.5055], [-91.2488, 29.5642], [-91.2778, 29.5629], [-91.331, 29.5136], [-91.5142, 29.5554], [-91.5648, 29.6053], [-91.6724, 29.7461], [-91.8243, 29.7506], [-91.8932, 29.8361], [-92.0173, 29.8003], [-92.0802, 29.7607], [-92.1355, 29.6995], [-92.1139, 29.6677], [-92.059, 29.6172], [-92.0841, 29.5928], [-92.2608, 29.5569], [-92.6712, 29.5971], [-92.7913, 29.6346], [-92.9525, 29.7142], [-93.1757, 29.7789], [-93.2832, 29.7893], [-93.3885, 29.7766], [-93.6948, 29.7698], [-93.766, 29.7527], [-93.8265, 29.7251], [-93.8657, 29.7556], [-93.8839, 29.81], [-93.8483, 29.8188], [-93.8088, 29.8507], [-93.7731, 29.9141], [-93.769, 29.9524], [-93.794, 29.9772], [-93.7269, 30.077], [-93.7106, 30.1128], [-93.7209, 30.283], [-93.7504, 30.3448], [-93.7467, 30.3803], [-93.7153, 30.4733], [-93.7202, 30.5583], [-93.6652, 30.6607], [-93.6248, 30.7143], [-93.5792, 30.8238], [-93.5687, 30.8947], [-93.5492, 30.9477], [-93.5626, 31.0049], [-93.5306, 31.0462], [-93.5514, 31.104], [-93.5577, 31.1804], [-93.5969, 31.2098], [-93.6659, 31.3226], [-93.6637, 31.3723], [-93.7361, 31.4777], [-93.7376, 31.5138], [-93.8069, 31.5689], [-93.8206, 31.604], [-93.8269, 31.7503], [-93.8457, 31.7929], [-93.905, 31.877], [-94.0434, 31.9992], [-94.0423, 32.5056], [-94.0413, 33.012], [-93.6819, 33.0124], [-93.3227, 33.0128], [-92.7837, 33.0135], [-92.4243, 33.0139], [-92.0649, 33.0143], [-91.7056, 33.0147], [-91.15, 33.0159], [-91.1442, 32.9669], [-91.0961, 32.9376], [-91.0933, 32.885], [-91.136, 32.8089], [-91.1356, 32.7558], [-91.0921, 32.7259], [-91.0943, 32.6943], [-91.1424, 32.6611], [-91.1496, 32.625], [-91.1161, 32.5862], [-91.1009, 32.5414], [-91.1038, 32.4905], [-91.0592, 32.4239], [-90.9901, 32.3811], [-90.9447, 32.3307], [-90.9377, 32.2774], [-90.9477, 32.2401], [-91.0887, 32.1042], [-91.0925, 32.0459], [-91.1566, 31.9707], [-91.2864, 31.884], [-91.3725, 31.7736], [-91.4146, 31.6399], [-91.4591, 31.5549], [-91.5058, 31.5187], [-91.529, 31.4488], [-91.529, 31.3451], [-91.5586, 31.2879], [-91.6182, 31.277], [-91.6307, 31.2176], [-91.5963, 31.1099], [-91.6111, 31.065], [-91.6527, 31.0296], [-91.6565, 31.0018], [-91.1769, 31.0012], [-90.6964, 31.0012], [-90.2159, 31.0011], [-89.7353, 31.0011], [-89.7649, 30.886], [-89.8354, 30.7308], [-89.8381, 30.6905], [-89.8198, 30.6399], [-89.82, 30.6112], [-89.794, 30.5689], [-89.7367, 30.5266], [-89.6858, 30.4627], [-89.6408, 30.3489], [-89.629, 30.2961], [-89.5917, 30.223], [-89.521, 30.1926]]], [[[-89.224, 30.0841], [-89.2205, 30.0376], [-89.2695, 30.0607], [-89.342, 30.0627], [-89.2877, 30.0941], [-89.2765, 30.1107], [-89.1847, 30.1687], [-89.2107, 30.1262], [-89.224, 30.0841]]], [[[-88.8275, 29.8077], [-88.8556, 29.7759], [-88.8281, 29.9284], [-88.8669, 30.0567], [-88.8259, 30.0003], [-88.8126, 29.9334], [-88.8275, 29.8077]]]] }, \"properties\": { \"name\": \"Louisiana\", \"id\": \"US-LA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-LA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-70.5099, 41.3763], [-70.7854, 41.3275], [-70.8292, 41.359], [-70.7605, 41.3736], [-70.6737, 41.4486], [-70.616, 41.4572], [-70.5254, 41.4148], [-70.5099, 41.3763]]], [[[-69.9779, 41.2656], [-70.0551, 41.2495], [-70.233, 41.2864], [-70.0866, 41.3176], [-70.0626, 41.3284], [-70.0412, 41.3974], [-69.9855, 41.2987], [-69.9779, 41.2656]]], [[[-70.8062, 42.8767], [-70.8291, 42.8254], [-70.7814, 42.7212], [-70.7357, 42.6692], [-70.6968, 42.6646], [-70.624, 42.6718], [-70.6042, 42.6498], [-70.613, 42.6233], [-70.6614, 42.6166], [-70.7518, 42.5704], [-70.8312, 42.5525], [-70.8709, 42.4966], [-70.9304, 42.432], [-71.0462, 42.3311], [-70.9967, 42.3], [-70.818, 42.265], [-70.7383, 42.2289], [-70.6177, 42.0405], [-70.6452, 42.0216], [-70.6562, 41.987], [-70.5488, 41.9386], [-70.5147, 41.8033], [-70.4267, 41.7572], [-70.2954, 41.729], [-70.135, 41.7698], [-70.0014, 41.8262], [-70.0061, 41.8724], [-70.09, 41.9798], [-70.1103, 42.0302], [-70.1726, 42.0627], [-70.1963, 42.0352], [-70.2365, 42.071], [-70.2036, 42.101], [-70.1598, 42.0972], [-70.1089, 42.0784], [-69.9779, 41.9613], [-69.9416, 41.8078], [-69.9338, 41.7105], [-69.9486, 41.6772], [-69.9868, 41.684], [-70.0596, 41.6774], [-70.4047, 41.6268], [-70.4814, 41.5825], [-70.657, 41.5343], [-70.6681, 41.5583], [-70.6554, 41.608], [-70.6665, 41.7101], [-70.7012, 41.7149], [-70.9742, 41.5485], [-71.0798, 41.5381], [-71.1685, 41.4894], [-71.1885, 41.5164], [-71.2043, 41.6411], [-71.1487, 41.7457], [-71.1784, 41.7441], [-71.2338, 41.7065], [-71.2679, 41.7508], [-71.3407, 41.7978], [-71.3377, 41.8915], [-71.3791, 41.9024], [-71.3871, 42.0169], [-71.8009, 42.0119], [-71.8017, 42.0227], [-72.1602, 42.027], [-72.7576, 42.0341], [-72.7634, 42.0112], [-72.8066, 42.008], [-72.8078, 42.0341], [-73.4806, 42.0556], [-73.5072, 42.08], [-73.3485, 42.5002], [-73.2533, 42.7522], [-72.8602, 42.7412], [-72.4669, 42.7303], [-71.8983, 42.7164], [-71.3296, 42.7024], [-71.2423, 42.7296], [-71.1393, 42.8081], [-71.0762, 42.8251], [-70.974, 42.8716], [-70.9234, 42.8815], [-70.8062, 42.8767]]]] }, \"properties\": { \"name\": \"Massachusetts\", \"id\": \"US-MA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-75.2258, 38.0403], [-75.2524, 38.0374], [-75.2261, 38.0723], [-75.1374, 38.24], [-75.1363, 38.1805], [-75.2258, 38.0403]]], [[[-75.7847, 39.7223], [-75.7654, 39.4056], [-75.7362, 38.9303], [-75.7071, 38.455], [-75.3662, 38.4549], [-75.0377, 38.4556], [-75.0512, 38.3831], [-75.0898, 38.4254], [-75.1342, 38.3843], [-75.1415, 38.2982], [-75.16, 38.255], [-75.2254, 38.2422], [-75.2918, 38.1292], [-75.3535, 38.0651], [-75.376, 38.025], [-75.62, 37.9993], [-75.6592, 37.954], [-75.7352, 37.9736], [-75.8508, 37.9716], [-75.829, 38.0327], [-75.7953, 38.0866], [-75.8556, 38.1404], [-75.928, 38.1693], [-75.885, 38.214], [-75.864, 38.2613], [-75.8888, 38.3555], [-75.9675, 38.2913], [-75.9857, 38.3319], [-76.0203, 38.2949], [-76.0513, 38.2795], [-76.1166, 38.3176], [-76.2116, 38.3613], [-76.2646, 38.4364], [-76.2948, 38.4947], [-76.2641, 38.6], [-76.1984, 38.6186], [-76.113, 38.6016], [-76.001, 38.6016], [-76.0169, 38.6251], [-76.0569, 38.6212], [-76.175, 38.7067], [-76.2129, 38.7584], [-76.2784, 38.7725], [-76.3081, 38.7228], [-76.3412, 38.7097], [-76.3003, 38.8183], [-76.247, 38.8227], [-76.1682, 38.8527], [-76.1911, 38.9155], [-76.2408, 38.9431], [-76.3306, 38.9085], [-76.3296, 38.9528], [-76.3128, 39.0093], [-76.245, 39.0092], [-76.1857, 38.9908], [-76.1352, 39.0821], [-76.1329, 39.123], [-76.2168, 39.0636], [-76.2357, 39.1917], [-76.1532, 39.3151], [-76.0745, 39.3688], [-75.976, 39.3672], [-75.8759, 39.376], [-75.9387, 39.3986], [-76.0032, 39.4108], [-75.9547, 39.4596], [-75.9135, 39.4684], [-75.8729, 39.5109], [-75.9704, 39.5046], [-75.959, 39.5851], [-76.0629, 39.5611], [-76.0851, 39.5269], [-76.0808, 39.4703], [-76.0972, 39.433], [-76.1414, 39.4032], [-76.2158, 39.3799], [-76.2231, 39.4204], [-76.2476, 39.4386], [-76.2568, 39.3521], [-76.2764, 39.3228], [-76.3309, 39.4039], [-76.359, 39.3247], [-76.4056, 39.3038], [-76.4027, 39.2528], [-76.4208, 39.225], [-76.5704, 39.2693], [-76.5739, 39.2543], [-76.4894, 39.1586], [-76.4277, 39.126], [-76.42, 39.0739], [-76.4731, 39.0307], [-76.5462, 39.068], [-76.4938, 38.9453], [-76.5196, 38.8982], [-76.5211, 38.7883], [-76.5368, 38.7426], [-76.5013, 38.5321], [-76.4164, 38.4202], [-76.3941, 38.3689], [-76.4388, 38.3615], [-76.5725, 38.4358], [-76.6469, 38.5386], [-76.6685, 38.5375], [-76.642, 38.4544], [-76.4088, 38.2683], [-76.3329, 38.1408], [-76.3412, 38.087], [-76.4019, 38.1251], [-76.4544, 38.1735], [-76.5936, 38.2282], [-76.7691, 38.2629], [-76.8681, 38.3903], [-76.8678, 38.3371], [-76.8896, 38.2921], [-76.9503, 38.347], [-76.9884, 38.3939], [-77.0013, 38.4452], [-77.0767, 38.4417], [-77.1559, 38.3972], [-77.2326, 38.4077], [-77.2416, 38.4948], [-77.2209, 38.5409], [-77.135, 38.6502], [-77.0539, 38.7058], [-77.0183, 38.7777], [-77.0303, 38.8893], [-77.0198, 38.8065], [-76.9312, 38.8882], [-77.0421, 39.0118], [-77.1221, 38.9435], [-77.1904, 38.969], [-77.3012, 39.0533], [-77.4809, 39.113], [-77.5064, 39.1426], [-77.5029, 39.1754], [-77.4789, 39.2209], [-77.5341, 39.2656], [-77.6688, 39.3096], [-77.7266, 39.3465], [-77.7623, 39.4293], [-77.7974, 39.4614], [-77.7796, 39.4883], [-77.7981, 39.5172], [-77.8531, 39.5483], [-77.8832, 39.6107], [-77.9558, 39.6088], [-78.0272, 39.6313], [-78.0977, 39.6779], [-78.1812, 39.6857], [-78.3253, 39.6392], [-78.4068, 39.6279], [-78.4427, 39.6015], [-78.4604, 39.5561], [-78.4956, 39.5334], [-78.575, 39.5328], [-78.6776, 39.5496], [-78.7416, 39.5778], [-78.7464, 39.6137], [-78.7961, 39.6126], [-78.8148, 39.5701], [-78.9714, 39.4537], [-79.0467, 39.4767], [-79.0752, 39.4761], [-79.2935, 39.3115], [-79.3598, 39.2853], [-79.488, 39.2109], [-79.4776, 39.7227], [-78.7851, 39.7227], [-78.0926, 39.7226], [-77.4003, 39.7226], [-76.708, 39.7225], [-76.0156, 39.7223], [-75.7847, 39.7223]]]] }, \"properties\": { \"name\": \"Maryland\", \"id\": \"US-MD\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-68.1872, 44.3325], [-68.2454, 44.3129], [-68.3092, 44.3216], [-68.3151, 44.2497], [-68.4118, 44.2944], [-68.4094, 44.3642], [-68.3471, 44.4304], [-68.2995, 44.4565], [-68.238, 44.4384], [-68.1909, 44.3643], [-68.1872, 44.3325]]], [[[-70.7331, 43.07], [-70.8128, 43.1637], [-70.829, 43.2391], [-70.9196, 43.3281], [-70.9557, 43.3894], [-70.9676, 43.4582], [-70.9624, 43.5321], [-71.0008, 44.0864], [-71.0314, 44.5297], [-71.0621, 44.9732], [-71.0846, 45.294], [-70.9998, 45.3372], [-70.9602, 45.3331], [-70.8979, 45.2625], [-70.865, 45.2707], [-70.8369, 45.3106], [-70.8377, 45.3662], [-70.7992, 45.4048], [-70.7109, 45.4095], [-70.6898, 45.4283], [-70.7073, 45.4989], [-70.7023, 45.5514], [-70.5964, 45.644], [-70.4666, 45.7068], [-70.421, 45.7383], [-70.4079, 45.8019], [-70.2962, 45.9061], [-70.2872, 45.9392], [-70.3064, 45.9799], [-70.3045, 46.0574], [-70.2483, 46.2509], [-70.1797, 46.3418], [-70.0673, 46.4411], [-70.0076, 46.7089], [-69.6297, 47.0813], [-69.2429, 47.4629], [-69.0502, 47.4267], [-69.0642, 47.3381], [-69.0486, 47.2737], [-69.003, 47.2364], [-68.9372, 47.2113], [-68.8286, 47.2033], [-68.6685, 47.2535], [-68.4805, 47.2857], [-68.3769, 47.3162], [-68.358, 47.3446], [-68.3109, 47.3544], [-68.2354, 47.3459], [-68.0968, 47.2749], [-67.8068, 47.0828], [-67.8003, 46.7799], [-67.7958, 46.4984], [-67.7846, 45.9528], [-67.767, 45.927], [-67.7824, 45.8742], [-67.7753, 45.8178], [-67.7999, 45.7698], [-67.8023, 45.7275], [-67.7846, 45.7017], [-67.7307, 45.6865], [-67.658, 45.6442], [-67.5958, 45.6208], [-67.5312, 45.6126], [-67.4867, 45.6185], [-67.4326, 45.6031], [-67.4138, 45.5657], [-67.4245, 45.5304], [-67.4878, 45.5011], [-67.4936, 45.4741], [-67.4279, 45.378], [-67.4726, 45.2759], [-67.4526, 45.2477], [-67.3998, 45.2101], [-67.3669, 45.1738], [-67.3153, 45.1538], [-67.2495, 45.2008], [-67.1249, 45.1694], [-67.1304, 45.1389], [-67.1023, 45.0878], [-67.0805, 44.9891], [-67.1139, 44.9444], [-67.1066, 44.885], [-67.0141, 44.8677], [-66.9871, 44.8277], [-67.1912, 44.6756], [-67.364, 44.6969], [-67.4578, 44.6565], [-67.556, 44.6448], [-67.599, 44.5767], [-67.6529, 44.5623], [-67.7267, 44.5665], [-67.7905, 44.5857], [-67.8392, 44.5763], [-67.907, 44.4536], [-67.9627, 44.4643], [-67.9848, 44.4201], [-68.0566, 44.3842], [-68.0938, 44.4388], [-68.1174, 44.4906], [-68.1983, 44.5152], [-68.2774, 44.5074], [-68.3167, 44.4739], [-68.3738, 44.4451], [-68.4168, 44.469], [-68.4506, 44.5076], [-68.4795, 44.4457], [-68.5213, 44.3802], [-68.5145, 44.3039], [-68.5324, 44.2586], [-68.5723, 44.2708], [-68.6121, 44.3105], [-68.7233, 44.3423], [-68.8119, 44.3394], [-68.7939, 44.3818], [-68.7102, 44.4426], [-68.7359, 44.4544], [-68.7949, 44.4544], [-68.7656, 44.5098], [-68.7627, 44.5708], [-68.8002, 44.5495], [-68.8473, 44.485], [-68.9615, 44.4339], [-68.9562, 44.3482], [-69.0635, 44.1724], [-69.0685, 44.0975], [-69.1373, 44.0379], [-69.2261, 43.9864], [-69.3446, 44.001], [-69.435, 43.9563], [-69.4809, 43.9051], [-69.5207, 43.8973], [-69.5567, 43.9827], [-69.5901, 43.8866], [-69.6239, 43.8806], [-69.6529, 43.9938], [-69.6991, 43.955], [-69.7298, 43.8521], [-69.8032, 43.8669], [-69.7916, 43.8053], [-69.8084, 43.7724], [-69.8725, 43.8196], [-69.9256, 43.7969], [-69.9744, 43.7879], [-69.9652, 43.8551], [-70.0623, 43.8346], [-70.1789, 43.7663], [-70.2692, 43.6719], [-70.2026, 43.6262], [-70.3596, 43.4802], [-70.5207, 43.3488], [-70.6423, 43.1344], [-70.6912, 43.1093], [-70.7331, 43.07]]], [[[-68.6232, 44.1961], [-68.6612, 44.1763], [-68.7017, 44.1827], [-68.703, 44.232], [-68.656, 44.2423], [-68.6232, 44.1961]]]] }, \"properties\": { \"name\": \"Maine\", \"id\": \"US-ME\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-ME\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-84.1207, 46.2459], [-84.185, 46.2795], [-84.1955, 46.3034], [-84.1688, 46.3245], [-84.1196, 46.285], [-84.1207, 46.2459]]], [[[-88.9552, 47.926], [-88.97, 47.8813], [-89.0816, 47.8505], [-89.1568, 47.8408], [-89.1993, 47.8722], [-89.1688, 47.9021], [-89.1927, 47.929], [-89.1466, 47.9526], [-88.7555, 48.1035], [-88.5883, 48.1585], [-88.4993, 48.1759], [-88.4849, 48.1674], [-88.5813, 48.1108], [-88.5931, 48.0719], [-88.6247, 48.042], [-88.911, 47.9362], [-88.9552, 47.926]]], [[[-88.2219, 47.2106], [-88.2368, 47.1589], [-88.3582, 47.0733], [-88.4023, 47.0193], [-88.4391, 47.0107], [-88.4687, 47.0476], [-88.4684, 47.0772], [-88.4092, 47.1313], [-88.4053, 47.1755], [-88.4539, 47.1519], [-88.4341, 47.1223], [-88.5737, 47.1433], [-88.6158, 47.1741], [-88.609, 47.2172], [-88.5619, 47.2722], [-88.3944, 47.3887], [-88.3203, 47.4211], [-88.1102, 47.4725], [-87.9942, 47.4842], [-87.8778, 47.4842], [-87.7935, 47.4673], [-87.741, 47.4336], [-87.7905, 47.4115], [-88.0207, 47.3924], [-87.9749, 47.355], [-88.0155, 47.3208], [-88.2219, 47.2106]]], [[[-84.1329, 46.3622], [-84.189, 46.36], [-84.235, 46.4446], [-84.2741, 46.4875], [-84.2156, 46.5361], [-84.1423, 46.5309], [-84.1374, 46.5026], [-84.1651, 46.4568], [-84.1636, 46.4101], [-84.1329, 46.3622]]], [[[-87.6059, 45.1085], [-87.6536, 45.1218], [-87.6942, 45.161], [-87.7189, 45.2012], [-87.721, 45.2427], [-87.6627, 45.3452], [-87.6643, 45.3714], [-87.6964, 45.3829], [-87.7685, 45.3644], [-87.8653, 45.3678], [-87.874, 45.4128], [-87.8152, 45.5059], [-87.8147, 45.5632], [-87.7946, 45.596], [-87.8141, 45.657], [-87.8091, 45.6861], [-87.8398, 45.718], [-87.9225, 45.76], [-88.1161, 45.8158], [-88.0964, 45.8784], [-88.1045, 45.9052], [-88.1518, 45.9454], [-88.3547, 45.9923], [-88.4931, 46.0135], [-88.6295, 46.0141], [-88.7273, 46.0311], [-88.8374, 46.0365], [-89.1193, 46.1491], [-89.4941, 46.2214], [-90.1185, 46.3416], [-90.2304, 46.5098], [-90.3182, 46.5366], [-90.3408, 46.5584], [-90.3924, 46.549], [-90.4077, 46.593], [-90.3414, 46.6025], [-90.1536, 46.6546], [-89.9933, 46.7179], [-89.8605, 46.7928], [-89.6951, 46.8386], [-89.4968, 46.8554], [-89.355, 46.8819], [-89.2695, 46.9181], [-89.1548, 46.9886], [-89.0903, 47.0093], [-89.0092, 47.0157], [-88.9482, 47.043], [-88.9072, 47.0912], [-88.8297, 47.1459], [-88.7156, 47.2072], [-88.6505, 47.232], [-88.6282, 47.1987], [-88.6327, 47.167], [-88.6043, 47.1412], [-88.5433, 47.1216], [-88.5154, 47.0955], [-88.5208, 47.063], [-88.5043, 47.0353], [-88.4661, 47.0126], [-88.4558, 46.9628], [-88.4738, 46.8863], [-88.4761, 46.8367], [-88.4492, 46.8016], [-88.4, 46.8409], [-88.383, 46.8742], [-88.2162, 46.9516], [-88.1837, 46.9553], [-88.1292, 46.9355], [-87.8771, 46.9077], [-87.7776, 46.8878], [-87.6374, 46.8265], [-87.5095, 46.6835], [-87.4512, 46.6274], [-87.3945, 46.5901], [-87.3779, 46.5397], [-87.3581, 46.5244], [-87.1707, 46.5135], [-87.0857, 46.5226], [-87.0341, 46.5432], [-86.9768, 46.5301], [-86.9136, 46.4833], [-86.8515, 46.4703], [-86.7903, 46.4908], [-86.7328, 46.4902], [-86.6375, 46.453], [-86.531, 46.5244], [-86.4027, 46.5878], [-86.2313, 46.6563], [-86.132, 46.6868], [-86.1047, 46.6792], [-85.9467, 46.7021], [-85.8045, 46.7042], [-85.6161, 46.6906], [-85.4416, 46.7067], [-85.2807, 46.7525], [-85.1385, 46.778], [-85.0146, 46.7835], [-84.9679, 46.7707], [-84.9982, 46.7397], [-85.0146, 46.6864], [-85.0168, 46.611], [-85.0487, 46.5239], [-85.0343, 46.5058], [-84.9143, 46.494], [-84.8511, 46.4694], [-84.7789, 46.4683], [-84.6973, 46.4907], [-84.6349, 46.4823], [-84.5914, 46.4431], [-84.5283, 46.436], [-84.4241, 46.4907], [-84.358, 46.5047], [-84.3274, 46.4915], [-84.2549, 46.4076], [-84.229, 46.3658], [-84.2023, 46.2831], [-84.2036, 46.247], [-84.2481, 46.203], [-84.2271, 46.1837], [-84.1089, 46.1782], [-84.055, 46.1589], [-84.0347, 46.1373], [-84.0409, 46.0881], [-84.0119, 46.0615], [-83.9174, 46.0206], [-83.8941, 46.0013], [-83.9292, 45.9676], [-83.9787, 45.9615], [-84.3409, 45.9998], [-84.4473, 46.0061], [-84.4629, 45.9921], [-84.5212, 45.9946], [-84.5499, 46.0293], [-84.6314, 46.0526], [-84.6746, 46.0333], [-84.7248, 45.9576], [-84.7171, 45.9434], [-84.7274, 45.8614], [-84.8019, 45.8743], [-84.9719, 45.989], [-85.1007, 46.0461], [-85.2599, 46.0881], [-85.3859, 46.1087], [-85.4787, 46.1076], [-85.5551, 46.0782], [-85.6148, 46.0204], [-85.7079, 45.9876], [-85.8343, 45.9796], [-85.9028, 45.9643], [-85.9138, 45.9411], [-85.9593, 45.9407], [-86.0398, 45.9626], [-86.1229, 45.9689], [-86.2089, 45.9593], [-86.2717, 45.9367], [-86.3382, 45.8657], [-86.3514, 45.831], [-86.3995, 45.8007], [-86.5274, 45.7531], [-86.5339, 45.7357], [-86.6012, 45.6817], [-86.6444, 45.6245], [-86.6897, 45.6573], [-86.6914, 45.7014], [-86.6496, 45.7568], [-86.6122, 45.7837], [-86.5795, 45.7818], [-86.5594, 45.8063], [-86.5516, 45.8572], [-86.5634, 45.8824], [-86.6271, 45.8726], [-86.6606, 45.8523], [-86.7028, 45.8479], [-86.7536, 45.8594], [-86.7985, 45.8317], [-86.8375, 45.7648], [-86.884, 45.721], [-86.9378, 45.7003], [-86.9742, 45.7231], [-86.9927, 45.7897], [-86.993, 45.8418], [-86.971, 45.9049], [-87.005, 45.8971], [-87.0392, 45.8446], [-87.0848, 45.7298], [-87.1142, 45.6925], [-87.1538, 45.6767], [-87.2165, 45.6074], [-87.302, 45.4842], [-87.3989, 45.3646], [-87.5065, 45.2488], [-87.6022, 45.157], [-87.6059, 45.1085]]], [[[-83.5035, 46.0131], [-83.4937, 45.9908], [-83.518, 45.9578], [-83.5884, 45.9411], [-83.7307, 45.9429], [-83.8232, 45.9556], [-83.8658, 45.9791], [-83.8711, 46.0174], [-83.8202, 46.005], [-83.775, 46.011], [-83.6832, 46.0573], [-83.6838, 46.1062], [-83.6082, 46.0965], [-83.5801, 46.08], [-83.529, 46.0237], [-83.5035, 46.0131]]], [[[-84.5571, 45.8204], [-84.4291, 45.8066], [-84.3802, 45.7877], [-84.3748, 45.7653], [-84.4123, 45.7363], [-84.4875, 45.7535], [-84.563, 45.8039], [-84.5571, 45.8204]]], [[[-83.4542, 41.7456], [-83.4643, 41.7394], [-83.7972, 41.7299], [-84.4632, 41.7109], [-84.7961, 41.7014], [-84.7964, 41.7597], [-85.4026, 41.76], [-85.7058, 41.7601], [-86.3119, 41.7604], [-86.8627, 41.7607], [-86.7983, 41.7885], [-86.6916, 41.8534], [-86.6325, 41.9114], [-86.5754, 41.9877], [-86.5202, 42.0823], [-86.4073, 42.2237], [-86.3525, 42.3093], [-86.2995, 42.4176], [-86.2596, 42.5311], [-86.2328, 42.65], [-86.22, 42.773], [-86.2215, 42.9004], [-86.2485, 43.0288], [-86.3292, 43.2242], [-86.435, 43.4071], [-86.5421, 43.6373], [-86.5406, 43.6569], [-86.4405, 43.7943], [-86.4486, 43.924], [-86.4698, 43.9798], [-86.521, 44.0547], [-86.5192, 44.0738], [-86.4154, 44.1695], [-86.3526, 44.2424], [-86.296, 44.3306], [-86.2591, 44.4336], [-86.2422, 44.5514], [-86.2426, 44.6297], [-86.2606, 44.6688], [-86.237, 44.7202], [-86.1259, 44.7477], [-86.0885, 44.7942], [-86.0804, 44.8758], [-86.0577, 44.9164], [-85.985, 44.9324], [-85.9529, 44.9666], [-85.9105, 44.9763], [-85.8579, 44.9615], [-85.7841, 45.0121], [-85.6893, 45.1281], [-85.6167, 45.193], [-85.5562, 45.196], [-85.5877, 45.1613], [-85.5975, 45.1233], [-85.5853, 45.082], [-85.6193, 44.987], [-85.6047, 44.9699], [-85.6453, 44.8816], [-85.6472, 44.8376], [-85.6226, 44.804], [-85.5932, 44.8156], [-85.5492, 44.903], [-85.5577, 44.9309], [-85.5126, 44.9967], [-85.4889, 44.9701], [-85.4971, 44.9238], [-85.551, 44.8147], [-85.5493, 44.7719], [-85.4846, 44.8403], [-85.389, 45.0328], [-85.3815, 45.0783], [-85.394, 45.1957], [-85.3914, 45.2438], [-85.3756, 45.277], [-85.3194, 45.3145], [-85.2229, 45.3561], [-85.1273, 45.3785], [-85.0329, 45.3812], [-84.9671, 45.3926], [-84.943, 45.4285], [-85.0065, 45.4405], [-85.0546, 45.4667], [-85.0877, 45.5068], [-85.0988, 45.5531], [-85.0878, 45.6053], [-85.0475, 45.6564], [-84.9775, 45.7066], [-84.9515, 45.7753], [-84.8659, 45.7686], [-84.806, 45.7751], [-84.772, 45.7948], [-84.691, 45.7738], [-84.5629, 45.7121], [-84.4414, 45.6763], [-84.3263, 45.6662], [-84.2423, 45.6445], [-84.1892, 45.6112], [-84.1511, 45.5738], [-84.1278, 45.5325], [-84.0728, 45.5092], [-83.9864, 45.5038], [-83.9183, 45.4863], [-83.8688, 45.4565], [-83.5936, 45.3795], [-83.4785, 45.3389], [-83.4153, 45.299], [-83.3972, 45.2736], [-83.3962, 45.2214], [-83.3201, 45.1389], [-83.316, 45.0931], [-83.2931, 45.0404], [-83.3779, 45.067], [-83.426, 45.059], [-83.4482, 45.0246], [-83.4361, 44.9615], [-83.3278, 44.8692], [-83.2996, 44.7852], [-83.2944, 44.6834], [-83.3079, 44.6438], [-83.3193, 44.5564], [-83.3306, 44.3752], [-83.3662, 44.3301], [-83.4628, 44.2649], [-83.5125, 44.2707], [-83.5475, 44.2152], [-83.5775, 44.1134], [-83.614, 44.0583], [-83.6571, 44.0496], [-83.6915, 44.0145], [-83.7377, 44.0007], [-83.8215, 43.9934], [-83.8789, 43.9626], [-83.9216, 43.8755], [-83.9198, 43.8338], [-83.9395, 43.782], [-83.9382, 43.7376], [-83.9157, 43.7005], [-83.8479, 43.6636], [-83.7352, 43.6266], [-83.6679, 43.621], [-83.6217, 43.6365], [-83.573, 43.6971], [-83.5261, 43.7208], [-83.4689, 43.7308], [-83.3529, 43.8793], [-83.3382, 43.929], [-83.2667, 43.9729], [-83.2092, 43.9936], [-83.0695, 44.0251], [-82.9946, 44.0612], [-82.9472, 44.0669], [-82.8782, 44.0477], [-82.7877, 44.0034], [-82.7161, 43.939], [-82.6633, 43.8542], [-82.5968, 43.6344], [-82.5162, 43.2797], [-82.4612, 43.081], [-82.4173, 43.0174], [-82.4884, 42.7394], [-82.5453, 42.6247], [-82.7442, 42.4934], [-82.8678, 42.3853], [-83.0037, 42.3318], [-83.1047, 42.2864], [-83.1422, 42.2277], [-83.1752, 42.1462], [-83.1884, 42.0833], [-83.1766, 42.0489], [-83.2556, 41.9857], [-83.2619, 41.9463], [-83.3162, 41.9233], [-83.3621, 41.8798], [-83.4542, 41.7456]]], [[[-85.5517, 45.6026], [-85.612, 45.6093], [-85.6078, 45.656], [-85.5728, 45.7379], [-85.5385, 45.7753], [-85.5015, 45.7502], [-85.4923, 45.6629], [-85.509, 45.6245], [-85.5517, 45.6026]]], [[[-85.9762, 45.1022], [-86.0157, 45.0892], [-86.0379, 45.1029], [-86.0596, 45.1468], [-85.9986, 45.1502], [-85.9762, 45.1022]]]] }, \"properties\": { \"name\": \"Michigan\", \"id\": \"US-MI\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-93.3778, 48.6165], [-93.258, 48.6289], [-93.0517, 48.6199], [-92.9963, 48.6117], [-92.8367, 48.5678], [-92.7326, 48.5319], [-92.5833, 48.4651], [-92.5005, 48.4354], [-92.4147, 48.2766], [-92.3484, 48.2766], [-92.2987, 48.3288], [-92.1718, 48.3384], [-92.0052, 48.3018], [-91.8584, 48.1976], [-91.6473, 48.1046], [-91.5183, 48.0583], [-91.3872, 48.0586], [-91.2207, 48.1046], [-91.0434, 48.1938], [-90.916, 48.2091], [-90.8402, 48.2005], [-90.7973, 48.1311], [-90.7444, 48.1046], [-90.6071, 48.1126], [-90.3201, 48.0991], [-90.0918, 48.1181], [-90.04, 48.0782], [-89.9936, 48.0152], [-89.9011, 47.9955], [-89.7753, 48.0152], [-89.6338, 47.9937], [-89.7195, 47.9468], [-89.8288, 47.9009], [-89.9999, 47.8411], [-90.1972, 47.7864], [-90.5975, 47.6878], [-90.8467, 47.5852], [-90.957, 47.5236], [-91.3862, 47.2147], [-91.6451, 47.05], [-92.0644, 46.8188], [-92.1042, 46.7894], [-92.107, 46.7623], [-92.1255, 46.763], [-92.1946, 46.7069], [-92.2239, 46.671], [-92.2917, 46.6607], [-92.2926, 46.0843], [-92.3673, 46.036], [-92.4245, 46.0278], [-92.6938, 45.909], [-92.7381, 45.8746], [-92.7864, 45.7955], [-92.8747, 45.7061], [-92.8965, 45.6586], [-92.8924, 45.5947], [-92.7575, 45.5432], [-92.7071, 45.4937], [-92.6826, 45.4331], [-92.6857, 45.3806], [-92.7539, 45.2776], [-92.7661, 45.2364], [-92.7591, 45.1106], [-92.7931, 45.0713], [-92.7651, 44.9695], [-92.7634, 44.9342], [-92.7846, 44.8226], [-92.7991, 44.79], [-92.7698, 44.7258], [-92.6435, 44.6453], [-92.5371, 44.6009], [-92.4417, 44.5866], [-92.3669, 44.5522], [-92.313, 44.4978], [-92.2404, 44.4621], [-92.1485, 44.4452], [-92.0551, 44.3999], [-91.9124, 44.2889], [-91.8409, 44.1942], [-91.7164, 44.1264], [-91.5149, 44.0542], [-91.3827, 43.9908], [-91.32, 43.9362], [-91.2785, 43.7975], [-91.2453, 43.5024], [-91.5753, 43.502], [-92.2258, 43.5018], [-92.8762, 43.5017], [-93.5267, 43.5016], [-93.852, 43.5016], [-94.5023, 43.5014], [-94.8275, 43.5014], [-95.478, 43.5013], [-95.8032, 43.5013], [-96.4536, 43.5012], [-96.4536, 43.7258], [-96.4536, 44.1747], [-96.4536, 44.6238], [-96.4536, 45.0727], [-96.4536, 45.2973], [-96.5298, 45.3715], [-96.696, 45.4317], [-96.7374, 45.4678], [-96.8455, 45.5958], [-96.8511, 45.626], [-96.8137, 45.6592], [-96.6627, 45.7556], [-96.6146, 45.8], [-96.591, 45.8433], [-96.5563, 45.9428], [-96.5704, 46.0193], [-96.5608, 46.1383], [-96.592, 46.2276], [-96.6175, 46.3271], [-96.7309, 46.4727], [-96.7583, 46.5904], [-96.7867, 46.6483], [-96.796, 46.7972], [-96.7928, 46.839], [-96.7702, 46.9196], [-96.8183, 46.9742], [-96.8253, 47.0189], [-96.8476, 47.3734], [-96.8629, 47.424], [-96.8588, 47.5884], [-96.9463, 47.7616], [-96.988, 47.8204], [-97.0091, 47.8915], [-97.0074, 47.9255], [-97.0785, 48.0433], [-97.1259, 48.1735], [-97.1217, 48.286], [-97.1367, 48.3712], [-97.131, 48.4374], [-97.1439, 48.5367], [-97.1291, 48.5933], [-97.1281, 48.6811], [-97.2257, 48.9932], [-96.6771, 48.9932], [-96.2508, 48.9932], [-95.8242, 48.9932], [-95.162, 48.9918], [-95.1553, 49.3697], [-94.9394, 49.3494], [-94.8543, 49.3046], [-94.8604, 49.2587], [-94.8425, 49.1192], [-94.8035, 49.0029], [-94.7128, 48.8635], [-94.7052, 48.8085], [-94.6754, 48.7745], [-94.6208, 48.7425], [-94.4142, 48.7041], [-94.0552, 48.659], [-93.8517, 48.6073], [-93.8036, 48.5489], [-93.7077, 48.5255], [-93.5643, 48.5368], [-93.4636, 48.5612], [-93.3778, 48.6165]]] }, \"properties\": { \"name\": \"Minnesota\", \"id\": \"US-MN\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-91.4419, 40.3794], [-91.4998, 40.226], [-91.5016, 40.0975], [-91.4669, 39.9428], [-91.4259, 39.8268], [-91.3787, 39.7493], [-91.2099, 39.6029], [-90.9195, 39.3869], [-90.7372, 39.1818], [-90.6635, 38.9875], [-90.5771, 38.9096], [-90.4781, 38.9481], [-90.3544, 38.9302], [-90.2201, 38.8977], [-90.1498, 38.86], [-90.1268, 38.8325], [-90.1508, 38.7806], [-90.3165, 38.4578], [-90.374, 38.3097], [-90.3658, 38.2542], [-90.299, 38.1739], [-90.1737, 38.069], [-90.0638, 38.0005], [-89.9698, 37.9685], [-89.823, 37.8841], [-89.6233, 37.7472], [-89.5234, 37.6445], [-89.5234, 37.576], [-89.503, 37.5057], [-89.462, 37.4342], [-89.462, 37.3656], [-89.503, 37.3005], [-89.4868, 37.2127], [-89.414, 37.1023], [-89.3519, 37.0354], [-89.3009, 37.012], [-89.2958, 37.0516], [-89.2725, 37.08], [-89.2249, 37.0527], [-89.1543, 36.9921], [-89.1225, 36.9116], [-89.1295, 36.8111], [-89.1564, 36.7156], [-89.203, 36.6256], [-89.2562, 36.5944], [-89.3305, 36.616], [-89.3974, 36.5878], [-89.4503, 36.5], [-89.4872, 36.5031], [-89.5196, 36.5548], [-89.5496, 36.553], [-89.5573, 36.5011], [-89.5406, 36.4267], [-89.5552, 36.3728], [-89.6041, 36.352], [-89.6117, 36.322], [-89.5835, 36.2877], [-89.5946, 36.2594], [-89.6541, 36.2479], [-89.6745, 36.2206], [-89.6342, 36.168], [-89.6419, 36.1045], [-89.6977, 36.0303], [-89.7047, 36.0015], [-90.3811, 35.9927], [-90.303, 36.0993], [-90.2526, 36.1377], [-90.2162, 36.1784], [-90.1493, 36.216], [-90.0758, 36.2967], [-90.0671, 36.3343], [-90.0744, 36.3719], [-90.1181, 36.4226], [-90.1623, 36.5009], [-90.7191, 36.5009], [-90.9978, 36.5009], [-91.5548, 36.5009], [-92.1118, 36.5009], [-92.3904, 36.5009], [-92.9474, 36.5009], [-93.5044, 36.5009], [-93.7829, 36.5009], [-94.3399, 36.5009], [-94.6184, 36.5009], [-94.6181, 37.0009], [-94.6189, 37.2615], [-94.62, 37.6525], [-94.6212, 38.0434], [-94.623, 38.5647], [-94.6245, 39.0861], [-94.6225, 39.1245], [-94.7778, 39.194], [-94.8472, 39.2591], [-94.8823, 39.3432], [-94.9525, 39.4264], [-95.058, 39.509], [-95.0754, 39.5974], [-95.0048, 39.6915], [-94.9458, 39.7395], [-94.8986, 39.7411], [-94.8933, 39.7818], [-94.9299, 39.8615], [-94.9841, 39.8911], [-95.0555, 39.8708], [-95.1162, 39.8721], [-95.3466, 40.0015], [-95.3625, 40.0103], [-95.4342, 40.096], [-95.4637, 40.1981], [-95.5212, 40.2645], [-95.6071, 40.2955], [-95.6616, 40.3627], [-95.6848, 40.4664], [-95.7395, 40.5708], [-95.765, 40.6018], [-95.5154, 40.6029], [-95.0109, 40.6058], [-94.5063, 40.6087], [-94.2542, 40.6102], [-93.7495, 40.6131], [-93.2451, 40.616], [-92.7406, 40.6188], [-92.2361, 40.6217], [-91.7315, 40.6246], [-91.682, 40.5519], [-91.6274, 40.5308], [-91.6169, 40.5069], [-91.5454, 40.4692], [-91.5299, 40.4322], [-91.4419, 40.3794]]] }, \"properties\": { \"name\": \"Missouri\", \"id\": \"US-MO\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-88.5581, 30.2159], [-88.5707, 30.2048], [-88.6593, 30.2256], [-88.713, 30.245], [-88.7228, 30.2643], [-88.574, 30.2292], [-88.5581, 30.2159]]], [[[-88.1733, 34.999], [-88.0847, 34.9331], [-88.1201, 34.6614], [-88.1688, 34.292], [-88.2177, 33.9226], [-88.2664, 33.5531], [-88.3397, 32.9988], [-88.3886, 32.6294], [-88.4373, 32.26], [-88.4862, 31.8904], [-88.4653, 31.5151], [-88.4443, 31.1397], [-88.4232, 30.7643], [-88.3996, 30.3709], [-88.6921, 30.3554], [-88.82, 30.4065], [-88.9051, 30.4151], [-89.0541, 30.3682], [-89.2237, 30.3323], [-89.2636, 30.3436], [-89.3206, 30.3453], [-89.4435, 30.2232], [-89.521, 30.1926], [-89.5917, 30.223], [-89.629, 30.2961], [-89.6408, 30.3489], [-89.6858, 30.4627], [-89.7367, 30.5266], [-89.794, 30.5689], [-89.82, 30.6112], [-89.8198, 30.6399], [-89.8381, 30.6905], [-89.8354, 30.7308], [-89.7649, 30.886], [-89.7353, 31.0011], [-90.2159, 31.0011], [-90.6964, 31.0012], [-91.1769, 31.0012], [-91.6565, 31.0018], [-91.6527, 31.0296], [-91.6111, 31.065], [-91.5963, 31.1099], [-91.6307, 31.2176], [-91.6182, 31.277], [-91.5586, 31.2879], [-91.529, 31.3451], [-91.529, 31.4488], [-91.5058, 31.5187], [-91.4591, 31.5549], [-91.4146, 31.6399], [-91.3725, 31.7736], [-91.2864, 31.884], [-91.1566, 31.9707], [-91.0925, 32.0459], [-91.0887, 32.1042], [-90.9477, 32.2401], [-90.9377, 32.2774], [-90.9447, 32.3307], [-90.9901, 32.3811], [-91.0592, 32.4239], [-91.1038, 32.4905], [-91.1009, 32.5414], [-91.1161, 32.5862], [-91.1496, 32.625], [-91.1424, 32.6611], [-91.0943, 32.6943], [-91.0921, 32.7259], [-91.1356, 32.7558], [-91.136, 32.8089], [-91.0933, 32.885], [-91.0961, 32.9376], [-91.1442, 32.9669], [-91.15, 33.0159], [-91.1529, 33.0405], [-91.1068, 33.2179], [-91.1633, 33.2944], [-91.1685, 33.3594], [-91.1411, 33.4386], [-91.1542, 33.5003], [-91.193, 33.5225], [-91.2146, 33.5834], [-91.1727, 33.6167], [-91.1704, 33.6474], [-91.2076, 33.6756], [-91.1841, 33.7157], [-91.1003, 33.7674], [-91.0528, 33.8276], [-91.0382, 33.9013], [-91.05, 33.9452], [-91.0702, 33.9743], [-91.0432, 34.0028], [-90.9431, 34.0297], [-90.9088, 34.0717], [-90.9403, 34.1286], [-90.9097, 34.1888], [-90.8172, 34.2522], [-90.7682, 34.3082], [-90.7623, 34.3565], [-90.718, 34.3917], [-90.6354, 34.4139], [-90.5841, 34.5037], [-90.5638, 34.6611], [-90.5392, 34.7281], [-90.4971, 34.7381], [-90.4748, 34.76], [-90.4675, 34.8053], [-90.416, 34.8516], [-90.3198, 34.8992], [-90.2821, 34.9453], [-90.2938, 35.0012], [-89.773, 35.0005], [-89.2418, 35], [-88.976, 34.9997], [-88.4448, 34.9991], [-88.1733, 34.999]]]] }, \"properties\": { \"name\": \"Mississippi\", \"id\": \"US-MS\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-104.0111, 45.943], [-104.008, 45.4782], [-104.0055, 45.001], [-104.0372, 45.0011], [-104.6948, 45.0011], [-105.133, 45.0011], [-105.5714, 45.0011], [-106.0098, 45.001], [-106.4482, 45.001], [-106.8864, 45.001], [-107.3249, 45.001], [-107.9824, 45.001], [-108.64, 45.001], [-109.0783, 45.001], [-109.7358, 45.001], [-110.1741, 45.001], [-110.6126, 45.001], [-111.0508, 45.001], [-111.0514, 44.4989], [-111.1172, 44.5253], [-111.1976, 44.5906], [-111.2652, 44.6875], [-111.3374, 44.7449], [-111.4156, 44.7336], [-111.4481, 44.7111], [-111.4592, 44.6711], [-111.491, 44.6242], [-111.4745, 44.5647], [-111.4998, 44.5448], [-111.6593, 44.5596], [-111.7972, 44.5399], [-111.8921, 44.5549], [-112.0742, 44.5477], [-112.2313, 44.5607], [-112.2851, 44.554], [-112.32, 44.5331], [-112.3639, 44.4795], [-112.3929, 44.468], [-112.6482, 44.4971], [-112.7159, 44.498], [-112.7871, 44.4631], [-112.8156, 44.406], [-112.8539, 44.3983], [-112.9104, 44.4193], [-112.9998, 44.4803], [-113.0063, 44.5392], [-113.0542, 44.6051], [-113.0627, 44.6651], [-113.0933, 44.7154], [-113.1407, 44.7654], [-113.1872, 44.7986], [-113.2342, 44.8099], [-113.3389, 44.8081], [-113.4321, 44.8742], [-113.4693, 44.93], [-113.4381, 44.994], [-113.4711, 45.0729], [-113.5035, 45.1093], [-113.5574, 45.1405], [-113.6065, 45.2092], [-113.697, 45.305], [-113.722, 45.3793], [-113.7561, 45.4409], [-113.7661, 45.5026], [-113.7996, 45.5402], [-113.8023, 45.601], [-113.873, 45.6335], [-113.9426, 45.6815], [-113.992, 45.6931], [-114.0064, 45.6585], [-114.1166, 45.5791], [-114.2103, 45.5425], [-114.2562, 45.5056], [-114.2976, 45.4875], [-114.3506, 45.4971], [-114.4485, 45.5513], [-114.5292, 45.5757], [-114.5327, 45.633], [-114.4958, 45.6859], [-114.5338, 45.7819], [-114.5225, 45.8151], [-114.4926, 45.8387], [-114.4051, 45.8742], [-114.3968, 45.8909], [-114.416, 45.9821], [-114.4784, 46.0356], [-114.4635, 46.1098], [-114.4853, 46.1582], [-114.4467, 46.1993], [-114.4442, 46.2708], [-114.4128, 46.3436], [-114.3802, 46.453], [-114.387, 46.4999], [-114.3459, 46.5506], [-114.332, 46.6014], [-114.3368, 46.6592], [-114.3809, 46.6676], [-114.5187, 46.6477], [-114.6015, 46.6603], [-114.624, 46.6776], [-114.6307, 46.7186], [-114.678, 46.7501], [-114.7537, 46.7345], [-114.7861, 46.7767], [-114.887, 46.8449], [-114.9357, 46.9229], [-115.0336, 46.9909], [-115.1267, 47.0846], [-115.3067, 47.2312], [-115.3495, 47.2612], [-115.4859, 47.3117], [-115.5933, 47.3849], [-115.7024, 47.4377], [-115.6697, 47.4979], [-115.7108, 47.5526], [-115.6909, 47.6066], [-115.7337, 47.7064], [-115.8113, 47.7759], [-115.8622, 47.8425], [-115.9415, 47.904], [-116.0491, 48.0047], [-116.0487, 48.4993], [-116.0485, 48.993], [-115.4379, 48.993], [-115.0115, 48.993], [-114.5852, 48.993], [-114.1587, 48.993], [-113.7324, 48.993], [-113.306, 48.993], [-112.8795, 48.993], [-112.4532, 48.993], [-112.0269, 48.993], [-111.6004, 48.993], [-111.1741, 48.993], [-110.7477, 48.993], [-110.3213, 48.993], [-109.8949, 48.993], [-109.4684, 48.993], [-109.0421, 48.9932], [-108.6157, 48.9932], [-108.1894, 48.9932], [-107.7631, 48.9932], [-107.3366, 48.9932], [-106.9103, 48.9932], [-106.4838, 48.9932], [-106.0575, 48.9932], [-105.6311, 48.9932], [-105.2048, 48.9932], [-104.7783, 48.9932], [-104.034, 48.9932], [-104.0292, 48.4219], [-104.025, 47.8499], [-104.0222, 47.4685], [-104.0195, 47.0872], [-104.0152, 46.5151], [-104.0111, 45.943]]] }, \"properties\": { \"name\": \"Montana\", \"id\": \"US-MT\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-MT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-75.9664, 36.5514], [-75.9927, 36.4738], [-75.9785, 36.4292], [-75.9249, 36.383], [-75.8666, 36.2679], [-75.8201, 36.1129], [-75.883, 36.1757], [-75.9502, 36.209], [-76.0547, 36.2345], [-76.1478, 36.2793], [-76.1411, 36.2152], [-76.15, 36.1458], [-76.2217, 36.1669], [-76.2705, 36.1899], [-76.2275, 36.116], [-76.3211, 36.1381], [-76.3837, 36.1336], [-76.4243, 36.0679], [-76.4788, 36.0281], [-76.5593, 36.0154], [-76.6789, 36.0753], [-76.7176, 36.1481], [-76.74, 36.1333], [-76.7188, 36.0335], [-76.7262, 35.9576], [-76.6112, 35.9436], [-76.5035, 35.956], [-76.3583, 35.9528], [-76.2635, 35.9671], [-76.2065, 35.9912], [-76.0698, 35.9704], [-76.0599, 35.8787], [-76.0757, 35.7876], [-76.0835, 35.6905], [-76.0457, 35.6912], [-76.0012, 35.7222], [-75.979, 35.8959], [-75.8538, 35.9601], [-75.812, 35.9557], [-75.7722, 35.8999], [-75.7447, 35.7655], [-75.774, 35.6469], [-75.966, 35.5084], [-76.1035, 35.3803], [-76.1739, 35.3542], [-76.2752, 35.3691], [-76.3902, 35.4013], [-76.4466, 35.4078], [-76.4895, 35.3971], [-76.5156, 35.4366], [-76.5326, 35.5084], [-76.5773, 35.5323], [-76.611, 35.5297], [-76.6341, 35.4533], [-76.7414, 35.4315], [-76.8872, 35.463], [-77.0401, 35.5273], [-76.9744, 35.4584], [-76.5955, 35.3298], [-76.5527, 35.3056], [-76.513, 35.2704], [-76.5659, 35.2153], [-76.6076, 35.153], [-76.628, 35.0733], [-76.7791, 34.9902], [-76.8611, 35.005], [-77.0702, 35.1546], [-76.9749, 35.0252], [-76.8986, 34.9702], [-76.745, 34.9409], [-76.4568, 34.9894], [-76.3621, 34.9365], [-76.4397, 34.843], [-76.5168, 34.7773], [-76.618, 34.7699], [-76.7071, 34.7521], [-76.7332, 34.7069], [-77.0494, 34.6973], [-77.1339, 34.7079], [-77.2518, 34.6156], [-77.2962, 34.603], [-77.3583, 34.6203], [-77.3844, 34.6943], [-77.4122, 34.7308], [-77.4129, 34.592], [-77.3797, 34.5266], [-77.5177, 34.4513], [-77.6497, 34.3576], [-77.697, 34.332], [-77.7508, 34.285], [-77.8607, 34.1491], [-77.888, 34.0501], [-77.9278, 33.9397], [-77.9329, 33.9895], [-77.926, 34.0732], [-77.9533, 34.169], [-77.9706, 33.9935], [-78.0134, 33.9118], [-78.4058, 33.9175], [-78.5643, 33.8767], [-78.9784, 34.2261], [-79.3835, 34.5684], [-79.6535, 34.7968], [-80.2188, 34.8127], [-80.7841, 34.8286], [-80.793, 34.9628], [-80.9337, 35.1136], [-81.0451, 35.0657], [-81.0469, 35.1311], [-81.0874, 35.1556], [-81.7217, 35.1786], [-82.356, 35.2015], [-82.3925, 35.211], [-82.464, 35.178], [-82.6515, 35.128], [-82.744, 35.084], [-82.7776, 35.0866], [-83.0966, 35.0016], [-83.1149, 35.0015], [-83.7197, 34.9948], [-84.3247, 34.988], [-84.287, 35.2009], [-84.2611, 35.2495], [-84.2324, 35.2605], [-84.1286, 35.2615], [-84.0623, 35.286], [-84.0038, 35.4141], [-83.8712, 35.5149], [-83.8117, 35.5402], [-83.7227, 35.5598], [-83.5112, 35.5841], [-83.2842, 35.682], [-83.1204, 35.7746], [-82.9902, 35.8004], [-82.9495, 35.8345], [-82.9202, 35.8789], [-82.9019, 35.9391], [-82.8878, 35.9517], [-82.8128, 35.9473], [-82.7556, 35.9999], [-82.7001, 36.0299], [-82.6111, 36.0474], [-82.5768, 35.9723], [-82.5211, 35.9812], [-82.4783, 36.01], [-82.3682, 36.0996], [-82.295, 36.134], [-82.1826, 36.1539], [-82.1006, 36.1065], [-82.0513, 36.1229], [-81.9082, 36.3065], [-81.8512, 36.3397], [-81.8082, 36.3527], [-81.7342, 36.3554], [-81.7334, 36.4059], [-81.7076, 36.482], [-81.7044, 36.534], [-81.6589, 36.6106], [-81.6416, 36.5951], [-81.2799, 36.5922], [-80.918, 36.5895], [-80.5563, 36.5866], [-80.1944, 36.5837], [-79.8327, 36.581], [-79.471, 36.5781], [-79.1091, 36.5754], [-78.7474, 36.5726], [-78.3855, 36.5697], [-78.0238, 36.567], [-77.6619, 36.5641], [-77.3002, 36.5614], [-76.9385, 36.5585], [-76.5766, 36.5556], [-75.9664, 36.5514]]], [[[-76.5462, 34.6548], [-76.5685, 34.6525], [-76.662, 34.6847], [-76.6223, 34.6946], [-76.5462, 34.6548]]], [[[-75.5441, 35.2401], [-75.6782, 35.2128], [-75.6901, 35.2216], [-75.5364, 35.2786], [-75.4878, 35.4795], [-75.4813, 35.5722], [-75.5043, 35.7354], [-75.4785, 35.7164], [-75.4564, 35.5642], [-75.4647, 35.4486], [-75.5094, 35.2802], [-75.5441, 35.2401]]], [[[-75.8891, 36.5504], [-75.8575, 36.5506], [-75.7578, 36.2293], [-75.5587, 35.8793], [-75.5805, 35.8719], [-75.7282, 36.1037], [-75.8098, 36.2711], [-75.8891, 36.5504]]], [[[-76.5036, 34.6429], [-76.437, 34.7563], [-76.2563, 34.9147], [-76.2075, 34.939], [-76.3577, 34.8036], [-76.5036, 34.6429]]], [[[-75.782, 35.1902], [-75.9637, 35.1189], [-75.8649, 35.1741], [-75.782, 35.1902]]], [[[-75.6357, 35.8559], [-75.6509, 35.8356], [-75.7172, 35.9461], [-75.6488, 35.9103], [-75.6357, 35.8559]]]] }, \"properties\": { \"name\": \"North Carolina\", \"id\": \"US-NC\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-96.5563, 45.9428], [-96.7894, 45.9428], [-97.4882, 45.9428], [-98.1871, 45.9428], [-98.653, 45.9429], [-99.119, 45.9429], [-99.8179, 45.9429], [-100.2837, 45.9429], [-100.7496, 45.9429], [-101.2156, 45.9429], [-101.9144, 45.9429], [-102.3804, 45.9429], [-102.8464, 45.943], [-103.3122, 45.943], [-104.0111, 45.943], [-104.0152, 46.5151], [-104.0195, 47.0872], [-104.0222, 47.4685], [-104.025, 47.8499], [-104.0292, 48.4219], [-104.034, 48.9932], [-103.4992, 48.9932], [-103.0728, 48.9932], [-102.6465, 48.9932], [-102.22, 48.9932], [-101.7937, 48.9932], [-101.3672, 48.9932], [-100.9409, 48.9932], [-100.5145, 48.9932], [-100.088, 48.9932], [-99.6617, 48.9932], [-99.2354, 48.9932], [-98.809, 48.9932], [-98.3826, 48.9932], [-97.9562, 48.9932], [-97.2257, 48.9932], [-97.1281, 48.6811], [-97.1291, 48.5933], [-97.1439, 48.5367], [-97.131, 48.4374], [-97.1367, 48.3712], [-97.1217, 48.286], [-97.1259, 48.1735], [-97.0785, 48.0433], [-97.0074, 47.9255], [-97.0091, 47.8915], [-96.988, 47.8204], [-96.9463, 47.7616], [-96.8588, 47.5884], [-96.8629, 47.424], [-96.8476, 47.3734], [-96.8253, 47.0189], [-96.8183, 46.9742], [-96.7702, 46.9196], [-96.7928, 46.839], [-96.796, 46.7972], [-96.7867, 46.6483], [-96.7583, 46.5904], [-96.7309, 46.4727], [-96.6175, 46.3271], [-96.592, 46.2276], [-96.5608, 46.1383], [-96.5704, 46.0193], [-96.5563, 45.9428]]] }, \"properties\": { \"name\": \"North Dakota\", \"id\": \"US-ND\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-ND\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-96.4809, 42.5113], [-96.451, 42.5059], [-96.3837, 42.4177], [-96.3561, 42.2602], [-96.2954, 42.1329], [-96.2013, 42.0361], [-96.1543, 41.9652], [-96.1537, 41.9204], [-96.1312, 41.8724], [-96.0867, 41.8214], [-96.0688, 41.7343], [-96.0777, 41.6113], [-96.0586, 41.5458], [-96.0114, 41.538], [-95.9909, 41.5204], [-95.9816, 41.4738], [-95.9435, 41.4609], [-95.9329, 41.4254], [-95.9497, 41.3674], [-95.936, 41.3309], [-95.8919, 41.3161], [-95.8836, 41.2876], [-95.9111, 41.2452], [-95.9069, 41.212], [-95.8708, 41.1879], [-95.8466, 41.0803], [-95.8341, 40.8895], [-95.8382, 40.7778], [-95.859, 40.7451], [-95.8261, 40.6762], [-95.765, 40.6018], [-95.7395, 40.5708], [-95.6848, 40.4664], [-95.6616, 40.3627], [-95.6071, 40.2955], [-95.5212, 40.2645], [-95.4637, 40.1981], [-95.4342, 40.096], [-95.3625, 40.0103], [-95.3466, 40.0015], [-95.9461, 40.0011], [-96.3653, 40.0011], [-96.7845, 40.0011], [-97.4132, 40.0011], [-97.8325, 40.0011], [-98.2517, 40.0011], [-98.6709, 40.0011], [-99.2997, 40.0011], [-99.7189, 40.0011], [-100.3476, 40.0011], [-100.7669, 40.0011], [-101.1861, 40.0011], [-101.6053, 40.0011], [-102.0245, 40.0011], [-102.0248, 40.376], [-102.0248, 40.6258], [-102.025, 41.0006], [-102.5243, 41.0007], [-103.0233, 41.0007], [-103.273, 41.0007], [-103.7721, 41.0009], [-104.0217, 41.0009], [-104.0234, 41.5009], [-104.0252, 42.0012], [-104.0272, 42.5013], [-104.0288, 43.0013], [-103.3366, 43.0013], [-102.6444, 43.0013], [-101.9522, 43.0013], [-101.606, 43.0013], [-100.9139, 43.0013], [-100.2216, 43.0012], [-99.5294, 43.0012], [-98.8372, 43.0012], [-98.4417, 43.0011], [-98.1432, 42.8523], [-97.965, 42.8058], [-97.8809, 42.8495], [-97.6981, 42.8746], [-97.4166, 42.8811], [-97.2388, 42.8605], [-97.1644, 42.8132], [-97.0198, 42.7601], [-96.8045, 42.7015], [-96.6756, 42.6376], [-96.6328, 42.5686], [-96.558, 42.5247], [-96.4809, 42.5113]]] }, \"properties\": { \"name\": \"Nebraska\", \"id\": \"US-NE\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-70.7331, 43.07], [-70.7777, 42.9406], [-70.8062, 42.8767], [-70.9234, 42.8815], [-70.974, 42.8716], [-71.0762, 42.8251], [-71.1393, 42.8081], [-71.2423, 42.7296], [-71.3296, 42.7024], [-71.8983, 42.7164], [-72.4669, 42.7303], [-72.4836, 42.7662], [-72.5397, 42.8297], [-72.5499, 42.8867], [-72.5194, 42.9667], [-72.4736, 43.0385], [-72.4382, 43.2247], [-72.4071, 43.3319], [-72.385, 43.5293], [-72.3624, 43.5867], [-72.3377, 43.622], [-72.2967, 43.7149], [-72.2224, 43.7909], [-72.1739, 43.8841], [-72.1149, 43.9655], [-72.1063, 44.013], [-72.0622, 44.1164], [-72.0313, 44.3007], [-72.0018, 44.3295], [-71.8677, 44.3549], [-71.683, 44.4503], [-71.6093, 44.5141], [-71.5685, 44.6076], [-71.6182, 44.7279], [-71.6206, 44.7719], [-71.5102, 44.9083], [-71.5335, 44.988], [-71.5175, 45.0076], [-71.419, 45.2004], [-71.3273, 45.2901], [-71.2017, 45.2603], [-71.1346, 45.2629], [-71.0846, 45.294], [-71.0621, 44.9732], [-71.0314, 44.5297], [-71.0008, 44.0864], [-70.9624, 43.5321], [-70.9676, 43.4582], [-70.9557, 43.3894], [-70.9196, 43.3281], [-70.829, 43.2391], [-70.8128, 43.1637], [-70.7331, 43.07]]] }, \"properties\": { \"name\": \"New Hampshire\", \"id\": \"US-NH\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-74.1332, 39.6808], [-74.2506, 39.5294], [-74.2532, 39.5585], [-74.1067, 39.7465], [-74.1332, 39.6808]]], [[[-73.9101, 40.9922], [-73.9271, 40.9142], [-74.0256, 40.7564], [-74.1162, 40.6873], [-74.1531, 40.6733], [-74.2267, 40.608], [-74.2643, 40.5286], [-74.2415, 40.4563], [-74.0498, 40.4299], [-73.9984, 40.4522], [-73.9722, 40.4003], [-73.9576, 40.3284], [-73.972, 40.2505], [-74.004, 40.1714], [-74.0283, 40.073], [-74.0489, 39.9231], [-74.084, 39.8292], [-74.0646, 39.9931], [-74.0959, 39.976], [-74.1177, 39.9382], [-74.1761, 39.7266], [-74.2566, 39.6139], [-74.3307, 39.5358], [-74.407, 39.5489], [-74.3899, 39.4869], [-74.4109, 39.4545], [-74.4288, 39.3872], [-74.4744, 39.3426], [-74.5172, 39.3469], [-74.5787, 39.316], [-74.603, 39.2926], [-74.6048, 39.2475], [-74.6459, 39.2078], [-74.7944, 39.0019], [-74.9234, 38.9411], [-74.9543, 38.9499], [-74.9203, 39.0471], [-74.8971, 39.1455], [-74.9753, 39.1882], [-75.0501, 39.2109], [-75.1361, 39.2078], [-75.231, 39.2842], [-75.3535, 39.3399], [-75.5243, 39.4902], [-75.5235, 39.6019], [-75.4715, 39.7123], [-75.4219, 39.7897], [-75.3532, 39.8297], [-75.1538, 39.8706], [-75.1038, 39.9319], [-75.0741, 39.9834], [-75.0235, 40.0174], [-74.9093, 40.0795], [-74.7349, 40.1545], [-74.9764, 40.4058], [-75.0341, 40.4204], [-75.0975, 40.5431], [-75.1705, 40.5767], [-75.1889, 40.5958], [-75.1923, 40.6899], [-75.1748, 40.7756], [-75.1119, 40.802], [-75.0757, 40.8563], [-75.075, 40.8844], [-75.1228, 40.9718], [-75.123, 40.9991], [-75.0315, 41.0519], [-74.9123, 41.1553], [-74.8414, 41.2687], [-74.7778, 41.325], [-74.699, 41.3572], [-74.3031, 41.1745], [-73.9101, 40.9922]]]] }, \"properties\": { \"name\": \"New Jersey\", \"id\": \"US-NJ\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-103.0002, 36.5012], [-103.0422, 36.5006], [-103.0451, 35.9384], [-103.048, 35.3761], [-103.0508, 34.8139], [-103.0539, 34.2517], [-103.0569, 33.6895], [-103.0582, 33.4084], [-103.0613, 32.8461], [-103.0641, 32.2838], [-103.0656, 32.0027], [-103.2904, 32.0026], [-103.9648, 32.0023], [-104.4144, 32.0022], [-105.0886, 32.0019], [-105.5382, 32.0018], [-105.9879, 32.0015], [-106.6683, 32.001], [-106.5664, 31.8196], [-106.4454, 31.7684], [-106.4531, 31.7702], [-106.8929, 31.7724], [-107.3326, 31.7747], [-107.7722, 31.777], [-108.2119, 31.7794], [-108.2145, 31.3295], [-108.568, 31.3288], [-109.0478, 31.328], [-109.0473, 31.6833], [-109.0473, 32.0377], [-109.0473, 32.3922], [-109.0473, 32.7468], [-109.0472, 33.1012], [-109.0472, 33.4558], [-109.0471, 33.8103], [-109.0471, 34.1648], [-109.0469, 34.5194], [-109.0469, 34.8738], [-109.0469, 35.2283], [-109.0469, 35.5829], [-109.0468, 35.9373], [-109.0468, 36.2918], [-109.0467, 36.6464], [-109.0467, 37.0009], [-108.6687, 37.0009], [-108.291, 37.0009], [-107.9131, 37.0009], [-107.5352, 37.0009], [-107.1574, 37.0009], [-106.7795, 37.0009], [-106.4016, 37.0009], [-106.0238, 37.0009], [-105.6459, 37.0009], [-105.2681, 37.0009], [-104.8901, 37.0009], [-104.5123, 37.0009], [-104.1345, 37.0009], [-103.7566, 37.0009], [-103.3787, 37.0009], [-103.0008, 37.0009], [-103.0002, 36.5012]]] }, \"properties\": { \"name\": \"New Mexico\", \"id\": \"US-NM\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-114.0402, 37.0042], [-114.0412, 36.6125], [-114.0429, 36.1817], [-114.0619, 36.1751], [-114.1194, 36.0767], [-114.1833, 36.0303], [-114.2321, 36.0317], [-114.2816, 36.0603], [-114.3315, 36.1163], [-114.4061, 36.1484], [-114.5052, 36.1565], [-114.593, 36.1475], [-114.6691, 36.1218], [-114.7157, 36.0849], [-114.7414, 36.0136], [-114.7323, 35.9837], [-114.6871, 35.9173], [-114.677, 35.7299], [-114.65, 35.6835], [-114.6452, 35.6305], [-114.6621, 35.5453], [-114.6485, 35.4759], [-114.5909, 35.3528], [-114.6105, 34.9912], [-114.8822, 35.2028], [-115.1361, 35.4009], [-115.3901, 35.5991], [-115.6439, 35.7973], [-115.8978, 35.9955], [-116.1518, 36.1936], [-116.4057, 36.3918], [-116.6596, 36.5899], [-117.0262, 36.8655], [-117.2097, 37.0033], [-117.5762, 37.2789], [-117.943, 37.5546], [-118.1262, 37.6924], [-118.5948, 38.0193], [-119.0632, 38.3463], [-119.2974, 38.5098], [-119.7658, 38.8368], [-120.0001, 39.0002], [-120.0001, 39.5627], [-120.0004, 40.1253], [-120.0006, 40.6879], [-120.0006, 41.063], [-120.0007, 41.438], [-120.0008, 42.0005], [-119.6279, 42.0005], [-119.2547, 42.0005], [-118.8818, 42.0005], [-118.5088, 42.0005], [-118.1357, 42.0005], [-117.7627, 42.0005], [-117.3897, 42.0005], [-117.0166, 42.0005], [-116.6449, 42.0006], [-116.2731, 42.0008], [-115.9014, 42.0008], [-115.5297, 42.0009], [-115.1578, 42.0009], [-114.7861, 42.001], [-114.4143, 42.001], [-114.0426, 42.001], [-114.0424, 41.5326], [-114.0423, 41.2203], [-114.042, 40.908], [-114.0419, 40.4396], [-114.0418, 40.1273], [-114.0416, 39.8149], [-114.0415, 39.5027], [-114.0412, 39.1903], [-114.0412, 38.8781], [-114.0411, 38.5657], [-114.0408, 38.2533], [-114.0408, 37.9411], [-114.0405, 37.6287], [-114.0402, 37.0042]]] }, \"properties\": { \"name\": \"Nevada\", \"id\": \"US-NV\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-72.5098, 40.9861], [-72.5808, 40.9213], [-72.5167, 40.9147], [-72.4613, 40.9338], [-72.409, 40.9722], [-72.2874, 41.024], [-72.1512, 41.0515], [-72.1019, 41.015], [-72.004, 41.0443], [-71.9032, 41.0606], [-72.339, 40.8942], [-72.4281, 40.8754], [-72.5555, 40.8258], [-72.676, 40.7907], [-72.7628, 40.7779], [-73.1943, 40.6542], [-73.2655, 40.6635], [-73.6209, 40.5999], [-73.7667, 40.5926], [-73.8996, 40.5706], [-73.8014, 40.6217], [-73.8228, 40.656], [-73.8753, 40.6516], [-73.9289, 40.5988], [-74.015, 40.5813], [-74.032, 40.6387], [-73.9645, 40.7254], [-73.8793, 40.7916], [-73.7571, 40.8337], [-73.6952, 40.87], [-73.6523, 40.838], [-73.6429, 40.8813], [-73.5739, 40.9195], [-73.4875, 40.92], [-73.3727, 40.9438], [-73.2783, 40.9242], [-73.1858, 40.9298], [-73.1112, 40.9568], [-73.0338, 40.966], [-72.8288, 40.9721], [-72.6251, 40.9918], [-72.5437, 41.0271], [-72.3726, 41.1255], [-72.2741, 41.1531], [-72.4274, 41.0386], [-72.5098, 40.9861]]], [[[-74.1881, 40.5229], [-74.2359, 40.5187], [-74.1882, 40.6146], [-74.1006, 40.6585], [-74.0688, 40.6493], [-74.0797, 40.5865], [-74.1386, 40.5418], [-74.1881, 40.5229]]], [[[-73.2533, 42.7522], [-73.3485, 42.5002], [-73.5072, 42.08], [-73.4806, 42.0556], [-73.5126, 41.6758], [-73.5447, 41.296], [-73.4841, 41.2189], [-73.7231, 41.1045], [-73.6305, 40.9918], [-73.6715, 40.9659], [-73.779, 40.8784], [-73.8513, 40.8314], [-73.9107, 40.8162], [-73.9471, 40.7769], [-73.987, 40.7514], [-73.9485, 40.8388], [-73.9067, 40.9124], [-73.872, 41.0552], [-73.8823, 41.1706], [-73.9253, 41.2181], [-73.9699, 41.2497], [-73.9177, 41.1358], [-73.9101, 40.9922], [-74.3031, 41.1745], [-74.699, 41.3572], [-74.7204, 41.3948], [-74.7566, 41.4239], [-74.9354, 41.4743], [-74.9813, 41.5077], [-75.0227, 41.5529], [-75.0512, 41.6083], [-75.0662, 41.6666], [-75.0669, 41.7132], [-75.0537, 41.765], [-75.0949, 41.7995], [-75.0955, 41.8317], [-75.1219, 41.8534], [-75.2388, 41.8922], [-75.2739, 41.9467], [-75.3513, 41.9984], [-75.765, 41.9986], [-76.4541, 41.999], [-77.0057, 41.9993], [-77.4194, 41.9995], [-77.9707, 41.9998], [-78.66, 42.0002], [-79.2115, 42.0005], [-79.763, 42.0009], [-79.763, 42.2757], [-79.7041, 42.3001], [-79.5123, 42.391], [-79.4164, 42.4568], [-79.3153, 42.5115], [-79.2092, 42.5551], [-79.125, 42.6112], [-79.0625, 42.6798], [-78.9935, 42.7307], [-78.9182, 42.764], [-78.8778, 42.7991], [-78.8723, 42.836], [-78.8863, 42.8856], [-78.9197, 42.9481], [-78.9243, 42.9975], [-78.9001, 43.0334], [-78.9082, 43.0703], [-79.0661, 43.1061], [-79.0592, 43.2781], [-79.0532, 43.285], [-78.6895, 43.3614], [-78.4575, 43.3876], [-78.1749, 43.3946], [-77.8381, 43.3572], [-77.7073, 43.3229], [-77.6246, 43.2792], [-77.529, 43.2674], [-77.4209, 43.2878], [-77.2708, 43.2945], [-77.079, 43.2877], [-76.9764, 43.2775], [-76.8854, 43.314], [-76.6929, 43.3609], [-76.6531, 43.405], [-76.5798, 43.4538], [-76.4728, 43.5073], [-76.3761, 43.535], [-76.2896, 43.5374], [-76.2317, 43.5505], [-76.2027, 43.5745], [-76.1951, 43.6447], [-76.2097, 43.6704], [-76.218, 43.7578], [-76.2845, 43.8692], [-76.1984, 43.8745], [-76.0987, 43.967], [-76.1019, 44.0032], [-76.1754, 43.9938], [-76.1922, 44.0033], [-76.1541, 44.0454], [-76.1613, 44.0694], [-76.1976, 44.0835], [-76.2807, 44.0465], [-76.3524, 44.106], [-76.2378, 44.1832], [-75.8322, 44.3972], [-75.7909, 44.4299], [-75.7758, 44.4588], [-75.792, 44.4971], [-75.4012, 44.7723], [-75.1795, 44.8994], [-74.9961, 44.9701], [-74.8565, 45.0039], [-74.7625, 44.9991], [-74.7089, 45.0039], [-74.0142, 45.0047], [-73.3522, 45.0054], [-73.3452, 44.9389], [-73.3659, 44.8603], [-73.3485, 44.7753], [-73.372, 44.5973], [-73.3098, 44.4596], [-73.3246, 44.3679], [-73.3209, 44.2689], [-73.3811, 44.1875], [-73.4098, 44.1314], [-73.4261, 44.0749], [-73.425, 44.0383], [-73.383, 43.8758], [-73.3757, 43.7622], [-73.4133, 43.6279], [-73.4159, 43.5897], [-73.3915, 43.5785], [-73.3493, 43.6203], [-73.3062, 43.6163], [-73.2471, 43.553], [-73.2552, 43.2654], [-73.2666, 42.8648], [-73.2802, 42.8132], [-73.2533, 42.7522]]], [[[-78.9299, 43.0225], [-78.9606, 42.9882], [-79.012, 43.0027], [-79.0142, 43.0515], [-78.9879, 43.0636], [-78.9163, 43.0532], [-78.9299, 43.0225]]]] }, \"properties\": { \"name\": \"New York\", \"id\": \"US-NY\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-NY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-80.519, 40.647], [-80.6375, 40.6033], [-80.6591, 40.5629], [-80.6232, 40.5116], [-80.6042, 40.4452], [-80.6018, 40.3639], [-80.6683, 40.1853], [-80.8035, 39.9091], [-80.8722, 39.7355], [-80.8743, 39.6643], [-80.9633, 39.5711], [-81.1391, 39.456], [-81.2626, 39.3865], [-81.3334, 39.3628], [-81.3925, 39.3649], [-81.4396, 39.3926], [-81.4927, 39.3736], [-81.5517, 39.3079], [-81.6065, 39.2742], [-81.6571, 39.272], [-81.7006, 39.2295], [-81.7367, 39.1467], [-81.7707, 39.0988], [-81.8026, 39.0861], [-81.8049, 39.044], [-81.7778, 38.9728], [-81.8437, 38.9343], [-81.8824, 38.8942], [-81.9074, 38.9003], [-81.9185, 38.9524], [-81.9499, 38.9893], [-82.001, 39.0111], [-82.0722, 38.9629], [-82.1634, 38.8449], [-82.2034, 38.7682], [-82.1876, 38.7153], [-82.18, 38.6376], [-82.2026, 38.6059], [-82.2524, 38.5941], [-82.2908, 38.552], [-82.3181, 38.4796], [-82.387, 38.4339], [-82.4975, 38.415], [-82.6129, 38.4482], [-82.7582, 38.5412], [-82.8446, 38.6277], [-82.8805, 38.7102], [-83.0001, 38.7141], [-83.2035, 38.6389], [-83.357, 38.6274], [-83.4606, 38.6795], [-83.5384, 38.6998], [-83.6163, 38.6828], [-83.6898, 38.6495], [-83.7524, 38.6694], [-83.828, 38.7312], [-83.9484, 38.7743], [-84.1133, 38.7984], [-84.2272, 38.8652], [-84.2904, 38.9747], [-84.358, 39.0499], [-84.43, 39.0909], [-84.5089, 39.1028], [-84.5946, 39.0858], [-84.6605, 39.0944], [-84.7069, 39.1289], [-84.7658, 39.125], [-84.8216, 39.092], [-84.8201, 39.4238], [-84.8167, 39.7492], [-84.8133, 40.0745], [-84.8098, 40.4], [-84.8064, 40.7254], [-84.803, 41.0506], [-84.7996, 41.376], [-84.7961, 41.7014], [-84.4632, 41.7109], [-83.7972, 41.7299], [-83.4643, 41.7394], [-83.4542, 41.7456], [-83.443, 41.7249], [-83.3522, 41.714], [-83.2907, 41.6933], [-83.2425, 41.6619], [-83.0691, 41.6006], [-83.0161, 41.5628], [-82.9632, 41.5419], [-82.9108, 41.5382], [-82.8308, 41.5797], [-82.8007, 41.5557], [-82.7031, 41.5295], [-82.6999, 41.5212], [-82.9708, 41.4757], [-83.0275, 41.4546], [-82.9595, 41.4397], [-82.8912, 41.4434], [-82.8223, 41.4652], [-82.7431, 41.4641], [-82.6735, 41.4536], [-82.6426, 41.4668], [-82.5243, 41.407], [-82.4803, 41.3981], [-82.4345, 41.4048], [-82.3869, 41.4276], [-82.2825, 41.4568], [-82.1213, 41.493], [-81.9663, 41.5077], [-81.8174, 41.5008], [-81.7232, 41.511], [-81.6372, 41.5484], [-81.4471, 41.6714], [-81.2286, 41.7704], [-80.8692, 41.8933], [-80.5202, 41.9895], [-80.5202, 41.5914], [-80.5202, 41.2769], [-80.5202, 40.7527], [-80.519, 40.647]]] }, \"properties\": { \"name\": \"Ohio\", \"id\": \"US-OH\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-OH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-94.6184, 36.5009], [-94.5288, 35.9441], [-94.4391, 35.3872], [-94.4475, 35.0613], [-94.4616, 34.5178], [-94.473, 34.0832], [-94.4841, 33.6485], [-94.7091, 33.6994], [-94.7656, 33.7316], [-94.8693, 33.7682], [-94.9624, 33.8433], [-95.1461, 33.9366], [-95.2158, 33.9591], [-95.238, 33.9565], [-95.276, 33.9107], [-95.3739, 33.8743], [-95.4271, 33.8728], [-95.5235, 33.8865], [-95.5557, 33.926], [-95.5945, 33.9452], [-95.6228, 33.9303], [-95.7632, 33.8915], [-95.7839, 33.8645], [-95.863, 33.8632], [-95.9416, 33.8828], [-96.1393, 33.822], [-96.2073, 33.7741], [-96.2785, 33.7576], [-96.3151, 33.7112], [-96.3368, 33.7177], [-96.4111, 33.7752], [-96.4872, 33.7923], [-96.5917, 33.8492], [-96.5954, 33.8994], [-96.6486, 33.9064], [-96.694, 33.8638], [-96.7464, 33.8542], [-96.8476, 33.8832], [-96.8899, 33.9347], [-96.9341, 33.9535], [-96.9777, 33.938], [-97.0021, 33.8816], [-97.0638, 33.8568], [-97.0613, 33.8285], [-97.0989, 33.7504], [-97.1191, 33.7347], [-97.1724, 33.7568], [-97.2011, 33.8081], [-97.1861, 33.8701], [-97.2149, 33.8971], [-97.2647, 33.8678], [-97.3081, 33.8693], [-97.3637, 33.8402], [-97.4302, 33.8385], [-97.4816, 33.8857], [-97.5713, 33.916], [-97.6217, 33.9877], [-97.6604, 33.9901], [-97.7953, 33.8992], [-97.8424, 33.8757], [-97.9216, 33.8783], [-97.9463, 33.8971], [-97.951, 33.9713], [-97.974, 33.9938], [-98.0695, 34.0404], [-98.0896, 34.0841], [-98.0987, 34.145], [-98.2141, 34.1354], [-98.3559, 34.1414], [-98.4205, 34.0881], [-98.4537, 34.0781], [-98.4938, 34.0888], [-98.6085, 34.1612], [-98.7301, 34.1465], [-98.7989, 34.1547], [-98.9688, 34.2086], [-99.1024, 34.2134], [-99.1866, 34.2355], [-99.1999, 34.3183], [-99.2704, 34.4072], [-99.3603, 34.4561], [-99.3846, 34.4468], [-99.405, 34.392], [-99.4323, 34.3892], [-99.5361, 34.4047], [-99.6321, 34.3885], [-99.6856, 34.4158], [-99.867, 34.5434], [-99.9406, 34.5763], [-99.9995, 34.5867], [-99.9997, 34.826], [-100.0005, 35.3045], [-100.0012, 35.7831], [-100.0019, 36.1419], [-100.0023, 36.5009], [-100.5645, 36.5009], [-100.9393, 36.5011], [-101.314, 36.5011], [-101.6888, 36.5011], [-102.0636, 36.5012], [-102.6256, 36.5012], [-103.0002, 36.5012], [-103.0008, 37.0009], [-102.5067, 37.0009], [-102.0128, 37.0009], [-101.5506, 37.0009], [-101.0885, 37.0009], [-100.6262, 37.0009], [-99.9329, 37.0009], [-99.4708, 37.0009], [-99.0086, 37.0009], [-98.5465, 37.0009], [-98.0844, 37.0009], [-97.6222, 37.0009], [-97.1601, 37.0009], [-96.4668, 37.0009], [-96.0045, 37.0009], [-95.5424, 37.0009], [-94.8493, 37.0009], [-94.6181, 37.0009], [-94.6184, 36.5009]]] }, \"properties\": { \"name\": \"Oklahoma\", \"id\": \"US-OK\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-OK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-123.2206, 46.1537], [-123.1209, 46.1787], [-123.0423, 46.16], [-122.942, 46.1148], [-122.8434, 45.9781], [-122.7464, 45.7497], [-122.7259, 45.6737], [-122.6498, 45.6275], [-122.561, 45.625], [-122.2026, 45.591], [-122.0851, 45.6026], [-121.882, 45.6895], [-121.6625, 45.7182], [-121.4021, 45.7118], [-121.2427, 45.687], [-121.1843, 45.6437], [-121.0451, 45.639], [-120.7158, 45.6898], [-120.3514, 45.7251], [-120.156, 45.7622], [-119.9343, 45.8379], [-119.4292, 45.9343], [-119.1773, 45.9451], [-119.0499, 45.9816], [-119.0197, 46.0003], [-118.737, 46.0008], [-118.2062, 46.0013], [-117.6752, 46.0017], [-116.8965, 46.0021], [-116.8692, 45.9585], [-116.7647, 45.873], [-116.6168, 45.7992], [-116.5209, 45.7219], [-116.4771, 45.6411], [-116.5492, 45.4567], [-116.7373, 45.1688], [-116.8396, 44.9851], [-116.8559, 44.9057], [-116.9489, 44.7701], [-117.1189, 44.5783], [-117.2017, 44.4362], [-117.1974, 44.3438], [-117.1398, 44.2903], [-117.029, 44.2756], [-116.9531, 44.2453], [-116.9124, 44.1995], [-116.9113, 44.1574], [-116.9497, 44.119], [-116.9607, 44.0791], [-116.944, 44.0377], [-116.9577, 43.9642], [-117.0205, 43.8132], [-117.0198, 43.5629], [-117.019, 43.1165], [-117.018, 42.6702], [-117.0172, 42.2237], [-117.0166, 42.0005], [-117.3897, 42.0005], [-117.7627, 42.0005], [-118.1357, 42.0005], [-118.5088, 42.0005], [-118.8818, 42.0005], [-119.2547, 42.0005], [-119.6279, 42.0005], [-120.0008, 42.0005], [-120.2645, 42.0005], [-120.7917, 42.0005], [-121.0554, 42.0005], [-121.5828, 42.0005], [-122.11, 42.0005], [-122.3737, 42.0005], [-122.901, 42.0005], [-123.4283, 42.0005], [-123.9556, 42.0005], [-124.2284, 42.0008], [-124.3553, 42.1228], [-124.41, 42.3043], [-124.4205, 42.381], [-124.4062, 42.5837], [-124.4438, 42.6702], [-124.5396, 42.8128], [-124.4986, 42.9369], [-124.4544, 43.0123], [-124.3466, 43.3415], [-124.3206, 43.3681], [-124.2755, 43.3673], [-124.197, 43.4233], [-124.2332, 43.4363], [-124.288, 43.4097], [-124.2392, 43.5401], [-124.1844, 43.6516], [-124.1487, 43.6918], [-124.1307, 44.0557], [-124.0991, 44.3338], [-124.0474, 44.4255], [-124.0655, 44.52], [-124.0446, 44.6482], [-124.0592, 44.7778], [-123.9486, 45.4008], [-123.9631, 45.4761], [-123.9294, 45.5771], [-123.9612, 45.8429], [-123.9471, 46.1406], [-123.9893, 46.2193], [-123.963, 46.2254], [-123.9117, 46.1822], [-123.6737, 46.1826], [-123.5217, 46.2226], [-123.4664, 46.2095], [-123.4023, 46.155], [-123.3215, 46.1441], [-123.2206, 46.1537]]] }, \"properties\": { \"name\": \"Oregon\", \"id\": \"US-OR\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-OR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-74.699, 41.3572], [-74.7778, 41.325], [-74.8414, 41.2687], [-74.9123, 41.1553], [-75.0315, 41.0519], [-75.123, 40.9991], [-75.1228, 40.9718], [-75.075, 40.8844], [-75.0757, 40.8563], [-75.1119, 40.802], [-75.1748, 40.7756], [-75.1923, 40.6899], [-75.1889, 40.5958], [-75.1705, 40.5767], [-75.0975, 40.5431], [-75.0341, 40.4204], [-74.9764, 40.4058], [-74.7349, 40.1545], [-74.9093, 40.0795], [-75.0235, 40.0174], [-75.0741, 39.9834], [-75.1729, 39.8948], [-75.3208, 39.8647], [-75.4006, 39.8316], [-75.4211, 39.8154], [-75.5105, 39.8434], [-75.6346, 39.8394], [-75.6768, 39.8272], [-75.7092, 39.803], [-75.7847, 39.7223], [-76.0156, 39.7223], [-76.708, 39.7225], [-77.4003, 39.7226], [-78.0926, 39.7226], [-78.7851, 39.7227], [-79.4776, 39.7227], [-79.9985, 39.7226], [-80.5194, 39.7226], [-80.5198, 40.1851], [-80.519, 40.647], [-80.5202, 40.7527], [-80.5202, 41.2769], [-80.5202, 41.5914], [-80.5202, 41.9895], [-80.3344, 42.0408], [-80.0762, 42.146], [-79.763, 42.2757], [-79.763, 42.0009], [-79.2115, 42.0005], [-78.66, 42.0002], [-77.9707, 41.9998], [-77.4194, 41.9995], [-77.0057, 41.9993], [-76.4541, 41.999], [-75.765, 41.9986], [-75.3513, 41.9984], [-75.2739, 41.9467], [-75.2388, 41.8922], [-75.1219, 41.8534], [-75.0955, 41.8317], [-75.0949, 41.7995], [-75.0537, 41.765], [-75.0669, 41.7132], [-75.0662, 41.6666], [-75.0512, 41.6083], [-75.0227, 41.5529], [-74.9813, 41.5077], [-74.9354, 41.4743], [-74.7566, 41.4239], [-74.7204, 41.3948], [-74.699, 41.3572]]] }, \"properties\": { \"name\": \"Pennsylvania\", \"id\": \"US-PA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-PA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-71.2338, 41.7065], [-71.2711, 41.6813], [-71.3108, 41.7199], [-71.3306, 41.7622], [-71.3901, 41.7954], [-71.3636, 41.7027], [-71.4265, 41.6333], [-71.4437, 41.4536], [-71.5229, 41.3789], [-71.7694, 41.3309], [-71.8423, 41.3354], [-71.8298, 41.3928], [-71.8046, 41.4168], [-71.7958, 41.5199], [-71.8009, 42.0119], [-71.3871, 42.0169], [-71.3791, 41.9024], [-71.3377, 41.8915], [-71.3407, 41.7978], [-71.2679, 41.7508], [-71.2338, 41.7065]]], [[[-71.2413, 41.492], [-71.2909, 41.4646], [-71.3462, 41.4694], [-71.3181, 41.5063], [-71.3074, 41.5605], [-71.2801, 41.62], [-71.232, 41.6544], [-71.2413, 41.492]]], [[[-71.3654, 41.4853], [-71.4034, 41.5151], [-71.384, 41.5706], [-71.3546, 41.5422], [-71.3654, 41.4853]]]] }, \"properties\": { \"name\": \"Rhode Island\", \"id\": \"US-RI\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-RI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-78.5643, 33.8767], [-78.5778, 33.8732], [-78.8414, 33.724], [-78.9203, 33.6588], [-79.1382, 33.4059], [-79.1937, 33.2441], [-79.2384, 33.3121], [-79.2265, 33.4048], [-79.2813, 33.3154], [-79.2292, 33.1852], [-79.276, 33.1354], [-79.42, 33.0425], [-79.4987, 33.0273], [-79.5871, 33.0009], [-79.615, 32.9093], [-79.7349, 32.8248], [-79.805, 32.7874], [-79.9331, 32.81], [-79.8936, 32.7287], [-79.9408, 32.6672], [-80.0217, 32.6199], [-80.1226, 32.5891], [-80.1803, 32.5929], [-80.2297, 32.5765], [-80.2683, 32.5373], [-80.3628, 32.5008], [-80.461, 32.5213], [-80.5722, 32.5337], [-80.6342, 32.5117], [-80.5301, 32.4753], [-80.4743, 32.4228], [-80.4857, 32.3517], [-80.5137, 32.3244], [-80.5793, 32.2873], [-80.6083, 32.2928], [-80.6472, 32.3959], [-80.6778, 32.3811], [-80.683, 32.3486], [-80.7093, 32.3371], [-80.8026, 32.4481], [-80.7979, 32.3634], [-80.7653, 32.2984], [-80.7021, 32.2459], [-80.6942, 32.2157], [-80.758, 32.1422], [-80.7908, 32.1257], [-80.8492, 32.114], [-80.882, 32.0686], [-80.8724, 32.0295], [-81.0748, 32.1097], [-81.1351, 32.1818], [-81.133, 32.2747], [-81.1714, 32.3801], [-81.2903, 32.5573], [-81.377, 32.6075], [-81.4339, 32.7281], [-81.4897, 32.9356], [-81.5783, 33.0686], [-81.6994, 33.1267], [-81.7803, 33.1953], [-81.8213, 33.274], [-81.864, 33.3254], [-81.9087, 33.3493], [-81.9329, 33.3899], [-81.9363, 33.4473], [-82.0057, 33.5229], [-82.2084, 33.6636], [-82.2566, 33.7493], [-82.3519, 33.8377], [-82.5894, 34.0176], [-82.8187, 34.3661], [-82.8478, 34.4369], [-82.8967, 34.4657], [-82.9757, 34.4763], [-83.0528, 34.5109], [-83.1664, 34.5996], [-83.3557, 34.7083], [-83.3167, 34.8057], [-83.1704, 34.9329], [-83.1149, 35.0015], [-83.0966, 35.0016], [-82.7776, 35.0866], [-82.744, 35.084], [-82.6515, 35.128], [-82.464, 35.178], [-82.3925, 35.211], [-82.356, 35.2015], [-81.7217, 35.1786], [-81.0874, 35.1556], [-81.0469, 35.1311], [-81.0451, 35.0657], [-80.9337, 35.1136], [-80.793, 34.9628], [-80.7841, 34.8286], [-80.2188, 34.8127], [-79.6535, 34.7968], [-79.3835, 34.5684], [-78.9784, 34.2261], [-78.5643, 33.8767]]] }, \"properties\": { \"name\": \"South Carolina\", \"id\": \"US-SC\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-SC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-96.5563, 45.9428], [-96.591, 45.8433], [-96.6146, 45.8], [-96.6627, 45.7556], [-96.8137, 45.6592], [-96.8511, 45.626], [-96.8455, 45.5958], [-96.7374, 45.4678], [-96.696, 45.4317], [-96.5298, 45.3715], [-96.4536, 45.2973], [-96.4536, 45.0727], [-96.4536, 44.6238], [-96.4536, 44.1747], [-96.4536, 43.7258], [-96.4536, 43.5012], [-96.5985, 43.4976], [-96.5813, 43.4349], [-96.5416, 43.3735], [-96.5426, 43.309], [-96.5699, 43.2834], [-96.5555, 43.2317], [-96.4902, 43.2055], [-96.4681, 43.1703], [-96.4627, 43.0992], [-96.5021, 43.0433], [-96.5132, 42.9691], [-96.5626, 42.8586], [-96.6161, 42.7914], [-96.6218, 42.7296], [-96.5388, 42.6587], [-96.5064, 42.5935], [-96.4809, 42.5113], [-96.558, 42.5247], [-96.6328, 42.5686], [-96.6756, 42.6376], [-96.8045, 42.7015], [-97.0198, 42.7601], [-97.1644, 42.8132], [-97.2388, 42.8605], [-97.4166, 42.8811], [-97.6981, 42.8746], [-97.8809, 42.8495], [-97.965, 42.8058], [-98.1432, 42.8523], [-98.4417, 43.0011], [-98.8372, 43.0012], [-99.5294, 43.0012], [-100.2216, 43.0012], [-100.9139, 43.0013], [-101.606, 43.0013], [-101.9522, 43.0013], [-102.6444, 43.0013], [-103.3366, 43.0013], [-104.0288, 43.0013], [-104.031, 43.5013], [-104.033, 44.0012], [-104.0351, 44.5012], [-104.0372, 45.0011], [-104.0055, 45.001], [-104.008, 45.4782], [-104.0111, 45.943], [-103.3122, 45.943], [-102.8464, 45.943], [-102.3804, 45.9429], [-101.9144, 45.9429], [-101.2156, 45.9429], [-100.7496, 45.9429], [-100.2837, 45.9429], [-99.8179, 45.9429], [-99.119, 45.9429], [-98.653, 45.9429], [-98.1871, 45.9428], [-97.4882, 45.9428], [-96.7894, 45.9428], [-96.5563, 45.9428]]] }, \"properties\": { \"name\": \"South Dakota\", \"id\": \"US-SD\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-SD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.6676, 36.605], [-82.9558, 36.6021], [-82.3294, 36.5995], [-81.9525, 36.598], [-81.9053, 36.6186], [-81.6589, 36.6106], [-81.7044, 36.534], [-81.7076, 36.482], [-81.7334, 36.4059], [-81.7342, 36.3554], [-81.8082, 36.3527], [-81.8512, 36.3397], [-81.9082, 36.3065], [-82.0513, 36.1229], [-82.1006, 36.1065], [-82.1826, 36.1539], [-82.295, 36.134], [-82.3682, 36.0996], [-82.4783, 36.01], [-82.5211, 35.9812], [-82.5768, 35.9723], [-82.6111, 36.0474], [-82.7001, 36.0299], [-82.7556, 35.9999], [-82.8128, 35.9473], [-82.8878, 35.9517], [-82.9019, 35.9391], [-82.9202, 35.8789], [-82.9495, 35.8345], [-82.9902, 35.8004], [-83.1204, 35.7746], [-83.2842, 35.682], [-83.5112, 35.5841], [-83.7227, 35.5598], [-83.8117, 35.5402], [-83.8712, 35.5149], [-84.0038, 35.4141], [-84.0623, 35.286], [-84.1286, 35.2615], [-84.2324, 35.2605], [-84.2611, 35.2495], [-84.287, 35.2009], [-84.3247, 34.988], [-84.9741, 34.9945], [-85.6235, 35.0009], [-86.1048, 35.0055], [-86.4257, 35.0083], [-86.9071, 35.0129], [-87.3883, 35.0174], [-87.7092, 35.0204], [-88.1905, 35.0249], [-88.1733, 34.999], [-88.4448, 34.9991], [-88.976, 34.9997], [-89.2418, 35], [-89.773, 35.0005], [-90.2938, 35.0012], [-90.2559, 35.0463], [-90.1423, 35.1142], [-90.0929, 35.2036], [-90.1078, 35.3143], [-90.066, 35.4141], [-89.9674, 35.5033], [-89.9266, 35.5917], [-89.9436, 35.6791], [-89.8946, 35.7506], [-89.7796, 35.8057], [-89.7635, 35.8281], [-89.7635, 35.8888], [-89.7037, 35.9069], [-89.6892, 35.9436], [-89.7047, 36.0015], [-89.6977, 36.0303], [-89.6419, 36.1045], [-89.6342, 36.168], [-89.6745, 36.2206], [-89.6541, 36.2479], [-89.5946, 36.2594], [-89.5835, 36.2877], [-89.6117, 36.322], [-89.6041, 36.352], [-89.5552, 36.3728], [-89.5406, 36.4267], [-89.5573, 36.5011], [-89.4872, 36.5031], [-89.4503, 36.5], [-89.079, 36.5], [-88.7336, 36.4998], [-88.3883, 36.4997], [-88.0591, 36.4997], [-88.0568, 36.5903], [-88.0964, 36.693], [-87.8688, 36.6751], [-87.8392, 36.6439], [-87.5062, 36.6491], [-86.8405, 36.6596], [-86.5076, 36.6648], [-86.1605, 36.6552], [-85.8133, 36.6453], [-85.4661, 36.6356], [-85.1191, 36.6258], [-84.7719, 36.6161], [-84.4247, 36.6062], [-84.0775, 36.5966], [-83.7304, 36.5868], [-83.6676, 36.605]]] }, \"properties\": { \"name\": \"Tennessee\", \"id\": \"US-TN\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-TN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-97.1708, 26.1594], [-97.1845, 26.1129], [-97.2673, 26.3299], [-97.4021, 26.8205], [-97.4073, 27.1002], [-97.386, 27.1965], [-97.3512, 26.8014], [-97.2023, 26.2998], [-97.1708, 26.1594]]], [[[-97.0144, 27.9017], [-97.0361, 27.8991], [-96.9876, 27.9811], [-96.9786, 28.0139], [-96.8992, 28.1174], [-96.8574, 28.1329], [-96.8397, 28.0889], [-96.9213, 28.016], [-97.0144, 27.9017]]], [[[-97.3535, 27.3001], [-97.3762, 27.3282], [-97.295, 27.5231], [-97.13, 27.7791], [-97.0605, 27.822], [-97.2508, 27.5412], [-97.3535, 27.3001]]], [[[-96.7643, 28.1526], [-96.8011, 28.1484], [-96.7557, 28.2024], [-96.6816, 28.2297], [-96.5193, 28.3335], [-96.4133, 28.3377], [-96.544, 28.2756], [-96.7643, 28.1526]]], [[[-94.4841, 33.6485], [-94.432, 33.5997], [-94.3902, 33.5857], [-94.3778, 33.5661], [-94.3326, 33.565], [-94.2947, 33.5875], [-94.2385, 33.5812], [-94.1915, 33.589], [-94.0988, 33.5773], [-94.0472, 33.5544], [-94.0413, 33.012], [-94.0423, 32.5056], [-94.0434, 31.9992], [-93.905, 31.877], [-93.8457, 31.7929], [-93.8269, 31.7503], [-93.8206, 31.604], [-93.8069, 31.5689], [-93.7376, 31.5138], [-93.7361, 31.4777], [-93.6637, 31.3723], [-93.6659, 31.3226], [-93.5969, 31.2098], [-93.5577, 31.1804], [-93.5514, 31.104], [-93.5306, 31.0462], [-93.5626, 31.0049], [-93.5492, 30.9477], [-93.5687, 30.8947], [-93.5792, 30.8238], [-93.6248, 30.7143], [-93.6652, 30.6607], [-93.7202, 30.5583], [-93.7153, 30.4733], [-93.7467, 30.3803], [-93.7504, 30.3448], [-93.7209, 30.283], [-93.7106, 30.1128], [-93.7269, 30.077], [-93.794, 29.9772], [-93.8414, 29.9798], [-93.9462, 29.815], [-93.8864, 29.7227], [-93.8905, 29.6894], [-94.0996, 29.6704], [-94.5745, 29.4845], [-94.7596, 29.3843], [-94.7501, 29.418], [-94.5262, 29.548], [-94.6053, 29.5677], [-94.7326, 29.5354], [-94.7782, 29.5478], [-94.7243, 29.6552], [-94.7419, 29.75], [-94.8323, 29.7526], [-94.8899, 29.6769], [-94.9299, 29.6802], [-94.9823, 29.7127], [-95.0229, 29.7024], [-94.9928, 29.531], [-94.9359, 29.4605], [-94.8883, 29.3705], [-95.0183, 29.2595], [-95.139, 29.1679], [-95.1522, 29.0792], [-95.2735, 28.9638], [-95.6558, 28.7446], [-95.7325, 28.7117], [-95.8534, 28.6404], [-96.0204, 28.5869], [-96.1805, 28.5019], [-96.2345, 28.489], [-96.1323, 28.5608], [-96.011, 28.632], [-96.115, 28.6221], [-96.2753, 28.6552], [-96.3735, 28.6571], [-96.3741, 28.631], [-96.4488, 28.5944], [-96.526, 28.6483], [-96.5756, 28.7156], [-96.6085, 28.7233], [-96.6401, 28.7088], [-96.5246, 28.4887], [-96.4754, 28.4792], [-96.4211, 28.4573], [-96.4888, 28.406], [-96.5618, 28.3671], [-96.6764, 28.3413], [-96.7736, 28.4217], [-96.7945, 28.3209], [-96.8068, 28.2202], [-96.8916, 28.1576], [-96.9198, 28.1853], [-96.9333, 28.2242], [-96.9667, 28.1895], [-97.0155, 28.1635], [-97.096, 28.1582], [-97.1565, 28.1444], [-97.155, 28.1026], [-97.1413, 28.0607], [-97.0343, 28.0938], [-97.0731, 27.9862], [-97.1714, 27.8796], [-97.2517, 27.8544], [-97.3741, 27.87], [-97.4316, 27.8372], [-97.2888, 27.6706], [-97.3804, 27.4194], [-97.4391, 27.3282], [-97.5238, 27.314], [-97.6821, 27.3949], [-97.7685, 27.4575], [-97.6924, 27.2872], [-97.4852, 27.2373], [-97.4746, 27.1729], [-97.4757, 27.1179], [-97.5166, 27.0532], [-97.5547, 26.9673], [-97.5266, 26.9075], [-97.4938, 26.7596], [-97.4658, 26.6917], [-97.435, 26.4858], [-97.4024, 26.3965], [-97.2139, 26.0678], [-97.1503, 26.0653], [-97.1402, 26.0297], [-97.1462, 25.9614], [-97.2818, 25.9417], [-97.3386, 25.9112], [-97.3582, 25.8705], [-97.4402, 25.8908], [-97.5872, 25.9843], [-97.8015, 26.042], [-98.0828, 26.0645], [-98.275, 26.1113], [-98.3781, 26.1823], [-98.4859, 26.2245], [-98.5983, 26.2378], [-98.6914, 26.2765], [-98.7652, 26.3404], [-98.8731, 26.3811], [-99.0153, 26.399], [-99.1077, 26.4468], [-99.1721, 26.5641], [-99.2299, 26.7619], [-99.3025, 26.8848], [-99.4436, 27.0366], [-99.4578, 27.0817], [-99.4403, 27.1701], [-99.4552, 27.2336], [-99.4998, 27.2855], [-99.5101, 27.3403], [-99.4859, 27.398], [-99.4843, 27.4674], [-99.5053, 27.5483], [-99.5954, 27.6358], [-99.7543, 27.73], [-99.8896, 27.8673], [-100.0014, 28.0479], [-100.1119, 28.1729], [-100.2213, 28.2426], [-100.296, 28.3277], [-100.3362, 28.4281], [-100.3482, 28.4865], [-100.3317, 28.5026], [-100.3989, 28.6142], [-100.5497, 28.8214], [-100.6364, 28.9728], [-100.6586, 29.0686], [-100.7546, 29.1825], [-100.9241, 29.3147], [-101.0164, 29.4007], [-101.039, 29.4605], [-101.3035, 29.6341], [-101.3804, 29.7426], [-101.4405, 29.7768], [-101.5093, 29.7731], [-101.5445, 29.7836], [-101.5687, 29.8092], [-101.6116, 29.787], [-101.7523, 29.7825], [-101.9909, 29.7958], [-102.1631, 29.8252], [-102.269, 29.8712], [-102.3431, 29.865], [-102.3857, 29.8066], [-102.4763, 29.769], [-102.6149, 29.7523], [-102.7342, 29.644], [-102.834, 29.444], [-102.8779, 29.3153], [-102.8656, 29.2581], [-102.8919, 29.2164], [-102.9568, 29.1904], [-103.0227, 29.1322], [-103.0901, 29.0419], [-103.1684, 28.9981], [-103.2576, 29.0011], [-103.423, 29.0707], [-103.664, 29.207], [-103.8529, 29.291], [-103.9897, 29.3231], [-104.1107, 29.3862], [-104.2156, 29.4798], [-104.3122, 29.5425], [-104.4007, 29.5738], [-104.5041, 29.6777], [-104.6223, 29.8543], [-104.6812, 29.9905], [-104.6812, 30.1343], [-104.8359, 30.4476], [-104.9178, 30.5834], [-104.9788, 30.6459], [-105.0981, 30.7205], [-105.2758, 30.8073], [-105.514, 30.9808], [-105.8126, 31.241], [-106.0241, 31.3978], [-106.148, 31.4508], [-106.2558, 31.5446], [-106.347, 31.679], [-106.4454, 31.7684], [-106.5664, 31.8196], [-106.6683, 32.001], [-105.9879, 32.0015], [-105.5382, 32.0018], [-105.0886, 32.0019], [-104.4144, 32.0022], [-103.9648, 32.0023], [-103.2904, 32.0026], [-103.0656, 32.0027], [-103.0641, 32.2838], [-103.0613, 32.8461], [-103.0582, 33.4084], [-103.0569, 33.6895], [-103.0539, 34.2517], [-103.0508, 34.8139], [-103.048, 35.3761], [-103.0451, 35.9384], [-103.0422, 36.5006], [-103.0002, 36.5012], [-102.6256, 36.5012], [-102.0636, 36.5012], [-101.6888, 36.5011], [-101.314, 36.5011], [-100.9393, 36.5011], [-100.5645, 36.5009], [-100.0023, 36.5009], [-100.0019, 36.1419], [-100.0012, 35.7831], [-100.0005, 35.3045], [-99.9997, 34.826], [-99.9995, 34.5867], [-99.9406, 34.5763], [-99.867, 34.5434], [-99.6856, 34.4158], [-99.6321, 34.3885], [-99.5361, 34.4047], [-99.4323, 34.3892], [-99.405, 34.392], [-99.3846, 34.4468], [-99.3603, 34.4561], [-99.2704, 34.4072], [-99.1999, 34.3183], [-99.1866, 34.2355], [-99.1024, 34.2134], [-98.9688, 34.2086], [-98.7989, 34.1547], [-98.7301, 34.1465], [-98.6085, 34.1612], [-98.4938, 34.0888], [-98.4537, 34.0781], [-98.4205, 34.0881], [-98.3559, 34.1414], [-98.2141, 34.1354], [-98.0987, 34.145], [-98.0896, 34.0841], [-98.0695, 34.0404], [-97.974, 33.9938], [-97.951, 33.9713], [-97.9463, 33.8971], [-97.9216, 33.8783], [-97.8424, 33.8757], [-97.7953, 33.8992], [-97.6604, 33.9901], [-97.6217, 33.9877], [-97.5713, 33.916], [-97.4816, 33.8857], [-97.4302, 33.8385], [-97.3637, 33.8402], [-97.3081, 33.8693], [-97.2647, 33.8678], [-97.2149, 33.8971], [-97.1861, 33.8701], [-97.2011, 33.8081], [-97.1724, 33.7568], [-97.1191, 33.7347], [-97.0989, 33.7504], [-97.0613, 33.8285], [-97.0638, 33.8568], [-97.0021, 33.8816], [-96.9777, 33.938], [-96.9341, 33.9535], [-96.8899, 33.9347], [-96.8476, 33.8832], [-96.7464, 33.8542], [-96.694, 33.8638], [-96.6486, 33.9064], [-96.5954, 33.8994], [-96.5917, 33.8492], [-96.4872, 33.7923], [-96.4111, 33.7752], [-96.3368, 33.7177], [-96.3151, 33.7112], [-96.2785, 33.7576], [-96.2073, 33.7741], [-96.1393, 33.822], [-95.9416, 33.8828], [-95.863, 33.8632], [-95.7839, 33.8645], [-95.7632, 33.8915], [-95.6228, 33.9303], [-95.5945, 33.9452], [-95.5557, 33.926], [-95.5235, 33.8865], [-95.4271, 33.8728], [-95.3739, 33.8743], [-95.276, 33.9107], [-95.238, 33.9565], [-95.2158, 33.9591], [-95.1461, 33.9366], [-94.9624, 33.8433], [-94.8693, 33.7682], [-94.7656, 33.7316], [-94.7091, 33.6994], [-94.4841, 33.6485]]], [[[-95.0397, 29.1459], [-95.0896, 29.1363], [-94.8718, 29.2902], [-94.826, 29.3413], [-94.7677, 29.339], [-94.865, 29.2529], [-95.0397, 29.1459]]]] }, \"properties\": { \"name\": \"Texas\", \"id\": \"US-TX\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-TX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-111.0503, 42.0009], [-111.0502, 41.6259], [-111.0502, 41.2508], [-111.05, 41.0009], [-110.5491, 41.0009], [-110.2986, 41.0009], [-109.7978, 41.0009], [-109.5473, 41.0009], [-109.0464, 41.0009], [-109.0465, 40.5009], [-109.0465, 40.0008], [-109.0465, 39.7509], [-109.0465, 39.2509], [-109.0465, 39.0008], [-109.0465, 38.5008], [-109.0465, 38.0009], [-109.0467, 37.5008], [-109.0467, 37.0009], [-109.3587, 37.001], [-109.9829, 37.0014], [-110.6071, 37.0018], [-111.2313, 37.0022], [-111.8556, 37.0026], [-112.4798, 37.0031], [-113.104, 37.0035], [-113.4161, 37.0037], [-114.0402, 37.0042], [-114.0405, 37.6287], [-114.0408, 37.9411], [-114.0408, 38.2533], [-114.0411, 38.5657], [-114.0412, 38.8781], [-114.0412, 39.1903], [-114.0415, 39.5027], [-114.0416, 39.8149], [-114.0418, 40.1273], [-114.0419, 40.4396], [-114.042, 40.908], [-114.0423, 41.2203], [-114.0424, 41.5326], [-114.0426, 42.001], [-113.4815, 42.001], [-113.1075, 42.001], [-112.7333, 42.001], [-112.3594, 42.001], [-111.9855, 42.0009], [-111.6114, 42.0009], [-111.0503, 42.0009]]] }, \"properties\": { \"name\": \"Utah\", \"id\": \"US-UT\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-UT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-75.2524, 38.0374], [-75.2258, 38.0403], [-75.333, 37.8883], [-75.3786, 37.8721], [-75.2524, 38.0374]]], [[[-77.7266, 39.3465], [-77.6688, 39.3096], [-77.5341, 39.2656], [-77.4789, 39.2209], [-77.5029, 39.1754], [-77.5064, 39.1426], [-77.4809, 39.113], [-77.3012, 39.0533], [-77.1904, 38.969], [-77.1221, 38.9435], [-77.0531, 38.9154], [-77.0303, 38.8893], [-77.0456, 38.7758], [-77.0919, 38.7196], [-77.1647, 38.6765], [-77.2603, 38.6], [-77.2839, 38.5292], [-77.3136, 38.3966], [-77.2732, 38.3518], [-77.2319, 38.34], [-77.11, 38.3702], [-77.0468, 38.3566], [-76.9062, 38.197], [-76.6449, 38.1339], [-76.5496, 38.0946], [-76.4717, 38.0112], [-76.3549, 37.9632], [-76.2642, 37.8935], [-76.2618, 37.848], [-76.2932, 37.7944], [-76.3056, 37.7216], [-76.3442, 37.6756], [-76.4367, 37.6704], [-76.4924, 37.6822], [-76.7928, 37.938], [-76.8286, 37.9615], [-76.94, 38.0954], [-77.0706, 38.1672], [-77.1111, 38.1656], [-76.925, 38.033], [-76.8492, 37.9403], [-76.7154, 37.8102], [-76.6199, 37.755], [-76.5494, 37.6692], [-76.484, 37.6289], [-76.3055, 37.5714], [-76.3676, 37.5303], [-76.2686, 37.4952], [-76.2544, 37.4306], [-76.2635, 37.357], [-76.4009, 37.3862], [-76.4055, 37.3319], [-76.3931, 37.2999], [-76.454, 37.2736], [-76.5385, 37.3094], [-76.7577, 37.5053], [-76.7381, 37.4487], [-76.6109, 37.3226], [-76.4973, 37.2469], [-76.4011, 37.2127], [-76.3269, 37.1492], [-76.3007, 37.1108], [-76.2833, 37.0527], [-76.3383, 37.0131], [-76.4008, 36.9913], [-76.462, 37.0308], [-76.5069, 37.0723], [-76.6024, 37.1428], [-76.6309, 37.2218], [-76.7034, 37.2177], [-77.0069, 37.3176], [-77.251, 37.3293], [-77.1963, 37.2957], [-77.002, 37.271], [-76.9252, 37.2251], [-76.7654, 37.1841], [-76.6719, 37.173], [-76.6339, 37.0475], [-76.5046, 36.961], [-76.4877, 36.8971], [-76.3996, 36.8899], [-76.2442, 36.9526], [-76.144, 36.9307], [-75.9994, 36.9126], [-75.9663, 36.862], [-75.9414, 36.7656], [-75.8904, 36.6571], [-75.8575, 36.5506], [-75.8891, 36.5504], [-75.9664, 36.5514], [-76.5766, 36.5556], [-76.9385, 36.5585], [-77.3002, 36.5614], [-77.6619, 36.5641], [-78.0238, 36.567], [-78.3855, 36.5697], [-78.7474, 36.5726], [-79.1091, 36.5754], [-79.471, 36.5781], [-79.8327, 36.581], [-80.1944, 36.5837], [-80.5563, 36.5866], [-80.918, 36.5895], [-81.2799, 36.5922], [-81.6416, 36.5951], [-81.6589, 36.6106], [-81.9053, 36.6186], [-81.9525, 36.598], [-82.3294, 36.5995], [-82.9558, 36.6021], [-83.6676, 36.605], [-83.5663, 36.6526], [-83.417, 36.681], [-83.1502, 36.7624], [-83.0438, 36.8455], [-82.8945, 36.9064], [-82.832, 36.9792], [-82.7319, 37.048], [-82.6949, 37.1262], [-82.6816, 37.1381], [-82.5165, 37.2089], [-82.3431, 37.2969], [-81.9652, 37.5396], [-81.9577, 37.5077], [-81.9714, 37.4731], [-81.9393, 37.4327], [-81.913, 37.369], [-81.8757, 37.3297], [-81.8293, 37.2986], [-81.7521, 37.2709], [-81.6608, 37.2218], [-81.5648, 37.2097], [-81.4854, 37.257], [-81.4194, 37.2822], [-81.35, 37.3337], [-81.2272, 37.2633], [-81.1782, 37.2633], [-81.0573, 37.2936], [-80.9437, 37.3018], [-80.8731, 37.3405], [-80.8718, 37.3995], [-80.8211, 37.4231], [-80.7699, 37.4015], [-80.7199, 37.401], [-80.5075, 37.469], [-80.4644, 37.4327], [-80.3712, 37.4726], [-80.3161, 37.5097], [-80.2919, 37.5658], [-80.2459, 37.6208], [-80.2853, 37.677], [-80.2459, 37.7511], [-80.1881, 37.8241], [-79.9717, 38.0461], [-79.9028, 38.1807], [-79.8128, 38.2671], [-79.7835, 38.336], [-79.7153, 38.404], [-79.6687, 38.5443], [-79.6396, 38.5724], [-79.5977, 38.5771], [-79.5247, 38.5335], [-79.5047, 38.4914], [-79.3958, 38.4545], [-79.3041, 38.4498], [-79.2402, 38.4766], [-79.2029, 38.5258], [-79.1524, 38.6184], [-79.1042, 38.6729], [-79.0733, 38.7419], [-79.0412, 38.7896], [-78.992, 38.8197], [-78.8687, 38.8179], [-78.8055, 38.8601], [-78.7568, 38.9082], [-78.6928, 38.9217], [-78.5815, 38.999], [-78.4352, 39.1608], [-78.4036, 39.2626], [-78.3658, 39.3358], [-78.3511, 39.4109], [-78.3223, 39.4519], [-77.8358, 39.1452], [-77.7266, 39.3465]]], [[[-75.6592, 37.954], [-75.62, 37.9993], [-75.376, 38.025], [-75.5963, 37.6312], [-75.5871, 37.5587], [-75.6315, 37.5354], [-75.6989, 37.5164], [-75.7669, 37.473], [-75.812, 37.4251], [-75.854, 37.2966], [-75.9343, 37.152], [-75.9845, 37.2122], [-75.9974, 37.2639], [-75.975, 37.3985], [-75.8882, 37.6191], [-75.7924, 37.7564], [-75.7193, 37.8214], [-75.6592, 37.954]]]] }, \"properties\": { \"name\": \"Virginia\", \"id\": \"US-VA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-VA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-72.4669, 42.7303], [-72.8602, 42.7412], [-73.2533, 42.7522], [-73.2802, 42.8132], [-73.2666, 42.8648], [-73.2552, 43.2654], [-73.2471, 43.553], [-73.3062, 43.6163], [-73.3493, 43.6203], [-73.3915, 43.5785], [-73.4159, 43.5897], [-73.4133, 43.6279], [-73.3757, 43.7622], [-73.383, 43.8758], [-73.425, 44.0383], [-73.4261, 44.0749], [-73.4098, 44.1314], [-73.3811, 44.1875], [-73.3209, 44.2689], [-73.3246, 44.3679], [-73.3098, 44.4596], [-73.372, 44.5973], [-73.3485, 44.7753], [-73.3659, 44.8603], [-73.3452, 44.9389], [-73.3522, 45.0054], [-72.766, 45.0061], [-72.3498, 45.0066], [-71.9336, 45.007], [-71.5175, 45.0076], [-71.5335, 44.988], [-71.5102, 44.9083], [-71.6206, 44.7719], [-71.6182, 44.7279], [-71.5685, 44.6076], [-71.6093, 44.5141], [-71.683, 44.4503], [-71.8677, 44.3549], [-72.0018, 44.3295], [-72.0313, 44.3007], [-72.0622, 44.1164], [-72.1063, 44.013], [-72.1149, 43.9655], [-72.1739, 43.8841], [-72.2224, 43.7909], [-72.2967, 43.7149], [-72.3377, 43.622], [-72.3624, 43.5867], [-72.385, 43.5293], [-72.4071, 43.3319], [-72.4382, 43.2247], [-72.4736, 43.0385], [-72.5194, 42.9667], [-72.5499, 42.8867], [-72.5397, 42.8297], [-72.4836, 42.7662], [-72.4669, 42.7303]]] }, \"properties\": { \"name\": \"Vermont\", \"id\": \"US-VT\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-VT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-122.3942, 47.3953], [-122.3987, 47.3725], [-122.5099, 47.358], [-122.5068, 47.4216], [-122.4865, 47.4888], [-122.3942, 47.3953]]], [[[-123.0131, 48.5008], [-122.9868, 48.468], [-123.0944, 48.4891], [-123.14, 48.5079], [-123.1696, 48.5868], [-123.1621, 48.6064], [-123.1142, 48.6134], [-123.0242, 48.5385], [-123.0131, 48.5008]]], [[[-122.8531, 47.2047], [-122.8768, 47.186], [-122.908, 47.2261], [-122.9119, 47.2543], [-122.8851, 47.2748], [-122.8531, 47.2047]]], [[[-116.8965, 46.0021], [-117.6752, 46.0017], [-118.2062, 46.0013], [-118.737, 46.0008], [-119.0197, 46.0003], [-119.0499, 45.9816], [-119.1773, 45.9451], [-119.4292, 45.9343], [-119.9343, 45.8379], [-120.156, 45.7622], [-120.3514, 45.7251], [-120.7158, 45.6898], [-121.0451, 45.639], [-121.1843, 45.6437], [-121.2427, 45.687], [-121.4021, 45.7118], [-121.6625, 45.7182], [-121.882, 45.6895], [-122.0851, 45.6026], [-122.2026, 45.591], [-122.561, 45.625], [-122.6498, 45.6275], [-122.7259, 45.6737], [-122.7464, 45.7497], [-122.8434, 45.9781], [-122.942, 46.1148], [-123.0423, 46.16], [-123.1209, 46.1787], [-123.2206, 46.1537], [-123.2987, 46.1708], [-123.4048, 46.221], [-123.4649, 46.2712], [-123.6503, 46.2677], [-123.6884, 46.2998], [-123.8957, 46.2677], [-123.9598, 46.3008], [-124.0727, 46.2795], [-124.0451, 46.3729], [-124.0502, 46.4906], [-124.0444, 46.6051], [-124.0164, 46.5214], [-123.9461, 46.4326], [-123.9124, 46.5333], [-123.8891, 46.66], [-123.9577, 46.7087], [-124.0717, 46.7448], [-124.1126, 46.8627], [-123.8429, 46.9632], [-123.986, 46.9845], [-124.0422, 47.0297], [-124.1117, 47.0352], [-124.1393, 46.9547], [-124.1635, 47.0153], [-124.1705, 47.0868], [-124.1989, 47.2085], [-124.3093, 47.4046], [-124.376, 47.6587], [-124.46, 47.7843], [-124.6211, 47.9042], [-124.6631, 47.9741], [-124.7017, 48.1517], [-124.68, 48.2859], [-124.71, 48.3804], [-124.6326, 48.375], [-124.429, 48.3007], [-124.1755, 48.2424], [-124.0987, 48.1999], [-123.9758, 48.1685], [-123.2944, 48.1196], [-123.2499, 48.1242], [-123.1619, 48.1545], [-123.1244, 48.151], [-123.0242, 48.0816], [-122.9739, 48.0734], [-122.9089, 48.0768], [-122.8609, 48.0901], [-122.7786, 48.1375], [-122.7691, 48.076], [-122.7398, 48.0133], [-122.6795, 47.9317], [-122.6567, 47.8811], [-122.7784, 47.7384], [-122.8214, 47.7931], [-123.0507, 47.5519], [-123.131, 47.4377], [-123.1363, 47.3558], [-123.1042, 47.3484], [-123.0309, 47.3602], [-122.9222, 47.4076], [-123.0667, 47.3995], [-123.0486, 47.4794], [-122.9825, 47.5594], [-122.9129, 47.6073], [-122.814, 47.6586], [-122.7571, 47.7005], [-122.7179, 47.7621], [-122.6081, 47.8355], [-122.5879, 47.8559], [-122.5926, 47.9165], [-122.5328, 47.9197], [-122.5108, 47.8157], [-122.5239, 47.7694], [-122.6184, 47.7129], [-122.6301, 47.6927], [-122.6136, 47.6157], [-122.6755, 47.6124], [-122.5858, 47.5284], [-122.5575, 47.4632], [-122.5536, 47.4049], [-122.5779, 47.2931], [-122.6039, 47.2746], [-122.6487, 47.2815], [-122.7077, 47.3163], [-122.7678, 47.2184], [-122.7833, 47.226], [-122.8125, 47.3289], [-122.8284, 47.3366], [-122.9195, 47.2897], [-122.9562, 47.2446], [-122.9876, 47.1726], [-123.0276, 47.1389], [-122.9141, 47.1315], [-122.812, 47.146], [-122.7298, 47.1117], [-122.7019, 47.1109], [-122.6271, 47.1442], [-122.6041, 47.167], [-122.5422, 47.2756], [-122.5111, 47.2949], [-122.4648, 47.2959], [-122.4201, 47.3121], [-122.3538, 47.3716], [-122.3511, 47.3953], [-122.3752, 47.5283], [-122.3684, 47.6039], [-122.4105, 47.6527], [-122.3836, 47.7164], [-122.382, 47.7524], [-122.4018, 47.7843], [-122.3928, 47.8205], [-122.3303, 47.8987], [-122.3185, 47.9331], [-122.242, 48.0108], [-122.2613, 48.042], [-122.353, 48.1138], [-122.3887, 48.1663], [-122.4247, 48.1759], [-122.3866, 48.09], [-122.494, 48.1304], [-122.5292, 48.1994], [-122.5203, 48.2291], [-122.467, 48.2585], [-122.4033, 48.2692], [-122.4086, 48.2939], [-122.4884, 48.3744], [-122.5826, 48.4287], [-122.6378, 48.4333], [-122.669, 48.4653], [-122.628, 48.4979], [-122.5427, 48.4879], [-122.4967, 48.5056], [-122.5148, 48.5551], [-122.5127, 48.6694], [-122.5451, 48.7623], [-122.562, 48.778], [-122.653, 48.7639], [-122.686, 48.7944], [-122.7225, 48.853], [-122.7888, 48.993], [-122.2601, 48.993], [-121.8336, 48.993], [-121.4072, 48.993], [-120.9808, 48.993], [-120.5545, 48.993], [-120.1281, 48.993], [-119.7018, 48.993], [-119.2753, 48.993], [-118.849, 48.993], [-118.4225, 48.993], [-117.9962, 48.993], [-117.5698, 48.993], [-117.039, 48.993], [-117.0357, 48.513], [-117.034, 48.1925], [-117.0317, 47.7115], [-117.0301, 47.3909], [-117.0283, 47.0703], [-117.0266, 46.7497], [-117.025, 46.4291], [-117.039, 46.3965], [-117.0105, 46.3297], [-116.943, 46.2321], [-116.9222, 46.1637], [-116.9478, 46.1243], [-116.9302, 46.056], [-116.8965, 46.0021]]], [[[-122.7821, 48.6727], [-122.7688, 48.6509], [-122.8376, 48.6265], [-122.8831, 48.6607], [-122.8926, 48.5946], [-122.9857, 48.6267], [-123.0028, 48.6522], [-122.9767, 48.6792], [-122.8977, 48.7103], [-122.7821, 48.6727]]], [[[-122.821, 48.4314], [-122.89, 48.4347], [-122.9323, 48.4847], [-122.9122, 48.5379], [-122.8689, 48.5486], [-122.8619, 48.5019], [-122.8146, 48.4524], [-122.821, 48.4314]]], [[[-122.5728, 48.1567], [-122.5238, 48.0255], [-122.5029, 48.0801], [-122.3667, 47.9855], [-122.3666, 47.9388], [-122.4114, 47.9177], [-122.4922, 47.9814], [-122.5575, 47.9925], [-122.6032, 48.055], [-122.6063, 48.1285], [-122.6226, 48.1514], [-122.6904, 48.1739], [-122.7487, 48.239], [-122.669, 48.351], [-122.6286, 48.3842], [-122.5725, 48.3595], [-122.5355, 48.3211], [-122.5425, 48.294], [-122.6921, 48.2411], [-122.697, 48.2287], [-122.5977, 48.2003], [-122.5728, 48.1567]]], [[[-122.4973, 47.5945], [-122.5579, 47.5982], [-122.5759, 47.6195], [-122.5738, 47.6668], [-122.5498, 47.704], [-122.5078, 47.6826], [-122.4973, 47.5945]]]] }, \"properties\": { \"name\": \"Washington\", \"id\": \"US-WA\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-WA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-90.5466, 46.9193], [-90.58, 46.9136], [-90.6518, 46.9222], [-90.6504, 46.9368], [-90.5427, 46.9628], [-90.5466, 46.9193]]], [[[-90.4267, 47.0259], [-90.4716, 47.0175], [-90.4474, 47.0662], [-90.4098, 47.0637], [-90.4267, 47.0259]]], [[[-90.4077, 46.593], [-90.3924, 46.549], [-90.3408, 46.5584], [-90.3182, 46.5366], [-90.2304, 46.5098], [-90.1185, 46.3416], [-89.4941, 46.2214], [-89.1193, 46.1491], [-88.8374, 46.0365], [-88.7273, 46.0311], [-88.6295, 46.0141], [-88.4931, 46.0135], [-88.3547, 45.9923], [-88.1518, 45.9454], [-88.1045, 45.9052], [-88.0964, 45.8784], [-88.1161, 45.8158], [-87.9225, 45.76], [-87.8398, 45.718], [-87.8091, 45.6861], [-87.8141, 45.657], [-87.7946, 45.596], [-87.8147, 45.5632], [-87.8152, 45.5059], [-87.874, 45.4128], [-87.8653, 45.3678], [-87.7685, 45.3644], [-87.6964, 45.3829], [-87.6643, 45.3714], [-87.6627, 45.3452], [-87.721, 45.2427], [-87.7189, 45.2012], [-87.6942, 45.161], [-87.6536, 45.1218], [-87.6059, 45.1085], [-87.627, 45.0323], [-87.6832, 44.9926], [-87.8302, 44.9424], [-87.8568, 44.8803], [-87.9515, 44.7638], [-87.9978, 44.6923], [-88.0282, 44.6179], [-88.0188, 44.5711], [-87.9693, 44.5521], [-87.929, 44.5595], [-87.8983, 44.5933], [-87.8511, 44.6241], [-87.7875, 44.6516], [-87.741, 44.6921], [-87.6767, 44.7904], [-87.6044, 44.8469], [-87.5553, 44.8485], [-87.4802, 44.8742], [-87.4197, 44.8657], [-87.3456, 44.8007], [-87.3374, 44.7758], [-87.3561, 44.7204], [-87.3905, 44.662], [-87.4409, 44.6006], [-87.4866, 44.5086], [-87.5275, 44.3857], [-87.5361, 44.2929], [-87.5125, 44.2304], [-87.5349, 44.1743], [-87.6033, 44.1249], [-87.6584, 44.059], [-87.7001, 43.9766], [-87.7238, 43.9073], [-87.7234, 43.8091], [-87.6979, 43.7524], [-87.6997, 43.7237], [-87.774, 43.5989], [-87.8009, 43.538], [-87.8056, 43.4902], [-87.8239, 43.443], [-87.8807, 43.347], [-87.8984, 43.2938], [-87.9017, 43.2449], [-87.8889, 43.1645], [-87.8961, 43.1374], [-87.8789, 43.1031], [-87.8935, 43.0411], [-87.8455, 42.9531], [-87.8382, 42.8956], [-87.8187, 42.8478], [-87.787, 42.8092], [-87.7814, 42.7534], [-87.8016, 42.6805], [-87.8121, 42.4971], [-88.39, 42.5003], [-88.8403, 42.5028], [-89.2905, 42.5052], [-89.7408, 42.5078], [-90.1911, 42.5103], [-90.6506, 42.5129], [-90.6879, 42.6104], [-90.7887, 42.6769], [-90.9599, 42.7204], [-91.0695, 42.7885], [-91.1176, 42.8816], [-91.1482, 42.9863], [-91.1614, 43.1023], [-91.1475, 43.1995], [-91.1069, 43.2781], [-91.1172, 43.3311], [-91.1784, 43.359], [-91.2187, 43.3953], [-91.2383, 43.4403], [-91.2453, 43.5024], [-91.2785, 43.7975], [-91.32, 43.9362], [-91.3827, 43.9908], [-91.5149, 44.0542], [-91.7164, 44.1264], [-91.8409, 44.1942], [-91.9124, 44.2889], [-92.0551, 44.3999], [-92.1485, 44.4452], [-92.2404, 44.4621], [-92.313, 44.4978], [-92.3669, 44.5522], [-92.4417, 44.5866], [-92.5371, 44.6009], [-92.6435, 44.6453], [-92.7698, 44.7258], [-92.7991, 44.79], [-92.7846, 44.8226], [-92.7634, 44.9342], [-92.7651, 44.9695], [-92.7931, 45.0713], [-92.7591, 45.1106], [-92.7661, 45.2364], [-92.7539, 45.2776], [-92.6857, 45.3806], [-92.6826, 45.4331], [-92.7071, 45.4937], [-92.7575, 45.5432], [-92.8924, 45.5947], [-92.8965, 45.6586], [-92.8747, 45.7061], [-92.7864, 45.7955], [-92.7381, 45.8746], [-92.6938, 45.909], [-92.4245, 46.0278], [-92.3673, 46.036], [-92.2926, 46.0843], [-92.2917, 46.6607], [-92.2239, 46.671], [-92.1946, 46.7069], [-92.1255, 46.763], [-92.107, 46.7623], [-92.0728, 46.7361], [-91.9874, 46.699], [-91.9209, 46.6945], [-91.8356, 46.7021], [-91.4991, 46.7662], [-91.357, 46.8107], [-91.2177, 46.8856], [-91.1272, 46.8676], [-90.9461, 46.9538], [-90.8867, 46.9647], [-90.8399, 46.9624], [-90.7819, 46.9287], [-90.7684, 46.908], [-90.7877, 46.8683], [-90.8398, 46.8099], [-90.8653, 46.7607], [-90.8639, 46.7208], [-90.8864, 46.6775], [-90.9435, 46.619], [-90.923, 46.6031], [-90.7699, 46.6454], [-90.7368, 46.6888], [-90.6166, 46.6314], [-90.5361, 46.5994], [-90.4689, 46.5841], [-90.4077, 46.593]]], [[[-86.8619, 45.3523], [-86.8919, 45.3423], [-86.9469, 45.3457], [-86.9666, 45.3684], [-86.9263, 45.415], [-86.8785, 45.4142], [-86.8567, 45.3944], [-86.8619, 45.3523]]], [[[-90.7106, 46.7833], [-90.7678, 46.7697], [-90.7821, 46.791], [-90.7523, 46.8136], [-90.6192, 46.87], [-90.5889, 46.8554], [-90.6775, 46.8129], [-90.7106, 46.7833]]], [[[-86.9919, 45.241], [-87.0536, 45.2179], [-87.0467, 45.1719], [-87.0589, 45.1025], [-87.078, 45.0782], [-87.1139, 45.0685], [-87.1785, 44.9834], [-87.1881, 44.922], [-87.2804, 44.8349], [-87.3158, 44.8266], [-87.3546, 44.8388], [-87.3821, 44.8642], [-87.3983, 44.903], [-87.3965, 44.9541], [-87.3155, 45.031], [-87.2794, 45.0815], [-87.2587, 45.138], [-87.2211, 45.1739], [-87.1664, 45.1894], [-87.122, 45.2245], [-87.0881, 45.2792], [-87.0491, 45.3029], [-87.005, 45.2958], [-86.9858, 45.2751], [-86.9919, 45.241]]]] }, \"properties\": { \"name\": \"Wisconsin\", \"id\": \"US-WI\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-WI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-79.4776, 39.7227], [-79.488, 39.2109], [-79.3598, 39.2853], [-79.2935, 39.3115], [-79.0752, 39.4761], [-79.0467, 39.4767], [-78.9714, 39.4537], [-78.8148, 39.5701], [-78.7961, 39.6126], [-78.7464, 39.6137], [-78.7416, 39.5778], [-78.6776, 39.5496], [-78.575, 39.5328], [-78.4956, 39.5334], [-78.4604, 39.5561], [-78.4427, 39.6015], [-78.4068, 39.6279], [-78.3253, 39.6392], [-78.1812, 39.6857], [-78.0977, 39.6779], [-78.0272, 39.6313], [-77.9558, 39.6088], [-77.8832, 39.6107], [-77.8531, 39.5483], [-77.7981, 39.5172], [-77.7796, 39.4883], [-77.7974, 39.4614], [-77.7623, 39.4293], [-77.7266, 39.3465], [-77.8358, 39.1452], [-78.3223, 39.4519], [-78.3511, 39.4109], [-78.3658, 39.3358], [-78.4036, 39.2626], [-78.4352, 39.1608], [-78.5815, 38.999], [-78.6928, 38.9217], [-78.7568, 38.9082], [-78.8055, 38.8601], [-78.8687, 38.8179], [-78.992, 38.8197], [-79.0412, 38.7896], [-79.0733, 38.7419], [-79.1042, 38.6729], [-79.1524, 38.6184], [-79.2029, 38.5258], [-79.2402, 38.4766], [-79.3041, 38.4498], [-79.3958, 38.4545], [-79.5047, 38.4914], [-79.5247, 38.5335], [-79.5977, 38.5771], [-79.6396, 38.5724], [-79.6687, 38.5443], [-79.7153, 38.404], [-79.7835, 38.336], [-79.8128, 38.2671], [-79.9028, 38.1807], [-79.9717, 38.0461], [-80.1881, 37.8241], [-80.2459, 37.7511], [-80.2853, 37.677], [-80.2459, 37.6208], [-80.2919, 37.5658], [-80.3161, 37.5097], [-80.3712, 37.4726], [-80.4644, 37.4327], [-80.5075, 37.469], [-80.7199, 37.401], [-80.7699, 37.4015], [-80.8211, 37.4231], [-80.8718, 37.3995], [-80.8731, 37.3405], [-80.9437, 37.3018], [-81.0573, 37.2936], [-81.1782, 37.2633], [-81.2272, 37.2633], [-81.35, 37.3337], [-81.4194, 37.2822], [-81.4854, 37.257], [-81.5648, 37.2097], [-81.6608, 37.2218], [-81.7521, 37.2709], [-81.8293, 37.2986], [-81.8757, 37.3297], [-81.913, 37.369], [-81.9393, 37.4327], [-81.9714, 37.4731], [-81.9577, 37.5077], [-81.9652, 37.5396], [-82.1035, 37.5706], [-82.2802, 37.6872], [-82.3939, 37.8283], [-82.4299, 37.8942], [-82.4719, 37.9384], [-82.4822, 37.9835], [-82.5887, 38.0998], [-82.6177, 38.1498], [-82.6196, 38.182], [-82.5853, 38.2428], [-82.5784, 38.272], [-82.5896, 38.4204], [-82.6129, 38.4482], [-82.4975, 38.415], [-82.387, 38.4339], [-82.3181, 38.4796], [-82.2908, 38.552], [-82.2524, 38.5941], [-82.2026, 38.6059], [-82.18, 38.6376], [-82.1876, 38.7153], [-82.2034, 38.7682], [-82.1634, 38.8449], [-82.0722, 38.9629], [-82.001, 39.0111], [-81.9499, 38.9893], [-81.9185, 38.9524], [-81.9074, 38.9003], [-81.8824, 38.8942], [-81.8437, 38.9343], [-81.7778, 38.9728], [-81.8049, 39.044], [-81.8026, 39.0861], [-81.7707, 39.0988], [-81.7367, 39.1467], [-81.7006, 39.2295], [-81.6571, 39.272], [-81.6065, 39.2742], [-81.5517, 39.3079], [-81.4927, 39.3736], [-81.4396, 39.3926], [-81.3925, 39.3649], [-81.3334, 39.3628], [-81.2626, 39.3865], [-81.1391, 39.456], [-80.9633, 39.5711], [-80.8743, 39.6643], [-80.8722, 39.7355], [-80.8035, 39.9091], [-80.6683, 40.1853], [-80.6018, 40.3639], [-80.6042, 40.4452], [-80.6232, 40.5116], [-80.6591, 40.5629], [-80.6375, 40.6033], [-80.519, 40.647], [-80.5198, 40.1851], [-80.5194, 39.7226], [-79.9985, 39.7226], [-79.4776, 39.7227]]] }, \"properties\": { \"name\": \"West Virginia\", \"id\": \"US-WV\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-WV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-104.0288, 43.0013], [-104.0272, 42.5013], [-104.0252, 42.0012], [-104.0234, 41.5009], [-104.0217, 41.0009], [-104.6497, 41.0009], [-104.9638, 41.0009], [-105.5919, 41.0009], [-105.906, 41.0009], [-106.534, 41.0009], [-107.1622, 41.0009], [-107.7902, 41.0009], [-108.1044, 41.0009], [-108.7324, 41.0009], [-109.0464, 41.0009], [-109.5473, 41.0009], [-109.7978, 41.0009], [-110.2986, 41.0009], [-110.5491, 41.0009], [-111.05, 41.0009], [-111.0502, 41.2508], [-111.0502, 41.6259], [-111.0503, 42.0009], [-111.0506, 42.4693], [-111.0506, 42.7815], [-111.0508, 43.0938], [-111.051, 43.406], [-111.051, 43.7182], [-111.0513, 44.0304], [-111.0514, 44.4989], [-111.0508, 45.001], [-110.6126, 45.001], [-110.1741, 45.001], [-109.7358, 45.001], [-109.0783, 45.001], [-108.64, 45.001], [-107.9824, 45.001], [-107.3249, 45.001], [-106.8864, 45.001], [-106.4482, 45.001], [-106.0098, 45.001], [-105.5714, 45.0011], [-105.133, 45.0011], [-104.6948, 45.0011], [-104.0372, 45.0011], [-104.0351, 44.5012], [-104.033, 44.0012], [-104.031, 43.5013], [-104.0288, 43.0013]]] }, \"properties\": { \"name\": \"Wyoming\", \"id\": \"US-WY\", \"CNTRY\": \"United States of America\", \"TYPE\": \"State\" }, \"id\": \"US-WY\" }\r\n    ] };\r\nexport default map;\r\n","var map = { \"type\": \"FeatureCollection\", \"features\": [\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[179.2223, -8.5541], [179.2023, -8.4652], [179.2312, -8.5047], [179.2223, -8.5541]]] }, \"properties\": { \"name\": \"Tuvalu\", \"id\": \"TV\" }, \"id\": \"TV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[3.4624, -54.4471], [3.346, -54.4511], [3.3669, -54.3997], [3.4814, -54.4002], [3.4624, -54.4471]]] }, \"properties\": { \"name\": \"Bouvet Island\", \"id\": \"BV\" }, \"id\": \"BV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.3345, 36.1623], [-5.3383, 36.1122], [-5.3562, 36.1264], [-5.3551, 36.1455], [-5.3345, 36.1623]]] }, \"properties\": { \"name\": \"Gibraltar\", \"id\": \"GI\" }, \"id\": \"GI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[47.303, -11.5752], [47.2821, -11.5747], [47.2789, -11.5575], [47.2971, -11.5543], [47.303, -11.5752]]] }, \"properties\": { \"name\": \"Glorioso Islands\", \"id\": \"GO\" }, \"id\": \"GO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.758, -17.075], [42.7414, -17.0741], [42.7379, -17.0519], [42.761, -17.0653], [42.758, -17.075]]] }, \"properties\": { \"name\": \"Juan De Nova Island\", \"id\": \"JU\" }, \"id\": \"JU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-160.0213, -0.3979], [-160.0453, -0.3802], [-160.0178, -0.3745], [-160.0213, -0.3979]]] }, \"properties\": { \"name\": \"Jarvis Island\", \"id\": \"UM-DQ\" }, \"id\": \"UM-DQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-176.456, 0.2226], [-176.4615, 0.2151], [-176.4675, 0.2195], [-176.456, 0.2226]]] }, \"properties\": { \"name\": \"Baker Island\", \"id\": \"UM-FQ\" }, \"id\": \"UM-FQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-176.6311, 0.7952], [-176.6433, 0.7935], [-176.6429, 0.8081], [-176.6329, 0.8085], [-176.6311, 0.7952]]] }, \"properties\": { \"name\": \"Howland Island\", \"id\": \"UM-HQ\" }, \"id\": \"UM-HQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-169.5237, 16.7305], [-169.5388, 16.7243], [-169.5388, 16.7296], [-169.5237, 16.7305]]] }, \"properties\": { \"name\": \"Johnston Atoll\", \"id\": \"UM-JQ\" }, \"id\": \"UM-JQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-177.3881, 28.1864], [-177.388, 28.2145], [-177.3646, 28.2043], [-177.3881, 28.1864]]] }, \"properties\": { \"name\": \"Midway Islands\", \"id\": \"UM-MQ\" }, \"id\": \"UM-MQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[166.6589, 19.2829], [166.6087, 19.3073], [166.6277, 19.3246], [166.6589, 19.3117], [166.6589, 19.2829]]] }, \"properties\": { \"name\": \"Wake Island\", \"id\": \"UM-WQ\" }, \"id\": \"UM-WQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-68.2058, 12.1446], [-68.2873, 12.1717], [-68.3712, 12.2574], [-68.3694, 12.3018], [-68.2195, 12.2312], [-68.2058, 12.1446]]] }, \"properties\": { \"name\": \"Bonair, Saint Eustachius and Saba\", \"id\": \"BQ\" }, \"id\": \"BQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[4.2262, 51.3865], [4.1726, 51.307], [3.9022, 51.2076], [3.35, 51.3776], [3.5893, 51.3994], [3.8836, 51.3545], [4.2262, 51.3865]]], [[[4.2262, 51.3865], [4.0066, 51.4433], [3.8219, 51.4094], [3.5871, 51.454], [3.7438, 51.596], [4.0807, 51.5512], [4.1828, 51.6102], [3.9471, 51.8106], [4.4829, 52.3091], [4.5623, 52.4425], [4.6781, 52.8098], [4.7687, 52.9412], [5.0257, 52.9499], [5.107, 52.7745], [5.0137, 52.6223], [5.1203, 52.3881], [5.5611, 52.5947], [5.5948, 52.7639], [5.4253, 52.848], [5.3755, 53.0957], [5.5318, 53.2686], [6.0622, 53.4071], [6.8164, 53.4413], [6.9682, 53.3271], [7.1973, 53.2824], [7.1897, 52.9996], [7.0131, 52.6336], [6.7485, 52.634], [6.7489, 52.4641], [7.0352, 52.3802], [6.9771, 52.2055], [6.7489, 52.0987], [6.7418, 51.9109], [6.3556, 51.8246], [6.1665, 51.8808], [5.9487, 51.7625], [6.1932, 51.4888], [6.076, 51.224], [6.1302, 51.1475], [5.8949, 50.9843], [6.0485, 50.9049], [5.9939, 50.7504], [5.7973, 50.7546], [5.6938, 50.7748], [5.827, 51.1257], [5.5087, 51.2751], [5.3107, 51.2597], [5.0999, 51.3466], [5.0594, 51.4531], [4.8481, 51.4033], [4.5033, 51.4746], [4.2262, 51.3865]]]] }, \"properties\": { \"name\": \"Netherlands\", \"id\": \"NL\" }, \"id\": \"NL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.2878, -22.4021], [31.0733, -22.3075], [30.7115, -22.2978], [30.4603, -22.3289], [30.1904, -22.2911], [29.9024, -22.1841], [29.6631, -22.1464], [29.3648, -22.194], [29.2373, -22.0794], [29.1069, -22.0657], [29.0158, -21.94], [29.0372, -21.8114], [28.5321, -21.6511], [28.0455, -21.5729], [27.844, -21.2613], [27.6696, -21.0643], [27.7042, -20.7664], [27.6997, -20.5307], [27.6247, -20.4836], [27.2808, -20.4787], [27.2217, -20.1458], [27.0916, -20.0544], [26.6783, -19.8928], [26.2411, -19.5692], [26.1683, -19.5382], [25.9508, -19.0818], [25.9393, -18.9384], [25.8119, -18.7968], [25.7613, -18.6495], [25.4892, -18.3512], [25.3844, -18.1421], [25.2241, -17.9152], [25.2588, -17.7936], [25.4519, -17.8452], [25.6397, -17.8243], [25.8634, -17.9521], [25.996, -17.9698], [26.1395, -17.9117], [26.3334, -17.9295], [26.5776, -18.0227], [26.78, -18.0413], [27.0206, -17.9584], [27.4378, -17.5118], [27.6367, -17.2623], [27.7565, -17.0603], [27.9323, -16.8961], [28.3998, -16.6626], [28.7606, -16.5321], [28.8326, -16.4243], [28.8569, -16.1424], [28.913, -15.9878], [29.288, -15.7766], [29.4873, -15.6968], [29.7296, -15.6447], [30.396, -15.643], [30.4377, -15.9955], [31.2362, -16.0238], [31.4897, -16.1797], [31.6877, -16.2143], [31.9398, -16.4287], [32.2434, -16.4486], [32.6358, -16.5894], [32.7419, -16.6777], [32.9478, -16.7123], [32.8765, -16.8836], [32.8844, -17.0377], [32.9692, -17.2517], [32.9808, -17.4377], [32.9545, -17.7652], [32.9555, -18.083], [32.9932, -18.3596], [32.8547, -18.7636], [32.7219, -18.8284], [32.7166, -19.0019], [32.8497, -19.1045], [32.7779, -19.3885], [32.8306, -19.5581], [33.0069, -19.8737], [32.9927, -19.9848], [32.8698, -20.2173], [32.6727, -20.5161], [32.5292, -20.6132], [32.4778, -20.7131], [32.476, -20.9502], [32.3535, -21.1366], [32.3713, -21.335], [31.4293, -22.2987], [31.2878, -22.4021]]] }, \"properties\": { \"name\": \"Zimbabwe\", \"id\": \"ZW\" }, \"id\": \"ZW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[32.9199, -9.4072], [32.9958, -9.6229], [33.1956, -9.6261], [33.351, -9.8622], [33.3115, -10.038], [33.529, -10.2346], [33.5538, -10.3913], [33.659, -10.5907], [33.4645, -10.7833], [33.2613, -10.8934], [33.3798, -11.158], [33.2262, -11.5347], [33.2884, -11.6111], [33.3008, -11.8882], [33.2524, -12.1127], [33.3403, -12.3085], [33.4917, -12.3311], [33.398, -12.49], [33.0215, -12.6303], [32.9456, -12.8043], [32.9999, -12.8997], [32.9679, -13.2252], [32.852, -13.4568], [32.6722, -13.6105], [32.765, -13.7609], [32.8671, -13.8173], [32.9922, -14.0224], [33.1481, -13.9412], [33.2018, -14.0135], [32.2727, -14.3229], [31.729, -14.4959], [31.5381, -14.5773], [30.6733, -14.8191], [30.2317, -14.9905], [30.2522, -15.1831], [30.3506, -15.3495], [30.396, -15.643], [29.7296, -15.6447], [29.4873, -15.6968], [29.288, -15.7766], [28.913, -15.9878], [28.8569, -16.1424], [28.8326, -16.4243], [28.7606, -16.5321], [28.3998, -16.6626], [27.9323, -16.8961], [27.7565, -17.0603], [27.6367, -17.2623], [27.4378, -17.5118], [27.0206, -17.9584], [26.78, -18.0413], [26.5776, -18.0227], [26.3334, -17.9295], [26.1395, -17.9117], [25.996, -17.9698], [25.8634, -17.9521], [25.6397, -17.8243], [25.4519, -17.8452], [25.2588, -17.7936], [25.0923, -17.6343], [24.9326, -17.5433], [24.2751, -17.4812], [23.3806, -17.6405], [22.9558, -17.2858], [22.3051, -16.6897], [22.1506, -16.5973], [22.0401, -16.2627], [21.9798, -15.9555], [21.9798, -15.0823], [21.9793, -13.7987], [21.9789, -13.001], [23.0415, -13.001], [23.8432, -13.001], [23.968, -12.957], [23.8823, -12.7989], [23.9914, -12.4221], [23.9591, -12.1176], [23.971, -11.636], [24.0465, -11.4051], [23.9666, -10.8716], [24.0785, -10.8916], [24.1366, -11.026], [24.3199, -11.0718], [24.3963, -11.2551], [24.335, -11.3715], [24.5184, -11.4384], [24.6684, -11.3527], [25.1846, -11.2432], [25.3192, -11.237], [25.2827, -11.4051], [25.3493, -11.6231], [25.5118, -11.7536], [25.6188, -11.7443], [26.0258, -11.8904], [26.5963, -11.972], [26.8905, -11.9436], [26.9496, -11.8988], [27.0459, -11.6161], [27.1964, -11.6049], [27.2381, -11.7834], [27.4236, -11.9445], [27.5333, -12.1953], [27.6443, -12.2668], [27.8573, -12.285], [28.3576, -12.4821], [28.4743, -12.6232], [28.5507, -12.8363], [28.6727, -12.8612], [28.773, -12.9819], [29.0141, -13.3689], [29.2019, -13.3982], [29.5543, -13.2491], [29.6519, -13.4142], [29.7954, -13.393], [29.7954, -12.1554], [29.5596, -12.2023], [29.5051, -12.3862], [29.4274, -12.4314], [29.0642, -12.3488], [28.8499, -12.1207], [28.4823, -11.8122], [28.3571, -11.4828], [28.544, -10.8023], [28.639, -10.6692], [28.6076, -10.3975], [28.6302, -9.8312], [28.5405, -9.5102], [28.4006, -9.2247], [28.6164, -9.072], [28.7935, -8.891], [28.9178, -8.7005], [28.9724, -8.4648], [30.0515, -8.3001], [30.751, -8.1936], [30.8305, -8.3858], [30.9685, -8.5509], [31.0765, -8.6117], [31.3508, -8.6069], [31.535, -8.7134], [31.6734, -8.9087], [31.9185, -8.942], [31.9425, -9.0539], [32.4334, -9.1564], [32.4872, -9.2128], [32.9199, -9.4072]]] }, \"properties\": { \"name\": \"Zambia\", \"id\": \"ZM\" }, \"id\": \"ZM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[37.8569, -46.9444], [37.6119, -46.9462], [37.6847, -46.8242], [37.8569, -46.9444]]], [[[31.2878, -22.4021], [31.4191, -22.8252], [31.5319, -23.2793], [31.5457, -23.4821], [31.7995, -23.8923], [31.986, -24.4605], [31.9847, -25.6319], [31.9202, -25.7739], [31.9482, -25.9577], [31.8715, -25.9817], [31.4151, -25.7464], [31.2074, -25.8432], [30.8034, -26.4136], [30.7942, -26.7643], [30.8833, -26.7922], [31.0636, -27.1122], [31.2739, -27.2383], [31.4697, -27.2956], [31.9584, -27.3058], [31.946, -27.1735], [31.9949, -26.8175], [32.1129, -26.8393], [32.3535, -26.8614], [32.8862, -26.8495], [32.8489, -27.0803], [32.6571, -27.6072], [32.5346, -28.1998], [32.2856, -28.6215], [32.0272, -28.8395], [31.7782, -28.9371], [31.3352, -29.3779], [31.1701, -29.591], [31.0231, -29.9008], [30.8776, -30.0712], [30.6636, -30.4344], [30.2885, -30.9702], [29.9712, -31.3222], [29.735, -31.4704], [29.4828, -31.6746], [29.1278, -32.003], [28.8561, -32.2943], [28.4495, -32.6245], [28.2143, -32.7692], [27.8604, -33.0537], [27.0774, -33.5212], [26.6135, -33.7077], [26.4293, -33.7596], [25.9895, -33.7112], [25.8061, -33.737], [25.6526, -33.8497], [25.6383, -34.0113], [25.4771, -34.0282], [25.1695, -33.9607], [25.0031, -33.9736], [24.8273, -34.1688], [24.5956, -34.1746], [24.1833, -34.0614], [23.5857, -33.985], [23.2684, -34.0814], [22.9257, -34.0632], [22.5537, -34.0099], [22.2457, -34.0694], [21.7889, -34.3726], [21.2491, -34.4071], [21.06, -34.3646], [20.7746, -34.4401], [20.5301, -34.4632], [20.0204, -34.7859], [19.6351, -34.7534], [19.3235, -34.571], [19.3306, -34.4925], [19.0985, -34.35], [18.8312, -34.3641], [18.8086, -34.108], [18.5338, -34.0858], [18.3523, -34.1884], [18.3545, -33.9389], [18.465, -33.8879], [18.4331, -33.7174], [18.2613, -33.4217], [18.1565, -33.3587], [17.8782, -32.9614], [17.8512, -32.8273], [18.0367, -32.775], [18.251, -32.652], [18.3252, -32.5051], [18.3105, -32.1225], [18.2107, -31.7425], [17.6776, -31.019], [17.3473, -30.445], [17.1893, -30.0997], [16.95, -29.4036], [16.7396, -29.0095], [16.4475, -28.6175], [16.6264, -28.4879], [16.7556, -28.4524], [16.8102, -28.2646], [16.9331, -28.0698], [17.0562, -28.0311], [17.2044, -28.1989], [17.3122, -28.2287], [17.3855, -28.3534], [17.3477, -28.5012], [17.448, -28.6984], [17.8418, -28.7769], [18.1028, -28.8719], [18.311, -28.8861], [18.6005, -28.8554], [18.8388, -28.8692], [19.0261, -28.9278], [19.2458, -28.9016], [19.2711, -28.7778], [19.4829, -28.6614], [19.6715, -28.5038], [19.9805, -28.4516], [19.9805, -26.9761], [19.9805, -26.0865], [19.9805, -24.7769], [20.3454, -25.0299], [20.6095, -25.4912], [20.7933, -25.9155], [20.8149, -26.165], [20.6267, -26.4438], [20.6414, -26.742], [20.7399, -26.849], [20.871, -26.8087], [21.0711, -26.8517], [21.455, -26.8326], [21.6464, -26.8544], [21.8333, -26.6782], [22.0908, -26.5801], [22.2177, -26.3887], [22.5489, -26.1784], [22.6403, -26.0714], [22.8786, -25.4579], [23.0221, -25.3243], [23.2662, -25.2665], [23.5214, -25.3442], [23.8938, -25.6009], [24.193, -25.6327], [24.3306, -25.7429], [24.7483, -25.8174], [24.9991, -25.754], [25.2135, -25.7562], [25.4435, -25.7144], [25.5837, -25.6061], [25.8522, -24.9355], [25.9122, -24.7476], [26.3974, -24.6137], [26.6175, -24.3957], [26.835, -24.2408], [26.9869, -23.7045], [27.1462, -23.5243], [27.5927, -23.2527], [27.7166, -23.2198], [27.8906, -23.0737], [28.0277, -22.8736], [28.2102, -22.6938], [28.3816, -22.5935], [28.8397, -22.4807], [29.0136, -22.2782], [29.13, -22.2134], [29.3648, -22.194], [29.6631, -22.1464], [29.9024, -22.1841], [30.1904, -22.2911], [30.4603, -22.3289], [30.7115, -22.2978], [31.0733, -22.3075], [31.2878, -22.4021]], [[27.8303, -28.9092], [27.7357, -28.9402], [27.2945, -29.5195], [27.0517, -29.6642], [27.1306, -29.84], [27.3553, -30.1587], [27.3886, -30.3159], [27.4921, -30.3638], [27.753, -30.6], [28.018, -30.6421], [28.1392, -30.45], [28.3922, -30.1476], [28.6346, -30.129], [28.9009, -30.0384], [29.098, -29.919], [29.1424, -29.701], [29.2933, -29.567], [29.3905, -29.2696], [29.3013, -29.0898], [28.9537, -28.8816], [28.6257, -28.5815], [28.2324, -28.7014], [27.9599, -28.8732], [27.8303, -28.9092]]]] }, \"properties\": { \"name\": \"South Africa\", \"id\": \"ZA\" }, \"id\": \"ZA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[53.7633, 12.637], [54.1872, 12.664], [54.5113, 12.5526], [54.1295, 12.3608], [53.719, 12.3191], [53.5981, 12.3422], [53.3158, 12.5331], [53.4308, 12.6636], [53.6386, 12.7075], [53.7633, 12.637]]], [[[53.0855, 16.6484], [52.5812, 16.4704], [52.3277, 16.2937], [52.2372, 16.1712], [52.1742, 15.9568], [52.2177, 15.6554], [51.6037, 15.3367], [51.3224, 15.2262], [51.0152, 15.1409], [50.5269, 15.0384], [50.1669, 14.851], [49.9064, 14.8279], [49.5485, 14.7223], [49.3497, 14.638], [49.0483, 14.4564], [49.0047, 14.3552], [48.7802, 14.1239], [48.6683, 14.0503], [48.2777, 13.9974], [47.99, 14.0481], [47.6337, 13.8585], [47.4077, 13.6614], [46.9758, 13.5473], [46.7888, 13.4656], [46.5021, 13.4155], [46.2029, 13.4239], [45.6574, 13.3387], [45.3937, 13.067], [45.1638, 12.9982], [45.0387, 12.8158], [44.7554, 12.7639], [44.6178, 12.8171], [44.3586, 12.6693], [43.9298, 12.6165], [43.6346, 12.7444], [43.4877, 12.6986], [43.4753, 12.8389], [43.232, 13.2672], [43.2826, 13.6397], [43.2342, 13.859], [43.089, 14.0107], [43.0935, 14.2039], [43.0065, 14.4831], [43.0212, 14.555], [42.9129, 14.863], [42.9363, 14.9385], [42.8556, 15.1329], [42.6576, 15.2328], [42.8, 15.3718], [42.7171, 15.6545], [42.8395, 16.0322], [42.7992, 16.3718], [43.0336, 16.5503], [43.1649, 16.6892], [43.1845, 16.8118], [43.1165, 16.9418], [43.1911, 17.3595], [43.418, 17.5162], [43.5972, 17.4713], [43.7131, 17.3657], [43.9169, 17.3249], [44.1558, 17.3986], [44.5464, 17.4043], [44.747, 17.4319], [45.1482, 17.4274], [45.4066, 17.32], [46.3104, 17.2312], [46.6819, 17.2685], [46.7787, 17.2121], [46.9758, 16.9533], [47.1436, 16.9466], [47.4418, 17.1118], [47.5795, 17.4483], [48.172, 18.1567], [49.042, 18.582], [49.1926, 18.6215], [50.3551, 18.7777], [51.9776, 18.9961], [52.4201, 17.9973], [52.7291, 17.3004], [52.8005, 17.268], [53.0855, 16.6484]]]] }, \"properties\": { \"name\": \"Yemen\", \"id\": \"YE\" }, \"id\": \"YE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-171.454, -14.0463], [-171.7283, -14.0472], [-171.9118, -14.0015], [-172.0281, -13.907], [-171.8582, -13.8071], [-171.6038, -13.8794], [-171.454, -14.0463]]], [[[-172.3335, -13.4653], [-172.2214, -13.5594], [-172.1769, -13.6845], [-172.225, -13.8044], [-172.5357, -13.7915], [-172.7442, -13.5789], [-172.6696, -13.5239], [-172.3335, -13.4653]]]] }, \"properties\": { \"name\": \"Samoa\", \"id\": \"WS\" }, \"id\": \"WS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-178.0467, -14.3184], [-178.1585, -14.3117], [-178.1423, -14.2426], [-178.0467, -14.3184]]] }, \"properties\": { \"name\": \"Wallis and Futuna\", \"id\": \"WF\" }, \"id\": \"WF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[34.2453, 31.2085], [34.1983, 31.3226], [34.4775, 31.5849], [34.5255, 31.5254], [34.3501, 31.3629], [34.2453, 31.2085]]], [[[35.4506, 31.4792], [35.1012, 31.3661], [34.8726, 31.3967], [34.9507, 31.6022], [35.198, 31.7762], [34.9898, 31.9134], [34.9561, 32.1611], [35.0653, 32.4603], [35.193, 32.5344], [35.3622, 32.5073], [35.5513, 32.3955], [35.5721, 32.2378], [35.5314, 31.9848], [35.5589, 31.7656], [35.4506, 31.4792]]]] }, \"properties\": { \"name\": \"Palestinian Territories\", \"id\": \"PS\" }, \"id\": \"PS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[169.4913, -19.5404], [169.3475, -19.6234], [169.2174, -19.4764], [169.2476, -19.3446], [169.4913, -19.5404]]], [[[169.3346, -18.9403], [169.248, -18.9833], [168.987, -18.8715], [169.0159, -18.6437], [169.1437, -18.6312], [169.201, -18.7955], [169.3346, -18.9403]]], [[[168.446, -17.5423], [168.5454, -17.6845], [168.5245, -17.798], [168.2515, -17.7808], [168.1583, -17.7106], [168.2733, -17.5522], [168.446, -17.5423]]], [[[168.4468, -16.7789], [168.1814, -16.8038], [168.1245, -16.6902], [168.1992, -16.5938], [168.3661, -16.7589], [168.4468, -16.7789]]], [[[168.2968, -16.3364], [168.0215, -16.3155], [168.0642, -16.1814], [168.164, -16.0816], [168.2968, -16.3364]]], [[[167.4125, -16.0958], [167.7144, -16.3137], [167.8365, -16.4496], [167.7597, -16.5166], [167.6114, -16.4984], [167.4494, -16.5552], [167.3802, -16.2458], [167.3158, -16.1157], [167.1515, -16.0807], [167.1995, -15.885], [167.3358, -15.9168], [167.4125, -16.0958]]], [[[168.2129, -15.9706], [168.1228, -15.6807], [168.1836, -15.5081], [168.2679, -15.8925], [168.2129, -15.9706]]], [[[167.9115, -15.4357], [167.8445, -15.4818], [167.6744, -15.4517], [167.8263, -15.3118], [167.9115, -15.4357]]], [[[166.7458, -14.8266], [166.8102, -15.1573], [166.9234, -15.1392], [166.9872, -14.9398], [167.1316, -15.1352], [167.1995, -15.4858], [167.0939, -15.5809], [166.9367, -15.5782], [166.8258, -15.635], [166.6312, -15.406], [166.6477, -15.2115], [166.5274, -14.8502], [166.6078, -14.6367], [166.7458, -14.8266]]]] }, \"properties\": { \"name\": \"Vanuatu\", \"id\": \"VU\" }, \"id\": \"VU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[104.0639, 10.3908], [104.0758, 10.2248], [103.952, 10.243], [103.8681, 10.3353], [103.9857, 10.4268], [104.0639, 10.3908]]], [[[107.9728, 21.5081], [107.809, 21.497], [107.6367, 21.3678], [107.4098, 21.2848], [107.3544, 21.0554], [107.1649, 20.9488], [107.0751, 20.9994], [106.8861, 20.9501], [106.6758, 20.9603], [106.7533, 20.7348], [106.551, 20.5267], [106.5726, 20.3922], [106.5181, 20.2887], [106.1656, 19.9922], [105.9841, 19.939], [105.8141, 19.5874], [105.791, 19.294], [105.6219, 18.9664], [105.8883, 18.5025], [106.0658, 18.3165], [106.2394, 18.2206], [106.499, 17.9463], [106.479, 17.7195], [106.7356, 17.367], [107.12, 17.0554], [107.1804, 16.8978], [107.3549, 16.7935], [107.7241, 16.4877], [107.8338, 16.3226], [108.0295, 16.331], [108.2675, 16.0899], [108.2861, 15.9892], [108.674, 15.4836], [108.8215, 15.378], [108.9399, 15.0016], [109.0847, 14.7161], [109.0869, 14.5527], [109.1912, 14.2704], [109.3036, 13.8563], [109.2471, 13.8545], [109.272, 13.2793], [109.4238, 12.9561], [109.4198, 12.719], [109.3354, 12.7519], [109.2187, 12.6458], [109.3049, 12.391], [109.2068, 12.4154], [109.2157, 12.0728], [109.1576, 11.837], [109.1988, 11.7247], [109.1326, 11.6009], [109.0399, 11.5929], [108.9866, 11.3363], [108.8205, 11.3154], [108.7003, 11.1992], [108.5511, 11.1561], [108.2715, 10.9342], [108.0948, 10.8973], [108.0016, 10.7202], [107.8453, 10.7002], [107.4703, 10.4858], [107.2617, 10.3984], [107.0876, 10.4983], [106.8129, 10.4334], [106.7573, 10.2958], [106.7853, 10.1165], [106.6592, 9.9913], [106.657, 9.9012], [106.5075, 9.8213], [106.5723, 9.6411], [106.3779, 9.5563], [106.2038, 9.6753], [106.1683, 9.3965], [105.5012, 9.0933], [105.3222, 8.8012], [105.1146, 8.629], [104.8922, 8.5833], [104.8962, 8.7467], [104.8185, 8.8017], [104.8145, 9.1857], [104.8451, 9.606], [104.9032, 9.8164], [105.0923, 9.9007], [105.028, 10.0672], [104.8731, 10.1147], [104.802, 10.2026], [104.6635, 10.1697], [104.4265, 10.4113], [104.564, 10.516], [104.8504, 10.5347], [105.0613, 10.7339], [105.0222, 10.8866], [105.1594, 10.8978], [105.3147, 10.8454], [105.3867, 10.9399], [105.755, 10.9901], [105.8531, 10.8636], [105.9384, 10.8854], [106.0991, 10.7975], [106.1679, 11.0123], [105.8558, 11.2942], [105.8513, 11.6351], [106.0059, 11.758], [106.3401, 11.6816], [106.4107, 11.7385], [106.4137, 11.9485], [106.7001, 11.9795], [106.7649, 12.0523], [106.9305, 12.0776], [107.159, 12.277], [107.5061, 12.3644], [107.5555, 12.5402], [107.4756, 13.0302], [107.6056, 13.4377], [107.3313, 14.1266], [107.3646, 14.3685], [107.4485, 14.4511], [107.5195, 14.705], [107.4805, 14.9798], [107.6531, 15.255], [107.5644, 15.3917], [107.3388, 15.5604], [107.1897, 15.7473], [107.1888, 15.8387], [107.3606, 15.9217], [107.3966, 16.0429], [107.2172, 16.1366], [107.0699, 16.28], [106.9305, 16.3532], [106.8323, 16.5263], [106.6962, 16.4588], [106.546, 16.6506], [106.5021, 16.9542], [106.2696, 17.2166], [106.0063, 17.4154], [105.6916, 17.7377], [105.5886, 17.9836], [105.4581, 18.1545], [105.3334, 18.1896], [105.0856, 18.4502], [105.1149, 18.6787], [104.7164, 18.8035], [104.1087, 19.1954], [103.9182, 19.2687], [103.8965, 19.3401], [104.0629, 19.4826], [104.0319, 19.6753], [104.2601, 19.6855], [104.5463, 19.6105], [104.7435, 19.7547], [104.928, 20.0179], [104.8887, 20.1689], [104.6986, 20.2053], [104.6187, 20.3744], [104.3922, 20.4246], [104.5831, 20.6465], [104.1953, 20.9137], [104.0518, 20.9413], [103.635, 20.6971], [103.4637, 20.7797], [103.1046, 20.8915], [102.8511, 21.2658], [102.9487, 21.5698], [102.9497, 21.6812], [102.8454, 21.7349], [102.6954, 21.6621], [102.5825, 21.9045], [102.183, 22.2841], [102.1276, 22.379], [102.2372, 22.4661], [102.4281, 22.7328], [102.5172, 22.7408], [102.8303, 22.5872], [103.0052, 22.4532], [103.1374, 22.593], [103.3563, 22.7546], [103.4713, 22.5974], [103.6204, 22.7821], [103.9151, 22.5384], [104.054, 22.7523], [104.2125, 22.8096], [104.3719, 22.7039], [104.5268, 22.8043], [104.6876, 22.822], [104.7958, 22.9112], [104.8646, 23.1363], [105.2751, 23.3454], [105.4945, 23.1807], [105.5482, 23.0729], [105.8429, 22.9228], [106.001, 22.9747], [106.1838, 22.9552], [106.2495, 22.8695], [106.542, 22.9081], [106.7804, 22.7789], [106.7014, 22.6378], [106.5825, 22.5735], [106.5363, 22.3954], [106.6544, 22.2414], [106.7294, 22.0004], [107.0063, 21.8934], [107.1786, 21.7172], [107.3512, 21.6089], [107.4716, 21.5982], [107.8018, 21.6453], [107.9728, 21.5081]]]] }, \"properties\": { \"name\": \"Vietnam\", \"id\": \"VN\" }, \"id\": \"VN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.7656, 17.7945], [-64.6862, 17.7062], [-64.889, 17.7017], [-64.8848, 17.7723], [-64.7656, 17.7945]]] }, \"properties\": { \"name\": \"US Virgin Islands\", \"id\": \"VI\" }, \"id\": \"VI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.3952, 18.4648], [-64.4261, 18.5131], [-64.3246, 18.5176], [-64.3952, 18.4648]]] }, \"properties\": { \"name\": \"British Virgin Islands\", \"id\": \"VG\" }, \"id\": \"VG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-60.9979, 8.8674], [-61.0691, 8.9473], [-60.9448, 9.0552], [-60.8491, 8.9957], [-60.9979, 8.8674]]], [[[-63.8494, 11.1308], [-63.8173, 11.0003], [-63.9176, 10.8875], [-64.0548, 10.8844], [-64.1608, 10.959], [-64.3625, 10.9617], [-64.3486, 11.0518], [-64.2137, 11.086], [-64.1129, 11.0056], [-63.8932, 11.1672], [-63.8494, 11.1308]]], [[[-60.0175, 8.5491], [-59.8316, 8.3059], [-59.9649, 8.1918], [-60.0324, 8.0537], [-60.1783, 7.9943], [-60.3806, 7.8278], [-60.5136, 7.8132], [-60.7191, 7.4989], [-60.6066, 7.3209], [-60.6334, 7.2112], [-60.5231, 7.1438], [-60.3254, 7.134], [-60.395, 6.9453], [-60.718, 6.7682], [-60.8733, 6.7869], [-60.938, 6.7327], [-61.1457, 6.6946], [-61.2036, 6.5884], [-61.151, 6.4464], [-61.1286, 6.2143], [-61.303, 6.0496], [-61.3767, 5.9071], [-60.7422, 5.2022], [-60.6721, 5.1644], [-60.6046, 4.9945], [-60.6277, 4.8923], [-60.7417, 4.7743], [-60.9062, 4.6868], [-61.0028, 4.5354], [-61.2802, 4.5168], [-61.4793, 4.4023], [-61.5543, 4.2878], [-62.1531, 4.0982], [-62.4106, 4.1568], [-62.7122, 4.0179], [-62.7646, 3.673], [-62.9685, 3.5939], [-63.2948, 3.9224], [-63.5267, 3.8936], [-63.653, 3.9406], [-64.0215, 3.9291], [-64.1218, 4.0671], [-64.2556, 4.1404], [-64.5763, 4.1399], [-64.7224, 4.2745], [-64.8178, 4.2323], [-64.5679, 3.8998], [-64.2754, 3.6627], [-64.2212, 3.5873], [-64.2188, 3.2046], [-64.0379, 2.8016], [-64.009, 2.672], [-64.0487, 2.5251], [-63.9243, 2.4522], [-63.3894, 2.4119], [-63.394, 2.2223], [-63.8446, 1.9769], [-64.0354, 1.9045], [-64.1149, 1.6191], [-64.3042, 1.4553], [-64.486, 1.4526], [-64.7317, 1.2533], [-64.818, 1.2573], [-65.1036, 1.1082], [-65.3609, 0.8685], [-65.4734, 0.6913], [-65.5659, 0.9262], [-65.6814, 0.9834], [-66.06, 0.7854], [-66.3017, 0.7521], [-66.4293, 0.8219], [-66.8761, 1.2231], [-66.8845, 1.3581], [-67.1138, 2.0505], [-67.2152, 2.2756], [-67.2108, 2.3901], [-67.6187, 2.7936], [-67.8347, 2.8926], [-67.3535, 3.3227], [-67.3111, 3.4159], [-67.4987, 3.6912], [-67.6616, 3.8643], [-67.7832, 4.1981], [-67.7954, 4.3805], [-67.8553, 4.5071], [-67.8143, 4.9309], [-67.825, 5.2705], [-67.7883, 5.3753], [-67.6423, 5.5586], [-67.6314, 5.7095], [-67.4394, 6.0256], [-67.482, 6.18], [-67.5682, 6.2418], [-67.8591, 6.2897], [-68.1432, 6.1974], [-68.4717, 6.1565], [-68.7365, 6.157], [-68.9373, 6.1983], [-69.09, 6.1845], [-69.2683, 6.0997], [-69.4392, 6.1348], [-70.095, 6.9378], [-70.3875, 6.9724], [-70.6552, 7.083], [-70.8108, 7.0776], [-71.0134, 6.9946], [-71.2178, 6.9853], [-71.6209, 7.0328], [-71.8928, 6.9902], [-72.0843, 7.0967], [-72.2077, 7.3701], [-72.443, 7.4549], [-72.479, 7.6134], [-72.4461, 7.9663], [-72.3575, 8.0875], [-72.4166, 8.3818], [-72.6653, 8.6277], [-72.7963, 9.1088], [-72.9601, 9.135], [-73.0584, 9.2598], [-73.1932, 9.1941], [-73.3563, 9.2269], [-73.0642, 9.6682], [-73.0065, 9.7894], [-72.9403, 10.1959], [-72.8693, 10.4911], [-72.6902, 10.8361], [-72.4461, 11.1144], [-72.2486, 11.1965], [-71.958, 11.6666], [-71.5361, 11.774], [-71.3197, 11.8619], [-71.4884, 11.719], [-71.8686, 11.6275], [-71.9569, 11.5698], [-71.9469, 11.4145], [-71.7309, 10.9945], [-71.5942, 10.6572], [-71.6649, 10.4437], [-71.9558, 10.108], [-72.1129, 9.8155], [-71.9762, 9.5532], [-71.7607, 9.3357], [-71.7813, 9.25], [-71.6868, 9.0725], [-71.5365, 9.0485], [-71.2979, 9.1257], [-71.0858, 9.3481], [-71.0527, 9.7059], [-71.0818, 9.8333], [-71.2622, 10.1436], [-71.3867, 10.2639], [-71.5179, 10.6217], [-71.5445, 10.7788], [-71.4611, 10.8356], [-71.4695, 10.9643], [-71.2644, 10.9994], [-70.8205, 11.2085], [-70.5455, 11.2613], [-70.2326, 11.3731], [-70.0486, 11.5303], [-69.8852, 11.4442], [-69.773, 11.5414], [-69.8173, 11.6719], [-70.1926, 11.6244], [-70.2866, 11.8858], [-70.2029, 12.0985], [-70.004, 12.1779], [-69.8306, 11.9955], [-69.8105, 11.837], [-69.7119, 11.564], [-69.6316, 11.4801], [-69.2325, 11.5183], [-68.8279, 11.4317], [-68.3987, 11.161], [-68.3248, 10.9492], [-68.3248, 10.8085], [-68.234, 10.5693], [-68.1399, 10.4929], [-67.8716, 10.472], [-67.5812, 10.5235], [-67.1333, 10.5706], [-66.9891, 10.6105], [-66.2471, 10.6323], [-66.1057, 10.5746], [-66.0904, 10.473], [-65.8518, 10.2576], [-65.6558, 10.2283], [-65.4894, 10.1596], [-65.1292, 10.0699], [-64.8504, 10.0979], [-64.1883, 10.4579], [-63.8337, 10.4485], [-63.8734, 10.6638], [-63.4968, 10.6434], [-63.1898, 10.7091], [-62.9468, 10.7069], [-62.7024, 10.7499], [-62.2423, 10.6993], [-62.3799, 10.5471], [-62.6936, 10.5631], [-62.8429, 10.5071], [-62.8429, 10.4179], [-62.7064, 10.3331], [-62.6616, 10.1986], [-62.5151, 10.176], [-62.3204, 9.7831], [-62.1904, 9.8421], [-62.1196, 9.9846], [-61.7658, 9.8138], [-61.5123, 9.8475], [-61.3093, 9.6331], [-61.0134, 9.5563], [-60.7924, 9.3606], [-60.8409, 9.2638], [-60.971, 9.2154], [-61.0531, 9.0951], [-61.1224, 8.8434], [-61.2474, 8.6002], [-61.6187, 8.5975], [-61.304, 8.4102], [-61.1939, 8.4874], [-61.0361, 8.4932], [-60.801, 8.5922], [-60.4814, 8.5473], [-60.3403, 8.6286], [-60.1674, 8.617], [-60.0175, 8.5491]]]] }, \"properties\": { \"name\": \"Venezuela\", \"id\": \"VE\" }, \"id\": \"VE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.1745, 13.1581], [-61.2773, 13.2095], [-61.1821, 13.356], [-61.124, 13.2939], [-61.1745, 13.1581]]] }, \"properties\": { \"name\": \"Saint Vincent and the Grenadines\", \"id\": \"VC\" }, \"id\": \"VC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[12.4392, 41.8983], [12.4308, 41.8974], [12.4308, 41.9054], [12.4383, 41.9063], [12.4392, 41.8983]]] }, \"properties\": { \"name\": \"Vatican City\", \"id\": \"VA\" }, \"id\": \"VA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[70.9468, 42.2485], [71.036, 42.2845], [71.2287, 42.1629], [70.8421, 42.0195], [70.8035, 41.9227], [70.6308, 41.8756], [70.455, 41.7252], [70.1811, 41.5716], [70.4714, 41.4127], [70.6459, 41.4602], [70.7826, 41.2626], [71.1106, 41.1525], [71.4084, 41.1361], [71.4208, 41.3417], [71.7924, 41.4131], [71.8786, 41.1952], [72.1644, 41.1739], [72.1875, 41.026], [72.3642, 41.0434], [72.6585, 40.8698], [72.99, 40.86], [73.113, 40.7859], [72.7739, 40.6505], [72.5674, 40.5244], [72.4019, 40.5781], [72.3575, 40.4015], [72.1311, 40.4387], [71.9558, 40.2586], [71.6926, 40.1525], [71.3046, 40.287], [70.9579, 40.2391], [70.653, 40.2013], [70.3826, 40.4534], [70.712, 40.6691], [70.751, 40.7397], [70.4416, 41.0234], [70.2921, 40.8916], [69.7128, 40.6572], [69.4141, 40.797], [69.2063, 40.5666], [69.3044, 40.3274], [69.228, 40.1875], [68.9515, 40.2226], [68.6528, 40.1826], [68.8046, 40.0504], [68.869, 39.9074], [68.639, 39.8386], [68.5862, 39.6349], [68.4633, 39.5368], [68.077, 39.5643], [67.7192, 39.6216], [67.4263, 39.4657], [67.3495, 39.242], [67.6162, 39.1502], [67.6767, 39.0086], [68.1037, 38.962], [68.1485, 38.8905], [68.0477, 38.6695], [68.144, 38.3831], [68.3332, 38.238], [68.2942, 38.0329], [68.0877, 37.8354], [67.8143, 37.4869], [67.7592, 37.1721], [67.5173, 37.2667], [67.3197, 37.2095], [67.069, 37.3346], [66.8276, 37.3715], [66.5222, 37.3484], [66.5257, 37.7856], [66.6295, 37.9321], [66.5744, 38.0107], [66.3353, 38.0719], [66.1732, 38.1665], [65.8571, 38.2686], [65.613, 38.2384], [65.0768, 38.5394], [64.6599, 38.736], [64.3101, 38.9775], [64.1628, 38.9535], [63.7207, 39.1884], [63.5059, 39.377], [62.6505, 39.8586], [62.4415, 40.0361], [62.3748, 40.3322], [62.0952, 40.6834], [61.903, 41.0935], [61.6446, 41.24], [61.4968, 41.2759], [61.329, 41.1952], [60.755, 41.2458], [60.455, 41.2218], [60.0896, 41.3993], [60.138, 41.5942], [60.0755, 41.7007], [60.107, 41.9076], [59.9627, 41.9542], [60.0062, 42.1908], [59.8584, 42.2951], [59.4508, 42.2996], [59.2765, 42.3564], [59.1233, 42.5237], [58.877, 42.5615], [58.5888, 42.7785], [58.477, 42.6627], [58.2595, 42.688], [58.2342, 42.4478], [58.0291, 42.4878], [57.8143, 42.1899], [57.3819, 42.1562], [57.2287, 42.0843], [56.9642, 41.8566], [57.0184, 41.4504], [57.1187, 41.3501], [57.0179, 41.2635], [55.9774, 41.3221], [55.9771, 42.47], [55.9766, 43.1585], [55.9761, 44.077], [55.9756, 44.9949], [57.4774, 45.3375], [58.5552, 45.5555], [59.774, 44.9811], [61.008, 44.3938], [61.1607, 44.1688], [61.9904, 43.4923], [62.0721, 43.4892], [63.2072, 43.6281], [64.4434, 43.5514], [64.9055, 43.7147], [65.2704, 43.4178], [65.4963, 43.3108], [65.803, 42.8771], [66.1004, 42.9907], [66.0094, 42.0048], [66.4986, 41.9951], [66.5381, 41.7412], [66.6687, 41.2707], [66.8142, 41.1423], [67.9359, 41.1965], [68.113, 41.0287], [68.0477, 40.8094], [68.2919, 40.6562], [68.4956, 40.6088], [68.6008, 40.6598], [68.584, 40.8764], [68.7371, 41.042], [68.9871, 41.2049], [69.0651, 41.367], [69.3683, 41.4904], [69.664, 41.6719], [70.0954, 41.8206], [70.416, 42.0785], [70.6134, 42.0545], [70.7151, 42.1686], [70.9468, 42.2485]]], [[[71.206, 39.8924], [71.0116, 39.895], [71.0804, 40.0797], [71.2287, 40.0482], [71.206, 39.8924]]]] }, \"properties\": { \"name\": \"Uzbekistan\", \"id\": \"UZ\" }, \"id\": \"UZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-155.5354, 19.1089], [-155.6256, 18.9637], [-155.8814, 19.0707], [-155.8907, 19.3823], [-156.0487, 19.7499], [-155.8203, 20.014], [-155.8927, 20.1675], [-155.8317, 20.2759], [-155.6221, 20.1636], [-155.1989, 19.9945], [-155.0861, 19.8754], [-155.0659, 19.7481], [-154.8043, 19.5244], [-155.0535, 19.3193], [-155.3097, 19.2602], [-155.5354, 19.1089]]], [[[-156.4868, 20.9324], [-156.2775, 20.9515], [-155.9899, 20.757], [-156.1071, 20.6447], [-156.31, 20.5986], [-156.4382, 20.6177], [-156.4802, 20.8014], [-156.6897, 20.9013], [-156.5854, 21.0345], [-156.4868, 20.9324]]], [[[-157.2137, 21.2156], [-156.7423, 21.1636], [-156.8599, 21.0562], [-157.2903, 21.1126], [-157.2137, 21.2156]]], [[[-157.7994, 21.4566], [-157.6354, 21.3075], [-157.7988, 21.2684], [-157.9017, 21.3408], [-158.1104, 21.3186], [-158.273, 21.5853], [-158.123, 21.6004], [-157.9625, 21.7012], [-157.7994, 21.4566]]], [[[-159.3728, 21.9325], [-159.4607, 21.8761], [-159.609, 21.9094], [-159.7891, 22.0417], [-159.7266, 22.1402], [-159.5792, 22.2232], [-159.3522, 22.2197], [-159.3006, 22.1051], [-159.3728, 21.9325]]], [[[-72.5098, 40.9861], [-72.3391, 40.8942], [-73.1943, 40.6541], [-73.7667, 40.5928], [-73.8792, 40.7917], [-73.5738, 40.9195], [-73.1858, 40.9297], [-73.0338, 40.9661], [-72.5098, 40.9861]]], [[[-88.2219, 47.2106], [-88.4341, 47.1223], [-88.6158, 47.1741], [-88.3944, 47.3887], [-88.1102, 47.4725], [-88.0155, 47.3208], [-88.2219, 47.2106]]], [[[-88.9552, 47.926], [-89.1466, 47.9526], [-88.5882, 48.1585], [-88.6248, 48.042], [-88.9552, 47.926]]], [[[-93.3781, 48.6165], [-93.3769, 48.617], [-93.2579, 48.629], [-92.9963, 48.6117], [-92.5007, 48.4355], [-92.4145, 48.2766], [-92.1717, 48.3383], [-91.5183, 48.0582], [-91.2207, 48.1048], [-91.0436, 48.1936], [-90.8403, 48.2007], [-90.7444, 48.1048], [-90.0919, 48.1181], [-89.9936, 48.0152], [-89.5776, 48.0019], [-90.1972, 47.7864], [-90.5975, 47.6878], [-90.9571, 47.5237], [-91.3862, 47.2147], [-92.0644, 46.8188], [-92.0728, 46.7362], [-91.8356, 46.7021], [-91.4991, 46.7662], [-91.2177, 46.8856], [-90.9461, 46.9538], [-90.7683, 46.908], [-90.7368, 46.6888], [-90.4689, 46.5841], [-90.1536, 46.6545], [-89.8605, 46.7928], [-89.3551, 46.8819], [-88.9482, 47.043], [-88.8297, 47.1459], [-88.6327, 47.167], [-88.5154, 47.0956], [-88.4761, 46.8367], [-88.2162, 46.9516], [-87.7776, 46.8878], [-87.6374, 46.8265], [-87.3581, 46.5244], [-87.0341, 46.5432], [-86.8515, 46.4703], [-86.6375, 46.453], [-86.2313, 46.6564], [-85.9467, 46.7021], [-85.6161, 46.6906], [-85.0146, 46.7835], [-85.0343, 46.5058], [-84.5283, 46.436], [-84.3274, 46.4915], [-84.2036, 46.247], [-83.9787, 45.9616], [-84.5212, 45.9946], [-84.6314, 46.0526], [-84.8019, 45.8743], [-85.1007, 46.0462], [-85.3859, 46.1087], [-85.7078, 45.9876], [-85.9593, 45.9407], [-86.2717, 45.9367], [-86.3995, 45.8007], [-86.5634, 45.8825], [-86.7986, 45.8317], [-86.9378, 45.7003], [-87.0849, 45.7298], [-87.6022, 45.1571], [-87.627, 45.0323], [-87.8302, 44.9424], [-88.0283, 44.6179], [-87.929, 44.5595], [-87.6044, 44.8469], [-87.4197, 44.8657], [-87.3374, 44.7759], [-87.5275, 44.3857], [-87.5349, 44.1743], [-87.7238, 43.9073], [-87.6997, 43.7237], [-87.9017, 43.2449], [-87.8934, 43.0411], [-87.787, 42.8092], [-87.812, 42.543], [-87.7975, 42.2114], [-87.6946, 42.0844], [-87.5147, 41.7206], [-87.2532, 41.6377], [-87.0727, 41.6695], [-86.7983, 41.7885], [-86.6325, 41.9113], [-86.2995, 42.4176], [-86.2328, 42.65], [-86.2215, 42.9004], [-86.3292, 43.2242], [-86.5421, 43.6373], [-86.4405, 43.7943], [-86.5192, 44.0738], [-86.2959, 44.3306], [-86.237, 44.7202], [-86.126, 44.7477], [-86.0576, 44.9164], [-85.8579, 44.9615], [-85.5877, 45.1613], [-85.6473, 44.8376], [-85.4846, 44.8403], [-85.389, 45.0328], [-85.3756, 45.277], [-85.2229, 45.3562], [-84.9671, 45.3926], [-85.0878, 45.6053], [-84.9515, 45.7753], [-84.772, 45.7948], [-84.1892, 45.6112], [-84.1278, 45.5325], [-83.4785, 45.3389], [-83.3201, 45.139], [-83.4482, 45.0246], [-83.3278, 44.8693], [-83.2944, 44.6834], [-83.3306, 44.3752], [-83.5125, 44.2707], [-83.614, 44.0583], [-83.8789, 43.9626], [-83.9157, 43.7005], [-83.7352, 43.6266], [-83.4689, 43.7308], [-83.3382, 43.9289], [-82.9472, 44.0669], [-82.7877, 44.0034], [-82.6633, 43.8542], [-82.4612, 43.081], [-82.4173, 43.0174], [-82.4883, 42.7394], [-82.5755, 42.6044], [-82.7727, 42.6608], [-82.8719, 42.5173], [-82.8817, 42.3798], [-83.0732, 42.3003], [-83.1766, 42.0489], [-83.4563, 41.7424], [-82.9108, 41.5383], [-82.8308, 41.5797], [-82.5243, 41.407], [-82.1213, 41.493], [-81.7232, 41.511], [-81.2286, 41.7704], [-80.8692, 41.8933], [-80.3344, 42.0408], [-79.7041, 42.3001], [-79.2092, 42.5552], [-78.8778, 42.7991], [-78.9082, 43.0703], [-79.0661, 43.1061], [-79.0592, 43.278], [-78.6895, 43.3614], [-78.1749, 43.3946], [-77.8381, 43.3572], [-77.529, 43.2674], [-77.2709, 43.2945], [-76.9764, 43.2775], [-76.6929, 43.3609], [-76.4728, 43.5073], [-76.2026, 43.5745], [-76.1984, 43.8746], [-76.0987, 43.967], [-76.2377, 44.1832], [-75.8322, 44.3972], [-75.7919, 44.4968], [-75.1794, 44.8994], [-74.8566, 45.0038], [-74.7088, 45.0038], [-73.1821, 45.0055], [-71.5174, 45.0078], [-71.3272, 45.2901], [-70.898, 45.2625], [-70.7023, 45.5515], [-70.421, 45.7384], [-70.2963, 45.9062], [-70.2483, 46.2511], [-70.0672, 46.4411], [-70.0078, 46.7087], [-69.2429, 47.4629], [-69.0503, 47.4265], [-69.0485, 47.2738], [-68.8288, 47.2033], [-68.311, 47.3546], [-68.0968, 47.2747], [-67.8067, 47.0829], [-67.7845, 45.7016], [-67.4327, 45.603], [-67.4936, 45.4743], [-67.4725, 45.2759], [-67.3668, 45.1738], [-67.1249, 45.1693], [-67.1067, 44.8853], [-66.9871, 44.8275], [-67.1913, 44.6757], [-67.3642, 44.697], [-67.6529, 44.5625], [-67.8391, 44.5763], [-67.9071, 44.4538], [-68.2775, 44.5075], [-68.6119, 44.3104], [-68.9615, 44.4338], [-69.0683, 44.0978], [-69.2261, 43.9864], [-69.7916, 43.8053], [-69.9652, 43.855], [-70.1789, 43.7662], [-70.2026, 43.6259], [-70.5207, 43.3489], [-70.6423, 43.1345], [-70.7331, 43.0702], [-70.829, 42.8252], [-70.7358, 42.6694], [-71.0463, 42.3311], [-70.7382, 42.229], [-70.5489, 41.9387], [-70.5147, 41.8033], [-70.2954, 41.7287], [-70.0013, 41.8264], [-69.9488, 41.6772], [-70.4046, 41.6271], [-70.6572, 41.5343], [-70.7012, 41.715], [-70.9744, 41.5485], [-71.1883, 41.5165], [-71.2043, 41.6413], [-71.3306, 41.7625], [-71.4264, 41.6333], [-71.4438, 41.4535], [-71.5228, 41.3789], [-72.2652, 41.2915], [-72.8472, 41.2657], [-73.1823, 41.1756], [-73.5831, 41.022], [-73.8512, 40.8316], [-73.9487, 40.8387], [-74.2267, 40.6079], [-74.2416, 40.4561], [-74.0499, 40.4299], [-73.9575, 40.3282], [-74.0283, 40.073], [-74.1175, 39.9381], [-74.1761, 39.7268], [-74.3899, 39.4866], [-74.429, 39.3872], [-74.603, 39.2927], [-74.7945, 39.0019], [-74.897, 39.1453], [-75.1361, 39.2079], [-75.3533, 39.3397], [-75.4126, 39.2815], [-75.3922, 39.0929], [-75.1851, 38.8195], [-75.0888, 38.7777], [-75.1285, 38.6326], [-75.036, 38.5034], [-75.3536, 38.0648], [-75.5964, 37.6312], [-75.5871, 37.5588], [-75.8121, 37.4252], [-75.9974, 37.2636], [-75.8882, 37.6192], [-75.6592, 37.9539], [-75.8507, 37.9716], [-75.7952, 38.0866], [-76.2116, 38.3614], [-76.2948, 38.4945], [-76.175, 38.7067], [-76.1681, 38.8527], [-76.2764, 39.3228], [-76.4056, 39.3037], [-76.42, 39.0738], [-76.5195, 38.8984], [-76.5012, 38.5322], [-76.333, 38.1408], [-76.8897, 38.2921], [-76.9063, 38.1971], [-76.5494, 38.0946], [-76.2642, 37.8935], [-76.3055, 37.5717], [-76.2635, 37.3568], [-76.4009, 37.3861], [-76.4012, 37.2126], [-76.2833, 37.0527], [-76.4009, 36.9915], [-75.9994, 36.9125], [-75.8905, 36.6568], [-75.9928, 36.4739], [-75.8665, 36.268], [-75.8829, 36.1756], [-76.1479, 36.2795], [-76.1501, 36.1459], [-76.3836, 36.1335], [-76.4789, 36.0283], [-76.679, 36.0753], [-76.7263, 35.9577], [-76.0698, 35.9701], [-75.979, 35.896], [-75.7722, 35.9], [-75.7739, 35.647], [-76.1739, 35.354], [-76.4895, 35.397], [-76.5325, 35.5084], [-76.7414, 35.4317], [-76.513, 35.2705], [-76.7449, 34.9412], [-76.4569, 34.9895], [-76.3623, 34.9363], [-76.5168, 34.7774], [-76.7332, 34.7068], [-77.134, 34.7082], [-77.7508, 34.2851], [-78.0134, 33.9118], [-78.406, 33.9176], [-78.5778, 33.8732], [-78.9202, 33.6587], [-79.1382, 33.4057], [-79.276, 33.1354], [-79.5872, 33.0009], [-79.6149, 32.9095], [-80.0218, 32.6201], [-80.2297, 32.5766], [-80.4743, 32.423], [-80.8492, 32.114], [-80.9235, 31.9449], [-81.1978, 31.7043], [-81.1754, 31.5312], [-81.2951, 31.3714], [-81.2884, 31.264], [-81.4533, 31.0882], [-81.5203, 30.8747], [-81.3858, 30.2701], [-81.2496, 29.7938], [-81.1047, 29.4569], [-80.9, 29.0498], [-80.524, 28.4861], [-80.6501, 28.1812], [-80.2262, 27.2072], [-80.1258, 27.0829], [-80.05, 26.8077], [-80.0413, 26.5685], [-80.1106, 26.1317], [-80.1263, 25.8334], [-80.3007, 25.6185], [-80.3669, 25.3313], [-80.4847, 25.2297], [-80.7366, 25.1564], [-80.8623, 25.176], [-81.1104, 25.1383], [-81.0977, 25.3193], [-81.365, 25.8312], [-81.5682, 25.8916], [-81.7154, 25.983], [-81.8115, 26.1459], [-81.8666, 26.4348], [-82.0397, 26.552], [-82.0779, 26.7043], [-82.1806, 26.8401], [-82.2901, 26.8708], [-82.4414, 27.0599], [-82.6205, 27.4012], [-82.6358, 27.5246], [-82.4006, 27.8353], [-82.5206, 27.8779], [-82.6609, 27.7186], [-82.7428, 27.7093], [-82.8436, 27.846], [-82.7486, 28.2366], [-82.6607, 28.4856], [-82.6516, 28.8873], [-82.7694, 29.0516], [-83.2906, 29.452], [-83.6943, 29.9261], [-84.0443, 30.1036], [-84.3097, 30.0646], [-84.3828, 29.9075], [-84.5499, 29.8977], [-84.8005, 29.7729], [-85.319, 29.6802], [-85.3536, 29.8759], [-85.7557, 30.1671], [-86.1752, 30.3327], [-86.2573, 30.4929], [-86.448, 30.4956], [-86.6797, 30.4028], [-86.9858, 30.4308], [-87.1706, 30.5386], [-87.2811, 30.3394], [-87.6223, 30.2648], [-87.7903, 30.2918], [-87.9244, 30.4495], [-87.9488, 30.627], [-88.0324, 30.6811], [-88.1354, 30.3664], [-88.6921, 30.3553], [-88.9051, 30.4152], [-89.2236, 30.3323], [-89.3206, 30.3456], [-89.4436, 30.223], [-89.5885, 30.1658], [-89.9543, 30.2687], [-90.0453, 30.3513], [-90.2253, 30.3793], [-90.413, 30.1405], [-90.1753, 30.029], [-89.9943, 30.0592], [-89.7439, 29.9301], [-89.5894, 29.915], [-89.4944, 30.0583], [-89.3579, 29.9212], [-89.3544, 29.8204], [-89.5306, 29.772], [-89.7208, 29.6194], [-89.5137, 29.4201], [-89.2456, 29.3331], [-89.0157, 29.203], [-89.1555, 29.0165], [-89.3535, 29.0703], [-89.4431, 29.1941], [-89.6203, 29.3024], [-89.7923, 29.3331], [-89.8773, 29.4582], [-90.0524, 29.4316], [-90.1014, 29.1817], [-90.2129, 29.1049], [-90.3793, 29.2953], [-90.5862, 29.2714], [-90.7511, 29.1311], [-91.2902, 29.2891], [-91.1555, 29.3508], [-91.331, 29.5137], [-91.5141, 29.5554], [-91.6724, 29.7463], [-91.8244, 29.7507], [-91.8932, 29.836], [-92.1356, 29.6993], [-92.0841, 29.5927], [-92.2607, 29.5568], [-92.6714, 29.5971], [-93.1756, 29.7791], [-93.6948, 29.7698], [-93.8905, 29.6895], [-94.0998, 29.6704], [-94.7501, 29.4178], [-94.7783, 29.5479], [-94.8899, 29.6771], [-95.0229, 29.7024], [-94.9929, 29.531], [-94.8884, 29.3707], [-95.139, 29.1679], [-95.2734, 28.9637], [-95.8534, 28.6401], [-96.0205, 28.5869], [-96.2753, 28.6552], [-96.4487, 28.5944], [-96.5616, 28.3671], [-96.6764, 28.3414], [-96.8068, 28.2202], [-97.1564, 28.1443], [-97.073, 27.9863], [-97.1715, 27.8798], [-97.4315, 27.8371], [-97.2887, 27.6706], [-97.3804, 27.4195], [-97.524, 27.3137], [-97.4756, 27.118], [-97.5546, 26.9675], [-97.4023, 26.3967], [-97.1462, 25.9617], [-97.3582, 25.8707], [-97.5873, 25.9843], [-97.8014, 26.042], [-98.0828, 26.0642], [-98.378, 26.1823], [-98.5982, 26.2378], [-98.7653, 26.3403], [-99.1078, 26.4469], [-99.2299, 26.762], [-99.4436, 27.0368], [-99.4403, 27.17], [-99.5102, 27.3404], [-99.5053, 27.5481], [-99.7543, 27.7301], [-100.0014, 28.048], [-100.2961, 28.3277], [-100.3318, 28.5025], [-100.5498, 28.8212], [-100.6587, 29.0685], [-101.0163, 29.4005], [-101.039, 29.4604], [-101.3035, 29.634], [-101.4404, 29.7769], [-101.9909, 29.7955], [-102.269, 29.871], [-102.4763, 29.7689], [-102.615, 29.7525], [-102.7342, 29.6438], [-102.834, 29.444], [-102.892, 29.2163], [-103.09, 29.0419], [-103.2577, 29.001], [-103.6639, 29.207], [-104.1107, 29.3863], [-104.504, 29.6775], [-104.6813, 29.9904], [-104.6813, 30.1343], [-104.9179, 30.5835], [-105.514, 30.9808], [-105.8128, 31.2409], [-106.2558, 31.5445], [-106.4533, 31.77], [-108.2118, 31.7794], [-108.2145, 31.3292], [-109.2747, 31.3274], [-109.9816, 31.3261], [-111.0421, 31.3244], [-111.5161, 31.4721], [-112.939, 31.9161], [-113.8874, 32.2121], [-114.836, 32.5082], [-114.7248, 32.7155], [-116.2698, 32.5974], [-117.1283, 32.5335], [-117.2435, 32.664], [-117.263, 32.9387], [-117.3189, 33.0999], [-117.4674, 33.2957], [-117.7886, 33.5385], [-118.0806, 33.7223], [-118.4104, 33.744], [-118.3929, 33.8586], [-118.5063, 34.0175], [-118.8321, 34.0245], [-119.1437, 34.112], [-119.2676, 34.2576], [-119.6061, 34.4178], [-119.8533, 34.412], [-120.053, 34.4693], [-120.4812, 34.4716], [-120.6448, 34.5798], [-120.6336, 35.0765], [-120.8574, 35.2097], [-120.8603, 35.3655], [-121.1379, 35.607], [-121.2837, 35.6762], [-121.3439, 35.7921], [-121.6644, 36.1539], [-121.8775, 36.331], [-121.9187, 36.5725], [-121.79, 36.7323], [-121.8808, 36.9391], [-122.1642, 36.9911], [-122.3948, 37.2077], [-122.4086, 37.3732], [-122.4993, 37.5428], [-122.5142, 37.7719], [-122.3841, 37.7887], [-122.3855, 37.9605], [-122.1538, 38.0657], [-122.3933, 38.1447], [-122.4838, 38.1088], [-122.4669, 37.838], [-122.7604, 37.9455], [-122.9681, 38.0968], [-122.9865, 38.277], [-123.1212, 38.4493], [-123.2897, 38.5358], [-123.7012, 38.9073], [-123.7196, 39.1111], [-123.8204, 39.3685], [-123.7835, 39.6189], [-123.8845, 39.8608], [-124.1085, 40.0943], [-124.324, 40.2519], [-124.3717, 40.4911], [-124.1331, 40.9697], [-124.1399, 41.1561], [-124.0685, 41.3843], [-124.1633, 41.719], [-124.2445, 41.7878], [-124.2117, 41.9844], [-124.3553, 42.1229], [-124.4205, 42.3808], [-124.4061, 42.5836], [-124.5397, 42.8127], [-124.3466, 43.3418], [-124.1486, 43.6916], [-124.0991, 44.3339], [-124.0474, 44.4253], [-124.0592, 44.7778], [-123.9294, 45.5768], [-123.9613, 45.8431], [-123.9471, 46.1406], [-123.6737, 46.1828], [-123.6883, 46.2999], [-124.0727, 46.2795], [-123.9462, 46.4327], [-123.8892, 46.6599], [-124.0716, 46.7447], [-124.1125, 46.8628], [-123.8428, 46.9631], [-124.1635, 47.0155], [-124.1988, 47.2086], [-124.3093, 47.4048], [-124.3761, 47.6587], [-124.6212, 47.9042], [-124.7017, 48.1519], [-124.6327, 48.3752], [-123.9757, 48.1683], [-123.2944, 48.1194], [-123.1243, 48.151], [-122.8609, 48.0902], [-122.6567, 47.8811], [-122.8214, 47.7932], [-122.6303, 47.6929], [-122.5535, 47.4048], [-122.5779, 47.2933], [-122.8125, 47.3289], [-122.9876, 47.1726], [-122.702, 47.1109], [-122.5422, 47.2756], [-122.3537, 47.3715], [-122.3928, 47.8207], [-122.2421, 48.0107], [-122.5204, 48.2291], [-122.4086, 48.2939], [-122.6689, 48.4652], [-122.4967, 48.5056], [-122.562, 48.7779], [-122.653, 48.764], [-122.7888, 48.993], [-121.4071, 48.993], [-120.5544, 48.993], [-119.2754, 48.993], [-117.5697, 48.993], [-116.2906, 48.993], [-115.4379, 48.993], [-114.1589, 48.993], [-112.4532, 48.993], [-110.7478, 48.993], [-109.4684, 48.993], [-108.6157, 48.993], [-106.9103, 48.993], [-105.2046, 48.993], [-103.4992, 48.993], [-102.6465, 48.993], [-100.9409, 48.993], [-99.2354, 48.993], [-97.5298, 48.9933], [-96.2507, 48.9933], [-95.162, 48.9917], [-95.1554, 49.3697], [-94.8544, 49.3046], [-94.8427, 49.1191], [-94.705, 48.8086], [-94.6209, 48.7427], [-94.0552, 48.659], [-93.7078, 48.5256], [-93.3781, 48.6165]]], [[[-177.8791, 51.6497], [-178.1945, 51.8823], [-177.9539, 51.9185], [-177.7706, 51.778], [-177.8791, 51.6497]]], [[[-176.4733, 51.8375], [-176.4373, 51.7543], [-176.7709, 51.63], [-176.8743, 51.7904], [-176.5499, 51.944], [-176.4733, 51.8375]]], [[[-174.1688, 52.4201], [-174.0183, 52.3318], [-174.1206, 52.1353], [-174.6773, 52.035], [-175.1176, 52.047], [-174.3062, 52.2161], [-174.4356, 52.3173], [-174.1688, 52.4201]]], [[[172.8116, 53.0129], [173.1018, 52.9956], [173.4362, 52.852], [173.0802, 52.8144], [172.935, 52.7521], [172.7219, 52.8855], [172.8116, 53.0129]]], [[[-167.9643, 53.3452], [-168.2706, 53.238], [-168.446, 53.0844], [-168.6985, 52.9634], [-168.7959, 53.0448], [-168.639, 53.2557], [-168.4366, 53.2568], [-168.2877, 53.5001], [-167.9856, 53.5582], [-167.8048, 53.485], [-167.9643, 53.3452]]], [[[-166.3847, 53.7205], [-166.7705, 53.4761], [-167.1536, 53.408], [-167.5224, 53.2762], [-167.8088, 53.3239], [-167.136, 53.5265], [-167.0157, 53.6983], [-167.1183, 53.8727], [-166.9782, 53.9628], [-166.3723, 53.999], [-166.2309, 53.9327], [-166.4888, 53.7855], [-166.3847, 53.7205]]], [[[-165.8416, 54.0707], [-166.0365, 54.0471], [-166.0877, 54.1693], [-165.8929, 54.207], [-165.8416, 54.0707]]], [[[-163.511, 55.0142], [-163.358, 54.7356], [-163.5831, 54.6256], [-164.0734, 54.6209], [-164.5907, 54.4043], [-164.8233, 54.4192], [-164.8877, 54.6078], [-164.7062, 54.6919], [-164.5297, 54.8808], [-164.2738, 54.9001], [-163.8681, 55.039], [-163.511, 55.0142]]], [[[-132.8622, 54.8944], [-132.6172, 54.8924], [-132.6469, 54.7561], [-132.8074, 54.709], [-133.1228, 54.9698], [-133.2511, 55.1751], [-133.0975, 55.2137], [-132.8622, 54.8944]]], [[[-160.6849, 55.3149], [-160.4876, 55.1849], [-160.8254, 55.174], [-160.6849, 55.3149]]], [[[-133.305, 55.5437], [-133.2817, 55.4978], [-133.6501, 55.2692], [-133.6342, 55.5393], [-133.305, 55.5437]]], [[[-130.9792, 55.4891], [-131.0827, 55.2668], [-131.1878, 55.2064], [-131.4207, 55.2759], [-131.4746, 55.3735], [-131.8111, 55.2231], [-131.8461, 55.4164], [-131.6475, 55.5855], [-131.6249, 55.8316], [-131.2693, 55.9555], [-130.9659, 55.6696], [-130.9792, 55.4891]]], [[[-133.566, 56.3392], [-133.2029, 56.3199], [-133.0966, 56.09], [-132.7577, 55.995], [-132.5977, 55.8951], [-132.4301, 55.6869], [-132.4179, 55.4829], [-132.2153, 55.3835], [-132.2068, 55.2244], [-131.9764, 55.2086], [-131.9809, 54.8049], [-132.1342, 54.7125], [-132.3413, 54.9072], [-132.7823, 55.0484], [-133.103, 55.3602], [-133.0897, 55.6125], [-133.2983, 55.6068], [-133.447, 55.797], [-133.2415, 55.9209], [-133.3712, 56.0358], [-133.6843, 55.9428], [-133.7551, 55.9994], [-133.5309, 56.1457], [-133.566, 56.3392]]], [[[-132.7799, 56.2473], [-133.0351, 56.341], [-132.9019, 56.4537], [-132.7062, 56.4484], [-132.6694, 56.2873], [-132.7799, 56.2473]]], [[[-132.1123, 56.1095], [-132.1329, 55.9432], [-132.2874, 55.9295], [-132.4512, 56.0564], [-132.6598, 56.0782], [-132.5988, 56.2415], [-132.3799, 56.4988], [-132.067, 56.2442], [-132.1123, 56.1095]]], [[[-132.7144, 56.5425], [-132.9308, 56.5245], [-132.8425, 56.7948], [-132.5679, 56.5758], [-132.7144, 56.5425]]], [[[-133.9897, 56.845], [-133.7385, 56.6503], [-133.8552, 56.5823], [-133.9498, 56.1277], [-134.1897, 56.0769], [-134.2452, 56.2032], [-134.1955, 56.4136], [-134.3737, 56.8386], [-134.1433, 56.9322], [-133.9897, 56.845]]], [[[-133.7078, 57.0627], [-133.0709, 56.9742], [-132.9541, 56.8803], [-132.9592, 56.677], [-133.2127, 56.4646], [-133.6028, 56.4641], [-133.681, 56.7975], [-133.9795, 57.0097], [-133.7078, 57.0627]]], [[[-134.9698, 57.3515], [-134.8231, 57.1567], [-134.6207, 56.7183], [-134.63, 56.3024], [-134.7503, 56.2407], [-134.9805, 56.519], [-135.0178, 56.6601], [-135.3307, 56.8219], [-135.1995, 57.0272], [-135.502, 57.2438], [-135.609, 57.0714], [-135.7677, 57.1005], [-135.787, 57.3173], [-135.3462, 57.5331], [-134.9698, 57.3515]]], [[[-152.8979, 57.8238], [-152.5116, 57.8515], [-152.4114, 57.646], [-152.2161, 57.577], [-152.4121, 57.4547], [-152.7814, 57.4534], [-153.0516, 57.2376], [-153.4437, 57.1673], [-153.7933, 56.9895], [-153.9995, 57.0499], [-154.339, 56.9209], [-154.4988, 57.0366], [-154.7059, 57.3353], [-154.5353, 57.5595], [-154.2813, 57.638], [-153.8184, 57.5956], [-153.6932, 57.6633], [-153.9045, 57.8198], [-153.6626, 57.8577], [-153.5245, 57.7311], [-153.2003, 57.8201], [-153.1606, 57.972], [-152.8505, 57.8968], [-152.8979, 57.8238]]], [[[-135.7304, 58.2442], [-135.5875, 58.1467], [-135.002, 58.0511], [-134.9281, 57.9528], [-134.9789, 57.7244], [-134.873, 57.5892], [-135.0848, 57.5111], [-135.4978, 57.6623], [-135.6179, 57.4804], [-135.9109, 57.4465], [-136.0767, 57.6747], [-136.46, 57.8731], [-136.5687, 57.972], [-136.5124, 58.0959], [-135.7304, 58.2442]]], [[[-134.6802, 58.1616], [-134.24, 58.1441], [-134.2671, 57.8846], [-133.9611, 57.6143], [-133.9253, 57.3368], [-134.1, 57.3], [-134.4354, 57.057], [-134.5916, 57.092], [-134.4868, 57.482], [-134.66, 57.638], [-134.8371, 58.3201], [-134.6802, 58.1616]]], [[[-152.0366, 58.3068], [-152.1091, 58.1611], [-152.5378, 58.101], [-152.9825, 57.9972], [-153.3813, 58.0872], [-152.6747, 58.4506], [-152.3808, 58.352], [-152.0366, 58.3068]]], [[[-160.9191, 58.5771], [-161.1315, 58.6681], [-160.7151, 58.7952], [-160.9191, 58.5771]]], [[[-147.7359, 59.8134], [-147.8143, 59.9019], [-147.4658, 60.0969], [-147.1201, 60.3631], [-146.9866, 60.2543], [-147.3185, 60.0752], [-147.4993, 59.8901], [-147.7359, 59.8134]]], [[[-166.1355, 60.3835], [-165.7298, 60.3143], [-165.7122, 60.0695], [-165.5917, 59.9132], [-165.9468, 59.8901], [-166.1876, 59.7738], [-166.6277, 59.8646], [-167.1389, 60.0086], [-167.4365, 60.2066], [-166.8364, 60.2171], [-166.7845, 60.2965], [-166.4757, 60.3828], [-166.1355, 60.3835]]], [[[-146.5603, 60.4805], [-146.1284, 60.3926], [-146.6184, 60.2737], [-146.7026, 60.4086], [-146.5603, 60.4805]]], [[[-147.6582, 60.4505], [-147.7322, 60.2222], [-147.8714, 60.2297], [-147.7945, 60.4599], [-147.6582, 60.4505]]], [[[-171.4631, 63.6401], [-171.0349, 63.5855], [-170.4304, 63.6989], [-170.1219, 63.6175], [-170.0173, 63.4916], [-169.624, 63.4306], [-169.4276, 63.3483], [-168.7161, 63.3105], [-168.8523, 63.1711], [-169.3648, 63.1711], [-169.6764, 62.9561], [-169.7779, 63.0937], [-170.1895, 63.1962], [-170.5272, 63.3794], [-171.0611, 63.4459], [-171.4011, 63.3392], [-171.7909, 63.4246], [-171.7465, 63.7032], [-171.4631, 63.6401]]], [[[-141.0021, 69.6509], [-141.0021, 68.1898], [-141.0021, 66.7287], [-141.0021, 65.2677], [-141.0021, 64.0989], [-141.0021, 63.2222], [-141.0021, 62.0535], [-141.0021, 60.8847], [-141.0021, 60.3003], [-140.5253, 60.2184], [-140.4528, 60.2998], [-139.9734, 60.1831], [-139.6764, 60.3283], [-139.0794, 60.3437], [-139.1852, 60.0836], [-139.0434, 59.9934], [-138.7054, 59.9012], [-138.6322, 59.7783], [-137.5932, 59.2263], [-137.4386, 58.9032], [-136.8133, 59.15], [-136.5787, 59.1522], [-136.4666, 59.28], [-136.4664, 59.4591], [-136.3219, 59.6049], [-135.9346, 59.6627], [-135.4758, 59.7934], [-135.051, 59.5787], [-135.0713, 59.4413], [-134.9439, 59.2882], [-134.4407, 59.0853], [-134.2185, 58.8498], [-133.8208, 58.7049], [-133.4011, 58.4109], [-133.2752, 58.2229], [-132.5504, 57.5], [-132.2321, 57.1986], [-132.338, 57.0794], [-132.0315, 57.0266], [-132.1043, 56.8568], [-131.8661, 56.7928], [-131.8242, 56.59], [-131.5751, 56.5989], [-131.0829, 56.4049], [-130.7418, 56.3407], [-130.4772, 56.2307], [-130.4131, 56.1226], [-130.0229, 56.0145], [-130.0251, 55.8882], [-130.1465, 55.6545], [-130.0366, 55.2978], [-130.2142, 55.026], [-130.5753, 54.7696], [-130.8496, 54.8076], [-131.0478, 55.1576], [-130.8561, 55.3551], [-130.9187, 55.7359], [-131.1277, 55.9601], [-131.2875, 56.012], [-131.7843, 55.8764], [-131.8695, 55.6472], [-132.1189, 55.5697], [-132.2235, 55.7211], [-132.0057, 55.9302], [-131.8439, 56.1601], [-132.0219, 56.3801], [-132.1819, 56.4207], [-132.4872, 56.7665], [-132.8023, 56.8952], [-132.8143, 57.0408], [-133.4659, 57.1722], [-133.4366, 57.3368], [-133.5543, 57.6951], [-134.031, 58.0722], [-134.0634, 58.2111], [-134.7761, 58.4539], [-134.9647, 58.7422], [-135.334, 58.9095], [-135.0497, 58.3068], [-135.3025, 58.2559], [-135.5718, 58.412], [-135.8733, 58.3942], [-135.8618, 58.5771], [-136.0456, 58.789], [-136.2258, 58.7655], [-136.5663, 58.9409], [-136.8311, 58.9839], [-136.879, 58.8816], [-136.5683, 58.7864], [-136.1029, 58.5063], [-136.1297, 58.3505], [-136.4624, 58.3281], [-136.5827, 58.2453], [-137.0719, 58.3951], [-137.544, 58.5811], [-138.0269, 58.9415], [-138.3525, 59.0874], [-139.341, 59.3757], [-139.7991, 59.5463], [-139.5131, 59.6982], [-139.5812, 59.8806], [-140.2168, 59.7265], [-140.8432, 59.749], [-141.6701, 59.9698], [-142.5486, 60.0861], [-142.9457, 60.0969], [-143.8051, 60.0129], [-144.3326, 60.1911], [-144.6429, 60.2246], [-144.9012, 60.3351], [-144.8245, 60.5335], [-144.984, 60.5369], [-145.2483, 60.3802], [-145.8989, 60.4783], [-145.675, 60.6512], [-146.149, 60.6607], [-146.2511, 60.749], [-146.6384, 60.8973], [-146.5827, 61.1279], [-146.8741, 61.005], [-147.5926, 60.9794], [-147.8911, 60.8898], [-148.2087, 61.0298], [-148.3445, 60.8536], [-148.268, 60.6998], [-148.2963, 60.532], [-147.9641, 60.485], [-148.2036, 60.3648], [-148.1976, 60.1678], [-148.4306, 59.9891], [-148.8428, 59.9512], [-149.1216, 60.0335], [-149.4323, 60.0011], [-149.5492, 59.8943], [-149.7947, 59.856], [-149.7825, 59.7503], [-150.198, 59.5666], [-150.5815, 59.5646], [-150.6774, 59.4269], [-150.9608, 59.2441], [-151.3663, 59.2456], [-151.7383, 59.1886], [-151.964, 59.2851], [-151.8499, 59.4062], [-151.3996, 59.5164], [-151.1894, 59.6378], [-151.7638, 59.7002], [-151.8533, 59.7821], [-151.7345, 59.9882], [-151.4515, 60.2027], [-151.3126, 60.4665], [-151.3217, 60.7428], [-150.9537, 60.8411], [-150.4412, 61.0236], [-149.9975, 60.9351], [-149.5925, 60.9938], [-149.9678, 61.1217], [-149.9452, 61.2941], [-150.4719, 61.26], [-150.6124, 61.3013], [-151.1501, 61.0858], [-151.7341, 60.9106], [-151.7505, 60.7548], [-151.9962, 60.6822], [-152.2707, 60.528], [-152.2603, 60.4095], [-152.6541, 60.2384], [-152.6285, 60.0411], [-152.7595, 59.921], [-153.1061, 59.875], [-153.0482, 59.7301], [-153.4144, 59.7401], [-153.8142, 59.4737], [-154.0883, 59.3632], [-154.1297, 59.12], [-153.6564, 59.0387], [-153.327, 58.8843], [-153.6173, 58.6548], [-154.0199, 58.493], [-154.2081, 58.2888], [-154.2469, 58.1594], [-154.585, 58.0558], [-155.0069, 58.016], [-155.3128, 57.8072], [-155.5901, 57.7337], [-155.7779, 57.5682], [-156.0001, 57.5451], [-156.4784, 57.328], [-156.3976, 57.2405], [-156.4751, 57.1052], [-156.7798, 57.0057], [-157.1391, 56.8266], [-157.3901, 56.8097], [-157.5783, 56.6344], [-157.8691, 56.6453], [-157.9783, 56.5432], [-158.4144, 56.4358], [-158.2757, 56.1962], [-158.7899, 55.9869], [-159.5232, 55.8101], [-159.743, 55.8439], [-159.9623, 55.7948], [-160.4627, 55.5578], [-160.8967, 55.5136], [-161.0995, 55.4057], [-161.3818, 55.3713], [-161.6835, 55.53], [-161.7416, 55.3911], [-162.0741, 55.1394], [-162.3329, 55.0502], [-162.5419, 55.2428], [-162.6441, 55.218], [-162.6745, 54.9967], [-162.8651, 54.9545], [-163.2788, 55.1219], [-162.9621, 55.1837], [-162.5133, 55.4501], [-162.1571, 55.7195], [-161.6974, 55.9073], [-161.2156, 56.0214], [-160.8514, 55.7719], [-160.7584, 55.8547], [-160.3085, 55.8645], [-160.5391, 56.0063], [-160.3021, 56.3141], [-159.7852, 56.5616], [-159.2831, 56.6886], [-158.9904, 56.8601], [-158.6752, 56.7948], [-158.6608, 57.0395], [-158.321, 57.2978], [-157.8944, 57.5113], [-157.6076, 57.6014], [-157.684, 57.7439], [-157.611, 58.0509], [-157.4428, 58.1723], [-157.5236, 58.4213], [-157.2288, 58.641], [-156.9747, 58.7365], [-157.142, 58.8776], [-158.022, 58.6401], [-158.3026, 58.6419], [-158.5032, 58.8503], [-158.4256, 58.9993], [-158.7606, 58.9502], [-158.8614, 58.7187], [-158.7722, 58.5203], [-159.0827, 58.4697], [-159.3581, 58.7213], [-159.6702, 58.9111], [-159.9201, 58.8199], [-160.3631, 59.0512], [-160.817, 58.8716], [-161.2158, 58.801], [-161.3614, 58.6697], [-161.7554, 58.6119], [-161.8566, 58.7171], [-161.7243, 58.7944], [-161.7945, 59.1095], [-161.9811, 59.1461], [-162.0233, 59.284], [-161.8286, 59.5887], [-162.1382, 59.98], [-162.2426, 60.1782], [-162.4215, 60.2839], [-162.5708, 59.9898], [-163.2193, 59.8455], [-163.9069, 59.8067], [-164.1428, 59.8968], [-164.1315, 59.9942], [-164.4704, 60.1493], [-164.6622, 60.3038], [-165.0611, 60.4126], [-165.0264, 60.5007], [-165.3538, 60.5413], [-164.8051, 60.892], [-164.3701, 60.7959], [-164.2656, 60.7247], [-163.8949, 60.7453], [-163.73, 60.59], [-163.4208, 60.7575], [-163.7491, 60.9696], [-163.9946, 60.8647], [-164.4416, 60.87], [-165.1755, 60.9657], [-165.077, 61.0942], [-165.566, 61.1024], [-165.6914, 61.2999], [-165.9062, 61.4038], [-165.797, 61.4912], [-166.1004, 61.6451], [-166.0789, 61.8031], [-165.6128, 61.8692], [-165.7073, 62.1005], [-165.1944, 62.4736], [-164.7927, 62.6232], [-164.8453, 62.8009], [-164.6775, 63.0204], [-164.409, 63.2151], [-164.1076, 63.2617], [-163.7363, 63.1929], [-163.359, 63.0457], [-163.0622, 63.0797], [-162.6214, 63.2657], [-162.2827, 63.5291], [-161.974, 63.453], [-161.5055, 63.4681], [-161.0998, 63.558], [-160.7786, 63.819], [-160.9874, 64.2514], [-161.3856, 64.44], [-160.932, 64.5792], [-160.8869, 64.7956], [-161.187, 64.9241], [-161.4664, 64.7949], [-161.7594, 64.8162], [-162.1722, 64.6782], [-162.807, 64.3743], [-163.1443, 64.4238], [-163.7132, 64.5883], [-164.304, 64.5838], [-164.8995, 64.4607], [-166.1428, 64.5827], [-166.4815, 64.7281], [-166.4152, 64.9265], [-166.8268, 65.0961], [-166.531, 65.1547], [-166.4518, 65.2472], [-166.6655, 65.3382], [-167.4039, 65.4221], [-167.9872, 65.5677], [-168.0884, 65.6578], [-167.5801, 65.7584], [-167.4052, 65.8594], [-167.0743, 65.8771], [-166.7476, 66.0518], [-166.2145, 66.1703], [-165.7238, 66.1126], [-165.7761, 66.319], [-165.4495, 66.41], [-165.0639, 66.4377], [-164.6742, 66.5549], [-164.0583, 66.6106], [-163.7755, 66.5312], [-164.0337, 66.2156], [-163.6954, 66.0838], [-162.8864, 66.0993], [-162.5868, 66.0509], [-161.8164, 66.0536], [-161.557, 66.2505], [-161.2012, 66.2194], [-161.1204, 66.3343], [-161.8877, 66.493], [-162.1913, 66.6932], [-162.4674, 66.7356], [-162.6074, 66.8943], [-162.3615, 66.9474], [-162.1314, 66.8013], [-161.9097, 66.5596], [-161.5911, 66.4595], [-161.048, 66.4742], [-160.6505, 66.3732], [-160.2317, 66.4202], [-160.2626, 66.5725], [-160.864, 66.6708], [-161.3981, 66.5519], [-161.8566, 66.7003], [-161.8788, 66.8039], [-161.6222, 66.9793], [-161.9653, 67.0497], [-162.3915, 67.0199], [-163.0016, 67.0272], [-163.5318, 67.1025], [-163.7205, 67.1955], [-163.9427, 67.4776], [-164.1251, 67.6067], [-165.386, 68.0455], [-165.9595, 68.1558], [-166.236, 68.2779], [-166.3805, 68.4251], [-166.1821, 68.7972], [-166.2091, 68.8854], [-165.5096, 68.8676], [-164.3024, 68.9364], [-163.8679, 69.0367], [-163.5356, 69.1701], [-163.1614, 69.3879], [-162.9521, 69.7581], [-161.881, 70.3318], [-161.6391, 70.2346], [-160.9964, 70.3045], [-160.1172, 70.5913], [-159.9632, 70.5682], [-160.095, 70.3333], [-159.8553, 70.3243], [-159.7463, 70.5304], [-159.9618, 70.6341], [-159.6809, 70.7868], [-159.3144, 70.8784], [-158.9964, 70.8017], [-157.9985, 70.8454], [-157.1953, 71.0933], [-156.7833, 71.319], [-155.8112, 71.1885], [-155.5795, 71.121], [-155.8044, 70.9954], [-155.5793, 70.8944], [-155.1669, 71.0993], [-154.6737, 70.9869], [-154.7852, 70.8942], [-154.1953, 70.801], [-153.9182, 70.8773], [-153.2329, 70.9326], [-152.4911, 70.8809], [-152.233, 70.8103], [-152.4705, 70.6536], [-151.9447, 70.4521], [-151.2249, 70.4188], [-150.6628, 70.5098], [-150.1525, 70.4437], [-149.8702, 70.5096], [-149.2693, 70.5007], [-147.8695, 70.3032], [-147.7053, 70.2173], [-147.063, 70.1704], [-146.7449, 70.1917], [-145.8232, 70.16], [-145.1973, 70.0087], [-144.6192, 69.9822], [-144.417, 70.039], [-143.2184, 70.1163], [-142.708, 70.0337], [-142.2969, 69.8699], [-141.6992, 69.7703], [-141.4078, 69.6533], [-141.0021, 69.6509]]]] }, \"properties\": { \"name\": \"United States\", \"id\": \"US\" }, \"id\": \"US\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-53.3707, -33.7422], [-53.4723, -33.8492], [-53.5345, -34.0175], [-53.7429, -34.2496], [-53.7853, -34.3805], [-54.0101, -34.5168], [-54.1686, -34.6708], [-54.9024, -34.9327], [-55.2379, -34.8959], [-55.3706, -34.8076], [-55.6732, -34.7756], [-56.1179, -34.9079], [-56.3878, -34.8612], [-56.4631, -34.7752], [-56.8553, -34.6767], [-57.1706, -34.4525], [-57.5435, -34.448], [-57.8292, -34.4773], [-57.9612, -34.3068], [-58.4002, -33.9123], [-58.4382, -33.7191], [-58.3534, -33.2602], [-58.2216, -33.1292], [-58.0824, -32.8936], [-58.2011, -32.4718], [-58.123, -32.3218], [-58.1889, -31.9241], [-58.0425, -31.7691], [-57.9881, -31.576], [-58.0538, -31.4948], [-57.8684, -31.1042], [-57.8984, -30.9751], [-57.8105, -30.8587], [-57.8724, -30.5911], [-57.7126, -30.3847], [-57.609, -30.188], [-57.5524, -30.2613], [-57.2143, -30.2834], [-57.1205, -30.1445], [-56.8328, -30.1072], [-56.1761, -30.6283], [-55.999, -30.837], [-56.0047, -31.0794], [-55.8736, -31.0695], [-55.5573, -30.8761], [-55.366, -31.0461], [-55.2546, -31.2259], [-54.8959, -31.3914], [-54.5876, -31.4851], [-54.3699, -31.7452], [-54.2206, -31.8553], [-53.9207, -31.9524], [-53.7618, -32.0568], [-53.6017, -32.403], [-53.1254, -32.7369], [-53.5314, -33.1709], [-53.5376, -33.6228], [-53.3707, -33.7422]]] }, \"properties\": { \"name\": \"Uruguay\", \"id\": \"UY\" }, \"id\": \"UY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[38.2142, 47.0914], [37.5435, 47.0745], [37.3398, 46.9169], [36.6886, 46.7642], [36.4319, 46.7327], [36.2792, 46.6586], [35.827, 46.6244], [35.4, 46.3816], [35.2304, 46.4406], [35.0639, 46.2671], [34.8496, 46.1898], [34.8575, 45.9875], [35.0231, 45.7011], [35.3737, 45.3535], [35.558, 45.3109], [35.8336, 45.4015], [36.013, 45.3718], [36.1705, 45.453], [36.5749, 45.3935], [36.3934, 45.0654], [35.87, 45.0055], [35.5696, 45.1192], [35.1549, 44.8963], [35.0879, 44.8027], [34.7168, 44.8071], [34.47, 44.7215], [34.2818, 44.5386], [33.9098, 44.3876], [33.6559, 44.4334], [33.4508, 44.5537], [33.6124, 44.9079], [33.5551, 45.0979], [33.3927, 45.188], [33.1871, 45.1946], [32.9185, 45.3482], [32.6114, 45.3283], [32.508, 45.4037], [33.1422, 45.749], [33.2799, 45.765], [33.6648, 45.947], [33.5941, 46.0962], [33.4299, 46.0575], [33.2022, 46.1757], [32.9416, 46.1237], [32.4769, 46.0838], [32.0356, 46.2609], [32.0086, 46.43], [32.3615, 46.4748], [32.3539, 46.565], [32.1272, 46.5973], [31.9745, 46.7087], [31.7796, 46.6315], [31.5323, 46.6648], [31.1368, 46.6244], [30.7964, 46.5521], [30.7217, 46.3661], [30.5114, 46.1055], [30.2192, 45.8667], [29.6018, 45.6825], [29.7269, 45.3433], [29.7061, 45.2599], [29.5677, 45.3709], [29.2236, 45.4028], [28.7606, 45.2342], [28.4512, 45.2923], [28.2124, 45.4503], [28.4713, 45.5071], [28.4917, 45.6656], [28.7291, 45.852], [28.7389, 45.9373], [28.9475, 46.05], [29.0061, 46.1765], [28.9276, 46.4242], [29.1464, 46.5268], [29.838, 46.3505], [30.131, 46.4229], [29.924, 46.5387], [29.9423, 46.7239], [29.8779, 46.829], [29.5721, 46.964], [29.5148, 47.091], [29.5494, 47.2468], [29.1597, 47.4558], [29.1228, 47.5304], [29.2107, 47.7314], [29.1948, 47.8824], [28.9733, 47.933], [28.774, 48.1194], [28.327, 48.1616], [28.0887, 48.257], [27.8201, 48.4164], [27.5492, 48.4777], [27.2284, 48.3716], [26.8471, 48.3871], [26.6189, 48.2597], [26.3055, 48.2038], [26.1626, 47.9925], [25.4644, 47.9108], [24.8934, 47.7177], [24.5788, 47.9312], [24.1779, 47.9059], [23.6289, 47.9961], [23.4082, 47.9898], [23.2026, 48.0844], [22.8764, 47.9472], [22.769, 48.1097], [22.5826, 48.1341], [22.3505, 48.2561], [22.2537, 48.4075], [22.132, 48.4053], [22.1427, 48.5686], [22.2954, 48.6858], [22.5387, 49.0727], [22.7055, 49.1712], [22.7326, 49.2951], [22.6496, 49.539], [23.0362, 49.899], [23.7118, 50.3773], [23.9728, 50.4101], [24.0949, 50.617], [23.9787, 50.7857], [24.1056, 50.8449], [23.6644, 51.3101], [23.6053, 51.5179], [23.7069, 51.6413], [23.9511, 51.5852], [24.1269, 51.6646], [24.3616, 51.8675], [25.2672, 51.9378], [25.925, 51.9136], [26.4533, 51.8135], [27.1422, 51.752], [27.2701, 51.6135], [27.8586, 51.5924], [28.1836, 51.6078], [28.5991, 51.5427], [28.6479, 51.4566], [29.1357, 51.6173], [29.3465, 51.3825], [29.553, 51.4346], [30.1606, 51.4779], [30.3334, 51.3255], [30.5447, 51.2651], [30.6326, 51.3554], [30.5331, 51.5965], [30.6671, 51.8142], [30.9806, 52.0461], [31.3459, 52.1053], [31.7635, 52.1011], [31.974, 52.0465], [32.2829, 52.114], [32.3628, 52.272], [32.508, 52.3084], [32.8999, 52.2563], [33.1486, 52.3404], [33.7353, 52.3449], [33.9222, 52.2514], [34.1131, 51.9795], [34.3977, 51.7804], [34.1211, 51.6793], [34.2808, 51.3117], [34.7123, 51.1723], [35.0639, 51.2034], [35.158, 51.0609], [35.3121, 51.0438], [35.4403, 50.7278], [35.4115, 50.5398], [35.6739, 50.346], [35.8901, 50.4372], [36.1164, 50.4086], [36.306, 50.2805], [36.7591, 50.2919], [37.4228, 50.4115], [37.5826, 50.2919], [37.7041, 50.1089], [38.0469, 49.9201], [38.2587, 50.0523], [38.4513, 49.964], [38.648, 49.953], [38.9182, 49.8246], [39.1748, 49.8559], [39.303, 49.7421], [39.4629, 49.7281], [39.7807, 49.5721], [40.0306, 49.5967], [40.126, 49.3688], [40.0701, 49.2003], [39.8899, 49.064], [39.6866, 49.0079], [39.7926, 48.8077], [39.6449, 48.5913], [39.8358, 48.5429], [39.9609, 48.2379], [39.885, 48.1683], [39.7359, 47.8446], [39.3909, 47.8336], [38.9005, 47.8553], [38.719, 47.7142], [38.2875, 47.5592], [38.2014, 47.3209], [38.2808, 47.2765], [38.2142, 47.0914]]] }, \"properties\": { \"name\": \"Ukraine\", \"id\": \"UA\" }, \"id\": \"UA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[33.9031, -1.0021], [33.0828, -1.0021], [32.1942, -1.0021], [30.8447, -1.0021], [30.51, -1.0673], [30.3605, -1.0745], [30.1017, -1.3687], [29.8815, -1.4518], [29.8256, -1.3354], [29.5769, -1.3878], [29.5619, -0.9772], [29.648, -0.5352], [29.6333, -0.4415], [29.7177, 0.0983], [29.778, 0.1662], [29.9344, 0.4991], [29.9428, 0.8192], [30.1829, 0.9736], [30.321, 1.1854], [30.4781, 1.2391], [30.9424, 1.683], [31.2527, 2.0448], [31.2739, 2.1464], [31.1763, 2.2703], [30.9619, 2.4034], [30.7284, 2.4554], [30.7697, 2.6778], [30.8465, 2.8469], [30.7542, 3.0418], [30.8278, 3.2828], [30.9064, 3.4088], [30.8385, 3.4905], [30.9295, 3.6339], [31.1523, 3.7857], [31.4799, 3.6805], [31.6291, 3.7014], [31.7982, 3.8026], [31.942, 3.6077], [32.0996, 3.5291], [32.3358, 3.7063], [32.8383, 3.7986], [32.9972, 3.8802], [33.1543, 3.7746], [33.4895, 3.7551], [33.5685, 3.8119], [33.9759, 4.2203], [34.1651, 3.8128], [34.3928, 3.6916], [34.442, 3.6064], [34.3994, 3.4128], [34.4478, 3.1634], [34.5224, 3.1199], [34.5889, 2.9246], [34.7426, 2.818], [34.8828, 2.4181], [34.964, 2.0625], [34.9653, 1.6435], [34.7833, 1.3812], [34.7873, 1.2307], [34.6493, 1.1854], [34.4815, 1.042], [34.4109, 0.8671], [34.2724, 0.6865], [34.1611, 0.6053], [34.0372, 0.2945], [33.9431, 0.1738], [33.9213, -0.0171], [33.9245, -0.3979], [33.9031, -1.0021]]] }, \"properties\": { \"name\": \"Uganda\", \"id\": \"UG\" }, \"id\": \"UG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[39.7114, -7.9774], [39.6027, -7.9361], [39.8464, -7.7302], [39.8246, -7.9006], [39.7114, -7.9774]]], [[[33.9031, -1.0021], [33.9794, -1.0021], [34.9844, -1.5605], [35.8367, -2.0368], [36.9026, -2.6316], [37.6438, -3.0453], [37.6877, -3.2459], [37.6087, -3.4604], [37.7974, -3.6744], [38.5015, -4.1812], [39.2218, -4.6921], [38.9782, -5.5187], [38.8193, -5.8779], [38.8046, -6.07], [38.8739, -6.3315], [39.0674, -6.4993], [39.2285, -6.6853], [39.2876, -6.8149], [39.4722, -6.8787], [39.5458, -7.0239], [39.5192, -7.1243], [39.3532, -7.3413], [39.2885, -7.518], [39.3306, -7.7466], [39.4283, -7.8127], [39.4411, -8.0116], [39.3399, -8.2428], [39.304, -8.4439], [39.3772, -8.7209], [39.4882, -8.8617], [39.4514, -8.9429], [39.6414, -9.1924], [39.6253, -9.4094], [39.6968, -9.5785], [39.7839, -9.9146], [39.9835, -10.1596], [40.0839, -10.1565], [40.3889, -10.3536], [40.4634, -10.4641], [39.9889, -10.8209], [39.8171, -10.9125], [39.5637, -10.9786], [39.3218, -11.1223], [38.9874, -11.1672], [38.7948, -11.229], [38.4916, -11.4132], [38.1765, -11.2787], [37.9203, -11.2946], [37.8294, -11.482], [37.5417, -11.675], [37.3731, -11.7105], [37.2186, -11.6866], [36.9789, -11.5667], [36.7711, -11.6102], [36.5185, -11.7164], [36.1914, -11.6705], [36.0822, -11.5374], [35.9113, -11.4549], [35.7853, -11.453], [35.6312, -11.5818], [34.9596, -11.5783], [34.937, -11.4634], [34.7736, -11.3417], [34.608, -11.0806], [34.6671, -10.7926], [34.5837, -10.5249], [34.5698, -10.2413], [34.5241, -10.0299], [34.3208, -9.7317], [33.9955, -9.4955], [33.9439, -9.6723], [33.6976, -9.5981], [33.421, -9.6078], [33.3309, -9.5191], [33.1303, -9.496], [32.9199, -9.4072], [32.4872, -9.2128], [32.4334, -9.1564], [31.9425, -9.0539], [31.9185, -8.942], [31.6734, -8.9087], [31.535, -8.7134], [31.3508, -8.6069], [31.0765, -8.6117], [30.9685, -8.5509], [30.8305, -8.3858], [30.751, -8.1936], [30.7209, -8.1044], [30.4066, -7.4607], [30.3133, -7.2037], [30.1065, -6.9152], [29.7097, -6.617], [29.5406, -6.3137], [29.4801, -6.0252], [29.5965, -5.7758], [29.5943, -5.651], [29.3426, -4.9829], [29.3257, -4.8356], [29.4034, -4.4493], [29.7177, -4.456], [29.9471, -4.3073], [30.1469, -4.0854], [30.2686, -3.8505], [30.3791, -3.7307], [30.4253, -3.5891], [30.6321, -3.4187], [30.6818, -3.3095], [30.7901, -3.2744], [30.7803, -2.985], [30.5149, -2.9175], [30.424, -2.8243], [30.4243, -2.6414], [30.5536, -2.4], [30.8287, -2.3387], [30.8767, -2.1433], [30.819, -1.9675], [30.8128, -1.5631], [30.7106, -1.3967], [30.6321, -1.3674], [30.4701, -1.1313], [30.51, -1.0673], [30.8447, -1.0021], [32.1942, -1.0021], [33.0828, -1.0021], [33.9031, -1.0021]]], [[[39.4966, -6.1748], [39.573, -6.3874], [39.2436, -6.2751], [39.1823, -6.1726], [39.1925, -5.9311], [39.3573, -5.8116], [39.3683, -5.9511], [39.4966, -6.1748]]], [[[39.8651, -4.9061], [39.8531, -5.2555], [39.7492, -5.4437], [39.6466, -5.3687], [39.7012, -5.1139], [39.6733, -4.927], [39.8651, -4.9061]]]] }, \"properties\": { \"name\": \"Tanzania\", \"id\": \"TZ\" }, \"id\": \"TZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[121.009, 22.6205], [120.8975, 22.379], [120.8399, 21.9249], [120.6902, 22.0332], [120.6783, 22.1597], [120.5815, 22.3564], [120.3258, 22.5423], [120.2326, 22.7177], [120.0724, 23.1496], [120.1429, 23.3991], [120.1589, 23.7089], [120.6299, 24.4786], [120.8359, 24.7228], [121.0405, 25.0326], [121.3654, 25.1591], [121.4497, 25.2493], [121.5936, 25.2754], [121.8528, 25.1045], [121.9291, 24.9736], [121.8199, 24.8245], [121.828, 24.5345], [121.7369, 24.2851], [121.6393, 24.1302], [121.4772, 23.4239], [121.3973, 23.1727], [121.2957, 22.9667], [121.009, 22.6205]]] }, \"properties\": { \"name\": \"Taiwan\", \"id\": \"TW\" }, \"id\": \"TW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[25.9699, 40.1365], [25.7405, 40.1054], [25.7408, 40.1964], [25.9183, 40.2381], [25.9699, 40.1365]]], [[[28.0145, 41.9689], [27.9874, 41.8548], [28.1978, 41.5543], [28.3465, 41.4664], [28.9467, 41.2485], [29.0572, 41.2298], [28.9564, 41.0083], [28.7802, 40.9741], [28.1721, 41.0806], [27.9253, 40.9905], [27.7473, 41.0132], [27.4996, 40.9732], [27.4303, 40.8401], [27.258, 40.6874], [26.7721, 40.4983], [26.3299, 40.1236], [26.254, 40.3145], [26.4476, 40.445], [26.7201, 40.5445], [26.792, 40.6265], [26.1053, 40.6115], [26.0392, 40.7269], [26.3312, 40.9546], [26.3308, 41.2387], [26.6246, 41.4016], [26.5812, 41.6014], [26.321, 41.7167], [26.5114, 41.8264], [26.6154, 41.9649], [26.8848, 41.992], [27.0117, 42.0585], [27.2949, 42.0794], [27.5346, 41.9209], [27.8791, 41.9866], [28.0145, 41.9689]]], [[[41.5101, 41.5175], [41.8235, 41.4322], [41.9256, 41.4957], [42.4663, 41.4398], [42.5674, 41.5592], [42.7876, 41.5636], [43.149, 41.307], [43.2054, 41.1992], [43.4393, 41.1073], [43.6315, 40.9288], [43.7225, 40.7193], [43.5694, 40.4823], [43.71, 40.1666], [43.7918, 40.0703], [44.0053, 40.0139], [44.2894, 40.0406], [44.5605, 39.8875], [44.7683, 39.7037], [44.8172, 39.6504], [44.5871, 39.7685], [44.4558, 39.6668], [44.3892, 39.4223], [44.023, 39.3774], [44.0789, 39.2185], [44.1779, 39.1448], [44.1446, 38.9944], [44.2715, 38.8359], [44.2906, 38.42], [44.4309, 38.3569], [44.2112, 37.9081], [44.5615, 37.7448], [44.5739, 37.4354], [44.794, 37.2903], [44.7651, 37.1424], [44.6058, 37.1762], [44.2817, 36.9782], [44.2019, 37.0519], [44.1561, 37.2831], [44.0133, 37.3134], [43.8365, 37.2236], [43.516, 37.2445], [43.0926, 37.3675], [42.9368, 37.3248], [42.7748, 37.372], [42.4561, 37.1287], [42.3588, 37.1087], [42.2683, 37.2765], [42.0601, 37.2059], [41.5154, 37.0892], [41.2646, 37.0692], [40.9588, 37.1092], [40.7058, 37.0976], [40.0165, 36.826], [39.6866, 36.7385], [39.3568, 36.6817], [38.7669, 36.6932], [38.4437, 36.8623], [38.1916, 36.9014], [37.4365, 36.6435], [37.0663, 36.6528], [36.9416, 36.7585], [36.6583, 36.8024], [36.5376, 36.4575], [36.6415, 36.2635], [36.3756, 36.1712], [36.3477, 36.0034], [36.1275, 35.8316], [35.8926, 35.9164], [35.957, 35.998], [35.811, 36.3097], [35.8829, 36.4064], [36.1883, 36.659], [36.1799, 36.8073], [36.049, 36.9107], [35.661, 36.7243], [35.5376, 36.5969], [35.3933, 36.5751], [35.1762, 36.6346], [34.8114, 36.7993], [34.6014, 36.7847], [34.2996, 36.604], [34.0234, 36.3408], [33.6946, 36.1819], [33.0997, 36.1028], [32.7948, 36.0358], [32.5337, 36.1006], [32.3775, 36.1836], [32.0219, 36.5352], [31.7777, 36.6129], [31.3526, 36.8011], [30.644, 36.8655], [30.5819, 36.7971], [30.5584, 36.5259], [30.4839, 36.3106], [30.3875, 36.2431], [30.2317, 36.3075], [29.6893, 36.1565], [29.3484, 36.2587], [29.1433, 36.3971], [29.0381, 36.6937], [28.7176, 36.7008], [28.4837, 36.8037], [28.3039, 36.8121], [28.1955, 36.6861], [28.0842, 36.7514], [27.8037, 36.7367], [28.0828, 36.9205], [28.1339, 37.0297], [27.6682, 37.0075], [27.3491, 37.0195], [27.5351, 37.1637], [27.5199, 37.249], [27.2195, 37.3892], [27.0778, 37.6875], [27.2243, 37.7253], [27.2324, 37.9787], [26.9437, 38.0631], [26.6828, 38.1985], [26.5824, 38.1492], [26.2909, 38.277], [26.4297, 38.4408], [26.3778, 38.6242], [26.5864, 38.5571], [26.5949, 38.4186], [26.8612, 38.3729], [26.9069, 38.4817], [26.7636, 38.7098], [27.0135, 38.887], [26.8151, 38.9611], [26.8537, 39.1155], [26.6819, 39.2922], [26.9109, 39.5172], [26.827, 39.563], [26.1132, 39.4676], [26.1812, 39.99], [26.3135, 40.0251], [26.4755, 40.1973], [26.7378, 40.4002], [27.0122, 40.3961], [27.2847, 40.4556], [27.4755, 40.3198], [27.7282, 40.3287], [28.2893, 40.4032], [28.6302, 40.3766], [29.0071, 40.3899], [28.7877, 40.5342], [28.9582, 40.6305], [29.8006, 40.7601], [29.3648, 40.8094], [29.0456, 41.0074], [29.0945, 41.1774], [29.3222, 41.2275], [29.9192, 41.1508], [30.3449, 41.197], [30.8101, 41.0851], [31.2548, 41.1077], [31.4581, 41.3199], [32.0863, 41.5894], [32.3065, 41.7296], [32.9465, 41.8916], [33.3815, 42.0177], [34.193, 41.9635], [34.7505, 41.9569], [35.0067, 42.0634], [35.1549, 42.0275], [35.122, 41.8912], [35.2978, 41.7287], [35.558, 41.6342], [35.9197, 41.7136], [36.0515, 41.6826], [36.1794, 41.4264], [36.2784, 41.3363], [36.5096, 41.2626], [36.7778, 41.3634], [36.9922, 41.2755], [37.0663, 41.1845], [37.4307, 41.1139], [37.7659, 41.0789], [37.9101, 41.0021], [38.3811, 40.9244], [39.4265, 41.1064], [39.8078, 40.9826], [40.1283, 40.943], [40.2655, 40.9612], [40.9597, 41.2116], [41.4143, 41.4238], [41.5101, 41.5175]]]] }, \"properties\": { \"name\": \"Türkiye\", \"id\": \"TR\" }, \"id\": \"TR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[10.9575, 33.7223], [10.7222, 33.7391], [10.7453, 33.8887], [10.922, 33.8931], [10.9575, 33.7223]]], [[[11.5043, 33.182], [11.4538, 32.6427], [11.5336, 32.5251], [11.5048, 32.4136], [10.8265, 32.0807], [10.609, 31.9294], [10.4758, 31.7358], [10.3058, 31.7048], [10.1149, 31.4637], [10.2432, 31.0323], [10.2162, 30.7833], [9.8953, 30.3873], [9.5188, 30.2293], [9.3635, 30.8329], [9.0438, 32.0723], [8.3332, 32.5437], [8.2111, 32.9268], [8.0757, 33.0888], [7.7627, 33.2331], [7.5, 33.8323], [7.5138, 34.0804], [7.7485, 34.2545], [7.8382, 34.4103], [8.1237, 34.5638], [8.2458, 34.7339], [8.2768, 34.9793], [8.3945, 35.204], [8.3163, 35.4033], [8.3181, 35.6549], [8.2458, 35.8707], [8.3487, 36.3678], [8.2306, 36.5454], [8.3695, 36.6324], [8.4442, 36.7607], [8.6013, 36.8339], [8.5765, 36.9374], [8.8237, 36.9977], [9.142, 37.1948], [9.6879, 37.3404], [9.8757, 37.2543], [10.1962, 37.2059], [10.1886, 37.0337], [10.4123, 36.7318], [10.5712, 36.8796], [10.7661, 36.9303], [11.0538, 37.0723], [11.1266, 36.8739], [10.9672, 36.7429], [10.7981, 36.493], [10.5255, 36.3235], [10.4768, 36.1752], [10.5908, 35.8871], [11.0045, 35.6336], [11.0431, 35.3349], [11.1199, 35.2404], [10.8661, 34.8844], [10.5349, 34.5448], [10.2007, 34.3459], [10.0648, 34.2119], [10.0488, 34.0565], [10.159, 33.8501], [10.454, 33.6623], [10.7133, 33.689], [10.7226, 33.5145], [11.0844, 33.5629], [11.2025, 33.2491], [11.5043, 33.182]]]] }, \"properties\": { \"name\": \"Tunisia\", \"id\": \"TN\" }, \"id\": \"TN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.0121, 10.1342], [-61.1743, 10.0779], [-61.5967, 10.0646], [-61.7716, 10.085], [-61.6327, 10.2435], [-61.4992, 10.2688], [-61.4649, 10.5391], [-61.5918, 10.7477], [-61.37, 10.797], [-60.9175, 10.8401], [-61.0338, 10.67], [-61.0374, 10.4823], [-60.9686, 10.3234], [-61.0121, 10.1342]]] }, \"properties\": { \"name\": \"Trinidad and Tobago\", \"id\": \"TT\" }, \"id\": \"TT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-175.162, -21.1694], [-175.1567, -21.2635], [-175.3354, -21.1579], [-175.2255, -21.1189], [-175.162, -21.1694]]] }, \"properties\": { \"name\": \"Tonga\", \"id\": \"TO\" }, \"id\": \"TO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[124.0363, -9.3416], [124.1983, -9.2562], [124.4442, -9.1902], [124.4131, -9.3144], [124.2822, -9.428], [124.0901, -9.4166], [124.0363, -9.3416]]], [[[125.0679, -9.512], [124.9685, -9.2945], [124.9774, -9.1951], [125.1495, -9.1231], [125.1003, -9.0042], [124.9734, -9.0645], [124.9223, -8.9424], [125.0271, -8.859], [125.178, -8.6477], [125.3817, -8.5754], [125.8043, -8.4923], [126.1727, -8.4888], [126.6198, -8.4595], [126.9664, -8.3157], [127.2963, -8.4245], [126.915, -8.7152], [126.6655, -8.7822], [126.3822, -8.9575], [126.1643, -8.9966], [125.9463, -9.1239], [125.8403, -9.1302], [125.4079, -9.2758], [125.0679, -9.512]]]] }, \"properties\": { \"name\": \"Timor-Leste\", \"id\": \"TL\" }, \"id\": \"TL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[66.5222, 37.3484], [66.1084, 37.415], [65.7648, 37.569], [65.6414, 37.4678], [65.5549, 37.2512], [65.0897, 37.2379], [64.8163, 37.1322], [64.5108, 36.3408], [64.3582, 36.2262], [64.0923, 36.1126], [64.0097, 36.0123], [63.8622, 36.0123], [63.1086, 35.8187], [63.1698, 35.678], [63.0567, 35.4459], [62.6106, 35.2333], [62.2528, 35.2502], [61.9837, 35.4436], [61.7196, 35.4193], [61.543, 35.4579], [61.3446, 35.6297], [61.262, 35.6194], [61.2522, 35.8676], [61.1528, 35.9768], [61.2123, 36.0993], [61.1195, 36.6426], [60.3413, 36.6377], [60.0626, 36.9631], [59.9485, 37.0417], [59.5623, 37.1788], [59.3674, 37.3337], [59.241, 37.5207], [58.8157, 37.6836], [58.4358, 37.6387], [58.2617, 37.6658], [58.109, 37.783], [57.7104, 37.9055], [57.4236, 37.9476], [57.1937, 38.2162], [56.9065, 38.2131], [56.7746, 38.2499], [56.4409, 38.2495], [56.2287, 38.0733], [55.5784, 38.0999], [55.3809, 38.0511], [55.0754, 37.9023], [54.8487, 37.7226], [54.7452, 37.502], [54.1917, 37.3324], [53.9142, 37.3435], [53.8237, 37.9281], [53.8543, 38.2854], [53.8401, 38.5149], [53.8685, 38.9491], [53.6177, 39.2158], [53.3362, 39.3411], [53.2031, 39.3166], [53.1251, 39.432], [53.2356, 39.6087], [53.3896, 39.5363], [53.4722, 39.6686], [53.4872, 39.9092], [53.4042, 39.9603], [52.9874, 39.9878], [52.8982, 39.9123], [52.7446, 40.22], [52.7334, 40.3988], [52.8498, 40.6855], [52.9434, 41.038], [53.1455, 40.825], [53.3327, 40.7828], [53.615, 40.8183], [53.7637, 40.6656], [53.8699, 40.6487], [54.193, 40.7206], [54.3196, 40.8347], [54.5472, 40.832], [54.7101, 40.8911], [54.7035, 41.0713], [54.592, 41.1934], [54.2844, 41.3638], [54.0949, 41.5192], [53.8463, 42.0914], [53.6249, 42.1362], [53.1641, 42.0936], [52.9701, 41.9764], [52.8147, 41.7119], [52.8835, 41.6523], [52.8302, 41.3417], [52.6097, 41.5294], [52.4938, 41.7802], [52.8706, 42.0607], [53.2502, 42.2059], [53.6852, 42.2969], [54.1212, 42.3351], [54.6781, 42.0781], [54.9037, 41.9192], [54.9525, 41.81], [55.2494, 41.4579], [55.4346, 41.2964], [55.5451, 41.2626], [55.9774, 41.3221], [57.0179, 41.2635], [57.1187, 41.3501], [57.0184, 41.4504], [56.9642, 41.8566], [57.2287, 42.0843], [57.3819, 42.1562], [57.8143, 42.1899], [58.0291, 42.4878], [58.2342, 42.4478], [58.2595, 42.688], [58.477, 42.6627], [58.5888, 42.7785], [58.877, 42.5615], [59.1233, 42.5237], [59.2765, 42.3564], [59.4508, 42.2996], [59.8584, 42.2951], [60.0062, 42.1908], [59.9627, 41.9542], [60.107, 41.9076], [60.0755, 41.7007], [60.138, 41.5942], [60.0896, 41.3993], [60.455, 41.2218], [60.755, 41.2458], [61.329, 41.1952], [61.4968, 41.2759], [61.6446, 41.24], [61.903, 41.0935], [62.0952, 40.6834], [62.3748, 40.3322], [62.4415, 40.0361], [62.6505, 39.8586], [63.5059, 39.377], [63.7207, 39.1884], [64.1628, 38.9535], [64.3101, 38.9775], [64.6599, 38.736], [65.0768, 38.5394], [65.613, 38.2384], [65.8571, 38.2686], [66.1732, 38.1665], [66.3353, 38.0719], [66.5744, 38.0107], [66.6295, 37.9321], [66.5257, 37.7856], [66.5222, 37.3484]]] }, \"properties\": { \"name\": \"Turkmenistan\", \"id\": \"TM\" }, \"id\": \"TM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-172.4791, -8.5807], [-172.4836, -8.5829], [-172.4987, -8.5479], [-172.4873, -8.5563], [-172.4791, -8.5807]]] }, \"properties\": { \"name\": \"Tokelau\", \"id\": \"TK\" }, \"id\": \"TK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[70.9579, 40.2391], [70.9463, 40.1875], [70.4515, 40.049], [69.9667, 40.2021], [69.5304, 40.0974], [69.4318, 39.9096], [69.307, 39.9687], [69.229, 39.7609], [69.2978, 39.5248], [69.5987, 39.5736], [70.245, 39.5426], [70.3919, 39.582], [70.6077, 39.5643], [70.7333, 39.4134], [71.0049, 39.4121], [71.0648, 39.4933], [71.4044, 39.598], [71.5461, 39.4529], [71.7321, 39.4231], [71.8062, 39.2758], [72.0428, 39.3521], [72.2301, 39.2074], [72.358, 39.3371], [72.6398, 39.3859], [72.8724, 39.3606], [73.2351, 39.3743], [73.4703, 39.4605], [73.6315, 39.4489], [73.6076, 39.2291], [73.7958, 39.0023], [73.6958, 38.8545], [73.8015, 38.6068], [74.0257, 38.5398], [74.1313, 38.661], [74.2774, 38.6597], [74.7452, 38.5101], [74.8357, 38.4044], [74.7723, 38.2748], [74.7896, 38.1034], [74.9383, 37.7723], [74.8943, 37.6014], [75.1189, 37.3857], [74.8912, 37.2317], [74.6596, 37.3946], [74.2596, 37.4154], [74.1672, 37.3293], [73.7496, 37.2317], [73.7208, 37.4185], [73.4815, 37.4718], [73.2111, 37.4083], [72.8955, 37.2676], [72.6576, 37.0292], [72.3588, 36.9831], [72.1533, 36.9005], [71.8022, 36.6941], [71.5976, 36.7327], [71.4329, 37.1273], [71.5047, 37.6028], [71.5802, 37.8642], [71.5519, 37.933], [71.2783, 37.9183], [71.3326, 38.1705], [71.2557, 38.3068], [71.0521, 38.4177], [70.879, 38.4563], [70.6156, 38.3343], [70.4177, 38.0755], [70.2149, 37.9246], [70.2513, 37.664], [70.0448, 37.5473], [69.9405, 37.6001], [69.6258, 37.5939], [69.4922, 37.553], [69.3994, 37.3994], [69.4145, 37.2077], [69.2649, 37.1083], [68.9604, 37.3248], [68.6693, 37.2583], [68.3869, 37.1376], [68.0678, 36.9498], [67.9581, 36.972], [67.7592, 37.1721], [67.8143, 37.4869], [68.0877, 37.8354], [68.2942, 38.0329], [68.3332, 38.238], [68.144, 38.3831], [68.0477, 38.6695], [68.1485, 38.8905], [68.1037, 38.962], [67.6767, 39.0086], [67.6162, 39.1502], [67.3495, 39.242], [67.4263, 39.4657], [67.7192, 39.6216], [68.077, 39.5643], [68.4633, 39.5368], [68.5862, 39.6349], [68.639, 39.8386], [68.869, 39.9074], [68.8046, 40.0504], [68.6528, 40.1826], [68.9515, 40.2226], [69.228, 40.1875], [69.3044, 40.3274], [69.2063, 40.5666], [69.4141, 40.797], [69.7128, 40.6572], [70.2921, 40.8916], [70.4416, 41.0234], [70.751, 40.7397], [70.712, 40.6691], [70.3826, 40.4534], [70.653, 40.2013], [70.9579, 40.2391]]] }, \"properties\": { \"name\": \"Tajikistan\", \"id\": \"TJ\" }, \"id\": \"TJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[98.4091, 7.9019], [98.2622, 7.9259], [98.3012, 8.1363], [98.4349, 8.0857], [98.4091, 7.9019]]], [[[100.1225, 20.3167], [100.3179, 20.386], [100.5193, 20.1777], [100.5429, 20.0886], [100.3978, 19.7561], [100.4203, 19.6446], [100.6254, 19.4999], [100.9664, 19.6109], [101.1546, 19.5794], [101.2207, 19.4866], [101.1976, 19.3277], [101.2864, 18.977], [101.1656, 18.6184], [101.0506, 18.4071], [101.1377, 18.2868], [101.1133, 18.0333], [100.9086, 17.5837], [101.1053, 17.4793], [101.4138, 17.7186], [101.6877, 17.8895], [101.7747, 18.0333], [101.9474, 18.0812], [102.1013, 18.2104], [102.3518, 18.0457], [102.7175, 17.8922], [103.0513, 18.0285], [103.0912, 18.1381], [103.263, 18.2784], [103.3669, 18.4235], [103.6297, 18.3827], [103.7921, 18.3165], [103.9497, 18.3192], [104.4282, 17.699], [104.7398, 17.4616], [104.8162, 17.3004], [104.7589, 17.0772], [104.7505, 16.6475], [104.8193, 16.4659], [104.9498, 16.3398], [105.0471, 16.1601], [105.4062, 15.9874], [105.3733, 15.8898], [105.462, 15.7806], [105.6224, 15.6998], [105.6157, 15.4881], [105.5131, 15.3606], [105.4905, 15.1276], [105.5469, 14.9323], [105.4754, 14.5301], [105.3422, 14.4165], [105.1833, 14.3464], [105.0742, 14.2274], [104.9697, 14.3659], [104.779, 14.428], [104.4118, 14.3695], [104.2276, 14.3956], [103.8184, 14.3623], [103.6004, 14.4209], [103.1995, 14.3326], [103.0309, 14.2527], [102.9092, 14.1368], [102.729, 13.8421], [102.5448, 13.6601], [102.547, 13.5855], [102.3198, 13.5398], [102.3309, 13.2881], [102.4618, 13.0151], [102.4995, 12.6698], [102.7556, 12.4261], [102.7064, 12.2556], [102.7366, 12.0896], [102.9341, 11.7065], [102.7917, 11.8885], [102.7628, 12.0123], [102.5941, 12.2028], [102.5404, 12.1091], [102.2297, 12.3315], [102.0343, 12.5317], [101.7237, 12.6893], [101.4449, 12.6187], [101.0901, 12.6737], [100.954, 12.6214], [100.8634, 12.7146], [100.946, 13.1873], [100.9628, 13.432], [100.6561, 13.5211], [100.2357, 13.4843], [100.0173, 13.3534], [99.9907, 13.2433], [100.0901, 13.0458], [99.9641, 12.6902], [100.0058, 12.3546], [99.9889, 12.1708], [99.837, 11.9365], [99.7985, 11.7487], [99.6272, 11.4629], [99.5144, 11.1006], [99.4869, 10.8897], [99.2849, 10.5693], [99.2374, 10.3882], [99.165, 10.3198], [99.1947, 10.1755], [99.1605, 9.7339], [99.2885, 9.4147], [99.2538, 9.2651], [99.3936, 9.2136], [99.724, 9.3144], [99.8353, 9.2882], [99.9045, 9.1129], [99.9604, 8.6712], [100.1292, 8.4279], [100.2286, 8.4248], [100.2792, 8.2686], [100.4537, 7.4425], [100.2837, 7.5517], [100.3174, 7.716], [100.158, 7.7279], [100.2051, 7.5006], [100.4235, 7.1877], [100.5863, 7.1761], [100.7924, 6.9946], [101.0178, 6.861], [101.3019, 6.9085], [101.4977, 6.8655], [101.6144, 6.754], [101.7991, 6.4744], [102.101, 6.2422], [102.0552, 6.0966], [101.9362, 5.9794], [101.8737, 5.8254], [101.6499, 5.7961], [101.5563, 5.908], [101.2571, 5.7895], [101.1142, 5.6368], [100.9819, 5.7712], [101.0756, 5.9563], [101.0533, 6.2427], [100.874, 6.2453], [100.7937, 6.426], [100.6295, 6.4482], [100.3453, 6.5498], [100.2614, 6.6825], [100.1767, 6.6719], [100.1189, 6.442], [99.8686, 6.75], [99.696, 6.8765], [99.7203, 7.1061], [99.6023, 7.1553], [99.529, 7.3293], [99.3586, 7.3724], [99.3004, 7.5614], [99.1833, 7.7181], [99.0425, 7.7656], [99.051, 7.8877], [98.7886, 8.06], [98.7034, 8.2566], [98.579, 8.3445], [98.4211, 8.178], [98.3056, 8.2264], [98.2381, 8.4231], [98.2418, 8.7679], [98.326, 8.969], [98.3714, 9.2904], [98.493, 9.5617], [98.5618, 9.8373], [98.7026, 10.1902], [98.7682, 10.4308], [98.7572, 10.6612], [99.1903, 11.1051], [99.478, 11.6124], [99.6147, 11.7811], [99.5229, 12.0896], [99.4629, 12.1904], [99.4052, 12.5477], [99.2196, 12.7399], [99.1073, 13.1035], [99.1761, 13.2331], [99.1366, 13.7165], [98.9338, 14.0498], [98.5703, 14.3601], [98.2462, 14.8146], [98.1912, 15.2039], [98.5653, 15.4037], [98.5582, 15.7686], [98.5924, 16.0504], [98.8179, 16.1809], [98.8884, 16.3519], [98.8352, 16.4175], [98.6892, 16.3053], [98.4783, 16.7322], [98.4389, 16.9755], [98.2564, 17.1477], [97.7929, 17.6813], [97.6984, 17.8336], [97.7197, 18.0373], [97.5994, 18.3027], [97.4508, 18.3596], [97.4849, 18.4941], [97.7277, 18.5722], [97.7539, 18.621], [97.706, 18.9317], [97.8041, 19.1306], [97.817, 19.46], [98.1112, 19.7623], [98.2391, 19.6908], [98.4548, 19.6943], [98.7607, 19.7712], [98.9169, 19.7729], [98.9874, 19.8613], [99.0208, 20.0419], [99.197, 20.1152], [99.3382, 20.0788], [99.5015, 20.1875], [99.4589, 20.3629], [99.6387, 20.3202], [99.8904, 20.4246], [100.1225, 20.3167]]]] }, \"properties\": { \"name\": \"Thailand\", \"id\": \"TH\" }, \"id\": \"TH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[0.9007, 10.9932], [0.7875, 10.7104], [0.7799, 10.3598], [1.3299, 9.9971], [1.3472, 9.5674], [1.4244, 9.2851], [1.6002, 9.0498], [1.6247, 8.2708], [1.6247, 6.9973], [1.5776, 6.6875], [1.7432, 6.4264], [1.7777, 6.2946], [1.6224, 6.2169], [1.3108, 6.1468], [1.1874, 6.0895], [0.9849, 6.3203], [0.7369, 6.4526], [0.5256, 6.8508], [0.5792, 7.0039], [0.6348, 7.3537], [0.5096, 7.4349], [0.4998, 7.5468], [0.605, 7.7284], [0.5837, 8.1456], [0.688, 8.3041], [0.6162, 8.4794], [0.4153, 8.6526], [0.3726, 8.7591], [0.4887, 8.8514], [0.466, 9.1151], [0.5291, 9.3583], [0.4476, 9.4804], [0.2619, 9.4955], [0.3238, 9.6877], [0.3627, 10.2364], [0.3319, 10.3069], [-0.0577, 10.6305], [-0.0901, 10.7153], [0.0095, 11.0212], [-0.0686, 11.1157], [0.4843, 10.9919], [0.9007, 10.9932]]] }, \"properties\": { \"name\": \"Togo\", \"id\": \"TG\" }, \"id\": \"TG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.86, 10.9195], [22.4938, 10.9963], [22.0432, 10.8227], [21.9647, 10.7366], [21.7063, 10.5746], [21.7258, 10.3664], [21.6327, 10.2381], [21.5279, 10.2079], [21.3961, 10.0015], [21.2638, 9.9745], [21.0094, 9.7135], [20.984, 9.6362], [20.7732, 9.4059], [20.3422, 9.1271], [20.0728, 9.1333], [19.9534, 9.0752], [19.6684, 9.021], [19.1455, 9.0161], [18.8885, 8.8896], [18.8858, 8.8359], [19.1087, 8.6561], [18.9062, 8.4053], [18.6337, 8.1678], [18.5915, 8.0608], [18.4553, 8.032], [17.761, 7.9738], [17.6496, 7.9836], [17.2469, 7.8132], [17.1178, 7.7017], [16.8906, 7.6338], [16.7849, 7.5508], [16.5892, 7.7434], [16.5234, 7.8597], [16.3787, 7.6836], [16.0308, 7.5721], [15.8451, 7.4754], [15.4803, 7.5237], [15.5526, 7.6645], [15.5499, 7.7879], [15.443, 7.8518], [15.2525, 8.3223], [15.1162, 8.5571], [14.8606, 8.7986], [14.7328, 8.8656], [14.3324, 9.2034], [14.0048, 9.5887], [13.9773, 9.6917], [14.1397, 9.9017], [14.2432, 9.9798], [14.8358, 9.9416], [15.1931, 9.9815], [15.5412, 9.9603], [15.5318, 10.0885], [15.2761, 10.3575], [15.1323, 10.6483], [15.0688, 10.8511], [15.0298, 11.1135], [15.0555, 11.3687], [15.1221, 11.5414], [15.0781, 11.6426], [15.0812, 11.8455], [14.8806, 12.2694], [14.8473, 12.502], [14.7612, 12.6556], [14.5446, 12.8202], [14.5161, 12.9796], [14.2449, 13.0773], [14.0639, 13.0786], [13.6062, 13.7045], [13.4482, 14.3805], [13.6426, 14.6309], [13.8073, 14.9661], [14.3679, 15.7499], [15.4745, 16.9085], [15.5615, 17.9375], [15.6375, 18.811], [15.7351, 19.9039], [15.9491, 20.3034], [15.9295, 20.3997], [15.5873, 20.7335], [15.5402, 20.8746], [15.6073, 20.9546], [15.2939, 21.4114], [15.182, 21.5232], [15.1723, 21.9222], [14.9791, 22.996], [15.9841, 23.4453], [16.7942, 23.0453], [17.7521, 22.5721], [18.7105, 22.0989], [19.6684, 21.6258], [20.6267, 21.1526], [21.5848, 20.6794], [23.0221, 19.9696], [23.9804, 19.4968], [23.9812, 18.1585], [23.9822, 17.2663], [23.9835, 15.7801], [23.9457, 15.7033], [23.7083, 15.7451], [23.2435, 15.6971], [23.105, 15.7025], [22.9342, 15.5333], [22.9697, 15.3113], [22.9324, 15.1622], [22.7632, 14.9989], [22.6793, 14.8515], [22.6708, 14.7223], [22.468, 14.6335], [22.3815, 14.5506], [22.5097, 14.1275], [22.1733, 13.9104], [22.1076, 13.7303], [22.2026, 13.538], [22.2283, 13.3294], [22.1578, 13.2149], [21.9905, 13.1132], [21.8252, 12.7905], [21.8781, 12.6995], [22.0006, 12.672], [22.2333, 12.7093], [22.3522, 12.6604], [22.4898, 12.0447], [22.5808, 11.9902], [22.5564, 11.6697], [22.6412, 11.5161], [22.9226, 11.3447], [22.9377, 11.192], [22.86, 10.9195]]] }, \"properties\": { \"name\": \"Chad\", \"id\": \"TD\" }, \"id\": \"TD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.6684, 21.8335], [-71.7219, 21.7904], [-71.8304, 21.7904], [-71.8062, 21.8521], [-71.6684, 21.8335]]] }, \"properties\": { \"name\": \"Turks and Caicos Islands\", \"id\": \"TC\" }, \"id\": \"TC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.3588, 37.1087], [42.3499, 37.0608], [41.7885, 36.5973], [41.4169, 36.5148], [41.2962, 36.3834], [41.2455, 36.0735], [41.3525, 35.8098], [41.3543, 35.6403], [41.2162, 35.2883], [41.1946, 34.7689], [40.9872, 34.4289], [40.6894, 34.3322], [39.5646, 33.7684], [38.7736, 33.372], [38.0557, 32.9947], [36.8182, 32.3173], [36.3721, 32.387], [36.2198, 32.4949], [36.0595, 32.5339], [35.8949, 32.7137], [35.7874, 32.735], [35.9135, 32.9494], [35.9068, 33.1359], [35.8372, 33.2784], [35.8691, 33.4319], [36.0222, 33.5624], [35.9423, 33.6677], [36.0924, 33.8314], [36.2824, 33.8941], [36.5851, 34.2212], [36.5044, 34.4325], [36.3264, 34.5133], [36.4329, 34.6136], [35.9761, 34.6291], [35.8993, 34.852], [35.8901, 35.0601], [35.9433, 35.2239], [35.9025, 35.4205], [35.7644, 35.5715], [35.8926, 35.9164], [36.1275, 35.8316], [36.3477, 36.0034], [36.3756, 36.1712], [36.6415, 36.2635], [36.5376, 36.4575], [36.6583, 36.8024], [36.9416, 36.7585], [37.0663, 36.6528], [37.4365, 36.6435], [38.1916, 36.9014], [38.4437, 36.8623], [38.7669, 36.6932], [39.3568, 36.6817], [39.6866, 36.7385], [40.0165, 36.826], [40.7058, 37.0976], [40.9588, 37.1092], [41.2646, 37.0692], [41.5154, 37.0892], [42.0601, 37.2059], [42.2683, 37.2765], [42.3588, 37.1087]]] }, \"properties\": { \"name\": \"Syria\", \"id\": \"SY\" }, \"id\": \"SY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[55.5402, -4.6931], [55.3835, -4.6092], [55.4559, -4.5586], [55.5402, -4.6931]]] }, \"properties\": { \"name\": \"Seychelles\", \"id\": \"SC\" }, \"id\": \"SC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.123, 18.0688], [-63.0111, 18.0688], [-63.0232, 18.0191], [-63.123, 18.0688]]] }, \"properties\": { \"name\": \"Sint Maarten\", \"id\": \"SX\" }, \"id\": \"SX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[31.9482, -25.9577], [32.0605, -26.0185], [32.0414, -26.2814], [32.1058, -26.5201], [32.1129, -26.8393], [31.9949, -26.8175], [31.946, -27.1735], [31.9584, -27.3058], [31.4697, -27.2956], [31.2739, -27.2383], [31.0636, -27.1122], [30.8833, -26.7922], [30.7942, -26.7643], [30.8034, -26.4136], [31.2074, -25.8432], [31.4151, -25.7464], [31.8715, -25.9817], [31.9482, -25.9577]]] }, \"properties\": { \"name\": \"Eswatini\", \"id\": \"SZ\" }, \"id\": \"SZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[24.1557, 65.8052], [23.6914, 65.8285], [23.1023, 65.7353], [22.7463, 65.8709], [22.3664, 65.8427], [22.2541, 65.5975], [21.8795, 65.4241], [21.5656, 65.4081], [21.5741, 65.1258], [21.1381, 64.8087], [21.2792, 64.7248], [21.4652, 64.3797], [21.0183, 64.1779], [20.7626, 63.8678], [20.2046, 63.6626], [19.9134, 63.6106], [19.7222, 63.4632], [19.3541, 63.4775], [19.0345, 63.2377], [18.6067, 63.1783], [18.4632, 62.896], [17.8955, 62.8305], [17.9746, 62.721], [17.8348, 62.5026], [17.3735, 62.4265], [17.563, 62.2124], [17.3744, 61.8664], [17.4174, 61.7407], [17.1307, 61.5758], [17.2509, 60.7009], [17.5555, 60.6427], [17.6611, 60.5351], [17.9559, 60.5897], [18.2506, 60.3616], [18.5573, 60.2537], [18.5355, 60.1529], [18.7868, 60.0794], [18.9333, 59.9423], [18.9706, 59.7572], [18.2169, 59.4205], [17.9644, 59.3595], [17.773, 59.414], [17.8085, 59.5532], [17.3721, 59.4957], [17.0627, 59.5692], [16.5736, 59.6116], [16.4728, 59.5194], [16.7423, 59.4307], [16.914, 59.4458], [17.3708, 59.2949], [17.876, 59.2709], [18.5089, 59.4081], [18.2852, 59.1093], [17.4569, 58.8585], [16.978, 58.6541], [16.6393, 58.6512], [16.9239, 58.4925], [16.6522, 58.4344], [16.7698, 58.2142], [16.6948, 57.9175], [16.5554, 57.8123], [16.6522, 57.5007], [16.476, 57.2652], [16.5279, 57.0681], [16.3486, 56.7092], [16.1505, 56.5008], [15.9965, 56.2227], [15.8265, 56.125], [15.6268, 56.1856], [15.3267, 56.1508], [14.782, 56.1619], [14.7549, 56.0331], [14.5588, 56.0487], [14.2152, 55.8325], [14.2028, 55.7291], [14.3417, 55.5278], [14.1739, 55.3966], [13.8063, 55.4286], [13.3212, 55.3465], [12.8857, 55.4114], [12.978, 55.6938], [12.5924, 56.1377], [12.8018, 56.264], [12.6562, 56.4406], [12.8573, 56.4524], [12.8836, 56.6178], [12.7175, 56.6628], [12.4214, 56.9063], [11.9615, 57.4261], [11.8786, 57.6795], [11.7347, 57.7177], [11.7033, 57.9732], [11.4493, 58.1184], [11.4315, 58.3401], [11.2718, 58.4757], [11.147, 58.9886], [11.3885, 59.0365], [11.6428, 58.926], [11.7982, 59.29], [11.6805, 59.5923], [11.9323, 59.8637], [12.1693, 59.9127], [12.4862, 60.1067], [12.5887, 60.4507], [12.3144, 60.8922], [12.294, 61.0027], [12.6828, 61.0469], [12.8809, 61.3523], [12.5959, 61.5414], [12.1555, 61.7208], [12.3034, 62.2856], [12.1147, 62.5919], [12.1085, 62.9195], [12.2182, 63.0007], [11.9998, 63.2917], [12.2119, 63.4923], [12.1751, 63.5959], [12.6624, 63.9404], [12.9874, 64.0505], [13.2995, 64.0747], [13.9604, 64.0141], [14.141, 64.1734], [14.0776, 64.464], [13.6501, 64.5816], [14.1153, 64.9461], [14.4798, 65.3014], [14.6351, 65.8449], [14.5432, 66.1292], [15.1531, 66.1909], [15.4839, 66.3059], [15.423, 66.4899], [16.4035, 67.055], [16.4342, 67.1551], [16.1274, 67.4259], [16.5855, 67.6282], [16.7836, 67.8951], [17.3246, 68.1039], [17.9168, 67.965], [18.1765, 68.2007], [18.1628, 68.5285], [18.3785, 68.5625], [19.0527, 68.4927], [19.9698, 68.3565], [20.2401, 68.4774], [19.969, 68.542], [20.3196, 68.754], [20.3374, 68.8996], [20.1167, 69.021], [20.6223, 69.0369], [21.4652, 68.6907], [21.9975, 68.5207], [22.7823, 68.3911], [23.639, 67.9543], [23.5018, 67.8753], [23.537, 67.5903], [23.4682, 67.4501], [23.7749, 67.3286], [23.623, 67.1842], [23.6773, 67.0681], [23.9884, 66.8106], [23.8655, 66.5767], [23.7012, 66.4808], [23.7513, 66.1912], [23.9072, 66.1483], [24.1557, 65.8052]]], [[[19.0767, 57.8361], [18.814, 57.7062], [18.7847, 57.361], [18.6998, 57.2427], [18.2852, 57.0832], [18.105, 57.2718], [18.1365, 57.5566], [18.5374, 57.8305], [18.841, 57.9002], [19.0767, 57.8361]]], [[[16.5288, 56.2906], [16.4013, 56.3108], [16.4124, 56.5689], [16.6304, 56.8768], [16.7782, 56.8053], [16.5288, 56.2906]]]] }, \"properties\": { \"name\": \"Sweden\", \"id\": \"SE\" }, \"id\": \"SE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[16.5164, 46.4997], [16.321, 46.5347], [16.2274, 46.3727], [15.6361, 46.2005], [15.6663, 46.0487], [15.6246, 45.8338], [15.277, 45.7326], [15.3396, 45.4672], [15.1105, 45.4507], [14.7336, 45.5085], [14.5339, 45.6452], [14.3701, 45.4814], [14.0856, 45.4778], [13.8787, 45.4286], [13.5778, 45.5169], [13.7198, 45.5875], [13.8313, 45.6803], [13.5698, 45.8343], [13.6141, 45.9617], [13.4863, 46.0394], [13.6324, 46.1769], [13.3998, 46.2249], [13.3993, 46.3177], [13.6799, 46.4628], [13.6998, 46.5201], [14.5037, 46.4171], [14.7567, 46.4992], [15.0009, 46.6262], [15.4394, 46.6298], [15.7671, 46.7114], [15.9574, 46.6777], [16.0929, 46.8632], [16.2838, 46.8575], [16.3814, 46.6386], [16.5164, 46.4997]]] }, \"properties\": { \"name\": \"Slovenia\", \"id\": \"SI\" }, \"id\": \"SI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.5387, 49.0727], [22.2954, 48.6858], [22.1427, 48.5686], [22.132, 48.4053], [21.7671, 48.3383], [21.4515, 48.5522], [21.0671, 48.5061], [20.8665, 48.5455], [20.4901, 48.5269], [20.3338, 48.2957], [19.8988, 48.1314], [19.6254, 48.2233], [19.4669, 48.1105], [18.9143, 48.0507], [18.7917, 48.0005], [18.7242, 47.787], [18.1454, 47.7634], [17.7619, 47.7701], [17.3171, 47.9907], [17.1476, 48.0058], [16.9726, 48.198], [16.8626, 48.4412], [16.9531, 48.5989], [17.0632, 48.7809], [17.1883, 48.861], [17.4827, 48.8277], [17.7583, 48.888], [18.0859, 49.0652], [18.161, 49.2573], [18.3647, 49.3361], [18.5965, 49.4915], [18.8321, 49.5108], [18.9684, 49.3963], [19.1495, 49.4001], [19.4416, 49.5976], [19.6639, 49.3961], [19.7741, 49.3721], [19.802, 49.1923], [20.0577, 49.1812], [20.1637, 49.3164], [20.3631, 49.3852], [20.6161, 49.3916], [20.9473, 49.317], [21.0796, 49.4182], [21.6397, 49.412], [21.8901, 49.3435], [22.0201, 49.2094], [22.5387, 49.0727]]] }, \"properties\": { \"name\": \"Slovakia\", \"id\": \"SK\" }, \"id\": \"SK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-54.1559, 5.3589], [-54.3317, 5.1875], [-54.4522, 5.0135], [-54.4711, 4.7494], [-54.4495, 4.4849], [-54.3508, 4.0543], [-54.2556, 3.9012], [-54.1129, 3.7693], [-53.9904, 3.5895], [-54.0094, 3.4483], [-54.2032, 3.1381], [-54.1706, 2.9938], [-54.1955, 2.818], [-54.4021, 2.4616], [-54.6162, 2.3266], [-54.7221, 2.4416], [-54.8762, 2.4505], [-55.0058, 2.593], [-55.1878, 2.5477], [-55.3853, 2.4407], [-55.7306, 2.4061], [-55.9359, 2.5166], [-56.1295, 2.2996], [-55.9153, 2.0395], [-55.9295, 1.8876], [-56.0199, 1.8423], [-56.4828, 1.9422], [-56.7043, 2.0363], [-56.9314, 2.3955], [-57.029, 2.6373], [-57.2097, 2.8829], [-57.2317, 3.1088], [-57.3036, 3.3769], [-57.5497, 3.3529], [-57.6467, 3.3947], [-57.6493, 3.5176], [-57.8327, 3.6761], [-57.9077, 3.8567], [-58.0322, 4.0019], [-58.0544, 4.1719], [-57.9497, 4.3499], [-57.846, 4.6682], [-57.9171, 4.8204], [-57.8449, 4.923], [-57.7111, 4.9909], [-57.3309, 5.0202], [-57.2073, 5.2142], [-57.3185, 5.3354], [-57.1948, 5.5484], [-57.0566, 5.9386], [-56.9698, 5.9928], [-56.466, 5.9377], [-55.9395, 5.7957], [-55.8283, 5.9617], [-55.6483, 5.9861], [-55.3793, 5.9528], [-55.1483, 5.9937], [-54.8338, 5.9883], [-54.3561, 5.9097], [-54.0543, 5.8081], [-54.0458, 5.6087], [-54.1559, 5.3589]]] }, \"properties\": { \"name\": \"Suriname\", \"id\": \"SR\" }, \"id\": \"SR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[6.6601, 0.1205], [6.5198, 0.0664], [6.4684, 0.2275], [6.5243, 0.3402], [6.6868, 0.4042], [6.7499, 0.2434], [6.6601, 0.1205]]] }, \"properties\": { \"name\": \"Sao Tome and Principe\", \"id\": \"ST\" }, \"id\": \"ST\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[20.2419, 46.1086], [20.3586, 45.9754], [20.775, 45.7499], [20.7742, 45.4845], [20.942, 45.3655], [21.4919, 45.1223], [21.3569, 44.9909], [21.3845, 44.8701], [21.6362, 44.7103], [21.9091, 44.6659], [22.093, 44.5421], [22.3508, 44.6762], [22.4978, 44.7064], [22.721, 44.6056], [22.5022, 44.4897], [22.5307, 44.3779], [22.7051, 44.2376], [22.5973, 44.0751], [22.421, 44.0077], [22.3655, 43.8621], [22.3948, 43.7067], [22.5546, 43.4546], [22.7676, 43.3543], [22.9767, 43.1878], [22.9421, 43.0973], [22.7065, 42.8837], [22.4667, 42.8424], [22.4361, 42.6289], [22.5235, 42.4412], [22.3441, 42.3137], [22.2398, 42.3582], [21.9043, 42.3222], [21.5625, 42.2477], [21.7529, 42.6698], [21.3907, 42.7514], [21.0569, 43.0915], [20.8442, 43.1736], [20.6232, 43.1985], [20.624, 43.0342], [20.3444, 42.8278], [20.34, 42.8931], [19.9441, 43.0817], [19.5517, 43.2122], [19.2187, 43.4501], [19.1944, 43.5331], [19.4514, 43.562], [19.4881, 43.7036], [19.245, 43.965], [19.5494, 43.9872], [19.5837, 44.0436], [19.3391, 44.2256], [19.1517, 44.3024], [19.1512, 44.5275], [19.292, 44.6966], [19.3568, 44.8586], [19.2369, 44.9141], [19.007, 44.8693], [19.1003, 44.9736], [19.0629, 45.1374], [19.3883, 45.1729], [19.3302, 45.2679], [19.0048, 45.3997], [19.0549, 45.5271], [18.8393, 45.8356], [18.9054, 45.9315], [19.0874, 46.0163], [19.2085, 45.9843], [19.5308, 46.1552], [20.1616, 46.1419], [20.2419, 46.1086]]] }, \"properties\": { \"name\": \"Serbia\", \"id\": \"RS\" }, \"id\": \"RS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-56.2671, 46.8384], [-56.3869, 47.0679], [-56.2873, 47.071], [-56.3148, 46.9538], [-56.2671, 46.8384]]] }, \"properties\": { \"name\": \"Saint Pierre and Miquelon\", \"id\": \"PM\" }, \"id\": \"PM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[41.5328, -1.6954], [41.5221, -1.572], [40.9788, -0.8703], [40.9734, 0.5355], [40.9699, 1.378], [40.9645, 2.8145], [41.3419, 3.2015], [41.8839, 3.9779], [42.0241, 4.1377], [42.2284, 4.2016], [42.7916, 4.2922], [42.8946, 4.361], [43.0158, 4.5634], [43.1259, 4.6446], [43.5383, 4.8404], [44.0283, 4.9509], [44.9116, 4.8999], [44.9405, 4.9119], [45.9348, 5.9972], [46.4231, 6.4974], [46.9713, 7.0261], [47.9781, 7.9969], [46.9785, 7.9969], [46.2962, 8.2349], [44.8935, 8.7], [44.023, 8.9859], [43.6203, 9.3375], [43.4828, 9.3797], [43.303, 9.6091], [43.1818, 9.8799], [43.0691, 9.9261], [42.8417, 10.2031], [42.6594, 10.6212], [42.9226, 10.9994], [43.2462, 11.4996], [43.441, 11.3465], [43.631, 11.0354], [43.853, 10.7841], [44.1583, 10.5506], [44.3865, 10.4303], [44.9428, 10.4365], [45.3378, 10.6496], [45.8168, 10.8361], [46.5651, 10.746], [46.9735, 10.9253], [47.2301, 11.0997], [47.405, 11.1739], [47.7126, 11.1122], [48.0193, 11.1392], [48.4388, 11.2902], [48.6745, 11.3226], [48.9031, 11.2547], [49.3883, 11.3426], [49.6422, 11.4508], [50.1101, 11.5294], [50.4661, 11.7274], [50.6361, 11.944], [50.7923, 11.9835], [51.2549, 11.8308], [51.2181, 11.6577], [51.0844, 11.3355], [51.1221, 11.0767], [51.1408, 10.6567], [51.0631, 10.4339], [50.8985, 10.2532], [50.8328, 9.7103], [50.8248, 9.428], [50.685, 9.2412], [50.6379, 9.1093], [50.4297, 8.8452], [50.2858, 8.5096], [50.103, 8.1998], [49.8521, 7.9628], [49.7612, 7.6595], [49.5698, 7.2969], [49.3483, 6.9906], [49.2351, 6.7776], [49.0926, 6.4078], [49.0492, 6.1738], [48.6492, 5.4943], [48.2342, 4.9527], [47.9754, 4.4968], [47.5115, 3.9681], [46.879, 3.2854], [46.0512, 2.4753], [45.826, 2.3098], [44.9201, 1.8099], [44.3328, 1.3909], [44.0327, 1.1059], [43.7176, 0.8578], [43.4676, 0.6217], [42.7121, -0.1756], [42.5608, -0.3216], [42.219, -0.738], [41.9797, -0.9729], [41.7321, -1.43], [41.5328, -1.6954]]] }, \"properties\": { \"name\": \"Somalia\", \"id\": \"SO\" }, \"id\": \"SO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[12.4854, 43.9016], [12.397, 43.9345], [12.441, 43.9824], [12.5147, 43.9531], [12.4854, 43.9016]]] }, \"properties\": { \"name\": \"San Marino\", \"id\": \"SM\" }, \"id\": \"SM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.3626, 14.416], [-89.0572, 14.329], [-89.0002, 14.2527], [-88.7076, 14.0321], [-88.5125, 13.9788], [-88.449, 13.851], [-88.151, 13.9872], [-87.9909, 13.8798], [-87.8023, 13.89], [-87.7153, 13.8128], [-87.8143, 13.3991], [-87.8207, 13.285], [-87.9308, 13.1807], [-88.1807, 13.1638], [-88.4171, 13.2135], [-88.5121, 13.1838], [-88.867, 13.2832], [-89.2775, 13.4781], [-89.8042, 13.5602], [-90.0952, 13.7365], [-90.1048, 13.8346], [-89.8726, 14.0454], [-89.7495, 14.0769], [-89.5473, 14.2411], [-89.5406, 14.4098], [-89.3626, 14.416]]] }, \"properties\": { \"name\": \"El Salvador\", \"id\": \"SV\" }, \"id\": \"SV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-10.2832, 8.4852], [-10.3895, 8.1576], [-10.5709, 8.071], [-10.6474, 7.7594], [-10.878, 7.5384], [-11.0853, 7.3986], [-11.2678, 7.2326], [-11.5075, 6.9067], [-11.7334, 7.0887], [-11.9292, 7.1837], [-12.4856, 7.3861], [-12.4328, 7.545], [-12.5104, 7.6658], [-12.6975, 7.716], [-12.8809, 7.8566], [-12.957, 8.1452], [-13.149, 8.2144], [-13.2728, 8.4297], [-13.0851, 8.4248], [-12.9535, 8.6153], [-13.1818, 8.5771], [-13.2284, 8.6961], [-13.1536, 8.8976], [-13.2928, 9.0494], [-13.1299, 9.0476], [-13.028, 9.1035], [-12.9588, 9.2634], [-12.7559, 9.3734], [-12.5579, 9.705], [-12.5016, 9.8621], [-12.2776, 9.9296], [-12.1422, 9.8755], [-11.9227, 9.9225], [-11.911, 9.9931], [-11.2735, 9.9967], [-11.2056, 9.9776], [-10.8647, 9.5164], [-10.6904, 9.3144], [-10.75, 9.1222], [-10.6159, 9.0592], [-10.6057, 8.8674], [-10.5005, 8.6876], [-10.6286, 8.5301], [-10.712, 8.3352], [-10.5578, 8.3157], [-10.3944, 8.4808], [-10.2832, 8.4852]]], [[[-12.526, 7.4363], [-12.9517, 7.5708], [-12.8544, 7.6219], [-12.6152, 7.6374], [-12.5124, 7.5823], [-12.526, 7.4363]]]] }, \"properties\": { \"name\": \"Sierra Leone\", \"id\": \"SL\" }, \"id\": \"SL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[157.389, -8.7134], [157.2124, -8.5651], [157.3451, -8.4324], [157.4108, -8.4751], [157.3322, -8.6509], [157.389, -8.7134]]], [[[160.7493, -8.3138], [160.9979, -8.6122], [160.9441, -8.7991], [161.1586, -8.962], [161.2567, -9.1919], [161.2584, -9.3171], [161.0414, -9.3082], [160.8736, -9.1569], [160.7718, -8.9637], [160.6627, -8.6206], [160.7142, -8.5394], [160.5903, -8.3729], [160.7493, -8.3138]]], [[[157.7632, -8.2425], [157.8986, -8.5061], [157.749, -8.5238], [157.5879, -8.4453], [157.5581, -8.27], [157.3513, -8.2753], [157.3216, -8.1612], [157.4334, -7.9845], [157.599, -8.0059], [157.6122, -8.1648], [157.7632, -8.2425]]], [[[157.172, -8.1079], [157.0411, -8.1177], [156.9589, -7.9379], [157.1027, -7.8554], [157.1861, -7.9411], [157.172, -8.1079]]], [[[156.6876, -7.9232], [156.511, -7.708], [156.5607, -7.5739], [156.8093, -7.7231], [156.6876, -7.9232]]], [[[159.8792, -8.534], [159.6445, -8.3716], [159.3541, -8.2606], [158.944, -8.0409], [158.5968, -7.7591], [158.5653, -7.6511], [158.7344, -7.6046], [159.1095, -7.9038], [159.1979, -7.9095], [159.4313, -8.0289], [159.8433, -8.3272], [159.794, -8.4062], [159.8792, -8.534]]], [[[157.4866, -7.3303], [157.4414, -7.4257], [157.1014, -7.3236], [156.9043, -7.1806], [156.6956, -6.9107], [156.4572, -6.715], [156.6042, -6.6409], [156.7653, -6.7643], [157.0303, -6.8921], [157.1484, -7.1136], [157.3361, -7.2805], [157.4866, -7.3303]]], [[[160.5761, -11.798], [160.3946, -11.7887], [160.3551, -11.7119], [160.0036, -11.5796], [160.0772, -11.493], [160.4488, -11.6959], [160.5761, -11.798]]], [[[166.1332, -10.758], [165.791, -10.7846], [165.9091, -10.6745], [166.0236, -10.6612], [166.1332, -10.758]]], [[[161.7152, -10.3873], [161.8413, -10.4464], [162.1054, -10.4539], [162.2873, -10.7101], [162.3011, -10.8321], [162.1236, -10.8246], [161.7867, -10.7171], [161.538, -10.5666], [161.487, -10.3616], [161.2939, -10.3265], [161.3051, -10.2044], [161.4754, -10.2382], [161.7152, -10.3873]]], [[[161.5479, -9.6256], [161.4098, -9.6815], [161.4067, -9.3686], [161.5479, -9.6256]]], [[[159.7506, -9.2727], [159.9708, -9.4334], [160.3547, -9.4214], [160.6254, -9.5887], [160.7946, -9.7672], [160.819, -9.8626], [160.6494, -9.9288], [160.3209, -9.8213], [159.8536, -9.7916], [159.7554, -9.7259], [159.6218, -9.5319], [159.6076, -9.354], [159.7506, -9.2727]]], [[[158.1082, -8.6841], [158.0096, -8.7631], [157.8791, -8.6686], [157.9985, -8.5084], [158.1082, -8.6841]]]] }, \"properties\": { \"name\": \"Solomon Islands\", \"id\": \"SB\" }, \"id\": \"SB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.6923, -15.9977], [-5.775, -15.9568], [-5.7078, -15.9062], [-5.6923, -15.9977]]] }, \"properties\": { \"name\": \"Saint Helena\", \"id\": \"SH\" }, \"id\": \"SH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-37.1034, -54.0658], [-36.7039, -54.108], [-36.4487, -54.3082], [-36.3264, -54.251], [-36.0731, -54.5541], [-35.7986, -54.7637], [-36.0856, -54.8667], [-36.2518, -54.7801], [-36.5066, -54.511], [-36.735, -54.4667], [-37.0068, -54.3411], [-37.6891, -54.0769], [-37.3821, -53.9841], [-37.1034, -54.0658]]] }, \"properties\": { \"name\": \"South Georgia and South Sandwich Islands\", \"id\": \"GS\" }, \"id\": \"GS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[103.9697, 1.3315], [103.8201, 1.2653], [103.6501, 1.3257], [103.7052, 1.4233], [103.8179, 1.4473], [103.9697, 1.3315]]] }, \"properties\": { \"name\": \"Singapore\", \"id\": \"SG\" }, \"id\": \"SG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-12.2807, 14.8089], [-12.1866, 14.6482], [-12.2284, 14.4586], [-12.0193, 14.2065], [-12.0202, 13.9748], [-11.9609, 13.8754], [-12.0543, 13.633], [-11.8945, 13.4444], [-11.6349, 13.3698], [-11.5487, 13.17], [-11.3903, 12.9419], [-11.4489, 12.5322], [-11.3894, 12.4043], [-11.5736, 12.4265], [-11.8079, 12.3875], [-12.0423, 12.3981], [-12.2912, 12.328], [-12.7974, 12.4518], [-12.9308, 12.5322], [-13.0613, 12.49], [-13.0828, 12.6334], [-13.7293, 12.6737], [-15.1962, 12.68], [-15.5748, 12.4905], [-15.8397, 12.4381], [-16.1441, 12.4576], [-16.4162, 12.3675], [-16.7119, 12.3551], [-16.7603, 12.526], [-16.5532, 12.605], [-16.5976, 12.7151], [-16.7438, 12.5854], [-16.7633, 13.064], [-16.6488, 13.154], [-15.8343, 13.1563], [-15.8143, 13.325], [-15.2863, 13.396], [-15.1512, 13.5566], [-14.6719, 13.3516], [-14.2467, 13.2357], [-13.8475, 13.3352], [-13.8527, 13.4785], [-13.9773, 13.5433], [-14.4054, 13.5038], [-14.5708, 13.6162], [-14.7661, 13.669], [-14.9359, 13.7853], [-15.1083, 13.8119], [-15.4268, 13.7271], [-15.5096, 13.5864], [-16.3088, 13.5971], [-16.5623, 13.5873], [-16.5878, 13.6894], [-16.7454, 13.8403], [-16.7978, 14.0934], [-16.9738, 14.4031], [-17.0794, 14.4831], [-17.168, 14.6406], [-17.4119, 14.792], [-17.1471, 14.9221], [-16.8435, 15.2941], [-16.5707, 15.7344], [-16.5352, 15.8383], [-16.4411, 16.2045], [-16.3024, 16.4513], [-16.1683, 16.5471], [-15.959, 16.4921], [-15.6208, 16.5068], [-15.38, 16.5818], [-15.2106, 16.5827], [-15.1127, 16.6448], [-14.5337, 16.6559], [-14.3, 16.5804], [-13.9751, 16.311], [-13.8685, 16.1481], [-13.5556, 16.1441], [-13.4095, 16.0594], [-13.297, 15.8538], [-13.258, 15.7002], [-13.0793, 15.5102], [-12.9943, 15.5049], [-12.8626, 15.3402], [-12.8584, 15.2426], [-12.6596, 15.0819], [-12.5435, 15.0388], [-12.2807, 14.8089]]] }, \"properties\": { \"name\": \"Senegal\", \"id\": \"SN\" }, \"id\": \"SN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.078, 9.4613], [34.1015, 8.752], [34.0945, 8.5824], [33.9533, 8.4435], [33.4096, 8.4479], [33.2342, 8.3964], [33.0126, 7.9516], [33.0145, 7.8687], [33.2262, 7.7608], [33.6661, 7.6711], [33.9022, 7.5095], [34.0203, 7.3679], [34.0643, 7.2259], [34.2791, 7.003], [34.4842, 6.8983], [34.7106, 6.6604], [34.838, 6.2999], [34.9591, 6.0452], [34.9836, 5.8582], [35.0822, 5.6731], [35.2681, 5.4925], [34.3803, 4.6207], [33.9759, 4.2203], [33.5685, 3.8119], [33.4895, 3.7551], [33.1543, 3.7746], [32.9972, 3.8802], [32.8383, 3.7986], [32.3358, 3.7063], [32.0996, 3.5291], [31.942, 3.6077], [31.7982, 3.8026], [31.6291, 3.7014], [31.4799, 3.6805], [31.1523, 3.7857], [30.9295, 3.6339], [30.8385, 3.4905], [30.7572, 3.6241], [30.5593, 3.653], [30.5082, 3.8359], [30.1949, 3.9819], [29.8704, 4.3272], [29.6768, 4.5869], [29.4696, 4.6118], [29.3847, 4.4986], [29.1513, 4.3881], [28.9396, 4.4871], [28.7269, 4.5048], [28.4277, 4.3241], [28.192, 4.3503], [27.9807, 4.5319], [27.7881, 4.6446], [27.6642, 4.8462], [27.4911, 4.9674], [27.4032, 5.1094], [27.2567, 5.2896], [27.2133, 5.619], [27.0837, 5.777], [26.7262, 5.998], [26.5141, 6.0691], [26.3086, 6.4553], [26.3619, 6.6355], [26.1692, 6.7816], [26.0365, 6.9551], [25.889, 7.0647], [25.3808, 7.3333], [25.19, 7.5193], [25.2472, 7.7244], [25.2002, 7.8078], [25.0071, 7.965], [24.8535, 8.1377], [24.7367, 8.1913], [24.2915, 8.2912], [24.1801, 8.4612], [24.221, 8.6082], [24.1473, 8.6654], [24.2134, 8.7679], [24.5321, 8.887], [24.5495, 9.0068], [24.648, 9.179], [24.6968, 9.4258], [24.7824, 9.5274], [24.7851, 9.7747], [25.0031, 10.0553], [25.067, 10.2936], [25.2854, 10.3185], [25.7981, 10.4206], [25.8851, 10.346], [25.8914, 10.2026], [26.1696, 9.966], [26.5514, 9.5257], [26.7631, 9.499], [27.0743, 9.614], [27.7997, 9.5879], [27.8857, 9.5998], [28.049, 9.3286], [28.8445, 9.3259], [28.8397, 9.4591], [28.9994, 9.61], [29.2422, 9.7179], [29.4731, 9.7685], [29.604, 9.9212], [29.6054, 10.065], [30.0031, 10.2772], [30.4745, 9.9789], [30.7396, 9.7428], [31.1545, 9.7707], [31.2247, 9.7991], [31.6548, 10.2212], [31.8541, 10.4792], [31.9331, 10.6625], [32.4041, 11.0576], [32.3544, 11.2471], [32.3353, 11.7159], [32.0721, 12.0066], [32.7365, 12.0097], [32.7219, 12.2232], [33.1991, 12.2174], [33.1352, 11.9418], [33.1223, 11.6932], [33.0731, 11.5916], [33.172, 10.8503], [33.141, 10.7379], [33.3607, 10.6576], [33.4592, 10.5506], [33.892, 10.199], [33.9568, 10.0544], [33.959, 9.8453], [33.8952, 9.7175], [33.8912, 9.4622], [34.078, 9.4613]]] }, \"properties\": { \"name\": \"South Sudan\", \"id\": \"SS\" }, \"id\": \"SS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[36.8714, 21.9968], [36.9269, 21.5867], [37.0809, 21.3261], [37.2119, 21.1858], [37.1506, 21.1037], [37.1728, 20.7317], [37.2274, 20.5568], [37.1879, 20.3948], [37.1933, 20.1205], [37.2626, 19.792], [37.2483, 19.5821], [37.3615, 19.092], [37.4712, 18.8204], [37.5995, 18.7173], [37.7299, 18.6943], [37.9217, 18.5558], [38.2018, 18.2495], [38.3327, 18.2189], [38.5742, 18.0728], [38.6093, 18.0049], [38.4224, 17.8238], [38.2537, 17.5845], [37.7823, 17.458], [37.5102, 17.288], [37.4112, 17.0617], [37.0091, 17.059], [36.9789, 16.8006], [36.8879, 16.6248], [36.9136, 16.2964], [36.8133, 15.9941], [36.6792, 15.7264], [36.5217, 15.2501], [36.4267, 15.132], [36.5243, 14.2567], [36.444, 13.9886], [36.4471, 13.8421], [36.3907, 13.6259], [36.2123, 13.2712], [36.1598, 13.0932], [36.1076, 12.7266], [35.8207, 12.6849], [35.5962, 12.5375], [35.2526, 11.9569], [35.1123, 11.8166], [34.9605, 11.2768], [34.9312, 10.8649], [34.7714, 10.746], [34.5717, 10.88], [34.4313, 10.7877], [34.2756, 10.528], [34.3146, 10.2514], [34.2915, 10.1249], [34.1202, 9.7299], [34.078, 9.4613], [33.8912, 9.4622], [33.8952, 9.7175], [33.959, 9.8453], [33.9568, 10.0544], [33.892, 10.199], [33.4592, 10.5506], [33.3607, 10.6576], [33.141, 10.7379], [33.172, 10.8503], [33.0731, 11.5916], [33.1223, 11.6932], [33.1352, 11.9418], [33.1991, 12.2174], [32.7219, 12.2232], [32.7365, 12.0097], [32.0721, 12.0066], [32.3353, 11.7159], [32.3544, 11.2471], [32.4041, 11.0576], [31.9331, 10.6625], [31.8541, 10.4792], [31.6548, 10.2212], [31.2247, 9.7991], [31.1545, 9.7707], [30.7396, 9.7428], [30.4745, 9.9789], [30.0031, 10.2772], [29.6054, 10.065], [29.604, 9.9212], [29.4731, 9.7685], [29.2422, 9.7179], [28.9994, 9.61], [28.8397, 9.4591], [28.8445, 9.3259], [28.049, 9.3286], [27.8857, 9.5998], [27.7997, 9.5879], [27.0743, 9.614], [26.7631, 9.499], [26.5514, 9.5257], [26.1696, 9.966], [25.8914, 10.2026], [25.8851, 10.346], [25.7981, 10.4206], [25.2854, 10.3185], [25.067, 10.2936], [25.0031, 10.0553], [24.7851, 9.7747], [24.7824, 9.5274], [24.6968, 9.4258], [24.648, 9.179], [24.5495, 9.0068], [24.5321, 8.887], [24.2134, 8.7679], [24.1473, 8.6654], [23.6794, 8.7324], [23.5373, 8.8159], [23.552, 8.9433], [23.4682, 9.1146], [23.6226, 9.3406], [23.6461, 9.8231], [23.4566, 10.1742], [23.256, 10.4579], [22.9643, 10.7517], [22.86, 10.9195], [22.9377, 11.192], [22.9226, 11.3447], [22.6412, 11.5161], [22.5564, 11.6697], [22.5808, 11.9902], [22.4898, 12.0447], [22.3522, 12.6604], [22.2333, 12.7093], [22.0006, 12.672], [21.8781, 12.6995], [21.8252, 12.7905], [21.9905, 13.1132], [22.1578, 13.2149], [22.2283, 13.3294], [22.2026, 13.538], [22.1076, 13.7303], [22.1733, 13.9104], [22.5097, 14.1275], [22.3815, 14.5506], [22.468, 14.6335], [22.6708, 14.7223], [22.6793, 14.8515], [22.7632, 14.9989], [22.9324, 15.1622], [22.9697, 15.3113], [22.9342, 15.5333], [23.105, 15.7025], [23.2435, 15.6971], [23.7083, 15.7451], [23.9457, 15.7033], [23.9835, 15.7801], [23.9822, 17.2663], [23.9812, 18.1585], [23.9804, 19.4968], [23.9804, 19.9957], [24.9671, 19.9953], [24.9796, 20.5009], [24.9805, 21.996], [26.1261, 21.9955], [27.2723, 21.9955], [28.8006, 21.9951], [29.5645, 21.9951], [30.7106, 21.9951], [31.2607, 22.0022], [31.3583, 22.1886], [31.4862, 22.1478], [31.4346, 21.996], [32.2781, 21.996], [33.2621, 21.996], [34.2467, 21.9964], [35.5589, 21.9964], [36.8714, 21.9968]]] }, \"properties\": { \"name\": \"Sudan\", \"id\": \"SD\" }, \"id\": \"SD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[46.5314, 29.0965], [47.4334, 28.9895], [47.583, 28.6281], [47.6714, 28.5331], [48.4424, 28.5429], [48.6261, 28.1328], [48.7735, 27.9592], [48.9067, 27.6289], [49.2374, 27.4927], [49.1753, 27.4376], [49.4052, 27.181], [49.5375, 27.1517], [49.7163, 26.956], [49.9862, 26.8291], [50.0276, 26.5268], [50.1851, 26.4051], [50.2139, 26.3083], [50.1553, 26.1006], [50.0315, 26.1108], [50.1305, 25.8467], [50.2814, 25.5662], [50.4549, 25.425], [50.558, 25.0868], [50.8043, 24.7894], [50.9659, 24.5741], [51.2682, 24.6074], [51.4182, 24.531], [51.3099, 24.3406], [51.5682, 24.286], [51.5927, 24.0787], [52.5551, 22.933], [54.0545, 22.7496], [55.1044, 22.6214], [55.186, 22.7039], [55.641, 22.0017], [55.3512, 21.1255], [54.9773, 19.9957], [53.6669, 19.559], [52.6345, 19.215], [51.9776, 18.9961], [50.3551, 18.7777], [49.1926, 18.6215], [49.042, 18.582], [48.172, 18.1567], [47.5795, 17.4483], [47.4418, 17.1118], [47.1436, 16.9466], [46.9758, 16.9533], [46.7787, 17.2121], [46.6819, 17.2685], [46.3104, 17.2312], [45.4066, 17.32], [45.1482, 17.4274], [44.747, 17.4319], [44.5464, 17.4043], [44.1558, 17.3986], [43.9169, 17.3249], [43.7131, 17.3657], [43.5972, 17.4713], [43.418, 17.5162], [43.1911, 17.3595], [43.1165, 16.9418], [43.1845, 16.8118], [43.1649, 16.6892], [43.0336, 16.5503], [42.7992, 16.3718], [42.6989, 16.7372], [42.5529, 16.8685], [42.544, 16.9595], [42.3832, 17.1224], [42.294, 17.435], [42.0521, 17.6693], [41.7498, 17.8855], [41.5074, 18.2562], [41.4315, 18.4524], [41.2296, 18.6783], [41.1159, 19.0823], [40.9135, 19.4902], [40.7591, 19.7556], [40.6161, 19.8222], [40.4821, 19.9935], [40.0808, 20.2661], [39.8842, 20.2932], [39.6138, 20.5178], [39.4912, 20.7371], [39.276, 20.9741], [39.0936, 21.3101], [39.1473, 21.5192], [38.9879, 21.8819], [39.0341, 22.2033], [39.0958, 22.3928], [39.0621, 22.5921], [38.9387, 22.8047], [38.9413, 22.882], [38.797, 23.0484], [38.7061, 23.3054], [38.4641, 23.712], [38.2888, 23.9109], [37.9195, 24.1852], [37.7135, 24.2744], [37.5431, 24.2918], [37.1809, 24.82], [37.2665, 24.9603], [37.1489, 25.291], [36.9207, 25.6412], [36.7626, 25.7513], [36.6752, 26.0389], [36.5185, 26.1051], [36.2496, 26.5947], [36.0321, 26.881], [35.8519, 27.0705], [35.763, 27.2587], [35.5815, 27.4323], [35.4239, 27.7337], [35.1806, 28.0347], [35.0781, 28.0871], [34.616, 28.1483], [34.7798, 28.5074], [34.7994, 28.7205], [34.9507, 29.3535], [36.0156, 29.1906], [36.0684, 29.2003], [36.476, 29.4951], [36.7551, 29.8662], [37.4694, 29.9949], [37.6336, 30.3132], [37.9803, 30.5], [37.4791, 31.0078], [36.9585, 31.4917], [38.1117, 31.7811], [38.9621, 31.995], [39.1455, 32.1246], [40.3693, 31.9391], [40.8083, 31.7256], [42.0743, 31.0802], [42.8578, 30.4952], [43.4406, 30.0841], [44.3608, 29.4351], [44.7164, 29.1937], [46.3565, 29.0636], [46.5314, 29.0965]]], [[[41.9878, 16.7154], [42.0601, 16.8033], [42.1701, 16.7087], [41.9642, 16.6533], [41.776, 16.8468], [41.9478, 16.9364], [41.9878, 16.7154]]]] }, \"properties\": { \"name\": \"Saudi Arabia\", \"id\": \"SA\" }, \"id\": \"SA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-8.6834, 27.6565], [-8.6834, 27.2858], [-8.6821, 25.9954], [-9.8171, 25.9954], [-10.7489, 25.9954], [-12.0164, 25.9954], [-12.0164, 24.9234], [-12.0164, 23.5766], [-12.0235, 23.4674], [-12.3728, 23.3178], [-12.6203, 23.2712], [-13.0316, 23], [-13.1665, 22.7532], [-13.0944, 22.4958], [-13.0163, 21.3341], [-13.8554, 21.3328], [-15.0018, 21.3314], [-16.1483, 21.3301], [-16.9647, 21.3292], [-17.0641, 20.8987], [-17.0481, 20.8063], [-17.0987, 20.8569], [-16.9309, 21.9], [-16.7933, 22.1597], [-16.6839, 22.2743], [-16.5143, 22.3333], [-16.3587, 22.5943], [-16.3044, 22.8349], [-16.2018, 22.9454], [-16.2103, 23.0981], [-15.8059, 23.7493], [-15.8993, 23.8443], [-15.5864, 24.0729], [-15.1887, 24.4786], [-15.0389, 24.5488], [-14.9043, 24.7197], [-14.856, 24.8714], [-14.8429, 25.22], [-14.7949, 25.4042], [-14.6023, 25.8085], [-14.5228, 25.9253], [-14.4138, 26.2538], [-14.1684, 26.4153], [-13.9522, 26.4886], [-13.5758, 26.735], [-13.4957, 26.8725], [-13.4098, 27.1464], [-13.2561, 27.4345], [-13.1774, 27.652], [-8.8184, 27.656], [-8.6834, 27.6565]]] }, \"properties\": { \"name\": \"Western Sahara\", \"id\": \"EH\" }, \"id\": \"EH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.51, -1.0673], [30.4701, -1.1313], [30.6321, -1.3674], [30.7106, -1.3967], [30.8128, -1.5631], [30.819, -1.9675], [30.8767, -2.1433], [30.8287, -2.3387], [30.5536, -2.4], [30.4084, -2.3129], [30.2339, -2.3471], [30.1425, -2.4141], [29.9303, -2.3396], [29.8681, -2.7164], [29.6981, -2.7945], [29.3901, -2.8087], [29.2969, -2.6729], [29.0634, -2.6023], [29.0146, -2.7205], [28.9217, -2.6823], [28.8765, -2.4003], [29.1064, -2.2334], [29.1481, -2.1318], [29.1295, -1.8602], [29.3515, -1.5174], [29.5769, -1.3878], [29.8256, -1.3354], [29.8815, -1.4518], [30.1017, -1.3687], [30.3605, -1.0745], [30.51, -1.0673]]] }, \"properties\": { \"name\": \"Rwanda\", \"id\": \"RW\" }, \"id\": \"RW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[74.6604, 72.8735], [74.1002, 73.0216], [74.1983, 73.109], [74.7253, 73.1081], [74.6604, 72.8735]]], [[[79.5015, 72.7219], [78.8805, 72.7517], [78.6568, 72.8924], [79.1641, 73.0943], [79.5415, 72.9185], [79.5015, 72.7219]]], [[[77.6322, 72.2911], [76.906, 72.2976], [76.903, 72.3655], [77.3779, 72.5652], [77.7486, 72.6311], [78.3651, 72.4824], [77.6322, 72.2911]]], [[[-178.8765, 71.5769], [-178.3536, 71.5292], [-177.5322, 71.2631], [-177.5235, 71.1668], [-177.8218, 71.0676], [-179.5066, 70.9235], [-180, 70.993], [-180, 71.1843], [-180, 71.3998], [-180, 71.5378], [-179.691, 71.578], [-178.8765, 71.5769]]], [[[137.9599, 71.5077], [137.7117, 71.4234], [137.2821, 71.58], [137.8169, 71.5878], [137.9599, 71.5077]]], [[[178.8614, 70.8265], [178.6284, 71.0474], [178.8911, 71.2311], [179.5476, 71.4477], [180, 71.5378], [180, 70.993], [179.6475, 70.8989], [178.8614, 70.8265]]], [[[52.9035, 71.3649], [53.2053, 71.1597], [52.8356, 71.0857], [52.2967, 71.3567], [52.9035, 71.3649]]], [[[60.4506, 69.935], [60.4404, 69.7259], [60.2157, 69.6877], [59.5783, 69.7385], [59.5029, 69.8662], [58.9528, 69.8928], [58.6799, 70.051], [58.473, 70.2668], [59.0053, 70.4652], [59.6365, 70.1971], [60.4506, 69.935]]], [[[169.201, 69.5805], [168.9156, 69.5714], [168.3478, 69.6644], [167.789, 69.8369], [168.3581, 70.0158], [169.3751, 69.8826], [169.201, 69.5805]]], [[[161.467, 68.9009], [161.4613, 68.9957], [161.1363, 69.1102], [161.1106, 69.4698], [161.5052, 69.6395], [161.5404, 69.4364], [161.3508, 69.3694], [161.3942, 69.1064], [161.5172, 68.9695], [161.467, 68.9009]]], [[[50.265, 69.1857], [49.9209, 69.0532], [49.6262, 68.8596], [48.667, 68.7331], [48.4388, 68.8048], [48.279, 69.0403], [48.3199, 69.2693], [48.6315, 69.436], [49.2249, 69.5113], [50.1674, 69.2571], [50.265, 69.1857]]], [[[-179.7985, 68.9404], [-178.8738, 68.7542], [-178.6928, 68.546], [-178.25, 68.5414], [-177.4075, 68.2451], [-175.3451, 67.678], [-175.1552, 67.3653], [-174.85, 67.3489], [-174.9381, 67.0929], [-174.7712, 66.7844], [-174.925, 66.6231], [-174.5037, 66.5379], [-174.0177, 66.3825], [-173.774, 66.4347], [-174.2316, 66.632], [-174.0055, 66.7786], [-174.0865, 66.9429], [-174.4476, 67.1031], [-173.6797, 67.1448], [-173.1578, 67.0692], [-173.2282, 66.9686], [-172.6405, 66.9249], [-172.2738, 66.9655], [-171.7955, 66.9318], [-171.3605, 66.6768], [-170.9266, 66.5296], [-170.192, 66.2014], [-169.7779, 66.1432], [-169.8318, 65.999], [-170.1594, 66.0081], [-170.5407, 65.8654], [-170.6663, 65.6214], [-171.1191, 65.6949], [-171.0543, 65.55], [-171.9072, 65.496], [-171.9571, 65.5422], [-172.5566, 65.6121], [-172.2115, 65.4252], [-172.2861, 65.2057], [-172.2132, 65.0481], [-172.5928, 64.9078], [-172.9239, 64.705], [-172.8543, 64.6098], [-172.4873, 64.5441], [-172.4014, 64.4138], [-172.7392, 64.4123], [-173.0092, 64.2975], [-173.2755, 64.2897], [-173.475, 64.4287], [-173.7298, 64.3646], [-174.0015, 64.4489], [-174.318, 64.6376], [-175.0359, 64.8137], [-175.3951, 64.8024], [-175.8538, 65.0109], [-175.9229, 65.3525], [-176.0933, 65.4709], [-177.0563, 65.6137], [-177.4887, 65.5038], [-178.3103, 65.4849], [-178.5047, 65.5373], [-178.5023, 65.7404], [-178.8794, 65.9364], [-178.7467, 66.0136], [-178.534, 66.3166], [-178.9156, 66.1799], [-179.6163, 66.1279], [-179.7836, 66.0181], [-179.7284, 65.8039], [-179.3659, 65.6385], [-179.3521, 65.5167], [-179.7046, 65.1871], [-180, 65.0672], [-180, 65.312], [-180, 65.5568], [-180, 65.8014], [-180, 66.0462], [-180, 66.2911], [-180, 66.5359], [-180, 66.7807], [-180, 67.0252], [-180, 67.2701], [-180, 67.5149], [-180, 67.7597], [-180, 68.0045], [-180, 68.249], [-180, 68.4938], [-180, 68.7386], [-180, 68.9835], [-179.7985, 68.9404]]], [[[70.0209, 66.5021], [69.6515, 66.5653], [69.4691, 66.716], [70.0768, 66.6959], [70.0209, 66.5021]]], [[[163.635, 58.6033], [163.7611, 59.015], [164.2019, 59.0962], [164.5175, 59.2267], [164.6293, 59.1122], [164.6156, 58.8856], [164.2787, 58.8381], [163.635, 58.6033]]], [[[166.6504, 54.8391], [166.3245, 54.8646], [165.9916, 55.1904], [165.9313, 55.3516], [166.2757, 55.3121], [166.2483, 55.1653], [166.6504, 54.8391]]], [[[21.2358, 55.2641], [22.0725, 55.0637], [22.5675, 55.0591], [22.8312, 54.8384], [22.6798, 54.493], [22.7664, 54.3568], [22.1683, 54.3599], [20.2081, 54.4207], [19.6045, 54.4591], [19.7585, 54.5448], [19.9441, 54.7501], [19.9747, 54.9212], [20.5202, 54.9949], [20.8998, 55.2868], [20.9579, 55.279], [20.5948, 54.9824], [20.8874, 54.9094], [21.1888, 54.9352], [21.2358, 55.2641]]], [[[137.9403, 55.0926], [138.172, 55.0601], [137.9914, 54.8206], [137.6611, 54.6533], [137.4627, 54.8735], [137.4356, 55.0159], [137.5772, 55.1971], [137.9403, 55.0926]]], [[[137.1786, 55.1005], [137.0552, 54.9268], [136.7951, 55.0093], [137.1786, 55.1005]]], [[[142.7611, 54.3938], [142.9762, 54.1411], [142.9181, 53.7941], [143.2235, 53.2961], [143.3247, 52.9632], [143.3235, 52.6136], [143.172, 52.3493], [143.1556, 52.0838], [143.2945, 51.7443], [143.3203, 51.5833], [143.4553, 51.4715], [143.7363, 50.5067], [143.8161, 50.2825], [144.0478, 49.8957], [144.272, 49.3113], [144.5361, 48.8936], [144.1255, 49.2085], [143.7322, 49.3119], [143.3824, 49.2906], [143.105, 49.1987], [142.5742, 48.0719], [142.5568, 47.7381], [142.67, 47.537], [143.0055, 47.2228], [143.2177, 46.7949], [143.4473, 46.7918], [143.5809, 46.3608], [143.4188, 46.2222], [143.3523, 46.4761], [143.2821, 46.5592], [142.8294, 46.6053], [142.5781, 46.7008], [142.4063, 46.5547], [142.2088, 46.0891], [142.0769, 45.9169], [141.9616, 46.0136], [141.8301, 46.4508], [141.8666, 46.6941], [142.0387, 47.1402], [141.9642, 47.5872], [142.1817, 48.0133], [142.1351, 48.2899], [141.8661, 48.75], [142.0202, 49.0785], [142.1422, 49.5692], [142.1533, 50.2168], [142.0712, 50.5149], [142.1005, 50.7766], [142.2079, 50.9985], [142.2065, 51.2225], [142.0059, 51.5205], [141.7223, 51.7363], [141.808, 51.7891], [141.6686, 51.9334], [141.661, 52.2729], [141.8035, 52.5557], [141.8737, 53.0389], [141.8236, 53.3394], [141.9647, 53.4563], [142.1417, 53.4957], [142.3189, 53.4055], [142.5262, 53.4475], [142.5094, 53.5875], [142.6429, 53.7367], [142.67, 53.9684], [142.3349, 54.2806], [142.5515, 54.2789], [142.7611, 54.3938]]], [[[156.405, 50.6576], [156.1679, 50.732], [156.3765, 50.862], [156.405, 50.6576]]], [[[155.9211, 50.3023], [155.7923, 50.202], [155.5162, 50.1456], [155.3973, 50.0413], [155.2432, 50.0945], [155.2183, 50.2978], [155.6801, 50.4009], [155.8847, 50.684], [156.123, 50.6714], [156.0445, 50.4517], [155.9211, 50.3023]]], [[[154.8105, 49.3119], [154.6129, 49.3805], [154.8251, 49.6469], [154.8105, 49.3119]]], [[[149.6879, 45.6421], [149.4468, 45.5932], [149.6658, 45.8396], [149.7963, 45.876], [149.9622, 46.022], [150.349, 46.2134], [150.5531, 46.2085], [150.2343, 46.0123], [150.1949, 45.9333], [149.8833, 45.7832], [149.6879, 45.6421]]], [[[148.5996, 45.3176], [148.2621, 45.2168], [147.9137, 44.9904], [147.658, 44.9771], [147.5631, 44.8355], [147.3101, 44.6775], [147.1408, 44.6633], [147.2465, 44.856], [147.4303, 44.9452], [147.7694, 45.1906], [147.9648, 45.3775], [148.0562, 45.2621], [148.3243, 45.2825], [148.6124, 45.4845], [148.8122, 45.5098], [148.7908, 45.3238], [148.5996, 45.3176]]], [[[146.2078, 44.4977], [146.4364, 44.3757], [146.2961, 44.2811], [146.1124, 44.2461], [145.767, 43.9407], [145.6663, 43.9993], [145.9401, 44.2727], [146.1119, 44.4999], [146.2078, 44.4977]]], [[[58.2955, 81.7152], [58.1348, 81.828], [59.2618, 81.8541], [59.3564, 81.7589], [58.2955, 81.7152]]], [[[57.8102, 81.5461], [58.4361, 81.4642], [57.8586, 81.3681], [58.0153, 81.2549], [57.4512, 81.1354], [56.8217, 81.238], [55.7169, 81.1885], [57.0916, 81.5412], [57.8102, 81.5461]]], [[[96.5265, 81.0755], [96.7551, 80.9579], [97.8316, 80.7984], [97.0255, 80.5356], [97.1751, 80.241], [94.565, 80.126], [93.8726, 80.0102], [92.2017, 80.1793], [91.5239, 80.3584], [91.8968, 80.4776], [92.5781, 80.5333], [93.2626, 80.7912], [92.5928, 80.7808], [93.0651, 80.9885], [94.6115, 81.1146], [95.1597, 81.2711], [95.8008, 81.2804], [96.5265, 81.0755]]], [[[91.5669, 81.1412], [91.2229, 81.0638], [89.9761, 81.1131], [90.0697, 81.2138], [91.5669, 81.1412]]], [[[63.374, 80.7], [62.5205, 80.8218], [63.1156, 80.9668], [64.0958, 80.9983], [64.3101, 81.1752], [64.802, 81.1971], [65.3822, 81.0567], [65.4372, 80.9306], [64.5481, 80.7555], [63.374, 80.7]]], [[[58.6226, 81.0416], [58.8601, 80.7795], [57.9377, 80.7934], [57.405, 80.9151], [58.0495, 81.1184], [58.6226, 81.0416]]], [[[54.719, 81.1159], [55.4706, 81.0198], [56.1701, 81.0292], [57.694, 80.7923], [56.8146, 80.6636], [55.7124, 80.6372], [55.1172, 80.7519], [54.0665, 80.8136], [54.719, 81.1159]]], [[[61.1408, 80.9503], [60.5869, 81.0877], [61.4573, 81.104], [61.1408, 80.9503]]], [[[50.2779, 80.9273], [50.8012, 80.9142], [51.7037, 80.6876], [50.9611, 80.5404], [49.8459, 80.4976], [49.5859, 80.3766], [48.896, 80.3693], [49.0106, 80.2075], [48.4669, 80.1101], [47.6322, 80.1121], [46.9909, 80.1829], [46.6446, 80.3003], [47.6563, 80.5005], [48.4029, 80.5688], [49.1855, 80.5586], [49.2445, 80.8214], [50.2779, 80.9273]]], [[[62.168, 80.8347], [62.0756, 80.617], [61.0512, 80.4185], [59.3044, 80.5216], [59.5921, 80.8165], [60.4816, 80.8043], [61.5976, 80.8929], [62.168, 80.8347]]], [[[47.4418, 80.8536], [47.6004, 80.742], [47.3038, 80.6061], [46.1413, 80.4468], [45.1243, 80.6523], [46.799, 80.7553], [47.4418, 80.8536]]], [[[57.9563, 80.1232], [57.3921, 80.1392], [57.0752, 80.494], [58.4805, 80.4647], [58.398, 80.3187], [57.9563, 80.1232]]], [[[53.5214, 80.1851], [52.8565, 80.1733], [52.2132, 80.2636], [53.1858, 80.4126], [53.8516, 80.2683], [53.5214, 80.1851]]], [[[57.0787, 80.3509], [57.0801, 80.0948], [56.2008, 80.0765], [56.0245, 80.3413], [57.0787, 80.3509]]], [[[97.6745, 80.1582], [99.2951, 80.0164], [100.0612, 79.7772], [99.7816, 79.6282], [99.6808, 79.3233], [99.1673, 79.3064], [99.9294, 78.9615], [99.4393, 78.8341], [98.4109, 78.7877], [97.5555, 78.8266], [96.3472, 79.0159], [95.7963, 79.0015], [94.6524, 79.1275], [94.2187, 79.4023], [93.0709, 79.4953], [93.4046, 79.6316], [94.2569, 79.8297], [94.3474, 79.9421], [94.9871, 80.0968], [96.4165, 80.1043], [97.6745, 80.1582]]], [[[51.4093, 79.9443], [50.4541, 79.9245], [50.9361, 80.0943], [51.4093, 79.9443]]], [[[92.6833, 79.6852], [92.1538, 79.6846], [91.1262, 79.905], [91.4258, 80.0493], [92.1733, 80.0455], [93.8033, 79.9046], [93.6035, 79.8167], [92.6833, 79.6852]]], [[[76.2491, 79.6511], [77.3601, 79.5568], [76.6495, 79.4933], [76.2491, 79.6511]]], [[[102.8849, 79.2541], [102.9506, 79.0558], [103.6727, 79.1499], [104.4522, 78.8801], [105.146, 78.8188], [105.3125, 78.4998], [104.8326, 78.3527], [103.7194, 78.2581], [101.2043, 78.192], [100.0821, 77.975], [99.2871, 78.038], [100.019, 78.3389], [100.2841, 78.6792], [100.8753, 78.7835], [100.9016, 78.9801], [101.5905, 79.3504], [102.7898, 79.3921], [102.8849, 79.2541]]], [[[130.6871, 42.3027], [130.5269, 42.5353], [130.5766, 42.6232], [130.4247, 42.7271], [130.5771, 42.8118], [131.0685, 42.9024], [131.2619, 43.4332], [131.1825, 43.5057], [131.174, 43.7049], [131.2554, 44.0716], [131.0608, 44.6597], [130.9677, 44.8], [131.0822, 44.9101], [131.4471, 44.9842], [131.6539, 45.2053], [131.8519, 45.3269], [131.9775, 45.2439], [132.9358, 45.0299], [133.1135, 45.1307], [133.1135, 45.3216], [133.1858, 45.4947], [133.4366, 45.6048], [133.513, 45.8787], [133.6856, 46.0087], [133.7007, 46.1397], [133.8614, 46.2476], [133.8668, 46.4992], [134.0225, 46.7132], [134.0386, 46.8583], [134.2023, 47.1282], [134.1677, 47.3022], [134.2906, 47.4136], [134.4833, 47.4474], [134.7522, 47.7155], [134.5659, 48.0227], [134.6693, 48.1532], [134.5637, 48.3218], [134.2933, 48.3733], [133.8423, 48.2739], [133.4686, 48.0972], [133.1441, 48.1057], [132.8772, 47.9792], [132.7073, 47.9472], [132.5617, 47.7684], [132.3801, 47.7297], [131.7853, 47.6805], [131.3192, 47.7279], [131.0027, 47.6915], [130.712, 48.1279], [130.8043, 48.3414], [130.5522, 48.6024], [130.617, 48.7731], [130.5531, 48.8612], [130.1962, 48.8916], [130.0373, 48.9722], [129.7926, 49.1987], [129.5339, 49.3235], [129.0651, 49.3748], [128.7704, 49.4946], [128.7691, 49.577], [128.5268, 49.5943], [127.9998, 49.5685], [127.7113, 49.6715], [127.5027, 49.8735], [127.5124, 50.0717], [127.5901, 50.2091], [127.3952, 50.2985], [127.306, 50.4534], [127.3069, 50.708], [126.9247, 51.1002], [126.8053, 51.5057], [126.701, 51.703], [126.5106, 51.9258], [126.313, 52.3997], [126.016, 52.6103], [126.048, 52.7394], [125.8718, 52.8715], [125.728, 52.8909], [125.649, 53.0422], [125.2255, 53.1658], [124.9711, 53.1974], [124.8122, 53.1339], [124.466, 53.2298], [124.2915, 53.341], [123.9945, 53.4055], [123.6079, 53.5465], [123.1543, 53.5447], [122.516, 53.457], [122.338, 53.485], [121.4053, 53.3169], [120.9854, 53.2845], [120.704, 53.1718], [120.4213, 52.9681], [120.0945, 52.7872], [120.0675, 52.6329], [120.36, 52.6269], [120.656, 52.5666], [120.6654, 52.2998], [120.7497, 52.0965], [120.5104, 51.8486], [120.067, 51.6007], [119.8132, 51.2671], [119.7461, 51.1077], [119.5734, 50.9468], [119.4456, 50.7029], [119.2809, 50.5611], [119.1921, 50.3798], [119.3461, 50.279], [119.2601, 50.0663], [118.9795, 49.9789], [118.7561, 49.9629], [118.4517, 49.8444], [117.8733, 49.5135], [117.4774, 49.6094], [117.2456, 49.6249], [116.6832, 49.8238], [116.5509, 49.9203], [116.1345, 50.0109], [115.7177, 49.8806], [115.2743, 49.9489], [115.0036, 50.1387], [114.7429, 50.2337], [114.2969, 50.2743], [113.8809, 50.1012], [113.5742, 50.0071], [113.1641, 49.7971], [113.0557, 49.6162], [112.8063, 49.5237], [112.4951, 49.5324], [112.0796, 49.4243], [111.3365, 49.3559], [110.8278, 49.1662], [110.6312, 49.1375], [110.4279, 49.2201], [110.1997, 49.1704], [109.5286, 49.2698], [109.2365, 49.3348], [108.6137, 49.3228], [108.4069, 49.3963], [108.034, 49.594], [107.9368, 49.6911], [107.9479, 49.9247], [107.631, 49.9831], [107.2332, 49.9894], [106.9411, 50.1966], [106.7112, 50.3125], [106.218, 50.3045], [105.8754, 50.4055], [105.3835, 50.4736], [105.0945, 50.39], [104.4664, 50.3061], [104.1797, 50.1694], [103.8028, 50.176], [103.6329, 50.1387], [103.3043, 50.2004], [103.1618, 50.2908], [102.6833, 50.387], [102.2883, 50.585], [102.3166, 50.7184], [102.215, 50.8294], [102.1115, 51.3534], [101.571, 51.4673], [101.3813, 51.4526], [100.4688, 51.7261], [99.9214, 51.7556], [99.7195, 51.8717], [99.407, 51.9236], [98.8486, 52.0701], [98.6403, 51.8011], [98.3528, 51.7176], [98.22, 51.5057], [97.9469, 51.3483], [97.8254, 50.9852], [97.9533, 50.8551], [98.03, 50.6447], [98.2795, 50.5333], [98.2502, 50.3025], [98.1033, 50.0779], [97.8538, 49.9468], [97.5893, 49.9114], [97.3597, 49.7414], [97.2088, 49.7308], [96.986, 49.8828], [96.5056, 49.9187], [96.3152, 49.9012], [96.0654, 49.9987], [95.8519, 50.0128], [95.5229, 49.9112], [95.0444, 49.9616], [94.9303, 50.0437], [94.6147, 50.0237], [94.3545, 50.2219], [94.2512, 50.5564], [93.1032, 50.6039], [92.9412, 50.7781], [92.7792, 50.7786], [92.6265, 50.6883], [92.3549, 50.8642], [92.1923, 50.7007], [91.8044, 50.6936], [91.341, 50.4701], [91.0214, 50.4155], [90.5167, 50.2133], [90.0049, 50.0692], [89.9774, 49.9843], [89.644, 49.903], [89.6542, 49.7174], [89.1801, 49.5324], [88.8316, 49.4485], [88.6332, 49.4862], [88.1925, 49.4518], [88.1156, 49.2562], [87.8142, 49.1624], [87.3229, 49.0858], [87.2337, 49.2161], [86.9531, 49.3219], [86.812, 49.488], [86.6144, 49.6098], [86.61, 49.7692], [86.1807, 49.4993], [85.3715, 49.624], [85.2099, 49.6649], [85.0009, 49.8941], [84.9893, 50.0615], [84.6071, 50.2024], [84.2578, 50.2883], [84.1761, 50.5204], [83.9454, 50.7746], [83.7176, 50.8871], [83.3571, 50.9945], [83.1601, 50.9892], [83.0194, 50.8973], [82.7611, 50.8933], [82.4938, 50.7275], [82.0983, 50.7109], [81.9336, 50.7664], [81.4657, 50.7398], [81.3881, 50.9566], [81.1248, 50.9464], [81.1275, 51.1912], [80.8772, 51.2815], [80.6503, 51.2773], [80.4483, 51.1834], [80.4234, 50.9464], [80.2202, 50.9117], [79.9862, 50.7746], [79.4687, 51.493], [78.4756, 52.6385], [77.8601, 53.2693], [77.7042, 53.3791], [76.5758, 53.9424], [76.4222, 54.1135], [76.6544, 54.1453], [76.7888, 54.3219], [76.2664, 54.312], [75.6569, 54.106], [75.4372, 54.0898], [75.3769, 53.9702], [75.0524, 53.8268], [74.834, 53.8257], [74.4518, 53.6472], [74.403, 53.5045], [74.0687, 53.6115], [73.6429, 53.5762], [73.4699, 53.469], [73.2856, 53.5984], [73.3993, 53.8115], [73.679, 53.9295], [73.6181, 54.0674], [73.3807, 53.9628], [73.1192, 53.9808], [72.9142, 54.1073], [72.6225, 54.1344], [72.5862, 53.9959], [72.404, 53.9644], [72.3873, 54.1231], [72.2692, 54.2723], [72.0047, 54.2056], [71.3366, 54.1584], [71.0933, 54.2123], [71.1856, 54.5994], [70.9099, 55.1281], [70.7382, 55.3052], [70.4865, 55.2823], [70.1824, 55.1624], [69.4931, 55.3569], [68.9772, 55.3895], [68.5249, 55.2048], [68.2063, 55.1609], [68.2439, 55.0524], [68.074, 54.9596], [67.6936, 54.8724], [66.2224, 54.6673], [65.4767, 54.6234], [65.2374, 54.5161], [65.1576, 54.3644], [64.9268, 54.3965], [64.6497, 54.3521], [64.4611, 54.3841], [64.0039, 54.2671], [63.1911, 54.171], [63.0739, 54.1053], [62.6327, 54.0694], [62.4991, 54.0132], [62.0401, 54.0026], [61.9287, 53.9464], [61.3339, 54.0491], [61.1435, 53.9637], [61.1133, 53.7535], [60.9797, 53.6217], [61.2478, 53.5509], [61.1994, 53.2872], [61.6597, 53.2284], [62.0148, 53.1079], [61.974, 52.9436], [61.401, 52.996], [61.0476, 52.9725], [60.8021, 52.7448], [60.8212, 52.5699], [60.9797, 52.3948], [60.9375, 52.2805], [60.6703, 52.1509], [60.4257, 52.1256], [60.0657, 51.9764], [60.0675, 51.8908], [60.3875, 51.7731], [60.4647, 51.6512], [61.3632, 51.4419], [61.5545, 51.3245], [61.5852, 51.2298], [61.3894, 50.8609], [60.9424, 50.6956], [60.6378, 50.6638], [60.288, 50.7043], [60.1122, 50.834], [59.9552, 50.7992], [59.8122, 50.5819], [59.5228, 50.493], [59.4522, 50.6203], [58.8837, 50.6945], [58.5476, 50.971], [58.3594, 51.0638], [57.8387, 51.0917], [57.6535, 50.925], [57.4422, 50.8889], [57.179, 51.036], [57.0117, 51.0651], [56.6202, 50.9808], [56.4915, 51.0196], [56.1439, 50.8447], [56.0498, 50.7135], [55.7976, 50.6021], [55.5424, 50.6017], [55.1953, 50.7446], [54.727, 50.998], [54.6063, 50.88], [54.6503, 50.6603], [54.4713, 50.5839], [54.4216, 50.7804], [54.0416, 51.1152], [53.6883, 51.2518], [53.5347, 51.3996], [53.3381, 51.4824], [53.0385, 51.4637], [52.571, 51.4817], [52.3309, 51.6812], [52.0073, 51.6728], [51.6091, 51.4839], [51.3445, 51.4752], [51.1635, 51.6475], [50.7941, 51.7292], [50.2468, 51.2895], [49.8225, 51.1319], [49.498, 51.0835], [49.3235, 50.8518], [48.8086, 50.6012], [48.6551, 50.6199], [48.7008, 50.3537], [48.8433, 50.0131], [48.7589, 49.9283], [48.4344, 49.8284], [48.2249, 49.9319], [47.8497, 50.2823], [47.706, 50.3779], [47.5036, 50.4028], [47.3264, 50.2734], [47.2953, 50.0586], [46.9917, 49.8526], [46.8896, 49.697], [46.8022, 49.367], [47.018, 49.1999], [47.0144, 49.0984], [46.7027, 48.8055], [46.6091, 48.574], [46.661, 48.4124], [47.0041, 48.2846], [47.1192, 48.1269], [47.0934, 47.9477], [47.2923, 47.7408], [47.4818, 47.8039], [48.1099, 47.7453], [48.5524, 47.3209], [48.9595, 46.7744], [48.7762, 46.7105], [48.6053, 46.766], [48.5094, 46.6502], [48.6102, 46.5662], [49.2321, 46.3372], [49.0797, 46.1894], [48.6839, 46.086], [48.6896, 45.8889], [48.4872, 45.9351], [48.1591, 45.7371], [47.8303, 45.663], [47.701, 45.6861], [47.5244, 45.6017], [47.4889, 45.4552], [47.2216, 45.0242], [47.1147, 44.9061], [46.7551, 44.6566], [46.7529, 44.4205], [47.0237, 44.3433], [47.2301, 44.1923], [47.3615, 43.9935], [47.4289, 43.7799], [47.6278, 43.8061], [47.5088, 43.5096], [47.5128, 43.2189], [47.4631, 43.0351], [47.7091, 42.8109], [47.8223, 42.6134], [48.2284, 42.181], [48.3838, 41.9533], [48.5729, 41.8446], [48.3914, 41.6018], [48.0562, 41.4589], [47.8609, 41.2129], [47.5205, 41.2289], [47.2612, 41.315], [47.2052, 41.4557], [46.7494, 41.8127], [46.5522, 41.8122], [46.4298, 41.8908], [46.2128, 41.9897], [45.9539, 42.0354], [45.6388, 42.205], [45.7275, 42.4749], [45.5628, 42.5357], [45.3436, 42.53], [45.1603, 42.6751], [44.8505, 42.747], [44.5059, 42.7488], [43.9572, 42.5663], [43.7598, 42.5939], [43.7824, 42.747], [43.5578, 42.8447], [43.089, 42.9889], [42.9919, 43.0915], [42.7605, 43.1696], [42.5661, 43.1549], [42.4192, 43.2242], [42.0499, 43.19], [41.5807, 43.2193], [41.3583, 43.3334], [41.0831, 43.3746], [40.6481, 43.534], [40.519, 43.5119], [40.1501, 43.57], [39.9783, 43.4199], [39.5165, 43.728], [39.3293, 43.8971], [38.7171, 44.2882], [38.1813, 44.4196], [37.8515, 44.6988], [37.5724, 44.6709], [37.4112, 44.7352], [37.2048, 44.9718], [36.9443, 45.0695], [36.6508, 45.1262], [36.6193, 45.1853], [36.9411, 45.2896], [37.6474, 45.3771], [37.6122, 45.5648], [37.8409, 45.7997], [37.9332, 46.0016], [38.133, 46.0029], [38.1835, 46.0949], [38.4921, 46.0904], [38.0775, 46.3944], [37.9137, 46.4065], [37.7664, 46.636], [37.9678, 46.6182], [38.2297, 46.7012], [38.501, 46.6635], [38.4389, 46.813], [38.801, 46.9063], [39.2933, 47.1056], [39.1957, 47.269], [39.0239, 47.2721], [38.9285, 47.1757], [38.6683, 47.1437], [38.4849, 47.1757], [38.2142, 47.0914], [38.2808, 47.2765], [38.2014, 47.3209], [38.2875, 47.5592], [38.719, 47.7142], [38.9005, 47.8553], [39.3909, 47.8336], [39.7359, 47.8446], [39.885, 48.1683], [39.9609, 48.2379], [39.8358, 48.5429], [39.6449, 48.5913], [39.7926, 48.8077], [39.6866, 49.0079], [39.8899, 49.064], [40.0701, 49.2003], [40.126, 49.3688], [40.0306, 49.5967], [39.7807, 49.5721], [39.4629, 49.7281], [39.303, 49.7421], [39.1748, 49.8559], [38.9182, 49.8246], [38.648, 49.953], [38.4513, 49.964], [38.2587, 50.0523], [38.0469, 49.9201], [37.7041, 50.1089], [37.5826, 50.2919], [37.4228, 50.4115], [36.7591, 50.2919], [36.306, 50.2805], [36.1164, 50.4086], [35.8901, 50.4372], [35.6739, 50.346], [35.4115, 50.5398], [35.4403, 50.7278], [35.3121, 51.0438], [35.158, 51.0609], [35.0639, 51.2034], [34.7123, 51.1723], [34.2808, 51.3117], [34.1211, 51.6793], [34.3977, 51.7804], [34.1131, 51.9795], [33.9222, 52.2514], [33.7353, 52.3449], [33.1486, 52.3404], [32.8999, 52.2563], [32.508, 52.3084], [32.3628, 52.272], [32.2829, 52.114], [31.974, 52.0465], [31.7635, 52.1011], [31.5771, 52.3122], [31.535, 52.7983], [31.2588, 53.0167], [31.4178, 53.196], [31.6681, 53.2009], [31.8497, 53.1061], [32.1422, 53.0912], [32.7042, 53.3363], [32.6856, 53.4481], [32.4698, 53.5469], [32.4503, 53.6929], [32.2004, 53.7812], [31.7543, 53.8105], [31.792, 54.0558], [31.4035, 54.1959], [31.1847, 54.4529], [31.1212, 54.6484], [30.799, 54.7834], [30.83, 54.915], [30.9779, 55.0506], [30.8146, 55.2788], [30.9069, 55.5699], [30.6254, 55.6663], [30.4563, 55.7868], [30.2334, 55.8452], [29.9369, 55.8454], [29.4824, 55.6845], [29.3532, 55.7843], [29.375, 55.9386], [29.0873, 56.0212], [28.7948, 55.9426], [28.564, 56.0919], [28.2844, 56.056], [28.1481, 56.143], [28.2022, 56.2604], [28.1032, 56.5456], [27.8062, 56.867], [27.6394, 56.8457], [27.8147, 57.1669], [27.797, 57.3169], [27.3518, 57.5282], [27.5422, 57.7994], [27.753, 57.8411], [27.488, 58.2701], [27.5315, 58.4353], [27.4272, 58.7331], [27.5129, 58.8863], [27.7575, 59.052], [27.8978, 59.2776], [28.1512, 59.3743], [28.0127, 59.4842], [28.014, 59.7248], [28.3345, 59.6926], [28.4539, 59.8142], [28.9471, 59.8289], [29.1473, 59.9998], [29.6697, 59.9556], [30.1226, 59.8737], [29.7212, 60.1953], [29.0692, 60.1915], [28.643, 60.3753], [28.6506, 60.611], [28.513, 60.6774], [28.1791, 60.5711], [27.7978, 60.5362], [28.4073, 60.8969], [29.2516, 61.2877], [29.6901, 61.5461], [30.5655, 62.1276], [30.9357, 62.3237], [31.2855, 62.5679], [31.5341, 62.8855], [31.1808, 63.2082], [30.4186, 63.5041], [30.0555, 63.689], [30.5038, 64.0206], [30.4878, 64.2365], [30.1083, 64.3661], [29.9858, 64.5576], [30.0728, 64.7649], [29.7834, 64.8043], [29.604, 64.9685], [29.8108, 65.1079], [29.6298, 65.2239], [29.7159, 65.6246], [30.0954, 65.6816], [29.9032, 66.0911], [29.671, 66.2762], [29.4642, 66.5321], [29.0932, 66.8492], [29.0869, 66.9709], [29.9414, 67.5475], [29.9791, 67.6886], [29.344, 68.0619], [28.6851, 68.1898], [28.4708, 68.4883], [28.7522, 68.7715], [28.5662, 68.9282], [28.9657, 69.0219], [29.2099, 69.0971], [29.3883, 69.2982], [29.9942, 69.3925], [30.2277, 69.6338], [30.6152, 69.5325], [30.8607, 69.5383], [30.8695, 69.7834], [31.4529, 69.6895], [31.9847, 69.9536], [32.5652, 69.8065], [32.9416, 69.7519], [32.7544, 69.6058], [32.1769, 69.674], [32.3775, 69.4791], [33.4543, 69.4282], [33.6844, 69.3102], [34.2294, 69.313], [34.8642, 69.2281], [35.2898, 69.2753], [35.8581, 69.1916], [37.7304, 68.6921], [38.43, 68.3556], [38.8317, 68.325], [39.5689, 68.0717], [40.0355, 68.0154], [40.3808, 67.8318], [40.9664, 67.7135], [41.1337, 67.2669], [41.3587, 67.2097], [41.1887, 66.8261], [40.5215, 66.4466], [40.1034, 66.2999], [39.2889, 66.1321], [38.3975, 66.0644], [37.6283, 66.1297], [37.2949, 66.2252], [36.7698, 66.2935], [36.3733, 66.3024], [35.5135, 66.3958], [34.8246, 66.6111], [33.4819, 66.7644], [33.1503, 66.8439], [32.8475, 67.0214], [32.9306, 67.0867], [32.4001, 67.1526], [32.4636, 66.9163], [32.9287, 66.7041], [33.1805, 66.6799], [33.2174, 66.5317], [33.6559, 66.4427], [33.5667, 66.321], [34.1127, 66.2254], [34.3999, 66.1284], [34.7865, 65.8644], [34.6155, 65.51], [34.4065, 65.3957], [34.8034, 64.986], [34.8695, 64.5601], [35.0355, 64.4403], [35.4319, 64.3468], [35.6472, 64.3783], [36.1466, 64.189], [36.3649, 64.0028], [37.4423, 63.8134], [37.9678, 63.9491], [38.0708, 64.0259], [37.9536, 64.3202], [37.7406, 64.397], [37.1835, 64.4085], [36.5283, 64.8473], [36.7857, 64.9871], [36.883, 65.1725], [37.1409, 65.1942], [37.5283, 65.1083], [38.0096, 64.8788], [38.4122, 64.857], [38.541, 64.7911], [39.0537, 64.7139], [39.5672, 64.5705], [39.7581, 64.577], [40.0577, 64.7707], [40.4448, 64.7787], [40.281, 64.998], [39.798, 65.3498], [39.8167, 65.5979], [40.3276, 65.7517], [40.6916, 65.9635], [41.4759, 66.1235], [41.7808, 66.2593], [42.2106, 66.5196], [42.6021, 66.4224], [43.2333, 66.4156], [43.6533, 66.2511], [44.1042, 66.0085], [44.0972, 66.2351], [44.4886, 66.6719], [44.4039, 67.0042], [44.2919, 67.0996], [43.7824, 67.2545], [44.2254, 67.9956], [44.169, 68.3272], [43.4042, 68.6086], [43.4721, 68.6799], [44.0483, 68.5489], [45.0781, 68.5782], [45.8922, 68.4797], [46.6837, 67.9705], [46.6903, 67.8489], [45.5287, 67.7577], [44.9396, 67.4776], [44.9396, 67.3509], [45.5624, 67.1855], [45.9859, 66.853], [46.6908, 66.8255], [47.4964, 66.9298], [47.7091, 67.045], [47.7681, 67.2756], [47.9083, 67.4547], [47.8746, 67.5841], [48.8778, 67.7315], [48.6958, 67.8742], [49.1552, 67.8704], [49.9312, 68.0651], [50.839, 68.3498], [51.3361, 68.4024], [51.9949, 68.5387], [52.6696, 68.4269], [52.5501, 68.5924], [52.6833, 68.7311], [53.8019, 68.9959], [53.9706, 68.8443], [53.7588, 68.6339], [53.9311, 68.4355], [53.3426, 68.3431], [53.2604, 68.2675], [53.968, 68.2273], [54.5614, 68.273], [54.8615, 68.2018], [54.9232, 68.3738], [55.4182, 68.5678], [56.0436, 68.649], [57.1267, 68.554], [58.1729, 68.8898], [58.9192, 69.0039], [59.3706, 68.7385], [59.1122, 68.6164], [59.0989, 68.4444], [59.604, 68.3512], [59.8974, 68.4219], [59.8962, 68.7062], [60.4891, 68.7289], [60.9335, 68.9868], [60.6646, 69.1102], [60.1705, 69.591], [61.0161, 69.8515], [61.7707, 69.7629], [62.6314, 69.7432], [63.3616, 69.6753], [64.1904, 69.5346], [65.0315, 69.2698], [65.736, 69.1324], [66.416, 68.9478], [67.0024, 68.8736], [67.1494, 68.754], [67.7308, 68.5136], [68.504, 68.3485], [68.8295, 68.5673], [69.1406, 68.9506], [68.7629, 68.9173], [68.5427, 68.967], [68.1174, 69.2363], [68.006, 69.48], [67.0645, 69.6937], [66.804, 69.6593], [66.9265, 70.0142], [67.2395, 70.108], [67.1467, 70.22], [67.2847, 70.7386], [66.8226, 70.7975], [66.6663, 70.9006], [66.847, 71.0638], [66.9176, 71.2824], [67.5417, 71.412], [68.2692, 71.6828], [68.6075, 72.0128], [69.039, 72.67], [69.3914, 72.9554], [69.6449, 72.8975], [70.6551, 72.8904], [71.5003, 72.9137], [71.9296, 72.8196], [72.4462, 72.7903], [72.8121, 72.6916], [72.753, 72.343], [72.6244, 72.0794], [72.2794, 71.6955], [71.9119, 71.5478], [72.0792, 71.3068], [72.5812, 71.1512], [72.7317, 70.8229], [72.7002, 70.4574], [72.4694, 70.275], [72.5297, 70.1724], [72.6159, 69.484], [72.5276, 69.0805], [72.8121, 68.8152], [73.548, 68.5744], [73.4651, 68.4309], [73.1396, 68.1814], [73.1521, 67.8651], [72.9487, 67.6962], [72.5946, 67.587], [71.8474, 67.0077], [71.3654, 66.9616], [71.5514, 66.7605], [70.9392, 66.5481], [70.7249, 66.5194], [70.3826, 66.6024], [69.877, 66.8455], [69.2178, 66.8286], [69.0137, 66.7884], [69.1943, 66.5787], [70.3396, 66.3423], [71.1452, 66.3667], [71.5656, 66.3337], [71.9171, 66.2467], [72.3215, 66.3321], [72.4174, 66.5607], [73.3415, 66.8069], [73.7921, 66.9953], [74.0744, 67.4141], [74.7696, 67.7663], [74.7425, 68.0735], [74.3914, 68.4206], [74.5796, 68.7511], [75.1247, 68.8616], [76.1075, 68.9757], [76.4591, 68.9784], [76.7352, 68.7769], [77.1116, 68.5962], [77.2385, 68.4696], [77.2483, 67.941], [77.1746, 67.7785], [77.6749, 67.5897], [77.9857, 67.5592], [78.9222, 67.589], [77.5883, 67.7519], [77.5359, 68.0076], [77.6647, 68.1904], [77.9954, 68.2595], [77.6509, 68.9029], [76.001, 69.2349], [75.42, 69.2387], [74.8148, 69.0907], [74.3626, 69.1446], [73.9773, 69.1146], [73.7757, 69.1983], [73.8912, 69.418], [73.56, 69.7073], [73.8303, 70.1758], [74.2067, 70.4454], [74.311, 70.6536], [73.5072, 71.2635], [73.0863, 71.4449], [73.6719, 71.845], [74.311, 71.9578], [74.992, 72.1449], [75.0972, 72.4207], [74.7869, 72.8118], [75.3694, 72.7967], [75.6037, 72.581], [75.7413, 72.2962], [75.5504, 72.1708], [75.2472, 71.8135], [75.5034, 71.6546], [75.2801, 71.43], [75.3321, 71.3417], [76.1107, 71.2185], [77.5896, 71.1679], [78.0682, 70.9863], [78.5258, 70.9117], [78.2124, 71.2664], [77.9083, 71.3241], [77.4808, 71.3114], [76.3121, 71.5956], [76.0325, 71.9103], [76.4218, 72.006], [76.8715, 72.033], [77.5506, 71.8421], [78.2325, 71.9522], [78.0163, 72.092], [77.4929, 72.0716], [77.4716, 72.1922], [77.9683, 72.3286], [78.4828, 72.395], [79.4221, 72.3808], [79.9538, 72.223], [80.7626, 72.0892], [80.8563, 71.9702], [81.511, 71.7463], [82.0801, 71.7068], [82.9861, 71.7487], [83.2338, 71.6682], [82.9181, 71.42], [82.3229, 71.26], [82.239, 70.9976], [82.3357, 70.8074], [82.8694, 70.9548], [83.0513, 70.8152], [83.03, 70.5806], [82.6824, 70.2177], [83.497, 70.3453], [83.7358, 70.5464], [83.579, 70.7659], [83.1512, 71.1037], [83.5711, 71.5944], [83.2005, 71.8748], [82.6455, 71.9252], [82.3193, 72.0719], [82.1835, 72.2376], [81.7929, 72.3266], [81.2829, 72.3589], [80.827, 72.4882], [80.656, 72.7119], [80.8415, 72.9492], [80.5096, 73.0861], [80.3981, 73.3569], [80.5833, 73.5685], [81.8172, 73.6588], [83.5449, 73.6666], [84.738, 73.7629], [85.4483, 73.7346], [85.6117, 73.8217], [86.5913, 73.8943], [87.0295, 73.8241], [86.3659, 73.6197], [87.12, 73.6151], [87.571, 73.8108], [87.2097, 73.8787], [86.571, 74.2438], [86.0014, 74.316], [86.1829, 74.4231], [86.6646, 74.4143], [86.7001, 74.5226], [85.7911, 74.6451], [86.2012, 74.8162], [86.6512, 74.6824], [87.4193, 74.941], [87.1408, 75.0723], [87.6713, 75.1296], [89.3102, 75.4701], [89.5952, 75.4583], [90.1851, 75.591], [91.4795, 75.6496], [91.8452, 75.7238], [93.5498, 75.854], [93.1782, 75.959], [93.6484, 76.0543], [94.5757, 76.1516], [95.9197, 76.1131], [95.9859, 76.0096], [96.5083, 76.0056], [96.879, 75.931], [97.2053, 76.0187], [98.6621, 76.2427], [99.5627, 76.1093], [99.8256, 76.1359], [98.8054, 76.4806], [100.3223, 76.4791], [100.8438, 76.5252], [101.099, 76.7041], [100.9202, 76.8224], [100.9898, 76.9904], [101.5176, 77.1981], [103.1312, 77.6265], [104.0145, 77.7304], [105.8945, 77.4889], [106.0596, 77.3905], [104.9121, 77.1749], [105.712, 77.0015], [106.9415, 77.0343], [107.4299, 76.9265], [106.6388, 76.5734], [107.6243, 76.5101], [108.0278, 76.7185], [109.3692, 76.7492], [109.9814, 76.7118], [110.4715, 76.7584], [111.1151, 76.7229], [111.7862, 76.6036], [112.6194, 76.3836], [112.7983, 76.1297], [113.4278, 76.1121], [113.564, 75.8915], [113.8712, 75.856], [113.6199, 75.5928], [112.6291, 75.8354], [112.9558, 75.5719], [113.726, 75.4505], [113.6137, 75.2929], [112.9248, 75.0151], [111.8683, 74.7401], [111.2988, 74.6584], [109.8402, 74.3219], [109.8105, 74.1692], [109.0749, 74.0323], [108.1995, 73.694], [107.7654, 73.625], [107.271, 73.621], [106.6793, 73.3307], [106.1887, 73.3081], [105.6773, 72.9592], [106.0666, 72.9498], [106.4782, 73.1394], [107.7504, 73.1731], [108.0011, 73.2355], [109.0901, 73.3785], [109.331, 73.4874], [109.8553, 73.4726], [110.4288, 73.6288], [110.3884, 73.726], [109.7528, 73.7227], [109.8691, 73.9306], [110.2615, 74.0174], [111.056, 73.9393], [111.4005, 73.8277], [112.1471, 73.7089], [112.7956, 73.746], [113.0327, 73.9138], [113.4161, 73.6477], [113.1569, 73.4595], [114.0607, 73.5846], [114.8158, 73.6073], [115.3378, 73.7025], [116.4955, 73.676], [117.3086, 73.5991], [118.4504, 73.5897], [118.4304, 73.2466], [118.9604, 73.1172], [119.7505, 72.9791], [120.5979, 72.9812], [120.997, 72.9368], [121.8861, 72.961], [122.5373, 72.8778], [122.6154, 73.028], [123.1605, 72.955], [123.6221, 73.1934], [123.3838, 73.3474], [123.3053, 73.5329], [124.3883, 73.7549], [124.7962, 73.7118], [125.617, 73.5207], [126.2544, 73.5483], [126.2576, 73.4198], [126.5528, 73.3349], [127.0312, 73.5474], [127.7406, 73.4816], [128.8885, 73.1902], [129.0536, 73.0453], [129.0172, 72.8724], [129.2503, 72.7053], [128.6332, 72.5501], [129.1167, 72.4858], [129.4118, 72.3156], [129.2836, 72.092], [128.9351, 72.0794], [128.4752, 72.2457], [127.8413, 72.3082], [128.359, 72.0883], [128.9116, 71.7553], [129.2103, 71.9169], [129.4606, 71.7394], [128.9489, 71.7077], [129.762, 71.1195], [130.2814, 70.9472], [130.6685, 70.8882], [131.1572, 70.7421], [131.562, 70.9011], [131.9065, 71.2027], [132.2274, 71.6428], [132.5621, 71.8952], [133.4264, 71.491], [134.1029, 71.3789], [134.7026, 71.3867], [135.0222, 71.515], [135.8847, 71.6307], [136.4062, 71.5707], [137.3154, 71.3594], [137.6505, 71.2083], [138.0908, 71.3075], [137.9182, 71.384], [138.1183, 71.5663], [139.0047, 71.5561], [139.2094, 71.4449], [139.984, 71.4914], [139.695, 71.7003], [139.64, 71.9984], [139.8473, 72.1486], [139.6169, 72.2257], [139.1761, 72.1635], [139.1407, 72.3297], [139.6013, 72.496], [140.4506, 72.4931], [141.0791, 72.587], [140.8083, 72.8908], [141.3099, 72.8577], [142.0615, 72.7209], [143.5156, 72.6982], [145.4857, 72.5421], [146.2531, 72.4423], [146.2349, 72.3497], [144.7762, 72.3824], [144.3608, 72.2654], [144.4708, 72.1748], [145.0391, 72.2598], [146.594, 72.3024], [146.8071, 72.2365], [146.4019, 72.0354], [146.2305, 72.1376], [145.7097, 72.2063], [145.7569, 71.9413], [145.1257, 71.9271], [144.9897, 71.7534], [145.1886, 71.6959], [145.8048, 71.7465], [146.3681, 71.922], [147.1271, 72.292], [147.4338, 72.3409], [148.402, 72.312], [149.5015, 72.1644], [149.9632, 71.9922], [149.881, 71.843], [149.0488, 71.7958], [148.9231, 71.7147], [149.857, 71.6015], [150.0608, 71.5108], [150.5997, 71.5201], [150.9677, 71.3805], [151.5825, 71.2871], [152.0929, 71.0234], [151.7622, 70.9826], [152.5088, 70.8345], [153.7944, 70.88], [155.0293, 71.0343], [155.5957, 71.0387], [155.8953, 71.0955], [157.4472, 71.0744], [158.0372, 71.0393], [158.7021, 70.935], [159.3506, 70.7908], [159.7279, 70.6496], [160.0061, 70.3096], [159.7292, 69.8702], [159.8327, 69.785], [160.9108, 69.6062], [161.0355, 69.0982], [161.31, 68.9823], [161.3406, 68.9051], [161.1288, 68.6539], [161.2301, 68.6539], [161.3654, 68.823], [161.5656, 68.9051], [161.4799, 69.2017], [161.5367, 69.3797], [161.9451, 69.5452], [162.3757, 69.6491], [163.2014, 69.7148], [164.1597, 69.7192], [164.5135, 69.6092], [165.7608, 69.5845], [166.8204, 69.4995], [167.6283, 69.7403], [167.9501, 69.6992], [168.1499, 69.5774], [168.303, 69.2716], [169.3106, 69.0796], [169.6098, 68.7862], [170.5376, 68.8254], [170.9952, 69.0454], [170.9965, 69.1346], [170.5823, 69.5834], [170.1607, 69.6265], [170.5029, 69.8566], [170.4869, 70.1076], [171.2469, 70.0761], [172.5595, 69.9682], [173.2773, 69.8237], [173.4389, 69.9469], [173.9479, 69.8741], [175.2956, 69.8602], [175.751, 69.9041], [176.1075, 69.8604], [176.9243, 69.646], [177.3943, 69.6116], [177.9337, 69.4955], [178.8485, 69.3872], [180, 68.9835], [180, 65.0672], [179.8274, 65.0342], [179.4483, 64.822], [179.1499, 64.7816], [178.5197, 64.6029], [178.2853, 64.6722], [177.7486, 64.717], [177.223, 64.8617], [176.2469, 64.843], [176.3512, 64.7052], [176.7311, 64.6249], [177.0499, 64.7192], [177.4671, 64.7368], [177.433, 64.4445], [177.9532, 64.2223], [178.3816, 64.2609], [178.4512, 64.0114], [178.6501, 63.9653], [178.7313, 63.6669], [178.7065, 63.5216], [179.0279, 63.2823], [179.3324, 63.1902], [179.2596, 63.0082], [179.5108, 62.8629], [179.5704, 62.6876], [179.1771, 62.4691], [179.1206, 62.3205], [178.0194, 62.547], [177.3513, 62.5874], [177.3597, 62.737], [177.0236, 62.7772], [176.9633, 62.6933], [177.1596, 62.5611], [176.7028, 62.5057], [176.3285, 62.3462], [175.2682, 62.1025], [175.1922, 62.0344], [174.7976, 61.9389], [174.5144, 61.8237], [174.1388, 61.7951], [173.8223, 61.6794], [173.6234, 61.7161], [173.1321, 61.4067], [172.8565, 61.4693], [172.7308, 61.3144], [172.3926, 61.0618], [172.0672, 60.9157], [171.7293, 60.8431], [170.9495, 60.5229], [170.6081, 60.435], [170.3511, 59.9656], [169.9827, 60.067], [169.8873, 60.2179], [169.6182, 60.4381], [169.2267, 60.5959], [168.6705, 60.5628], [168.1374, 60.574], [167.2265, 60.4064], [166.9643, 60.3069], [166.3317, 59.8724], [166.1359, 59.9794], [166.3521, 60.4847], [166.1803, 60.4805], [165.9419, 60.3569], [165.2854, 60.1349], [165.0843, 60.0985], [165.0191, 59.8608], [164.8544, 59.8408], [164.6697, 59.9976], [164.3768, 60.0582], [164.1349, 59.9844], [163.7802, 60.0411], [163.41, 59.8349], [163.2689, 59.5199], [163.2729, 59.3027], [163.0043, 59.0201], [162.4529, 58.7087], [162.1418, 58.4475], [161.9602, 58.0768], [162.0397, 57.9184], [162.4671, 57.7661], [162.5222, 57.9041], [162.7183, 57.9461], [163.1449, 57.8373], [163.2138, 57.6869], [163.1086, 57.5648], [162.7793, 57.3577], [162.8027, 56.8115], [162.9221, 56.7228], [163.2563, 56.6881], [163.2431, 56.5644], [163.3354, 56.2325], [163.0473, 56.0447], [162.8404, 56.0656], [162.6283, 56.2322], [162.7131, 56.3308], [162.9754, 56.4491], [162.6713, 56.4902], [162.4884, 56.3992], [162.5284, 56.2606], [162.0849, 56.0897], [161.7756, 55.655], [161.7294, 55.358], [161.8244, 55.1389], [162.0801, 54.8861], [162.1058, 54.7521], [161.7259, 54.533], [161.2939, 54.5206], [161.1297, 54.5983], [160.7728, 54.5414], [160.0746, 54.1892], [159.9219, 54.0084], [159.8437, 53.7837], [159.956, 53.5523], [159.8974, 53.3807], [160.0022, 53.2748], [159.5859, 53.2377], [158.9519, 53.0475], [158.6088, 52.8735], [158.481, 52.6267], [158.4637, 52.3049], [158.1037, 51.8095], [157.8232, 51.6053], [157.531, 51.4799], [157.2021, 51.2127], [156.7476, 50.9692], [156.6708, 51.2269], [156.5434, 51.3117], [156.5004, 51.4751], [156.4897, 51.9132], [156.3645, 52.5093], [156.2287, 52.6262], [156.1101, 52.8662], [156.0986, 53.0065], [155.9046, 53.9282], [155.7067, 54.5215], [155.6201, 54.8646], [155.5549, 55.3485], [155.7164, 56.0722], [155.9827, 56.6952], [156.0676, 56.7815], [156.7285, 57.1522], [156.9766, 57.4663], [156.9483, 57.6159], [156.7916, 57.7479], [156.9855, 57.8302], [157.2168, 57.7768], [157.4503, 57.7994], [157.6664, 58.0198], [157.9746, 57.9858], [158.2102, 58.0253], [158.687, 58.2815], [159.0368, 58.424], [159.5917, 58.8037], [159.8472, 59.1271], [160.3502, 59.3941], [160.5473, 59.5475], [160.8554, 59.6269], [161.2189, 59.8455], [161.4493, 60.0273], [161.7534, 60.1523], [162.0037, 60.4202], [162.2665, 60.5366], [162.7131, 60.6594], [162.9732, 60.7828], [163.3523, 60.8003], [163.71, 60.9169], [163.5538, 61.0256], [163.6195, 61.1113], [164.0053, 61.3439], [163.8047, 61.4612], [163.8827, 61.6402], [164.0195, 61.7107], [164.0741, 62.045], [164.2072, 62.2922], [164.5983, 62.4705], [165.1243, 62.4114], [165.0439, 62.5171], [164.5672, 62.6755], [164.2556, 62.6966], [163.3318, 62.5508], [163.3022, 62.373], [163.1636, 62.2596], [163.0092, 61.7915], [163.2577, 61.6994], [163.085, 61.5705], [162.6989, 61.6526], [162.3926, 61.6622], [162.1884, 61.5408], [161.0369, 60.963], [160.7666, 60.7533], [160.482, 60.74], [160.1735, 60.6385], [160.226, 60.8316], [160.379, 61.0254], [159.9494, 61.1286], [159.8832, 61.2917], [160.1625, 61.5374], [160.3174, 61.7933], [160.1824, 61.9027], [159.5525, 61.7194], [159.2951, 61.9141], [159.0767, 61.9223], [158.5472, 61.8108], [158.3336, 61.8257], [158.07, 61.7536], [157.4694, 61.7989], [157.0841, 61.6757], [156.6801, 61.4806], [156.63, 61.2724], [156.056, 60.9957], [155.8531, 60.7772], [155.4279, 60.5498], [154.9707, 60.3766], [154.5783, 60.095], [154.4407, 59.8837], [154.2929, 59.8333], [154.2689, 59.6584], [154.1499, 59.5286], [154.3577, 59.4815], [154.5827, 59.5401], [154.9711, 59.4495], [155.1669, 59.3601], [155.1607, 59.1901], [154.7034, 59.1413], [154.458, 59.2165], [154.2467, 59.1086], [154.0111, 59.0756], [153.6954, 59.2247], [153.3611, 59.2148], [153.2728, 59.0914], [153.0779, 59.0818], [152.8822, 58.9391], [152.5755, 58.9542], [152.4006, 59.0263], [152.088, 58.9104], [151.7046, 58.8667], [151.3268, 58.8752], [151.1212, 59.0825], [151.5048, 59.1639], [151.9899, 59.1602], [152.1044, 59.2906], [151.7982, 59.3233], [151.4857, 59.5241], [150.9827, 59.5714], [150.7293, 59.4691], [150.4572, 59.5907], [149.6427, 59.7705], [149.2906, 59.7285], [149.0652, 59.6304], [149.205, 59.4882], [148.7087, 59.4484], [148.9142, 59.2827], [148.4912, 59.2622], [148.2573, 59.4143], [147.8747, 59.3881], [147.5147, 59.2687], [147.0401, 59.3657], [146.4444, 59.4305], [146.2735, 59.2214], [145.9317, 59.1984], [145.7564, 59.3737], [145.5544, 59.4136], [144.4833, 59.3763], [143.869, 59.4114], [143.5241, 59.3437], [143.1921, 59.3701], [142.5804, 59.2402], [142.0255, 58.9997], [141.7547, 58.7453], [141.3472, 58.528], [140.9877, 58.4168], [140.685, 58.2122], [140.447, 57.8136], [140.0022, 57.6875], [139.8615, 57.5493], [139.4437, 57.3297], [139.1815, 57.2616], [138.9657, 57.088], [138.6621, 56.9655], [138.2177, 56.6291], [138.0739, 56.4331], [137.6913, 56.1395], [136.7933, 55.6942], [136.4604, 55.5768], [136.175, 55.3522], [135.7507, 55.1607], [135.5407, 55.1138], [135.2624, 54.9434], [135.2579, 54.7314], [135.8513, 54.5839], [136.7973, 54.6209], [136.6828, 53.9313], [136.8866, 53.8394], [137.1555, 53.8217], [137.2581, 54.0252], [137.096, 54.1286], [137.3775, 54.2825], [137.5133, 54.1564], [137.3393, 54.1005], [137.6225, 53.9704], [137.6447, 53.8659], [137.3283, 53.5389], [137.7384, 53.5602], [138.2529, 53.7265], [138.379, 53.9093], [138.5693, 53.8188], [138.2924, 53.5924], [138.4508, 53.5369], [138.6608, 53.7449], [138.7216, 54.0436], [138.6958, 54.32], [139.3195, 54.193], [139.7074, 54.2771], [140.1788, 54.0516], [140.3471, 53.8126], [140.6876, 53.5964], [141.0058, 53.4945], [141.4023, 53.1841], [141.0867, 52.8975], [141.2558, 52.8402], [141.2451, 52.5501], [141.1697, 52.3684], [141.4852, 52.1786], [141.3668, 51.9207], [140.9326, 51.62], [140.8385, 51.4142], [140.6876, 51.2322], [140.6707, 51.0514], [140.5207, 50.8001], [140.4763, 50.546], [140.5353, 50.1307], [140.6245, 50.0823], [140.4626, 49.9114], [140.5172, 49.596], [140.3089, 49.0538], [140.3782, 48.9641], [140.2242, 48.7728], [140.1704, 48.5238], [139.9983, 48.3236], [139.3727, 47.8873], [139.0012, 47.3835], [138.5866, 47.0572], [138.3917, 46.7451], [138.3368, 46.5432], [138.2102, 46.4628], [138.1064, 46.2507], [137.6856, 45.8183], [137.4254, 45.6399], [137.1471, 45.3935], [136.8035, 45.1711], [136.4604, 44.8222], [136.2513, 44.6669], [136.1421, 44.4893], [135.8744, 44.3734], [135.5332, 43.9712], [135.4834, 43.835], [135.2601, 43.6845], [135.131, 43.5256], [134.6919, 43.2908], [134.1566, 43.0422], [134.0106, 42.9477], [133.7092, 42.83], [133.5867, 42.8283], [133.1601, 42.6968], [132.9968, 42.8078], [132.8635, 42.7936], [132.7091, 42.8758], [132.4814, 42.9099], [132.3037, 42.8833], [132.3344, 43.2388], [132.2332, 43.245], [132.0286, 43.119], [131.7947, 43.2553], [131.5163, 42.9965], [131.3934, 42.8225], [131.1586, 42.6258], [130.7564, 42.6733], [130.8341, 42.5229], [130.6871, 42.3027]]], [[[96.2854, 77.0266], [95.8544, 76.9749], [95.4208, 77.0566], [96.5283, 77.2054], [96.2854, 77.0266]]], [[[67.7654, 76.2375], [66.2824, 75.9836], [64.2627, 75.7197], [63.6594, 75.6687], [61.3561, 75.3149], [60.6552, 75.055], [60.2224, 74.7965], [59.24, 74.693], [59.1012, 74.5075], [58.5347, 74.4988], [58.6652, 74.2893], [58.4415, 74.1289], [57.7672, 74.0139], [57.8724, 73.8505], [56.9638, 73.3664], [56.4302, 73.2972], [55.5491, 73.3569], [55.0066, 73.4539], [54.3, 73.3509], [54.2046, 73.542], [53.7629, 73.7662], [54.6426, 73.9595], [55.3408, 74.4196], [56.0782, 74.4813], [55.5824, 74.6278], [55.9135, 74.796], [56.4985, 74.9571], [55.9979, 75.0033], [56.0356, 75.1942], [56.5705, 75.0977], [57.0876, 75.3837], [57.607, 75.3413], [57.7833, 75.5067], [58.8814, 75.8547], [60.0364, 75.9839], [60.2792, 76.0962], [61.0537, 76.1199], [61.2016, 76.2819], [61.7871, 76.291], [62.9714, 76.2367], [64.4633, 76.3783], [65.8629, 76.6133], [66.0631, 76.746], [66.8288, 76.9238], [67.535, 77.0077], [68.4859, 76.9338], [68.8734, 76.7895], [68.9, 76.5729], [68.1654, 76.2848], [67.7654, 76.2375]]], [[[96.5322, 76.2782], [96.1088, 76.1554], [95.7861, 76.2939], [96.5322, 76.2782]]], [[[140.0489, 75.829], [140.9442, 75.7005], [141.0326, 75.989], [141.4852, 76.1372], [142.4605, 75.9035], [143.1854, 75.8137], [143.6857, 75.8636], [145.2553, 75.5857], [144.727, 75.3655], [144.8837, 75.269], [144.4078, 75.1023], [144.0199, 75.0446], [143.1703, 75.117], [142.7294, 75.3375], [142.7344, 75.5447], [143.0025, 75.6598], [142.5515, 75.7209], [142.0863, 75.6607], [142.1511, 75.4577], [142.6167, 75.1332], [143.1281, 74.9703], [142.7783, 74.8677], [142.2874, 74.8499], [141.9873, 74.9914], [140.2677, 74.8469], [139.6058, 74.9456], [139.3257, 74.6868], [139.0993, 74.6566], [138.0921, 74.7974], [137.6829, 75.0086], [137.0063, 75.235], [137.2896, 75.3487], [137.2687, 75.7495], [137.7064, 75.7595], [137.5013, 75.9098], [138.2075, 76.1151], [138.814, 76.1996], [139.7435, 75.953], [140.0489, 75.829]]], [[[135.9486, 75.4095], [135.4519, 75.3895], [135.6139, 75.7664], [136.1693, 75.6057], [135.9486, 75.4095]]], [[[146.7951, 75.3709], [147.4969, 75.4405], [148.4326, 75.4135], [148.4748, 75.2723], [150.1038, 75.2193], [150.5305, 75.0999], [150.6463, 74.9445], [149.597, 74.7725], [148.0926, 74.8258], [147.6269, 74.9589], [147.144, 74.9985], [146.1484, 75.1984], [146.4386, 75.5582], [146.7512, 75.5104], [146.7951, 75.3709]]], [[[86.6531, 74.9813], [87.1244, 74.9399], [86.927, 74.8309], [86.3907, 74.8509], [86.6531, 74.9813]]], [[[113.3873, 74.4005], [113.2591, 74.2727], [112.7823, 74.0951], [112.196, 74.1461], [111.6429, 74.2729], [111.9492, 74.3888], [112.0845, 74.549], [112.9519, 74.4795], [113.3873, 74.4005]]], [[[141.0103, 73.9995], [140.5073, 73.9187], [140.1833, 74.0045], [140.1016, 74.1844], [140.4075, 74.2664], [140.8492, 74.2738], [141.0972, 74.1679], [141.0103, 73.9995]]], [[[136.1976, 73.9136], [135.4026, 74.2016], [135.6286, 74.2199], [136.2593, 73.985], [136.1976, 73.9136]]], [[[142.1849, 73.8958], [142.6394, 73.803], [143.3438, 73.5686], [143.4911, 73.2464], [143.1934, 73.2207], [141.5967, 73.3108], [140.6627, 73.4519], [140.5935, 73.5647], [141.0848, 73.8658], [142.1849, 73.8958]]], [[[70.6739, 73.095], [70.3804, 73.0482], [69.9201, 73.0846], [69.996, 73.3594], [70.3497, 73.4777], [70.9401, 73.5145], [71.5896, 73.2832], [71.6259, 73.174], [70.6739, 73.095]]], [[[55.32, 73.3083], [56.4293, 73.2011], [56.1887, 73.0331], [56.0836, 72.7894], [55.7236, 72.7663], [55.6166, 72.5992], [55.356, 72.4652], [55.518, 72.2206], [55.2978, 71.9353], [56.0431, 71.3457], [56.4541, 71.1073], [56.895, 70.9271], [57.6252, 70.7288], [57.1458, 70.589], [56.649, 70.6465], [56.4347, 70.5631], [56.1426, 70.6578], [55.6871, 70.6922], [54.6009, 70.68], [53.7225, 70.8146], [53.588, 71.0522], [53.8863, 71.1962], [53.4099, 71.3401], [53.3638, 71.5416], [52.9088, 71.495], [52.4188, 71.537], [51.8124, 71.4913], [51.5905, 71.5711], [51.4386, 71.7769], [51.5824, 72.0712], [51.8857, 72.1533], [52.2519, 72.1298], [52.6221, 72.3009], [52.9163, 72.6689], [52.5283, 72.7375], [52.8121, 72.8753], [53.2475, 72.9732], [53.1978, 73.1477], [53.7531, 73.2932], [54.0909, 73.2763], [54.9405, 73.3833], [55.32, 73.3083]]]] }, \"properties\": { \"name\": \"Russia\", \"id\": \"RU\" }, \"id\": \"RU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.2124, 45.4503], [28.4512, 45.2923], [28.7606, 45.2342], [29.2236, 45.4028], [29.5677, 45.3709], [29.7061, 45.2599], [29.6351, 44.9798], [29.5575, 44.8435], [29.0483, 44.7574], [28.9262, 44.8102], [28.8072, 44.5652], [28.8517, 44.5061], [28.6453, 44.2957], [28.6585, 43.9837], [28.5853, 43.7422], [28.4233, 43.7404], [28.05, 43.8225], [27.8844, 43.9872], [27.4254, 44.0205], [27.0867, 44.1675], [26.4893, 44.084], [26.2158, 44.0072], [25.9335, 43.8705], [25.819, 43.7666], [25.4972, 43.6708], [25.1598, 43.6863], [24.4305, 43.7946], [24.2267, 43.7635], [23.5348, 43.8536], [23.2244, 43.874], [22.919, 43.8345], [22.8684, 43.9478], [23.0287, 44.0778], [22.7051, 44.2376], [22.5307, 44.3779], [22.5022, 44.4897], [22.721, 44.6056], [22.4978, 44.7064], [22.3508, 44.6762], [22.093, 44.5421], [21.9091, 44.6659], [21.6362, 44.7103], [21.3845, 44.8701], [21.3569, 44.9909], [21.4919, 45.1223], [20.942, 45.3655], [20.7742, 45.4845], [20.775, 45.7499], [20.3586, 45.9754], [20.2419, 46.1086], [20.5083, 46.1668], [20.6135, 46.1335], [20.8372, 46.2596], [21.0401, 46.2422], [21.1519, 46.3043], [21.3201, 46.608], [21.4972, 46.7043], [21.4945, 46.7895], [21.7854, 47.138], [21.9997, 47.5051], [22.2905, 47.7279], [22.6767, 47.7989], [22.8764, 47.9472], [23.2026, 48.0844], [23.4082, 47.9898], [23.6289, 47.9961], [24.1779, 47.9059], [24.5788, 47.9312], [24.8934, 47.7177], [25.4644, 47.9108], [26.1626, 47.9925], [26.3055, 48.2038], [26.6189, 48.2597], [26.7871, 48.2557], [26.9806, 48.155], [27.152, 47.9592], [27.3367, 47.6396], [27.8538, 47.1144], [28.0718, 46.9786], [28.2395, 46.6408], [28.2444, 46.4513], [28.1192, 46.1388], [28.0997, 45.9728], [28.1597, 45.647], [28.0748, 45.599], [28.2124, 45.4503]]] }, \"properties\": { \"name\": \"Romania\", \"id\": \"RO\" }, \"id\": \"RO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[55.7972, -21.3395], [55.5575, -21.3586], [55.3626, -21.2738], [55.233, -21.0584], [55.3112, -20.904], [55.4505, -20.865], [55.6618, -20.9062], [55.8389, -21.1388], [55.7972, -21.3395]]] }, \"properties\": { \"name\": \"Reunion\", \"id\": \"RE\" }, \"id\": \"RE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[51.2682, 24.6074], [50.9659, 24.5741], [50.8043, 24.7894], [50.8469, 24.8883], [50.7772, 25.1773], [50.763, 25.4445], [50.8687, 25.6128], [51.0031, 25.9817], [51.2625, 26.1534], [51.543, 25.9022], [51.5723, 25.781], [51.4853, 25.5249], [51.602, 25.148], [51.5869, 24.9647], [51.428, 24.6682], [51.2682, 24.6074]]] }, \"properties\": { \"name\": \"Qatar\", \"id\": \"QA\" }, \"id\": \"QA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-149.3215, -17.6902], [-149.5789, -17.735], [-149.6114, -17.5318], [-149.3792, -17.5224], [-149.3215, -17.6902]]], [[[-139.0243, -9.6952], [-138.875, -9.793], [-139.134, -9.8293], [-139.0243, -9.6952]]], [[[-140.0726, -8.9105], [-140.2175, -8.9295], [-140.2244, -8.7818], [-140.0577, -8.8013], [-140.0726, -8.9105]]]] }, \"properties\": { \"name\": \"French Polynesia\", \"id\": \"PF\" }, \"id\": \"PF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-54.6158, -25.576], [-54.632, -26.0056], [-54.6777, -26.3088], [-54.7552, -26.533], [-55.1358, -26.9312], [-55.4266, -27.0093], [-55.5973, -27.2077], [-55.7147, -27.415], [-56.0673, -27.3076], [-56.2418, -27.3666], [-56.3705, -27.5375], [-56.6033, -27.4679], [-56.8717, -27.4407], [-57.1118, -27.47], [-57.3912, -27.4305], [-57.8123, -27.3165], [-58.1683, -27.2734], [-58.6048, -27.3143], [-58.6186, -27.1323], [-58.1913, -26.6302], [-58.2031, -26.3817], [-58.0824, -26.1384], [-57.8906, -26.0066], [-57.7548, -25.6972], [-57.5717, -25.5343], [-57.5872, -25.405], [-57.8216, -25.1366], [-58.1366, -24.9772], [-58.3654, -24.9594], [-58.5196, -24.8431], [-58.724, -24.7868], [-59.373, -24.4538], [-59.6085, -24.2669], [-59.8924, -24.0934], [-60.1103, -24.009], [-60.5054, -23.9637], [-60.8398, -23.858], [-61.033, -23.7556], [-61.2083, -23.5571], [-61.5055, -23.392], [-61.7984, -23.1821], [-62.0666, -22.8696], [-62.2141, -22.6126], [-62.3726, -22.439], [-62.6261, -22.2903], [-62.6509, -22.2339], [-62.2767, -21.0661], [-62.2763, -20.5626], [-61.917, -20.0553], [-61.7569, -19.6452], [-61.5119, -19.6065], [-60.0073, -19.2976], [-59.0905, -19.286], [-58.1803, -19.8178], [-58.1399, -19.9989], [-58.1599, -20.1645], [-58.1245, -20.2937], [-58.0023, -20.4655], [-57.979, -20.6572], [-57.8303, -20.9981], [-57.8733, -21.355], [-57.9459, -21.4939], [-57.9162, -21.699], [-57.9856, -22.0461], [-57.8203, -22.1424], [-57.7211, -22.0994], [-57.569, -22.182], [-57.2383, -22.1953], [-56.9374, -22.2712], [-56.6331, -22.2348], [-56.5239, -22.1025], [-56.1898, -22.2814], [-55.8492, -22.3075], [-55.7466, -22.5126], [-55.6177, -22.6716], [-55.6541, -22.8105], [-55.5185, -23.4155], [-55.5382, -23.5811], [-55.459, -23.6867], [-55.4424, -23.8652], [-55.3662, -23.9913], [-55.1944, -24.0174], [-54.9827, -23.9744], [-54.6253, -23.8123], [-54.4403, -23.9016], [-54.2418, -24.0472], [-54.3182, -24.128], [-54.2809, -24.3059], [-54.3128, -24.5284], [-54.413, -24.8675], [-54.4731, -25.2205], [-54.6105, -25.4326], [-54.6158, -25.576]]] }, \"properties\": { \"name\": \"Paraguay\", \"id\": \"PY\" }, \"id\": \"PY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-7.4061, 37.1793], [-7.8342, 37.0057], [-8.1368, 37.0772], [-8.5978, 37.1211], [-8.9977, 37.0323], [-8.8142, 37.431], [-8.7917, 37.7328], [-8.879, 37.9588], [-8.8024, 38.1838], [-8.9147, 38.5123], [-9.2132, 38.4479], [-9.2505, 38.6566], [-9.4742, 38.7307], [-9.3748, 39.3384], [-9.1482, 39.5426], [-8.8379, 40.1156], [-8.8867, 40.1795], [-8.7724, 40.6057], [-8.6845, 40.7526], [-8.6557, 41.0296], [-8.7385, 41.2848], [-8.8108, 41.6519], [-8.8876, 41.7647], [-8.7771, 41.9409], [-8.5381, 42.0692], [-8.2131, 42.1336], [-8.1299, 42.0181], [-8.2246, 41.8956], [-8.1525, 41.8122], [-7.9208, 41.8837], [-7.6931, 41.8885], [-7.4037, 41.8335], [-7.0304, 41.9507], [-6.6182, 41.9423], [-6.5421, 41.6724], [-6.3916, 41.6652], [-6.2125, 41.5321], [-6.4031, 41.3754], [-6.6901, 41.2147], [-6.9285, 41.0092], [-6.8184, 40.6541], [-6.8102, 40.3429], [-7.0146, 40.2084], [-6.8961, 40.022], [-7.0368, 39.7139], [-7.4541, 39.6806], [-7.4452, 39.5363], [-7.3355, 39.4653], [-7.3058, 39.3379], [-7.1724, 39.135], [-6.998, 39.0565], [-7.0461, 38.9069], [-7.2816, 38.7147], [-7.3431, 38.4572], [-7.0228, 38.0448], [-7.1855, 38.0062], [-7.4441, 37.7284], [-7.5035, 37.5855], [-7.4061, 37.1793]]], [[[-27.0752, 38.6437], [-27.3029, 38.661], [-27.2596, 38.8026], [-27.0419, 38.7413], [-27.0752, 38.6437]]], [[[-28.1472, 38.4528], [-28.2311, 38.3845], [-28.4544, 38.4088], [-28.4022, 38.5536], [-28.1472, 38.4528]]], [[[-25.649, 37.8411], [-25.2666, 37.8487], [-25.251, 37.735], [-25.439, 37.7155], [-25.7344, 37.763], [-25.649, 37.8411]]], [[[-17.1908, 32.8687], [-16.9292, 32.8415], [-16.6933, 32.7581], [-16.8375, 32.6485], [-17.1711, 32.7217], [-17.1908, 32.8687]]]] }, \"properties\": { \"name\": \"Portugal\", \"id\": \"PT\" }, \"id\": \"PT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[130.5269, 42.5353], [130.6871, 42.3027], [130.4577, 42.3018], [130.0684, 42.0457], [129.7563, 41.7123], [129.6826, 41.4944], [129.766, 41.3039], [129.7119, 41.1237], [129.7088, 40.8573], [129.3412, 40.7264], [129.1095, 40.4911], [128.7011, 40.3176], [128.6107, 40.1978], [128.3044, 40.0361], [127.9665, 39.9958], [127.8671, 39.8959], [127.5684, 39.7818], [127.5275, 39.6957], [127.5488, 39.4613], [127.3837, 39.2962], [127.3944, 39.2079], [127.7863, 39.084], [127.9719, 38.898], [128.2493, 38.7453], [128.3744, 38.6233], [128.1685, 38.3591], [128.0389, 38.3085], [127.1697, 38.3045], [127.0094, 38.2406], [126.6668, 37.917], [126.634, 37.7816], [126.3698, 37.8784], [126.2029, 37.8287], [125.942, 37.8735], [125.7692, 37.9854], [125.4492, 37.7301], [125.3107, 37.8433], [124.9889, 37.9312], [125.193, 38.0378], [124.691, 38.1292], [124.8744, 38.2335], [124.8806, 38.3418], [125.0674, 38.5567], [125.3099, 38.6654], [125.1572, 38.8714], [125.4097, 39.2882], [125.3608, 39.5266], [125.1003, 39.5905], [124.7754, 39.7578], [124.6383, 39.6149], [124.5574, 39.7907], [124.3488, 39.907], [124.3622, 40.0042], [124.3865, 40.1041], [124.8895, 40.4596], [125.3143, 40.6448], [125.4169, 40.6598], [125.7285, 40.8667], [125.989, 40.9049], [126.4905, 41.3581], [126.6011, 41.6409], [126.9034, 41.7811], [127.0069, 41.742], [127.1795, 41.5312], [127.6877, 41.4402], [127.9186, 41.4611], [128.1112, 41.3891], [128.291, 41.5627], [128.0332, 41.8983], [128.0451, 41.9875], [128.9236, 42.0381], [129.1957, 42.2184], [129.3138, 42.4136], [129.5237, 42.3848], [129.7199, 42.4749], [129.7794, 42.7768], [129.8983, 42.9982], [130.2405, 42.8917], [130.2469, 42.7448], [130.5269, 42.5353]]] }, \"properties\": { \"name\": \"North Korea\", \"id\": \"KP\" }, \"id\": \"KP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-66.1295, 18.4448], [-65.8787, 18.4439], [-65.6288, 18.3813], [-65.6208, 18.2424], [-65.9708, 17.9743], [-66.4085, 17.9508], [-66.5108, 17.9871], [-66.7725, 17.9867], [-66.9001, 17.9481], [-67.1968, 17.9942], [-67.1724, 18.2242], [-67.2641, 18.3645], [-67.1586, 18.4994], [-66.1885, 18.4759], [-66.1295, 18.4448]]] }, \"properties\": { \"name\": \"Puerto Rico\", \"id\": \"PR\" }, \"id\": \"PR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.6045, 54.4591], [20.2081, 54.4207], [22.1683, 54.3599], [22.7664, 54.3568], [23.0154, 54.3484], [23.37, 54.2005], [23.4814, 54.0791], [23.4846, 53.9397], [23.5991, 53.5993], [23.8871, 53.0276], [23.9156, 52.7703], [23.8446, 52.6642], [23.4797, 52.5515], [23.204, 52.338], [23.1969, 52.257], [23.4583, 52.1695], [23.6523, 52.0403], [23.6257, 51.8093], [23.5449, 51.7103], [23.6053, 51.5179], [23.6644, 51.3101], [24.1056, 50.8449], [23.9787, 50.7857], [24.0949, 50.617], [23.9728, 50.4101], [23.7118, 50.3773], [23.0362, 49.899], [22.6496, 49.539], [22.7326, 49.2951], [22.7055, 49.1712], [22.5387, 49.0727], [22.0201, 49.2094], [21.8901, 49.3435], [21.6397, 49.412], [21.0796, 49.4182], [20.9473, 49.317], [20.6161, 49.3916], [20.3631, 49.3852], [20.1637, 49.3164], [20.0577, 49.1812], [19.802, 49.1923], [19.7741, 49.3721], [19.6639, 49.3961], [19.4416, 49.5976], [19.1495, 49.4001], [18.9684, 49.3963], [18.8321, 49.5108], [18.8068, 49.6138], [18.5946, 49.7578], [18.5623, 49.8793], [18.3053, 49.9141], [18.0282, 50.0353], [17.8746, 49.9722], [17.5892, 50.1573], [17.152, 50.3784], [16.8692, 50.4146], [16.9936, 50.2596], [16.6793, 50.0975], [16.2105, 50.4237], [16.4196, 50.5737], [16.2824, 50.6556], [16.0072, 50.6117], [15.7306, 50.7398], [15.3542, 50.8118], [15.2587, 50.9586], [14.9938, 51.0143], [14.9826, 50.8867], [14.8096, 50.8589], [15.0164, 51.2526], [14.9059, 51.4633], [14.7248, 51.5239], [14.7385, 51.6271], [14.6018, 51.8324], [14.7527, 52.0819], [14.5548, 52.3597], [14.6196, 52.5284], [14.5139, 52.6456], [14.1286, 52.8782], [14.3688, 53.1054], [14.4145, 53.2834], [14.2587, 53.7296], [14.4878, 53.6719], [14.5583, 53.8232], [14.2139, 53.8707], [14.2112, 53.9504], [14.3843, 53.9247], [14.7159, 54.0183], [15.9002, 54.254], [16.1865, 54.2904], [16.5599, 54.5539], [16.8852, 54.5965], [17.2621, 54.7294], [17.8432, 54.8167], [18.3234, 54.8382], [18.6696, 54.4309], [18.9764, 54.349], [19.4069, 54.3861], [19.6045, 54.4591]]] }, \"properties\": { \"name\": \"Poland\", \"id\": \"PL\" }, \"id\": \"PL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[153.536, -11.4761], [153.7033, -11.5285], [153.5538, -11.6307], [153.379, -11.5597], [153.2346, -11.4202], [153.3065, -11.3564], [153.536, -11.4761]]], [[[151.0809, -10.0202], [151.2965, -9.9568], [151.2309, -10.1947], [150.9593, -10.0926], [150.8625, -9.8022], [151.0516, -9.939], [151.0809, -10.0202]]], [[[150.5283, -9.3464], [150.6689, -9.4285], [150.7888, -9.4179], [150.8789, -9.5129], [150.894, -9.6673], [150.4364, -9.6247], [150.5087, -9.536], [150.4345, -9.4347], [150.5283, -9.3464]]], [[[150.3453, -9.4938], [150.273, -9.5005], [150.1097, -9.362], [150.2082, -9.2061], [150.32, -9.2642], [150.3453, -9.4938]]], [[[152.631, -8.9593], [152.8099, -8.9673], [152.9847, -9.1507], [152.8676, -9.2244], [152.7201, -9.1666], [152.631, -8.9593]]], [[[148.0256, -5.8263], [147.8747, -5.7491], [147.7809, -5.6271], [147.8467, -5.4908], [148.0549, -5.6115], [148.0256, -5.8263]]], [[[155.9574, -6.687], [155.7191, -6.8628], [155.5207, -6.8305], [155.344, -6.7216], [155.2086, -6.5268], [155.2019, -6.3075], [155.0102, -6.2098], [154.782, -5.9705], [154.7093, -5.7473], [154.7411, -5.5454], [154.9968, -5.54], [155.0936, -5.6204], [155.2277, -5.8654], [155.3724, -5.9745], [155.467, -6.145], [155.6383, -6.221], [155.8226, -6.3804], [155.9574, -6.687]]], [[[147.1765, -5.4322], [147.006, -5.307], [147.1311, -5.1907], [147.2061, -5.2515], [147.1765, -5.4322]]], [[[154.6472, -5.4325], [154.5401, -5.1107], [154.6822, -5.0539], [154.727, -5.2182], [154.6472, -5.4325]]], [[[151.9159, -4.2966], [152.1173, -4.2124], [152.1972, -4.2852], [152.4055, -4.3406], [152.3636, -4.4907], [152.4001, -4.7313], [152.2576, -4.9545], [152.0135, -5.0037], [151.9939, -5.1489], [152.1431, -5.3572], [152.077, -5.4583], [151.8652, -5.5648], [151.515, -5.5524], [151.4222, -5.7473], [151.2292, -5.92], [151.0432, -6.015], [150.8093, -6.0713], [150.7058, -6.1495], [150.4284, -6.2764], [149.6524, -6.2906], [149.4828, -6.1251], [149.3825, -6.078], [149.1265, -6.1277], [148.8077, -5.9164], [148.4011, -5.7651], [148.3447, -5.5449], [148.4321, -5.4717], [148.5649, -5.508], [148.999, -5.4846], [149.2454, -5.5728], [149.4753, -5.5733], [149.6315, -5.5161], [149.8313, -5.5241], [149.9627, -5.4477], [150.0452, -5.0345], [150.1061, -5.429], [150.1833, -5.5236], [150.2988, -5.5355], [150.5193, -5.4601], [150.6259, -5.5209], [150.9531, -5.4237], [151.1376, -5.113], [151.3268, -4.9603], [151.5726, -4.9377], [151.6713, -4.8835], [151.6646, -4.6372], [151.5518, -4.3455], [151.5931, -4.2008], [151.8195, -4.2167], [151.9159, -4.2966]]], [[[140.9761, -9.1187], [140.9756, -7.6827], [140.9752, -6.9055], [140.8625, -6.7399], [140.8745, -6.6116], [140.9748, -6.3461], [140.9743, -4.8364], [140.974, -4.0232], [140.9735, -2.6098], [141.1856, -2.6277], [141.986, -2.9636], [142.2115, -3.0835], [142.9052, -3.3206], [143.509, -3.4311], [144.0159, -3.7836], [144.122, -3.8155], [144.4775, -3.8253], [144.6267, -3.993], [144.7381, -4.029], [144.9383, -4.1884], [145.0879, -4.349], [145.3347, -4.3855], [145.767, -4.8232], [145.7928, -5.1778], [145.7452, -5.4024], [145.8527, -5.4712], [146.2056, -5.5449], [146.4036, -5.6164], [147.0343, -5.9191], [147.3766, -5.9506], [147.5666, -6.0571], [147.8018, -6.3151], [147.8454, -6.6627], [147.7095, -6.7235], [147.3558, -6.7426], [147.1192, -6.7216], [146.9536, -6.834], [146.9606, -6.9289], [147.105, -7.1669], [147.1902, -7.3782], [147.7242, -7.8762], [148.1267, -8.1035], [148.2471, -8.5545], [148.4512, -8.6948], [148.5831, -9.0516], [148.7918, -9.0894], [149.0976, -9.0171], [149.2476, -9.0712], [149.264, -9.1808], [149.2032, -9.4067], [149.2631, -9.4978], [149.4758, -9.5884], [149.7559, -9.611], [149.9734, -9.6607], [149.9849, -9.737], [149.7611, -9.8059], [149.8743, -10.0132], [150.364, -10.1898], [150.6671, -10.2573], [150.637, -10.338], [150.4886, -10.4259], [150.6472, -10.5178], [150.4826, -10.6368], [150.32, -10.655], [150.0168, -10.5773], [149.9481, -10.4827], [149.7541, -10.3531], [149.3529, -10.2896], [148.9368, -10.255], [148.7127, -10.1667], [148.3834, -10.1853], [148.1503, -10.1073], [148.0513, -10.1285], [147.7685, -10.0699], [147.5532, -9.9124], [147.4964, -9.7903], [147.2989, -9.5795], [147.0171, -9.3876], [146.9256, -9.2473], [146.9131, -9.0916], [146.6966, -9.0255], [146.456, -8.6437], [146.2966, -8.4555], [146.1844, -8.2464], [146.0334, -8.0764], [145.7288, -7.9525], [145.4679, -7.9299], [145.2876, -7.8616], [144.9738, -7.8021], [144.7736, -7.6423], [144.51, -7.5672], [144.2254, -7.7648], [143.8983, -7.6737], [143.9422, -7.9441], [143.7793, -8.028], [143.5516, -7.9845], [143.6137, -8.2003], [143.0948, -8.3112], [142.7979, -8.345], [143.1117, -8.4746], [143.3066, -8.6611], [143.3922, -8.8017], [143.366, -8.9611], [142.859, -9.2026], [142.6474, -9.3277], [142.2296, -9.1698], [141.6215, -9.2115], [141.4058, -9.1507], [141.1332, -9.2212], [140.9761, -9.1187]]], [[[152.9656, -4.7565], [152.8915, -4.8324], [152.7402, -4.6358], [152.6806, -4.4987], [152.6967, -4.282], [152.5985, -3.9948], [152.3557, -3.6682], [152.1923, -3.5056], [151.9731, -3.4532], [151.7933, -3.3378], [151.5785, -3.1536], [150.9682, -2.7799], [150.8478, -2.7799], [150.8257, -2.573], [151.1745, -2.7893], [151.2265, -2.8705], [151.4755, -2.9423], [151.807, -3.1727], [152.0331, -3.2513], [152.1795, -3.4102], [153.0166, -4.1059], [153.1241, -4.2523], [153.1325, -4.3527], [153.0443, -4.4764], [153.0234, -4.6665], [152.9656, -4.7565]]], [[[150.4368, -2.6618], [150.1656, -2.66], [150.0435, -2.5127], [150.1025, -2.4048], [150.2273, -2.3844], [150.4297, -2.4705], [150.4368, -2.6618]]], [[[147.0677, -1.96], [147.4005, -2.0253], [147.2061, -2.182], [146.9265, -2.189], [146.748, -2.1487], [146.5465, -2.2086], [146.6561, -1.9737], [147.0677, -1.96]]], [[[149.7656, -1.5529], [149.671, -1.5765], [149.5459, -1.4717], [149.5809, -1.3532], [149.7253, -1.4305], [149.7656, -1.5529]]]] }, \"properties\": { \"name\": \"Papua New Guinea\", \"id\": \"PG\" }, \"id\": \"PG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[134.5957, 7.3821], [134.5064, 7.4372], [134.5561, 7.5938], [134.6595, 7.6631], [134.5957, 7.3821]]] }, \"properties\": { \"name\": \"Palau\", \"id\": \"PW\" }, \"id\": \"PW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[120.2503, 5.2568], [120.1917, 5.1684], [120.0133, 5.1511], [119.9583, 5.0796], [119.8274, 5.1334], [120.2082, 5.3402], [120.2503, 5.2568]]], [[[121.1594, 6.0757], [121.218, 5.9426], [120.9308, 5.896], [120.8985, 6.007], [121.0378, 6.0962], [121.1594, 6.0757]]], [[[122.0929, 6.4282], [121.9594, 6.4158], [121.8089, 6.6137], [122.0583, 6.7407], [122.2883, 6.6391], [122.2008, 6.4828], [122.0929, 6.4282]]], [[[126.0058, 9.3211], [126.1932, 9.2767], [126.1918, 9.1248], [126.3047, 8.9522], [126.3197, 8.8448], [126.1417, 8.6273], [126.1732, 8.5602], [126.3654, 8.4839], [126.3797, 8.3267], [126.4586, 8.2029], [126.4356, 7.8327], [126.57, 7.6773], [126.5935, 7.5468], [126.5816, 7.2476], [126.4391, 7.0124], [126.2939, 6.8823], [126.2402, 6.734], [126.1891, 6.3097], [126.1097, 6.4895], [126.08, 6.7332], [125.9011, 7.1171], [125.8243, 7.3333], [125.6894, 7.2631], [125.6406, 7.1051], [125.542, 7.0163], [125.4008, 6.7957], [125.3809, 6.6901], [125.5886, 6.4659], [125.6707, 6.2249], [125.6681, 5.9785], [125.4559, 5.6643], [125.2881, 5.6323], [125.2331, 5.8081], [125.2685, 6.0331], [125.174, 6.0469], [125.0355, 5.8707], [124.9272, 5.8756], [124.6364, 5.998], [124.213, 6.2334], [124.0781, 6.4042], [123.9853, 6.9937], [124.1908, 7.2672], [124.2068, 7.3963], [123.9684, 7.6645], [123.6656, 7.8176], [123.493, 7.8078], [123.3909, 7.4075], [123.1782, 7.5295], [123.0965, 7.7004], [122.9897, 7.5464], [122.8432, 7.5295], [122.7916, 7.7226], [122.6163, 7.763], [122.4977, 7.6729], [122.3198, 7.3404], [122.1759, 7.0044], [122.0983, 6.9138], [121.9643, 6.9684], [121.9043, 7.0749], [121.9247, 7.1997], [122.0472, 7.3635], [122.132, 7.8105], [122.337, 8.0284], [122.6731, 8.1332], [122.911, 8.1563], [122.9962, 8.2206], [123.0176, 8.3982], [123.1472, 8.5158], [123.3412, 8.5704], [123.4344, 8.7031], [123.6804, 8.6206], [123.8495, 8.4329], [123.8774, 8.1887], [123.9968, 8.1589], [124.2259, 8.2712], [124.3253, 8.5083], [124.4513, 8.6064], [124.6219, 8.5225], [124.731, 8.5629], [124.787, 8.8741], [124.8691, 8.9721], [125.1411, 8.8687], [125.2095, 9.0272], [125.4989, 9.0147], [125.5336, 9.1408], [125.4142, 9.6691], [125.5211, 9.7592], [125.8767, 9.5133], [126.0058, 9.3211]]], [[[124.5938, 9.7871], [124.4775, 9.748], [124.3599, 9.63], [124.1224, 9.5994], [123.9356, 9.6238], [123.817, 9.8173], [124.0598, 10.0002], [124.1726, 10.1351], [124.3359, 10.16], [124.577, 10.0268], [124.5938, 9.7871]]], [[[125.6903, 9.9146], [125.4949, 10.1187], [125.5247, 10.3096], [125.6468, 10.2452], [125.7031, 10.0717], [125.6903, 9.9146]]], [[[119.9161, 10.4859], [119.7647, 10.5515], [119.8522, 10.6403], [120.0084, 10.5702], [119.9161, 10.4859]]], [[[122.6496, 10.4725], [122.5381, 10.425], [122.5373, 10.6074], [122.6727, 10.7389], [122.737, 10.6545], [122.6496, 10.4725]]], [[[123.1308, 9.064], [122.9945, 9.0587], [122.8666, 9.3197], [122.5626, 9.4826], [122.4108, 9.6939], [122.3997, 9.8231], [122.4716, 9.9616], [122.7131, 9.99], [122.8556, 10.0868], [122.8666, 10.2838], [122.8169, 10.5036], [122.9585, 10.6984], [122.9833, 10.8866], [123.2564, 10.9941], [123.5107, 10.9231], [123.5675, 10.7806], [123.493, 10.5821], [123.3433, 10.3255], [123.2959, 10.1245], [123.1618, 9.8644], [123.1499, 9.606], [123.3083, 9.357], [123.3204, 9.2731], [123.2288, 9.1213], [123.1308, 9.064]]], [[[123.3705, 9.4498], [123.3159, 9.4888], [123.4038, 9.8893], [123.386, 9.9669], [123.5143, 10.1404], [123.7113, 10.4738], [123.9297, 10.9639], [124.0531, 10.9257], [124.0514, 10.5857], [123.952, 10.3167], [123.7886, 10.2208], [123.6435, 10.0202], [123.6342, 9.9217], [123.4935, 9.5891], [123.3705, 9.4498]]], [[[117.3109, 8.4395], [117.2559, 8.5411], [117.3499, 8.7133], [117.8849, 9.2407], [118.1148, 9.3468], [118.5334, 9.7938], [118.7278, 10.0348], [118.845, 10.1311], [119.0238, 10.3536], [119.2241, 10.4774], [119.3128, 10.6869], [119.2613, 10.8449], [119.4651, 11.2937], [119.5601, 11.2666], [119.5268, 10.9533], [119.6844, 10.5515], [119.5952, 10.4072], [119.4225, 10.3544], [119.2849, 10.2519], [119.1916, 10.061], [118.7819, 9.9163], [118.774, 9.7667], [118.5698, 9.4227], [118.4348, 9.2562], [118.1344, 9.1013], [117.9896, 8.8772], [117.6798, 8.6778], [117.5164, 8.5384], [117.3109, 8.4395]]], [[[124.5747, 11.343], [124.7243, 11.3221], [124.8211, 11.4016], [124.9298, 11.3727], [125.0266, 11.2116], [125.04, 10.9519], [125.0133, 10.7854], [125.1878, 10.5848], [125.2535, 10.2639], [125.1051, 10.2181], [125.0266, 10.033], [124.7808, 10.168], [124.7895, 10.3274], [124.7376, 10.4397], [124.7985, 10.682], [124.787, 10.7815], [124.6626, 10.9621], [124.4456, 10.9235], [124.3306, 11.5352], [124.5747, 11.343]]], [[[124.6085, 11.4921], [124.4833, 11.4859], [124.3603, 11.6657], [124.5108, 11.687], [124.6085, 11.4921]]], [[[122.4964, 11.6151], [122.6128, 11.564], [122.7263, 11.608], [122.9314, 11.5294], [123.1583, 11.5356], [123.1196, 11.2866], [123.0166, 11.1166], [122.8028, 10.9901], [122.7698, 10.8236], [122.5222, 10.6918], [122.1977, 10.623], [121.9882, 10.4583], [121.9643, 10.8716], [122.0508, 11.0975], [122.1036, 11.643], [122.0672, 11.7238], [121.8909, 11.7909], [121.9638, 11.8974], [122.291, 11.7722], [122.4964, 11.6151]]], [[[120.0386, 11.7034], [119.964, 11.6692], [119.861, 11.9537], [120.036, 11.9174], [120.0386, 11.7034]]], [[[120.0998, 12.1677], [120.3413, 12.0776], [120.3147, 12.0123], [120.0106, 12.0084], [119.8659, 12.1988], [119.8966, 12.3133], [120.0998, 12.1677]]], [[[122.6545, 12.3089], [122.6034, 12.2858], [122.4227, 12.4549], [122.6034, 12.4918], [122.6545, 12.3089]]], [[[125.2397, 12.5277], [125.3201, 12.3218], [125.5358, 12.1912], [125.4567, 11.9525], [125.5056, 11.5441], [125.609, 11.323], [125.6281, 11.1321], [125.4319, 11.1126], [125.2335, 11.145], [125.1558, 11.2671], [125.0341, 11.3412], [124.9169, 11.5582], [124.9951, 11.7651], [124.8841, 11.7753], [124.6768, 12.0208], [124.529, 12.0794], [124.3848, 12.2441], [124.2947, 12.5695], [124.5658, 12.5264], [125.15, 12.5726], [125.2397, 12.5277]]], [[[123.7167, 12.2871], [123.9084, 12.1691], [124.0404, 11.9666], [123.9826, 11.8188], [123.6119, 12.09], [123.5312, 12.1966], [123.4188, 12.1943], [123.2928, 12.0364], [123.2107, 12.1064], [123.267, 12.3954], [123.2365, 12.5836], [123.4629, 12.5011], [123.7167, 12.2871]]], [[[122.0942, 12.3551], [121.9896, 12.4354], [122.0015, 12.5983], [122.1316, 12.5375], [122.0942, 12.3551]]], [[[120.7045, 13.4794], [120.9153, 13.5012], [121.1226, 13.3813], [121.2029, 13.4324], [121.5225, 13.131], [121.4799, 12.8371], [121.5408, 12.6382], [121.4124, 12.423], [121.3943, 12.3004], [121.2367, 12.2188], [121.1075, 12.3036], [120.922, 12.5117], [120.8993, 12.6458], [120.7959, 12.7479], [120.7635, 12.9698], [120.6512, 13.1692], [120.5082, 13.2602], [120.4012, 13.5171], [120.7045, 13.4794]]], [[[121.9149, 13.5402], [122.1147, 13.463], [122.1222, 13.3649], [122.0051, 13.2051], [121.8293, 13.3285], [121.8151, 13.4244], [121.9149, 13.5402]]], [[[124.3537, 13.6321], [124.1753, 13.5314], [124.039, 13.6632], [124.1238, 13.7906], [124.1229, 13.9797], [124.2249, 14.0778], [124.4171, 13.8709], [124.3537, 13.6321]]], [[[122.0334, 15.0051], [121.9229, 14.8], [121.8204, 14.9634], [121.8399, 15.0379], [122.0334, 15.0051]]], [[[121.1018, 18.6153], [121.2545, 18.5633], [121.5931, 18.3764], [121.8457, 18.2952], [122.0383, 18.328], [122.1466, 18.4865], [122.2998, 18.4026], [122.294, 18.2344], [122.1795, 18.0644], [122.1511, 17.7563], [122.2367, 17.435], [122.3624, 17.3448], [122.4077, 17.178], [122.519, 17.1246], [122.4259, 16.8228], [122.2256, 16.4353], [122.1351, 16.1849], [121.7888, 16.0775], [121.5954, 15.9333], [121.5611, 15.8267], [121.6069, 15.6701], [121.3925, 15.3242], [121.5438, 14.9993], [121.6957, 14.7374], [121.6264, 14.6819], [121.6486, 14.4813], [121.8004, 14.1137], [121.9118, 14.0205], [122.2114, 13.93], [122.2745, 14.0445], [122.1999, 14.1479], [122.4907, 14.3224], [122.856, 14.2509], [123.0145, 14.08], [123.0709, 13.9602], [123.0597, 13.7888], [123.2315, 13.7475], [123.2972, 13.8363], [123.3204, 14.0618], [123.4322, 13.9664], [123.7261, 13.8842], [123.8574, 13.7995], [123.8063, 13.7218], [123.607, 13.7045], [123.6079, 13.5283], [123.8192, 13.2695], [123.7851, 13.1106], [123.9551, 13.0999], [124.1428, 13.036], [124.1375, 12.7909], [124.0598, 12.5672], [123.8778, 12.6897], [123.9178, 12.9401], [123.6266, 12.9117], [123.311, 13.0439], [123.2954, 13.2157], [123.1631, 13.4417], [122.8636, 13.6171], [122.5954, 13.9078], [122.4681, 13.8869], [122.508, 13.657], [122.6678, 13.3955], [122.6754, 13.2531], [122.5151, 13.2602], [122.4068, 13.4928], [122.073, 13.7884], [121.7777, 13.9375], [121.5013, 13.8421], [121.4462, 13.712], [121.2034, 13.6401], [120.8407, 13.8847], [120.7289, 13.9007], [120.637, 13.8044], [120.6166, 14.1879], [120.6885, 14.2913], [120.922, 14.4933], [120.8883, 14.7157], [120.708, 14.7765], [120.5469, 14.7662], [120.5886, 14.4831], [120.4385, 14.4534], [120.2508, 14.7933], [120.0821, 14.851], [120.0368, 15.1147], [119.9329, 15.4308], [119.8917, 15.8378], [119.7691, 16.0083], [119.7728, 16.2551], [119.8309, 16.3265], [120.0333, 16.1845], [120.1598, 16.0478], [120.3369, 16.0664], [120.3893, 16.2218], [120.3054, 16.5294], [120.3213, 16.762], [120.4088, 16.9555], [120.4243, 17.4385], [120.3582, 17.6383], [120.5997, 18.5078], [120.8136, 18.6033], [121.1018, 18.6153]]]] }, \"properties\": { \"name\": \"Philippines\", \"id\": \"PH\" }, \"id\": \"PH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-69.9658, -4.2358], [-70.0533, -4.3331], [-70.239, -4.3011], [-70.4046, -4.1502], [-70.7995, -4.1732], [-70.9737, -4.3504], [-71.5215, -4.4698], [-71.8449, -4.5044], [-72.2568, -4.749], [-72.6987, -5.0673], [-72.8871, -5.1228], [-72.9799, -5.635], [-73.163, -5.9333], [-73.2355, -6.0984], [-73.1354, -6.3444], [-73.1374, -6.466], [-73.4999, -6.6795], [-73.758, -6.9058], [-73.8046, -7.0798], [-73.7234, -7.2628], [-73.7496, -7.3355], [-73.9644, -7.379], [-74.0022, -7.5562], [-73.8222, -7.739], [-73.7205, -7.7825], [-73.7755, -7.9366], [-73.6102, -8.1457], [-73.5492, -8.3458], [-73.3605, -8.4794], [-73.3023, -8.6539], [-73.2031, -8.7192], [-72.9741, -8.993], [-72.9703, -9.12], [-73.2093, -9.4116], [-72.8143, -9.4104], [-72.3791, -9.5102], [-72.318, -9.5568], [-72.2601, -9.7743], [-72.1729, -9.8439], [-72.1815, -10.0038], [-71.608, -10.006], [-71.2381, -9.9661], [-70.9708, -9.7659], [-70.637, -9.4782], [-70.5673, -9.7046], [-70.637, -9.8236], [-70.6423, -11.0101], [-70.5333, -10.947], [-70.3922, -11.0585], [-70.2202, -11.0478], [-69.9603, -10.9298], [-69.5786, -10.952], [-69.0461, -11.8756], [-68.6852, -12.502], [-68.7591, -12.6871], [-68.9786, -12.8802], [-68.9835, -13.4963], [-69.0741, -13.6828], [-68.8803, -14.199], [-69.0046, -14.2652], [-69.0133, -14.3775], [-69.235, -14.5972], [-69.276, -14.7459], [-69.3595, -14.7951], [-69.3748, -14.9629], [-69.1726, -15.2368], [-69.4185, -15.6035], [-69.3919, -15.7367], [-69.2176, -16.149], [-69.1342, -16.2219], [-68.9133, -16.2618], [-68.8579, -16.355], [-69.0061, -16.4335], [-69.0208, -16.6422], [-69.1999, -16.7682], [-69.4212, -17.04], [-69.6249, -17.2002], [-69.522, -17.3888], [-69.5108, -17.506], [-69.6849, -17.6498], [-69.8522, -17.7039], [-69.8025, -17.9002], [-69.8398, -18.0932], [-69.9263, -18.206], [-70.1838, -18.3254], [-70.4184, -18.3454], [-70.8175, -18.0525], [-70.9417, -17.9321], [-71.337, -17.6827], [-71.3994, -17.4221], [-71.5323, -17.2943], [-71.8683, -17.1509], [-72.1114, -17.0026], [-72.4676, -16.7078], [-72.7938, -16.6147], [-73.2638, -16.3887], [-73.4, -16.3044], [-73.825, -16.153], [-74.1471, -15.9125], [-74.3728, -15.8339], [-74.5548, -15.699], [-75.1043, -15.4118], [-75.2746, -15.1782], [-75.3966, -15.0935], [-75.5336, -14.8991], [-75.9339, -14.6336], [-76.1366, -14.3202], [-76.2891, -14.1334], [-76.297, -13.9482], [-76.1839, -13.5154], [-76.2236, -13.3712], [-76.4274, -13.1102], [-76.5552, -12.8234], [-76.7581, -12.5273], [-76.8322, -12.3488], [-77.1527, -12.0603], [-77.2204, -11.6635], [-77.31, -11.5325], [-77.6332, -11.2879], [-77.6643, -11.022], [-77.7362, -10.8365], [-78.0955, -10.2608], [-78.1856, -10.089], [-78.3565, -9.6522], [-78.4457, -9.3709], [-78.5802, -9.1564], [-78.7547, -8.7405], [-78.7622, -8.6171], [-78.9253, -8.4044], [-79.0123, -8.21], [-79.3773, -7.8354], [-79.589, -7.419], [-79.6178, -7.2956], [-79.7621, -7.0666], [-80.1103, -6.6498], [-80.8117, -6.2821], [-81.1422, -6.0567], [-81.1805, -5.9427], [-81.0918, -5.8126], [-80.9917, -5.861], [-80.8827, -5.7589], [-80.9431, -5.4752], [-81.1676, -5.1671], [-81.1084, -5.0278], [-81.3366, -4.6695], [-81.2833, -4.3224], [-81.232, -4.2345], [-80.892, -3.8817], [-80.7986, -3.7311], [-80.5036, -3.4959], [-80.3247, -3.388], [-80.2734, -3.4249], [-80.1793, -3.8776], [-80.3032, -4.0051], [-80.4373, -3.9788], [-80.51, -4.0694], [-80.4537, -4.2052], [-80.4885, -4.3939], [-80.3835, -4.4635], [-80.1396, -4.2962], [-79.7974, -4.4764], [-79.6385, -4.4547], [-79.5162, -4.539], [-79.5019, -4.6705], [-79.3308, -4.9279], [-79.0763, -4.9905], [-78.8615, -4.6651], [-78.6861, -4.5625], [-78.6795, -4.3259], [-78.5505, -3.9868], [-78.4198, -3.7769], [-78.3472, -3.4311], [-78.2262, -3.4892], [-78.1834, -3.3502], [-77.8607, -2.9819], [-76.679, -2.5629], [-76.0897, -2.1331], [-75.5707, -1.5312], [-75.4204, -0.9622], [-75.2497, -0.952], [-75.2837, -0.707], [-75.2632, -0.5555], [-75.4248, -0.4091], [-75.4758, -0.1569], [-75.2845, -0.1063], [-75.1383, -0.0504], [-74.9454, -0.188], [-74.8018, -0.2], [-74.7554, -0.2986], [-74.6165, -0.37], [-74.4178, -0.5809], [-74.3344, -0.8507], [-74.2465, -0.9706], [-74.0545, -1.0287], [-73.8632, -1.1966], [-73.6644, -1.2489], [-73.4943, -1.5365], [-73.4963, -1.6932], [-73.1969, -1.8304], [-73.1265, -2.0812], [-73.1545, -2.2783], [-72.8871, -2.4084], [-72.6254, -2.3516], [-72.3957, -2.4288], [-71.9842, -2.3267], [-71.7525, -2.1527], [-71.5594, -2.2242], [-71.397, -2.3342], [-71.1963, -2.3129], [-71.1133, -2.2454], [-70.9146, -2.2183], [-70.5759, -2.4181], [-70.0959, -2.6582], [-70.0741, -2.7501], [-70.7351, -3.7817], [-70.5295, -3.8666], [-70.3396, -3.8142], [-70.2404, -3.8825], [-70.1675, -4.0503], [-69.9658, -4.2358]]] }, \"properties\": { \"name\": \"Peru\", \"id\": \"PE\" }, \"id\": \"PE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-128.2901, -24.3975], [-128.3206, -24.3997], [-128.3503, -24.3402], [-128.3037, -24.3335], [-128.2901, -24.3975]]] }, \"properties\": { \"name\": \"Pitcairn Islands\", \"id\": \"PN\" }, \"id\": \"PN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-81.6033, 7.3329], [-81.77, 7.3701], [-81.8521, 7.4532], [-81.8122, 7.5926], [-81.6715, 7.5233], [-81.6948, 7.4252], [-81.6033, 7.3329]]], [[[-77.3742, 8.6583], [-77.4785, 8.4985], [-77.4072, 8.4271], [-77.2124, 8.0338], [-77.2159, 7.9326], [-77.3455, 7.8367], [-77.3508, 7.7057], [-77.5866, 7.5433], [-77.744, 7.5371], [-77.8283, 7.443], [-77.901, 7.2295], [-78.17, 7.5437], [-78.3782, 7.8997], [-78.4215, 8.0608], [-78.2548, 8.1385], [-78.2813, 8.2477], [-78.1139, 8.3795], [-78.35, 8.4599], [-78.4695, 8.4466], [-78.5141, 8.6281], [-78.6209, 8.7138], [-79.0865, 8.997], [-79.4416, 9.0059], [-79.6875, 8.851], [-79.8158, 8.6392], [-79.7506, 8.5953], [-80.1258, 8.3498], [-80.3687, 8.289], [-80.459, 8.214], [-80.4581, 8.0768], [-80.0753, 7.6671], [-80.0113, 7.5002], [-80.1106, 7.4336], [-80.2872, 7.4256], [-80.4388, 7.2752], [-80.8456, 7.2201], [-81.0352, 7.711], [-81.0638, 7.8997], [-81.1579, 7.8544], [-81.1954, 7.6684], [-81.2684, 7.6254], [-81.5041, 7.7213], [-81.7276, 8.1377], [-81.9733, 8.2153], [-82.2244, 8.2304], [-82.6795, 8.3219], [-82.8662, 8.2464], [-82.8793, 8.0706], [-82.9976, 8.3676], [-82.8615, 8.4537], [-82.8558, 8.6352], [-82.9171, 8.7405], [-82.7411, 8.9518], [-82.9403, 9.06], [-82.9399, 9.4493], [-82.8009, 9.5918], [-82.644, 9.5057], [-82.5635, 9.5767], [-82.3709, 9.4285], [-82.3398, 9.2092], [-82.2355, 9.1417], [-82.2441, 9.0316], [-82.0779, 8.9349], [-81.7802, 8.957], [-81.7123, 9.0188], [-81.5456, 8.827], [-81.3548, 8.7804], [-81.0631, 8.8128], [-80.8388, 8.8874], [-80.5469, 9.0818], [-80.1272, 9.2101], [-79.978, 9.3437], [-79.8551, 9.3779], [-79.5774, 9.598], [-79.0168, 9.5106], [-78.9315, 9.4285], [-78.5043, 9.4063], [-78.0829, 9.2363], [-77.8307, 9.068], [-77.6973, 8.8896], [-77.3742, 8.6583]]]] }, \"properties\": { \"name\": \"Panama\", \"id\": \"PA\" }, \"id\": \"PA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[77.7991, 35.496], [77.0485, 35.1099], [77.0011, 34.9922], [76.7831, 34.9003], [76.5944, 34.7356], [76.4569, 34.7561], [76.1723, 34.6677], [76.041, 34.67], [75.7093, 34.5031], [75.4523, 34.5368], [75.1872, 34.6389], [74.9521, 34.646], [74.3004, 34.7654], [73.9612, 34.6536], [73.8122, 34.4223], [73.8099, 34.3255], [73.9795, 34.1914], [73.9497, 34.0187], [74.2467, 33.9904], [74.2156, 33.8865], [74.0008, 33.7884], [74.0039, 33.6326], [74.1499, 33.507], [74.118, 33.384], [73.9942, 33.2424], [74.1265, 33.0755], [74.3035, 32.9916], [74.3545, 32.7688], [74.6631, 32.7577], [74.6578, 32.5189], [74.7887, 32.4576], [74.9876, 32.462], [75.2334, 32.3719], [75.3334, 32.2792], [75.2543, 32.1402], [74.7395, 31.9489], [74.5556, 31.8184], [74.5099, 31.7127], [74.5938, 31.4655], [74.5179, 31.1854], [74.6329, 31.0345], [74.2156, 30.769], [74.0093, 30.5196], [73.8991, 30.4352], [73.9333, 30.2222], [73.809, 30.0934], [73.3816, 29.9345], [73.2312, 29.5506], [72.903, 29.029], [72.3419, 28.752], [72.179, 28.4218], [71.9478, 28.1771], [71.8701, 27.9623], [71.5429, 27.87], [71.1847, 27.8318], [70.8749, 27.7146], [70.7373, 27.7292], [70.629, 27.9374], [70.4035, 28.0249], [70.1447, 27.8491], [69.8961, 27.4736], [69.5681, 27.1744], [69.47, 26.8046], [69.5068, 26.7425], [69.7359, 26.6271], [70.0595, 26.5787], [70.1566, 26.4713], [70.1327, 26.2147], [70.0776, 26.0717], [70.1004, 25.9102], [70.2646, 25.7064], [70.6486, 25.6669], [70.6521, 25.4228], [70.8776, 25.0628], [71.0481, 24.6877], [70.9729, 24.4875], [71.044, 24.4001], [70.7164, 24.238], [70.5793, 24.2789], [70.5469, 24.4183], [70.098, 24.2873], [70.0213, 24.1914], [69.7163, 24.1728], [69.5592, 24.2731], [69.1193, 24.2687], [68.901, 24.2927], [68.7282, 24.2656], [68.7242, 23.9646], [68.4886, 23.9673], [68.2826, 23.9277], [68.1649, 23.8572], [67.6687, 23.811], [67.3096, 24.175], [67.2887, 24.3677], [67.1715, 24.7561], [67.1005, 24.792], [66.7032, 24.8608], [66.6988, 25.2262], [66.4284, 25.5755], [66.2189, 25.5897], [66.131, 25.4934], [65.6796, 25.3553], [65.4062, 25.3744], [65.0613, 25.3109], [64.7768, 25.3074], [64.6591, 25.184], [64.5437, 25.2368], [64.1522, 25.3336], [64.0594, 25.4028], [63.9356, 25.3424], [63.7207, 25.386], [63.5565, 25.3531], [63.4912, 25.2106], [63.1698, 25.255], [63.0149, 25.2248], [62.5724, 25.2545], [62.3154, 25.1347], [62.1987, 25.2248], [62.0894, 25.1552], [61.7436, 25.1383], [61.5878, 25.2021], [61.6686, 25.769], [61.7543, 25.8432], [61.8102, 26.1654], [61.8697, 26.2422], [62.2394, 26.3572], [62.3122, 26.4908], [62.4391, 26.5609], [62.7867, 26.644], [63.093, 26.6324], [63.168, 26.6657], [63.2502, 26.8792], [63.2422, 27.0776], [63.1667, 27.2525], [62.9155, 27.2184], [62.7633, 27.2503], [62.812, 27.4971], [62.7397, 28.0022], [62.7623, 28.202], [62.5647, 28.2353], [62.3531, 28.4146], [61.8901, 28.5464], [61.6229, 28.7915], [61.3379, 29.2652], [61.3183, 29.3726], [60.8434, 29.8586], [62.3735, 29.4253], [62.4765, 29.4085], [63.5675, 29.4982], [64.0988, 29.3921], [64.2662, 29.507], [64.5211, 29.5643], [65.0954, 29.5594], [66.1772, 29.8355], [66.3135, 29.9687], [66.2474, 30.0437], [66.3055, 30.3211], [66.2869, 30.6079], [66.3974, 30.9124], [66.5669, 30.9967], [66.7312, 31.1947], [66.9242, 31.3057], [67.2874, 31.2178], [67.4529, 31.2347], [67.7379, 31.3439], [67.5781, 31.5064], [68.0171, 31.6781], [68.2138, 31.8073], [68.4432, 31.7545], [68.5978, 31.8028], [68.7824, 31.6466], [68.869, 31.6342], [69.0829, 31.7385], [69.2791, 31.9369], [69.2414, 32.4336], [69.4052, 32.6826], [69.5015, 33.02], [69.7035, 33.0946], [69.9201, 33.1123], [70.261, 33.289], [70.2841, 33.3689], [70.0568, 33.72], [69.8681, 33.8976], [69.9947, 34.0516], [70.416, 33.9504], [70.8483, 33.982], [71.0516, 34.0498], [71.0955, 34.3694], [70.9654, 34.5306], [71.2939, 34.8679], [71.4551, 34.9669], [71.6206, 35.1831], [71.5456, 35.2887], [71.6006, 35.4077], [71.4275, 35.8339], [71.1852, 36.042], [71.2331, 36.1219], [71.6206, 36.4367], [71.8222, 36.4859], [72.1569, 36.7008], [72.6229, 36.8295], [73.1165, 36.8686], [73.769, 36.8886], [74.0017, 36.8233], [74.5414, 37.0221], [74.6924, 37.0359], [74.8895, 36.9524], [75.0541, 36.9871], [75.3466, 36.9134], [75.4243, 36.7381], [75.6671, 36.7421], [75.8402, 36.6497], [75.9743, 36.3825], [75.945, 36.0176], [76.0706, 35.983], [76.1479, 35.8289], [76.2518, 35.8108], [76.5514, 35.8871], [76.5634, 35.773], [76.879, 35.6132], [77.4467, 35.4756], [77.7991, 35.496]]] }, \"properties\": { \"name\": \"Pakistan\", \"id\": \"PK\" }, \"id\": \"PK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[56.388, 24.9794], [56.4897, 24.7166], [56.6407, 24.4702], [56.9127, 24.1502], [57.2199, 23.9229], [57.6115, 23.8035], [58.1205, 23.7164], [58.3248, 23.6237], [58.5783, 23.6437], [58.773, 23.5172], [59.0301, 23.1305], [59.1948, 22.9721], [59.311, 22.7932], [59.5352, 22.5783], [59.8233, 22.5091], [59.7998, 22.2201], [59.6524, 21.9515], [59.5175, 21.7824], [59.3714, 21.4988], [59.0687, 21.2893], [58.8956, 21.1126], [58.6905, 20.8072], [58.4743, 20.4068], [58.2089, 20.4241], [58.2449, 20.599], [58.1028, 20.5702], [57.8618, 20.2439], [57.7153, 19.6069], [57.8116, 19.017], [57.6758, 18.9579], [57.1763, 18.9024], [56.8262, 18.7533], [56.6552, 18.5873], [56.5509, 18.166], [56.3836, 17.988], [56.2704, 17.9508], [55.6139, 17.886], [55.479, 17.8434], [55.2553, 17.5854], [55.2956, 17.3817], [55.1735, 17.1575], [55.0644, 17.039], [54.7718, 16.9645], [54.5663, 17.0315], [54.0683, 17.0057], [53.9542, 16.9178], [53.6097, 16.7598], [53.2977, 16.7234], [53.0855, 16.6484], [52.8005, 17.268], [52.7291, 17.3004], [52.4201, 17.9973], [51.9776, 18.9961], [52.6345, 19.215], [53.6669, 19.559], [54.9773, 19.9957], [55.3512, 21.1255], [55.641, 22.0017], [55.186, 22.7039], [55.1997, 23.0346], [55.5087, 23.7245], [55.4683, 23.9411], [55.5478, 23.9912], [55.985, 24.0636], [55.9287, 24.215], [55.7608, 24.2425], [55.8056, 24.3499], [55.7683, 24.4906], [55.8038, 24.6362], [55.7959, 24.8679], [55.9158, 24.9718], [56.064, 24.7387], [56.388, 24.9794]]], [[[56.2979, 25.6505], [56.1447, 25.6905], [56.1675, 26.0474], [56.0804, 26.0624], [56.1643, 26.2071], [56.4297, 26.327], [56.3738, 25.8045], [56.2979, 25.6505]]]] }, \"properties\": { \"name\": \"Oman\", \"id\": \"OM\" }, \"id\": \"OM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[166.2211, -50.7615], [166.2429, -50.8459], [165.8891, -50.8077], [166.2252, -50.5311], [166.2211, -50.7615]]], [[[168.1449, -46.8624], [168.0433, -46.9325], [168.2409, -47.0701], [167.9058, -47.1798], [167.6292, -47.1425], [167.801, -46.9067], [167.7841, -46.6999], [167.9559, -46.6946], [168.1449, -46.8624]]], [[[-176.1776, -43.7404], [-176.5001, -43.8603], [-176.3339, -44.0485], [-176.5154, -44.1165], [-176.6315, -44.0063], [-176.5237, -43.9012], [-176.7612, -43.7578], [-176.5661, -43.7173], [-176.1776, -43.7404]]], [[[173.1152, -41.2791], [173.2306, -41.2844], [173.7379, -40.9887], [174.3027, -41.0194], [174.2369, -41.3124], [174.1019, -41.3661], [174.0922, -41.5051], [174.2831, -41.7407], [174.2156, -41.8504], [173.8881, -42.13], [173.8397, -42.2708], [173.5449, -42.518], [173.3474, -42.8407], [173.2214, -42.9765], [172.8888, -43.1244], [172.7184, -43.2589], [172.8072, -43.621], [173.073, -43.6761], [173.117, -43.7977], [172.9208, -43.8914], [172.4805, -43.7267], [172.3855, -43.8297], [171.8906, -44.0068], [171.6588, -44.1173], [171.4427, -44.1359], [171.3131, -44.302], [171.2308, -44.5212], [171.198, -44.768], [171.1133, -45.0393], [170.9397, -45.2164], [170.8901, -45.374], [170.7004, -45.6843], [170.7764, -45.8711], [170.419, -45.9409], [170.186, -46.1611], [169.9183, -46.3346], [169.6865, -46.5516], [169.3421, -46.6204], [169.0985, -46.6306], [168.7668, -46.5663], [168.382, -46.6053], [168.3199, -46.4473], [168.1889, -46.3621], [167.8418, -46.3661], [167.6819, -46.1929], [167.4907, -46.1548], [167.369, -46.2413], [167.1004, -46.2493], [166.7317, -46.1978], [166.7272, -45.9635], [166.4932, -45.9639], [166.5127, -45.8117], [166.836, -45.7743], [166.7339, -45.5436], [166.7782, -45.4095], [166.9087, -45.3075], [167.1272, -45.2657], [167.0259, -45.1236], [167.1947, -44.9634], [167.7872, -44.595], [167.8564, -44.5009], [168.3665, -44.0818], [168.6511, -43.9722], [168.8063, -43.9921], [169.1695, -43.7769], [169.6613, -43.5914], [170.0177, -43.3494], [170.3027, -43.1075], [170.7417, -42.9273], [171.0276, -42.6961], [171.2571, -42.4652], [171.3601, -42.0799], [171.4862, -41.7949], [171.8306, -41.6551], [172.0108, -41.4446], [172.1395, -40.947], [172.2727, -40.7588], [172.6407, -40.5182], [172.7668, -40.7735], [172.9886, -40.8481], [173.1152, -41.2791]]], [[[173.2692, -34.935], [173.4389, -34.9287], [173.8441, -35.0265], [174.1043, -35.1427], [174.1433, -35.2999], [174.3204, -35.2466], [174.5437, -35.5822], [174.3909, -35.7739], [174.5485, -36.0065], [174.802, -36.3093], [174.7518, -36.4909], [174.8193, -36.612], [174.7226, -36.841], [175.2996, -36.9934], [175.3854, -37.2069], [175.5424, -37.2015], [175.5518, -37.0466], [175.4873, -36.6897], [175.3857, -36.5565], [175.4607, -36.4757], [175.8763, -36.9578], [175.9903, -37.4373], [176.1146, -37.5384], [176.1084, -37.6449], [176.2917, -37.6801], [176.7703, -37.8895], [177.1617, -37.9858], [177.3357, -37.9907], [177.5581, -37.8976], [177.7272, -37.7057], [178.0092, -37.5548], [178.2724, -37.5669], [178.5361, -37.692], [178.394, -37.9602], [178.3154, -38.4439], [178.2679, -38.5509], [177.9763, -38.7222], [177.9105, -39.0219], [177.9656, -39.1427], [177.4077, -39.0809], [177.1289, -39.1862], [176.954, -39.3677], [176.9665, -39.6052], [177.1098, -39.6731], [176.8421, -40.1578], [176.6885, -40.2937], [176.6117, -40.4419], [176.385, -40.6679], [176.2517, -40.8769], [175.9828, -41.2134], [175.6871, -41.4118], [175.3099, -41.6107], [175.1655, -41.4175], [174.9058, -41.4331], [174.8748, -41.2782], [174.6356, -41.2893], [175.0169, -40.8477], [175.1625, -40.6217], [175.2543, -40.2893], [175.0093, -39.9523], [174.8135, -39.8605], [174.5676, -39.8129], [174.3519, -39.6433], [173.9342, -39.5093], [173.7637, -39.3188], [173.8441, -39.1395], [174.0713, -39.0312], [174.3985, -38.9625], [174.5974, -38.7849], [174.6529, -38.4284], [174.7155, -38.2256], [174.8402, -38.0227], [174.8015, -37.8957], [174.9281, -37.8043], [174.7292, -37.4487], [174.7465, -37.15], [174.929, -37.0848], [174.7821, -36.9436], [174.6014, -36.9857], [174.4758, -36.9418], [174.3821, -36.7261], [174.4469, -36.4509], [174.2538, -36.2489], [174.0545, -36.3598], [173.9454, -36.1761], [173.3763, -35.5], [173.1166, -35.2053], [173.1907, -35.0162], [173.0295, -34.8001], [172.706, -34.4552], [173.0437, -34.4289], [172.9638, -34.535], [173.2692, -34.935]]]] }, \"properties\": { \"name\": \"New Zealand\", \"id\": \"NZ\" }, \"id\": \"NZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[20.898, 80.2499], [22.3761, 80.0897], [22.4508, 80.4021], [23.3154, 80.4252], [23.1148, 80.1869], [23.9529, 80.3047], [25.4714, 80.233], [25.8363, 80.1751], [26.8608, 80.16], [27.1986, 79.9066], [26.0059, 79.6171], [25.641, 79.4029], [24.7506, 79.3646], [23.9475, 79.1943], [22.9039, 79.2307], [22.6957, 79.3291], [20.8611, 79.3978], [19.6746, 79.5911], [20.4936, 79.6327], [20.1234, 79.7785], [19.3999, 79.7266], [18.7251, 79.7607], [18.2555, 79.9292], [18.3438, 80.0595], [17.9168, 80.1432], [19.3546, 80.1853], [20.3596, 80.401], [20.898, 80.2499]]], [[[16.7866, 79.9068], [17.5781, 79.8848], [18.2719, 79.6005], [18.5814, 79.5716], [18.7723, 79.2603], [19.0896, 79.157], [20.4581, 79.1293], [20.5008, 78.9815], [21.3889, 78.7404], [21.0964, 78.6763], [19.7687, 78.6228], [19.0554, 78.319], [18.995, 78.0815], [18.4393, 78.0251], [18.228, 77.5226], [17.6233, 77.3994], [17.1525, 77.049], [16.9767, 76.8118], [17.0627, 76.6591], [16.7006, 76.5794], [15.5469, 76.8863], [15.1243, 77.0852], [14.3656, 77.2346], [14.0044, 77.4452], [14.0714, 77.5641], [14.6951, 77.5251], [14.921, 77.6888], [16.2061, 77.7825], [17.0334, 77.7977], [16.8528, 77.9114], [16.0601, 77.8471], [15.5855, 77.8691], [14.604, 77.7665], [13.7913, 77.8538], [13.6807, 78.028], [14.9947, 78.1512], [15.6569, 78.299], [16.7769, 78.3505], [16.4489, 78.5036], [15.4173, 78.4732], [15.1371, 78.6643], [14.4674, 78.6754], [14.6382, 78.4146], [14.1104, 78.2708], [13.1503, 78.2375], [12.6647, 78.3849], [12.258, 78.5946], [11.7738, 78.7165], [12.0459, 78.9832], [11.8928, 79.1524], [11.2083, 79.1297], [10.7378, 79.5201], [10.8661, 79.7965], [12.2798, 79.816], [12.7535, 79.7758], [13.6928, 79.861], [13.7775, 79.7152], [13.0393, 79.6851], [13.3837, 79.4809], [14.0399, 79.5856], [14.5938, 79.7987], [15.0524, 79.6753], [15.6601, 79.235], [16.2535, 79.1122], [15.8163, 79.6819], [16.1004, 79.8843], [16.7866, 79.9068]]], [[[21.6082, 78.5958], [22.0432, 78.5769], [22.2994, 78.2282], [22.9887, 78.2519], [23.4521, 78.1494], [23.1166, 77.9916], [23.6838, 77.8755], [24.2382, 77.8986], [24.9019, 77.7566], [24.1299, 77.6583], [23.8414, 77.4978], [22.8019, 77.2758], [22.4272, 77.316], [22.057, 77.5011], [21.0498, 77.4409], [21.6082, 77.9161], [21.0356, 78.0591], [20.7866, 78.2522], [20.2282, 78.4779], [21.6082, 78.5958]]], [[[-8.9535, 70.8392], [-8.9646, 70.9159], [-8.5207, 71.0307], [-8.3436, 71.1401], [-8.002, 71.0411], [-8.6353, 70.9404], [-8.9535, 70.8392]]]] }, \"properties\": { \"name\": \"Svalbard and Jan Mayen\", \"id\": \"SJ\" }, \"id\": \"SJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[166.9584, -0.5165], [166.9162, -0.5466], [166.9136, -0.4992], [166.9584, -0.5165]]] }, \"properties\": { \"name\": \"Nauru\", \"id\": \"NR\" }, \"id\": \"NR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[88.1099, 27.8704], [88.1472, 27.7492], [88.0242, 27.4088], [87.9842, 27.134], [88.1113, 26.9285], [88.1614, 26.7248], [88.0549, 26.43], [87.8494, 26.4371], [87.6331, 26.3989], [87.4134, 26.4229], [87.2873, 26.3603], [87.0894, 26.4331], [87.0166, 26.5556], [86.7014, 26.4348], [86.3662, 26.5742], [86.0072, 26.6493], [85.8558, 26.6], [85.7373, 26.6399], [85.7, 26.7815], [85.5687, 26.8397], [85.293, 26.7412], [84.6853, 27.0412], [84.6103, 27.2987], [84.0909, 27.4913], [83.829, 27.3777], [83.4473, 27.4652], [83.2897, 27.3711], [82.7334, 27.5188], [82.6775, 27.6733], [82.4512, 27.672], [81.9878, 27.9139], [81.8529, 27.8669], [81.3108, 28.1762], [81.1687, 28.3352], [80.7506, 28.5398], [80.5868, 28.6495], [80.4186, 28.6122], [80.0706, 28.8301], [80.1304, 29.1004], [80.2331, 29.1945], [80.2548, 29.4231], [80.4017, 29.7303], [80.549, 29.8999], [80.9078, 30.172], [81.0103, 30.1645], [81.1101, 30.0366], [81.2553, 30.0934], [81.4169, 30.3375], [81.6419, 30.3878], [82.0432, 30.3269], [82.1591, 30.1152], [82.4866, 29.9416], [82.8542, 29.6833], [83.1556, 29.6127], [83.3553, 29.4391], [83.5835, 29.1835], [83.936, 29.2793], [84.1016, 29.2199], [84.2285, 28.9118], [84.7141, 28.5957], [84.8552, 28.5536], [85.159, 28.5922], [85.0888, 28.3725], [85.1225, 28.3161], [85.4106, 28.2762], [85.6782, 28.2775], [85.8403, 28.1354], [85.954, 27.9281], [86.064, 27.9348], [86.0787, 28.0835], [86.4089, 27.9286], [86.5168, 27.9636], [86.5544, 28.0853], [87.0201, 27.9286], [87.1413, 27.8385], [87.6829, 27.8216], [87.8608, 27.886], [88.1099, 27.8704]]] }, \"properties\": { \"name\": \"Nepal\", \"id\": \"NP\" }, \"id\": \"NP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[15.2073, 68.9431], [15.3968, 68.7835], [15.2219, 68.6164], [14.5206, 68.633], [14.3733, 68.7114], [14.8726, 68.9138], [15.2073, 68.9431]]], [[[13.873, 68.2653], [14.0292, 68.1876], [13.2293, 67.9954], [13.1995, 68.0873], [13.5378, 68.249], [13.873, 68.2653]]], [[[25.5864, 71.1421], [25.9451, 71.1046], [26.1337, 70.9959], [25.5819, 70.9608], [25.3152, 71.0341], [25.5864, 71.1421]]], [[[30.8695, 69.7834], [30.8607, 69.5383], [30.6152, 69.5325], [30.2277, 69.6338], [29.9942, 69.3925], [29.3883, 69.2982], [29.2099, 69.0971], [28.9657, 69.0219], [28.8463, 69.1768], [29.3333, 69.4731], [29.1415, 69.6715], [28.4117, 69.8226], [27.8897, 70.0617], [27.5919, 70.0422], [27.1085, 69.9048], [26.5256, 69.915], [26.0116, 69.6527], [25.7489, 69.2314], [25.7484, 68.9901], [25.3574, 68.8625], [24.9414, 68.5933], [23.8539, 68.8059], [23.7069, 68.7138], [23.3238, 68.649], [22.4108, 68.7198], [22.3003, 68.8558], [21.622, 69.2707], [21.2668, 69.2738], [21.0525, 69.1865], [21.128, 69.0809], [20.6223, 69.0369], [20.1167, 69.021], [20.3374, 68.8996], [20.3196, 68.754], [19.969, 68.542], [20.2401, 68.4774], [19.9698, 68.3565], [19.0527, 68.4927], [18.3785, 68.5625], [18.1628, 68.5285], [18.1765, 68.2007], [17.9168, 67.965], [17.3246, 68.1039], [16.7836, 67.8951], [16.5855, 67.6282], [16.1274, 67.4259], [16.4342, 67.1551], [16.4035, 67.055], [15.423, 66.4899], [15.4839, 66.3059], [15.1531, 66.1909], [14.5432, 66.1292], [14.6351, 65.8449], [14.4798, 65.3014], [14.1153, 64.9461], [13.6501, 64.5816], [14.0776, 64.464], [14.141, 64.1734], [13.9604, 64.0141], [13.2995, 64.0747], [12.9874, 64.0505], [12.6624, 63.9404], [12.1751, 63.5959], [12.2119, 63.4923], [11.9998, 63.2917], [12.2182, 63.0007], [12.1085, 62.9195], [12.1147, 62.5919], [12.3034, 62.2856], [12.1555, 61.7208], [12.5959, 61.5414], [12.8809, 61.3523], [12.6828, 61.0469], [12.294, 61.0027], [12.3144, 60.8922], [12.5887, 60.4507], [12.4862, 60.1067], [12.1693, 59.9127], [11.9323, 59.8637], [11.6805, 59.5923], [11.7982, 59.29], [11.6428, 58.926], [11.3885, 59.0365], [11.3659, 59.1047], [10.8346, 59.1839], [10.6449, 59.3892], [10.6343, 59.6025], [10.3981, 59.5193], [10.4314, 59.2796], [10.1794, 59.0092], [9.6183, 58.9459], [8.9285, 58.57], [8.5214, 58.3006], [8.1663, 58.1452], [7.4658, 58.0209], [7.0051, 58.0243], [6.6598, 58.2628], [6.3889, 58.2679], [5.7067, 58.5236], [5.5172, 58.7264], [5.5557, 58.9752], [5.8541, 58.9595], [5.9686, 59.1861], [5.8452, 59.3535], [5.5642, 59.2913], [5.3623, 59.1664], [5.1314, 59.2265], [5.1851, 59.4536], [5.3049, 59.6427], [5.4723, 59.713], [5.7724, 59.6608], [5.8673, 59.7339], [5.7307, 59.863], [6.1119, 60.132], [6.1533, 60.3462], [5.4944, 59.8255], [5.2344, 59.6917], [5.1194, 59.8337], [5.2055, 60.0879], [5.4944, 60.0703], [5.1838, 60.3085], [5.1371, 60.4456], [5.2441, 60.5695], [5.0492, 60.7076], [5.0085, 61.0383], [5.3245, 61.1082], [5.0217, 61.2507], [5.0027, 61.4335], [5.2583, 61.4555], [4.9276, 61.7107], [4.9849, 61.9005], [5.4651, 61.8969], [6.0156, 61.7876], [6.131, 61.8524], [5.4732, 61.9456], [5.1598, 61.9569], [5.1433, 62.16], [5.3578, 62.1518], [5.5336, 62.3109], [6.1186, 62.4471], [6.353, 62.6112], [6.7445, 62.6378], [7.2838, 62.6023], [7.2421, 62.7524], [6.78, 62.7006], [6.7814, 62.7896], [7.0086, 62.9576], [7.5719, 63.0995], [8.1006, 63.091], [8.2714, 63.2866], [8.58, 63.3134], [8.5937, 63.4262], [8.398, 63.5351], [8.8424, 63.6459], [9.3235, 63.5704], [9.6968, 63.6246], [10.0803, 63.4328], [10.7604, 63.4612], [10.7253, 63.6251], [11.3707, 63.8048], [10.9144, 63.9211], [10.9349, 63.7702], [10.3391, 63.5711], [9.9241, 63.5218], [9.7079, 63.8649], [10.0098, 64.0831], [10.2362, 64.1796], [10.5655, 64.4182], [10.8341, 64.4944], [11.2256, 64.6795], [11.3498, 64.9059], [12.1596, 65.1789], [12.1222, 65.3624], [12.2727, 65.5682], [12.9763, 66.0191], [12.7836, 66.1004], [13.1188, 66.2307], [13.1046, 66.5394], [13.3119, 66.7019], [13.6213, 66.7949], [14.1087, 67.1194], [15.4345, 67.2467], [14.4483, 67.2978], [14.7549, 67.4991], [15.2189, 67.6554], [14.7812, 67.6749], [14.7989, 67.8094], [15.316, 68.0689], [15.6565, 68.1643], [16.0644, 68.2], [16.1208, 68.0273], [16.372, 68.0617], [16.1746, 68.2812], [16.5847, 68.4664], [16.6517, 68.6257], [17.1312, 68.6934], [17.3908, 68.7995], [17.7047, 69.1], [18.1015, 69.1564], [18.0789, 69.3253], [18.2932, 69.4751], [18.991, 69.5612], [19.1974, 69.7479], [20.0688, 69.8835], [20.6219, 69.9139], [21.163, 69.8895], [21.2536, 70.0033], [21.9749, 69.8346], [21.8026, 70.0661], [21.4005, 70.1744], [21.9953, 70.2934], [22.6847, 70.3749], [22.9412, 70.3049], [23.0464, 70.1018], [23.6612, 70.3997], [24.0385, 70.4854], [24.4199, 70.702], [24.2635, 70.8263], [24.6582, 71.001], [25.7683, 70.8531], [25.2735, 70.5524], [24.9942, 70.2181], [25.2117, 70.1365], [25.4706, 70.3407], [26.507, 70.9129], [26.7339, 70.8536], [26.5839, 70.4539], [26.9896, 70.5113], [27.1835, 70.744], [27.5555, 70.8274], [27.2354, 70.9472], [27.5972, 71.0913], [28.3922, 70.9752], [28.2027, 70.5768], [28.4375, 70.5014], [28.6093, 70.7597], [29.1024, 70.8607], [30.213, 70.5433], [30.5956, 70.5238], [30.9264, 70.401], [30.9442, 70.2746], [29.9259, 70.0966], [28.7811, 70.1454], [28.8042, 70.0926], [29.6014, 69.9767], [29.636, 69.78], [29.7922, 69.7279], [30.4843, 69.7949], [30.8695, 69.7834]]], [[[23.4406, 70.8159], [23.0682, 70.5941], [22.3589, 70.5149], [22.3505, 70.6576], [23.4406, 70.8159]]], [[[23.6155, 70.5493], [23.5476, 70.4082], [23.1592, 70.2825], [22.9412, 70.4445], [23.6155, 70.5493]]], [[[19.2552, 70.0663], [19.5926, 69.9702], [19.1308, 69.8104], [18.7847, 69.5789], [18.2742, 69.5355], [18.0833, 69.6262], [18.3492, 69.7678], [19.2552, 70.0663]]], [[[17.5031, 69.5963], [18.0042, 69.5051], [18.0766, 69.3958], [17.9505, 69.1981], [17.3238, 69.13], [16.9718, 69.138], [17.0019, 69.3619], [17.3606, 69.3814], [17.2519, 69.5037], [17.5031, 69.5963]]], [[[15.7604, 68.5613], [16.0596, 68.6805], [16.1505, 68.8423], [16.5474, 68.7164], [16.5194, 68.633], [15.9126, 68.3893], [15.4377, 68.313], [14.9267, 68.3065], [14.6289, 68.1985], [14.2574, 68.2568], [14.5858, 68.4004], [15.0954, 68.4415], [15.4128, 68.6157], [15.5641, 68.8738], [15.4829, 69.0434], [15.8927, 69.278], [16.1147, 69.2163], [15.8119, 69.0243], [15.9278, 68.7331], [15.7604, 68.5613]]]] }, \"properties\": { \"name\": \"Norway\", \"id\": \"NO\" }, \"id\": \"NO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-169.8033, -19.0831], [-169.9039, -19.1377], [-169.9483, -19.0729], [-169.834, -18.9659], [-169.8033, -19.0831]]] }, \"properties\": { \"name\": \"Niue\", \"id\": \"NU\" }, \"id\": \"NU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.1577, 14.9931], [-83.2992, 14.749], [-83.1878, 14.3402], [-83.3465, 14.0569], [-83.4124, 13.9966], [-83.4936, 13.7386], [-83.5674, 13.3205], [-83.5145, 12.9441], [-83.5412, 12.5961], [-83.511, 12.4119], [-83.7542, 12.502], [-83.6513, 12.2871], [-83.6803, 12.0244], [-83.7693, 11.9316], [-83.6517, 11.6421], [-83.7449, 11.5663], [-83.8679, 11.2999], [-83.8319, 11.1303], [-83.7141, 10.9337], [-83.6419, 10.9173], [-83.659, 10.837], [-83.8113, 10.7433], [-84.1684, 10.7806], [-84.3484, 10.9799], [-84.7013, 11.0522], [-84.9093, 10.9452], [-85.6215, 11.1845], [-85.7444, 11.062], [-85.9613, 11.3314], [-86.4689, 11.7385], [-86.7556, 12.1566], [-87.1252, 12.434], [-87.4601, 12.7577], [-87.6676, 12.9037], [-87.5433, 13.0396], [-87.4243, 12.921], [-87.3373, 12.9791], [-87.0592, 12.9916], [-86.9589, 13.0537], [-86.9183, 13.2238], [-86.7108, 13.3134], [-86.7707, 13.6987], [-86.7336, 13.7635], [-86.3317, 13.7702], [-86.1512, 13.9948], [-85.9837, 13.9655], [-85.7868, 13.8443], [-85.6818, 13.9824], [-85.5798, 14.0281], [-85.3738, 14.2238], [-85.1796, 14.3433], [-85.1613, 14.5253], [-85.0364, 14.6078], [-84.9851, 14.7525], [-84.7891, 14.7903], [-84.646, 14.6611], [-84.5377, 14.6335], [-84.3936, 14.6917], [-84.1144, 14.7312], [-84.0659, 14.7862], [-83.8674, 14.7947], [-83.4151, 15.0082], [-83.1577, 14.9931]]] }, \"properties\": { \"name\": \"Nicaragua\", \"id\": \"NI\" }, \"id\": \"NI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[13.6062, 13.7045], [14.0639, 13.0786], [14.1975, 12.3839], [14.5188, 12.2982], [14.6271, 12.1087], [14.5619, 11.7287], [14.5596, 11.4921], [14.2023, 11.268], [14.0567, 11.2449], [13.8921, 11.1401], [13.5351, 10.6052], [13.4144, 10.1716], [13.2697, 10.0362], [13.2213, 9.6451], [13.1756, 9.5395], [12.9296, 9.4262], [12.8755, 9.3037], [12.8067, 8.8865], [12.7312, 8.7457], [12.5825, 8.6242], [12.4037, 8.5957], [12.2332, 8.2823], [12.156, 7.9423], [12.0251, 7.7279], [12.0162, 7.5899], [11.7676, 7.2721], [11.8612, 7.1162], [11.5802, 6.889], [11.5519, 6.6972], [11.3245, 6.4846], [11.1532, 6.438], [11.0796, 6.5055], [11.0325, 6.6981], [10.7378, 6.9884], [10.6064, 7.063], [10.4825, 6.8912], [10.2055, 6.8916], [10.1439, 6.9964], [9.7799, 6.7602], [9.66, 6.5321], [9.3732, 6.3194], [9.0602, 6.0092], [8.9351, 5.781], [8.801, 5.1973], [8.5561, 4.7552], [8.4313, 4.7463], [8.2932, 4.5576], [7.6442, 4.5252], [7.46, 4.5554], [7.1546, 4.5146], [7.0135, 4.3974], [6.7569, 4.3437], [6.5545, 4.3415], [6.0764, 4.2904], [5.7985, 4.456], [5.5877, 4.6473], [5.3831, 5.1289], [5.3857, 5.4019], [5.2326, 5.4836], [5.0422, 5.7974], [4.861, 6.0265], [4.6333, 6.2174], [4.4313, 6.3487], [4.1259, 6.4114], [3.4868, 6.4091], [2.7064, 6.3692], [2.7748, 6.7118], [2.7215, 6.9804], [2.7566, 7.0679], [2.7504, 7.395], [2.7849, 7.4767], [2.7193, 7.6161], [2.6859, 7.874], [2.733, 8.7826], [2.7748, 9.0485], [3.0451, 9.084], [3.1481, 9.3206], [3.1362, 9.4516], [3.3296, 9.6668], [3.3252, 9.7783], [3.5573, 9.9074], [3.6462, 10.16], [3.5764, 10.2683], [3.6803, 10.4277], [3.7837, 10.4361], [3.8344, 10.6074], [3.7567, 10.7686], [3.7162, 11.0798], [3.4877, 11.3954], [3.4908, 11.4992], [3.5955, 11.6963], [3.6186, 11.8277], [3.6466, 12.53], [3.948, 12.775], [4.0874, 13.0555], [4.1477, 13.4577], [4.4216, 13.6477], [4.8233, 13.76], [5.2419, 13.7573], [5.4919, 13.8727], [6.3862, 13.6037], [6.6265, 13.364], [6.8044, 13.1075], [6.9371, 13.008], [7.0565, 13], [7.1728, 13.0861], [7.358, 13.107], [7.7885, 13.3379], [8.0953, 13.2912], [8.4561, 13.0595], [8.7504, 12.9081], [9.2014, 12.8216], [9.616, 12.8105], [9.9294, 13.1354], [10.1846, 13.2699], [10.4758, 13.3303], [10.9588, 13.3715], [11.4121, 13.3538], [11.6934, 13.2979], [11.9899, 13.1918], [12.1178, 13.0906], [12.4631, 13.0937], [12.6549, 13.3267], [13.0487, 13.5345], [13.1938, 13.5731], [13.3239, 13.6707], [13.6062, 13.7045]]] }, \"properties\": { \"name\": \"Nigeria\", \"id\": \"NG\" }, \"id\": \"NG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[167.9395, -29.0175], [167.9789, -29.0756], [167.9203, -29.0827], [167.9395, -29.0175]]] }, \"properties\": { \"name\": \"Norfolk Island\", \"id\": \"NF\" }, \"id\": \"NF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.9791, 22.996], [15.1723, 21.9222], [15.182, 21.5232], [15.2939, 21.4114], [15.6073, 20.9546], [15.5402, 20.8746], [15.5873, 20.7335], [15.9295, 20.3997], [15.9491, 20.3034], [15.7351, 19.9039], [15.6375, 18.811], [15.5615, 17.9375], [15.4745, 16.9085], [14.3679, 15.7499], [13.8073, 14.9661], [13.6426, 14.6309], [13.4482, 14.3805], [13.6062, 13.7045], [13.3239, 13.6707], [13.1938, 13.5731], [13.0487, 13.5345], [12.6549, 13.3267], [12.4631, 13.0937], [12.1178, 13.0906], [11.9899, 13.1918], [11.6934, 13.2979], [11.4121, 13.3538], [10.9588, 13.3715], [10.4758, 13.3303], [10.1846, 13.2699], [9.9294, 13.1354], [9.616, 12.8105], [9.2014, 12.8216], [8.7504, 12.9081], [8.4561, 13.0595], [8.0953, 13.2912], [7.7885, 13.3379], [7.358, 13.107], [7.1728, 13.0861], [7.0565, 13], [6.9371, 13.008], [6.8044, 13.1075], [6.6265, 13.364], [6.3862, 13.6037], [5.4919, 13.8727], [5.2419, 13.7573], [4.8233, 13.76], [4.4216, 13.6477], [4.1477, 13.4577], [4.0874, 13.0555], [3.948, 12.775], [3.6466, 12.53], [3.6186, 11.8277], [3.5955, 11.6963], [3.45, 11.8521], [3.3598, 11.8805], [3.1494, 12.118], [2.8782, 12.3679], [2.366, 12.2219], [2.4125, 11.9995], [2.389, 11.897], [2.0912, 12.2778], [2.0686, 12.379], [2.2039, 12.4128], [2.2114, 12.5384], [2.0739, 12.7142], [1.9562, 12.7075], [1.7898, 12.6134], [1.5651, 12.6356], [1.0969, 13.0009], [0.9872, 13.0418], [0.973, 13.1705], [1.0179, 13.4679], [0.9779, 13.5518], [0.748, 13.6743], [0.6184, 13.7036], [0.4292, 13.9721], [0.3548, 14.1391], [0.3824, 14.2461], [0.1638, 14.4973], [0.2175, 14.9114], [0.2863, 14.9802], [0.7187, 14.9549], [0.9601, 14.9869], [1.3002, 15.2723], [1.8595, 15.3016], [3.0012, 15.3411], [3.0602, 15.4272], [3.5041, 15.3562], [3.5205, 15.4831], [3.8769, 15.7553], [4.0151, 16.1929], [4.1211, 16.3577], [4.1824, 16.5818], [4.2028, 16.9626], [4.2347, 16.9964], [4.2321, 17.8305], [4.2276, 19.1426], [5.7484, 19.4342], [5.8367, 19.4791], [6.9895, 20.4707], [7.4818, 20.8729], [8.3429, 21.3807], [9.3785, 21.9915], [10.4146, 22.6019], [11.4501, 23.2127], [11.9678, 23.518], [13.4815, 23.1803], [13.5987, 23.1194], [14.2005, 22.6236], [14.2308, 22.6183], [14.9791, 22.996]]] }, \"properties\": { \"name\": \"Niger\", \"id\": \"NE\" }, \"id\": \"NE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[168.0109, -21.43], [168.1392, -21.4452], [168.1206, -21.616], [168.0065, -21.6431], [167.876, -21.5823], [167.8156, -21.3928], [168.0109, -21.43]]], [[[167.401, -21.1606], [167.1337, -21.0607], [167.1116, -20.904], [167.2936, -20.8916], [167.4307, -21.0554], [167.401, -21.1606]]], [[[164.2023, -20.2461], [164.3151, -20.3088], [164.4358, -20.2821], [164.9756, -20.6812], [165.1917, -20.7691], [165.3804, -20.936], [165.4469, -21.0807], [165.6628, -21.2671], [166.3032, -21.6373], [166.6898, -21.9529], [166.9425, -22.09], [166.9704, -22.3227], [166.7742, -22.376], [166.1768, -22.0892], [166.0959, -21.9564], [165.8235, -21.8539], [165.744, -21.7771], [165.2418, -21.5254], [164.9277, -21.2898], [164.6556, -20.9919], [164.4549, -20.829], [164.1699, -20.4801], [164.2023, -20.2461]]]] }, \"properties\": { \"name\": \"New Caledonia\", \"id\": \"NC\" }, \"id\": \"NC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[23.3806, -17.6405], [24.2751, -17.4812], [24.9326, -17.5433], [25.0923, -17.6343], [25.2588, -17.7936], [24.909, -17.8216], [24.7923, -17.8647], [24.5304, -18.0529], [24.359, -17.9783], [24.1291, -18.0773], [23.8983, -18.2291], [23.7002, -18.4244], [23.5805, -18.4529], [23.4598, -18.2309], [23.2985, -18.0276], [23.1001, -18.0093], [22.0113, -18.1985], [21.2327, -18.3068], [20.9739, -18.3188], [20.9748, -18.9287], [20.977, -20.1525], [20.978, -20.9683], [20.9797, -21.9618], [20.9708, -21.9999], [19.9774, -21.9999], [19.9787, -23.1027], [19.9795, -23.9625], [19.9805, -24.7769], [19.9805, -26.0865], [19.9805, -26.9761], [19.9805, -28.4516], [19.6715, -28.5038], [19.4829, -28.6614], [19.2711, -28.7778], [19.2458, -28.9016], [19.0261, -28.9278], [18.8388, -28.8692], [18.6005, -28.8554], [18.311, -28.8861], [18.1028, -28.8719], [17.8418, -28.7769], [17.448, -28.6984], [17.3477, -28.5012], [17.3855, -28.3534], [17.3122, -28.2287], [17.2044, -28.1989], [17.0562, -28.0311], [16.9331, -28.0698], [16.8102, -28.2646], [16.7556, -28.4524], [16.6264, -28.4879], [16.4475, -28.6175], [15.719, -27.9659], [15.3414, -27.3866], [15.1328, -26.7877], [15.1633, -26.6], [15.0968, -26.426], [14.9676, -26.3182], [14.9312, -25.9582], [14.8451, -25.7255], [14.8637, -25.5338], [14.8224, -25.3585], [14.8371, -25.0331], [14.7678, -24.788], [14.628, -24.5479], [14.5015, -24.2021], [14.4833, -24.0503], [14.497, -23.6428], [14.474, -23.281], [14.4034, -22.9681], [14.4957, -22.9215], [14.526, -22.7027], [14.4629, -22.4492], [14.3217, -22.19], [13.9733, -21.7678], [13.8392, -21.473], [13.4504, -20.9169], [13.2844, -20.5241], [13.1685, -20.1845], [13.042, -20.0282], [12.4583, -18.9269], [12.3287, -18.7511], [12.0956, -18.5411], [11.9514, -18.2704], [11.776, -18.0018], [11.7334, -17.7511], [11.7431, -17.2495], [12.0139, -17.1686], [12.2133, -17.2099], [12.548, -17.2126], [13.1011, -16.9675], [13.4038, -17.008], [13.5617, -17.1411], [13.9383, -17.3888], [14.0177, -17.4087], [14.4145, -17.3875], [15.0005, -17.3884], [16.1483, -17.3901], [16.9137, -17.3915], [17.8356, -17.3928], [18.3962, -17.3995], [18.4868, -17.443], [18.718, -17.7031], [18.8259, -17.7662], [19.6396, -17.8687], [20.1944, -17.8638], [20.3928, -17.8873], [20.625, -17.9966], [20.9082, -18.0063], [21.1133, -17.9557], [21.4169, -18.0005], [22.6243, -17.7816], [23.3806, -17.6405]]] }, \"properties\": { \"name\": \"Namibia\", \"id\": \"NA\" }, \"id\": \"NA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[45.1802, -12.9765], [45.0692, -12.8957], [45.135, -12.7093], [45.2232, -12.752], [45.1802, -12.9765]]] }, \"properties\": { \"name\": \"Mayotte\", \"id\": \"YT\" }, \"id\": \"YT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[111.3894, 2.4154], [111.3112, 2.4376], [111.3006, 2.7412], [111.3783, 2.7093], [111.3894, 2.4154]]], [[[117.8849, 4.1861], [117.6492, 4.1688], [117.7615, 4.2522], [117.8849, 4.1861]]], [[[99.8482, 6.4655], [99.9187, 6.3585], [99.7439, 6.2631], [99.7492, 6.4096], [99.8482, 6.4655]]], [[[102.101, 6.2422], [102.3402, 6.1721], [102.5341, 5.8627], [102.7903, 5.6447], [102.9825, 5.5249], [103.1969, 5.2621], [103.4157, 4.8502], [103.4686, 4.3934], [103.4206, 3.977], [103.362, 3.7693], [103.4535, 3.5207], [103.4397, 2.933], [103.5374, 2.775], [103.8122, 2.5806], [104.2188, 1.7229], [104.2884, 1.4806], [104.1766, 1.3647], [104.0763, 1.5299], [103.9915, 1.4549], [103.6945, 1.4495], [103.4801, 1.3296], [103.3568, 1.5463], [102.8968, 1.7922], [102.7272, 1.8557], [102.5484, 2.0426], [102.1458, 2.2485], [101.8901, 2.4496], [101.7813, 2.5735], [101.5199, 2.6835], [101.2952, 2.8851], [101.3543, 3.0111], [101.2997, 3.2535], [101.1154, 3.4719], [101.025, 3.6246], [100.8513, 3.7768], [100.7156, 3.9664], [100.7954, 4.0232], [100.661, 4.2256], [100.6144, 4.3734], [100.6144, 4.6522], [100.4731, 5.0441], [100.3524, 5.5875], [100.3742, 5.7779], [100.3432, 5.9843], [100.1189, 6.442], [100.1767, 6.6719], [100.2614, 6.6825], [100.3453, 6.5498], [100.6295, 6.4482], [100.7937, 6.426], [100.874, 6.2453], [101.0533, 6.2427], [101.0756, 5.9563], [100.9819, 5.7712], [101.1142, 5.6368], [101.2571, 5.7895], [101.5563, 5.908], [101.6499, 5.7961], [101.8737, 5.8254], [101.9362, 5.9794], [102.0552, 6.0966], [102.101, 6.2422]]], [[[117.5745, 4.1706], [117.4507, 4.1928], [117.2776, 4.2993], [117.1005, 4.337], [116.5146, 4.3708], [116.4147, 4.3082], [116.1345, 4.3553], [116.0215, 4.2909], [115.8962, 4.3486], [115.6787, 4.1932], [115.5686, 3.9388], [115.5446, 3.6334], [115.566, 3.4457], [115.5198, 3.3618], [115.4545, 3.0342], [115.2469, 3.0258], [115.0861, 2.8411], [115.0808, 2.6342], [115.1509, 2.4931], [114.7865, 2.2503], [114.7585, 2.1624], [114.8304, 1.98], [114.7035, 1.8508], [114.6609, 1.6861], [114.5458, 1.4673], [114.3869, 1.5001], [113.9022, 1.4344], [113.6222, 1.236], [113.5134, 1.3084], [113.359, 1.327], [113.0065, 1.4339], [112.9429, 1.5671], [112.4761, 1.5592], [112.1857, 1.4393], [112.0783, 1.1432], [111.9229, 1.113], [111.7698, 0.9994], [111.483, 0.9958], [111.2869, 1.0434], [110.9379, 1.0172], [110.6148, 0.8782], [110.5056, 0.8618], [110.3151, 0.9958], [109.818, 1.4389], [109.6542, 1.6151], [109.636, 1.7767], [109.5388, 1.8961], [109.6289, 2.0274], [109.7195, 1.8579], [109.9844, 1.7176], [110.2459, 1.6946], [110.3494, 1.7198], [110.6751, 1.5481], [110.9402, 1.5174], [111.1541, 1.7389], [111.1701, 1.9023], [111.2682, 2.1398], [111.1954, 2.2973], [111.242, 2.4358], [111.444, 2.3817], [111.4431, 2.6342], [111.5123, 2.743], [111.7276, 2.854], [112.1186, 2.9148], [112.7375, 3.0706], [113.0447, 3.2051], [113.4459, 3.7404], [113.7123, 4.0015], [113.924, 4.2434], [114.0638, 4.5927], [114.224, 4.4778], [114.3231, 4.2629], [114.4167, 4.2558], [114.6084, 4.0241], [114.7762, 4.1688], [114.8402, 4.3934], [114.7901, 4.464], [114.7465, 4.7179], [115.0267, 4.8999], [115.0267, 4.6912], [115.1069, 4.3903], [115.2469, 4.3472], [115.2668, 4.634], [115.1399, 4.8999], [115.3751, 4.9328], [115.5198, 5.0491], [115.582, 5.1942], [115.4669, 5.2541], [115.419, 5.413], [115.5562, 5.5666], [115.7968, 5.536], [116.0595, 5.8822], [116.1386, 6.1295], [116.4945, 6.5219], [116.7498, 6.9773], [116.8329, 6.952], [116.8076, 6.691], [116.9131, 6.6595], [117.1284, 6.9689], [117.2523, 6.9191], [117.294, 6.6768], [117.6096, 6.5126], [117.6957, 6.2724], [117.6159, 6.1965], [117.6172, 5.9408], [117.8178, 5.9404], [118.0038, 6.0531], [118.1156, 5.8627], [117.9345, 5.7877], [117.9736, 5.7064], [118.2493, 5.8205], [118.4561, 5.7633], [118.5947, 5.5919], [118.9572, 5.429], [119.2236, 5.4126], [119.2497, 5.1986], [119.1322, 5.1005], [118.6719, 4.9642], [118.382, 5.0184], [118.2604, 4.9887], [118.1853, 4.8284], [118.3243, 4.6686], [118.5627, 4.5021], [118.4979, 4.3623], [118.0083, 4.25], [117.7411, 4.3375], [117.65, 4.3046], [117.5745, 4.1706]]], [[[117.1418, 7.1682], [117.0641, 7.2605], [117.2644, 7.3515], [117.2394, 7.1846], [117.1418, 7.1682]]]] }, \"properties\": { \"name\": \"Malaysia\", \"id\": \"MY\" }, \"id\": \"MY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.9596, -11.5783], [34.6596, -11.5885], [34.5539, -11.8339], [34.3759, -12.1203], [34.3608, -12.2104], [34.466, -12.5908], [34.5214, -12.926], [34.5636, -13.36], [34.6617, -13.4866], [34.8504, -13.5159], [35.0137, -13.6433], [35.2476, -13.8968], [35.8474, -14.6709], [35.8665, -14.8639], [35.8052, -15.2657], [35.8301, -15.4188], [35.791, -15.9586], [35.7555, -16.0585], [35.5992, -16.1259], [35.3586, -16.1606], [35.2916, -16.2472], [35.1674, -16.5601], [35.2809, -16.8078], [35.2903, -17.0968], [35.1247, -17.1274], [35.044, -17.0169], [35.1123, -16.8983], [34.9335, -16.7602], [34.3955, -16.1991], [34.403, -16.0802], [34.248, -15.8875], [34.3582, -15.7052], [34.4349, -15.4774], [34.541, -15.2973], [34.5512, -14.9225], [34.5055, -14.5981], [34.3324, -14.4085], [33.6958, -14.5302], [33.6363, -14.5684], [33.39, -14.2896], [33.2018, -14.0135], [33.1481, -13.9412], [32.9922, -14.0224], [32.8671, -13.8173], [32.765, -13.7609], [32.6722, -13.6105], [32.852, -13.4568], [32.9679, -13.2252], [32.9999, -12.8997], [32.9456, -12.8043], [33.0215, -12.6303], [33.398, -12.49], [33.4917, -12.3311], [33.3403, -12.3085], [33.2524, -12.1127], [33.3008, -11.8882], [33.2884, -11.6111], [33.2262, -11.5347], [33.3798, -11.158], [33.2613, -10.8934], [33.4645, -10.7833], [33.659, -10.5907], [33.5538, -10.3913], [33.529, -10.2346], [33.3115, -10.038], [33.351, -9.8622], [33.1956, -9.6261], [32.9958, -9.6229], [32.9199, -9.4072], [33.1303, -9.496], [33.3309, -9.5191], [33.421, -9.6078], [33.6976, -9.5981], [33.9439, -9.6723], [33.9955, -9.4955], [34.3208, -9.7317], [34.5241, -10.0299], [34.5698, -10.2413], [34.5837, -10.5249], [34.6671, -10.7926], [34.608, -11.0806], [34.7736, -11.3417], [34.937, -11.4634], [34.9596, -11.5783]]] }, \"properties\": { \"name\": \"Malawi\", \"id\": \"MW\" }, \"id\": \"MW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[57.6513, -20.4849], [57.3833, -20.5037], [57.3859, -20.2284], [57.5758, -19.9972], [57.6567, -19.99], [57.7921, -20.2125], [57.7806, -20.327], [57.6513, -20.4849]]] }, \"properties\": { \"name\": \"Mauritius\", \"id\": \"MU\" }, \"id\": \"MU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.8263, 14.4946], [-61.0638, 14.4671], [-61.0114, 14.602], [-61.141, 14.6522], [-61.2198, 14.8045], [-61.1275, 14.8755], [-60.9186, 14.7352], [-60.8263, 14.4946]]] }, \"properties\": { \"name\": \"Martinique\", \"id\": \"MQ\" }, \"id\": \"MQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.1484, 16.7403], [-62.1542, 16.6812], [-62.2216, 16.6994], [-62.223, 16.7518], [-62.1484, 16.7403]]] }, \"properties\": { \"name\": \"Montserrat\", \"id\": \"MS\" }, \"id\": \"MS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-12.2807, 14.8089], [-12.5435, 15.0388], [-12.6596, 15.0819], [-12.8584, 15.2426], [-12.8626, 15.3402], [-12.9943, 15.5049], [-13.0793, 15.5102], [-13.258, 15.7002], [-13.297, 15.8538], [-13.4095, 16.0594], [-13.5556, 16.1441], [-13.8685, 16.1481], [-13.9751, 16.311], [-14.3, 16.5804], [-14.5337, 16.6559], [-15.1127, 16.6448], [-15.2106, 16.5827], [-15.38, 16.5818], [-15.6208, 16.5068], [-15.959, 16.4921], [-16.1683, 16.5471], [-16.3024, 16.4513], [-16.4411, 16.2045], [-16.5352, 15.8383], [-16.5356, 16.2866], [-16.4637, 16.6013], [-16.3468, 16.9262], [-16.2074, 17.1926], [-16.0789, 17.5459], [-16.0303, 17.8882], [-16.0849, 18.5212], [-16.2131, 19.0032], [-16.3059, 19.1537], [-16.5145, 19.3619], [-16.2835, 19.7871], [-16.2105, 20.2279], [-16.3337, 20.4157], [-16.4298, 20.6523], [-16.5305, 20.7095], [-16.6224, 20.6341], [-16.8761, 21.0859], [-16.9982, 21.0398], [-17.0481, 20.8063], [-17.0641, 20.8987], [-16.9647, 21.3292], [-16.1483, 21.3301], [-15.0018, 21.3314], [-13.8554, 21.3328], [-13.0163, 21.3341], [-13.0944, 22.4958], [-13.1665, 22.7532], [-13.0316, 23], [-12.6203, 23.2712], [-12.3728, 23.3178], [-12.0235, 23.4674], [-12.0164, 23.5766], [-12.0164, 24.9234], [-12.0164, 25.9954], [-10.7489, 25.9954], [-9.8171, 25.9954], [-8.6821, 25.9954], [-8.6834, 27.2858], [-7.9313, 26.8437], [-6.9908, 26.2906], [-6.2387, 25.848], [-5.5169, 25.4237], [-4.8227, 24.9958], [-5.9597, 24.9949], [-6.594, 24.9944], [-6.4251, 23.5234], [-6.3113, 22.529], [-6.2258, 21.7829], [-6.0549, 20.2909], [-5.9411, 19.2962], [-5.8556, 18.5505], [-5.7417, 17.5557], [-5.6285, 16.5685], [-5.36, 16.2831], [-5.5125, 15.4964], [-6.1317, 15.496], [-7.3555, 15.496], [-8.3752, 15.496], [-9.1768, 15.496], [-9.4478, 15.575], [-9.4469, 15.4583], [-9.9414, 15.374], [-10.4117, 15.4379], [-10.6965, 15.4228], [-10.8955, 15.1502], [-11.1692, 15.3584], [-11.4553, 15.6252], [-11.5026, 15.6367], [-11.7602, 15.4254], [-11.8289, 15.2448], [-11.8728, 14.9954], [-12.1047, 14.7454], [-12.2807, 14.8089]]] }, \"properties\": { \"name\": \"Mauritania\", \"id\": \"MR\" }, \"id\": \"MR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[32.8862, -26.8495], [32.3535, -26.8614], [32.1129, -26.8393], [32.1058, -26.5201], [32.0414, -26.2814], [32.0605, -26.0185], [31.9482, -25.9577], [31.9202, -25.7739], [31.9847, -25.6319], [31.986, -24.4605], [31.7995, -23.8923], [31.5457, -23.4821], [31.5319, -23.2793], [31.4191, -22.8252], [31.2878, -22.4021], [31.4293, -22.2987], [32.3713, -21.335], [32.3535, -21.1366], [32.476, -20.9502], [32.4778, -20.7131], [32.5292, -20.6132], [32.6727, -20.5161], [32.8698, -20.2173], [32.9927, -19.9848], [33.0069, -19.8737], [32.8306, -19.5581], [32.7779, -19.3885], [32.8497, -19.1045], [32.7166, -19.0019], [32.7219, -18.8284], [32.8547, -18.7636], [32.9932, -18.3596], [32.9555, -18.083], [32.9545, -17.7652], [32.9808, -17.4377], [32.9692, -17.2517], [32.8844, -17.0377], [32.8765, -16.8836], [32.9478, -16.7123], [32.7419, -16.6777], [32.6358, -16.5894], [32.2434, -16.4486], [31.9398, -16.4287], [31.6877, -16.2143], [31.4897, -16.1797], [31.2362, -16.0238], [30.4377, -15.9955], [30.396, -15.643], [30.3506, -15.3495], [30.2522, -15.1831], [30.2317, -14.9905], [30.6733, -14.8191], [31.5381, -14.5773], [31.729, -14.4959], [32.2727, -14.3229], [33.2018, -14.0135], [33.39, -14.2896], [33.6363, -14.5684], [33.6958, -14.5302], [34.3324, -14.4085], [34.5055, -14.5981], [34.5512, -14.9225], [34.541, -15.2973], [34.4349, -15.4774], [34.3582, -15.7052], [34.248, -15.8875], [34.403, -16.0802], [34.3955, -16.1991], [34.9335, -16.7602], [35.1123, -16.8983], [35.044, -17.0169], [35.1247, -17.1274], [35.2903, -17.0968], [35.2809, -16.8078], [35.1674, -16.5601], [35.2916, -16.2472], [35.3586, -16.1606], [35.5992, -16.1259], [35.7555, -16.0585], [35.791, -15.9586], [35.8301, -15.4188], [35.8052, -15.2657], [35.8665, -14.8639], [35.8474, -14.6709], [35.2476, -13.8968], [35.0137, -13.6433], [34.8504, -13.5159], [34.6617, -13.4866], [34.5636, -13.36], [34.5214, -12.926], [34.466, -12.5908], [34.3608, -12.2104], [34.3759, -12.1203], [34.5539, -11.8339], [34.6596, -11.5885], [34.9596, -11.5783], [35.6312, -11.5818], [35.7853, -11.453], [35.9113, -11.4549], [36.0822, -11.5374], [36.1914, -11.6705], [36.5185, -11.7164], [36.7711, -11.6102], [36.9789, -11.5667], [37.2186, -11.6866], [37.3731, -11.7105], [37.5417, -11.675], [37.8294, -11.482], [37.9203, -11.2946], [38.1765, -11.2787], [38.4916, -11.4132], [38.7948, -11.229], [38.9874, -11.1672], [39.3218, -11.1223], [39.5637, -10.9786], [39.8171, -10.9125], [39.9889, -10.8209], [40.4634, -10.4641], [40.6117, -10.6617], [40.4865, -10.765], [40.597, -10.8308], [40.5163, -10.9298], [40.5446, -11.0656], [40.4031, -11.3319], [40.4652, -11.4495], [40.4332, -11.6573], [40.5314, -12.0044], [40.5016, -12.1194], [40.5233, -12.3928], [40.5806, -12.6356], [40.5535, -12.8247], [40.5828, -13.3739], [40.5451, -13.463], [40.5903, -13.8452], [40.6024, -14.1675], [40.7156, -14.2146], [40.6401, -14.3899], [40.818, -14.4676], [40.8349, -14.7916], [40.7008, -14.9296], [40.6179, -15.1156], [40.6512, -15.2608], [40.5588, -15.4734], [40.1088, -15.9794], [39.9835, -16.2254], [39.7909, -16.2946], [39.8447, -16.4357], [39.2423, -16.7927], [39.0842, -16.9729], [38.8849, -17.0417], [38.6332, -17.078], [38.145, -17.2428], [38.0482, -17.3213], [37.8396, -17.3933], [37.2443, -17.7399], [36.9394, -17.9934], [36.8994, -18.1287], [36.5403, -18.518], [36.4036, -18.7698], [36.2358, -18.8612], [36.1248, -18.8425], [35.8536, -18.9935], [35.6512, -19.164], [35.3653, -19.4937], [34.9481, -19.813], [34.7558, -19.8218], [34.7501, -20.0908], [34.6981, -20.4042], [34.7647, -20.5618], [34.9822, -20.8064], [35.1176, -21.1952], [35.1279, -21.3953], [35.2677, -21.6511], [35.3293, -22.0373], [35.3156, -22.3968], [35.542, -22.3764], [35.4901, -22.6578], [35.5753, -22.9632], [35.4944, -23.1852], [35.3702, -23.7982], [35.542, -23.8244], [35.4381, -24.1711], [35.1558, -24.5412], [34.9921, -24.6505], [34.6071, -24.8213], [33.8361, -25.0681], [33.3473, -25.2608], [32.9612, -25.4903], [32.7921, -25.6443], [32.7224, -25.8209], [32.5905, -26.0039], [32.7033, -26.1583], [32.8489, -26.268], [32.9337, -26.2524], [32.8862, -26.8495]]] }, \"properties\": { \"name\": \"Mozambique\", \"id\": \"MZ\" }, \"id\": \"MZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[145.7519, 15.1334], [145.6844, 15.125], [145.7133, 15.2155], [145.7822, 15.1746], [145.7519, 15.1334]]] }, \"properties\": { \"name\": \"Northern Mariana Islands\", \"id\": \"MP\" }, \"id\": \"MP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[116.6832, 49.8238], [116.2433, 49.1704], [115.954, 48.6894], [115.8207, 48.5771], [115.7857, 48.2482], [115.5251, 48.131], [115.5575, 47.945], [115.8984, 47.6871], [116.2313, 47.858], [116.5136, 47.8394], [116.7604, 47.87], [117.0698, 47.8065], [117.3508, 47.652], [117.7685, 47.9881], [118.1472, 48.0289], [118.4983, 47.984], [118.7598, 47.7577], [119.082, 47.6542], [119.1228, 47.5584], [119.5268, 47.2561], [119.711, 47.15], [119.8979, 46.8579], [119.8673, 46.6724], [119.7065, 46.6062], [119.1619, 46.6386], [118.844, 46.7603], [118.7229, 46.6919], [118.3087, 46.7172], [117.9105, 46.6195], [117.6709, 46.5219], [117.4054, 46.5707], [117.3335, 46.3621], [116.859, 46.3878], [116.5625, 46.2897], [116.3574, 46.0966], [116.2132, 45.8871], [116.2406, 45.7961], [115.6809, 45.4583], [114.9192, 45.3784], [114.739, 45.4197], [114.517, 45.3647], [114.4189, 45.2027], [114.0306, 44.9425], [113.5871, 44.7459], [113.0496, 44.8102], [112.5968, 44.9177], [112.4111, 45.0584], [111.8981, 45.0641], [111.6211, 44.8271], [111.4023, 44.3672], [111.5198, 44.1919], [111.8368, 43.9349], [111.9331, 43.7116], [111.7711, 43.6646], [111.5474, 43.4963], [111.0072, 43.3414], [110.4004, 42.7736], [109.6981, 42.5539], [109.4434, 42.4558], [108.6874, 42.4163], [108.1712, 42.4474], [106.7702, 42.2889], [105.8674, 41.9942], [105.1971, 41.7381], [105.0506, 41.616], [104.4984, 41.6586], [104.4984, 41.877], [103.7109, 41.7514], [103.0726, 42.0061], [102.1569, 42.158], [101.973, 42.2157], [101.7138, 42.4656], [101.4955, 42.5389], [101.092, 42.5513], [99.984, 42.6773], [99.4678, 42.5682], [98.947, 42.6161], [97.2057, 42.7896], [96.3854, 42.7204], [96.2997, 42.9286], [95.9127, 43.2064], [95.842, 43.3836], [95.5256, 43.954], [95.3564, 44.0059], [95.3503, 44.278], [95.0497, 44.2594], [94.7119, 44.3508], [94.3647, 44.5195], [94.1993, 44.6451], [93.9578, 44.6748], [93.6563, 44.9008], [93.2946, 44.9833], [92.7876, 45.0357], [92.4237, 45.0091], [92.0299, 45.0686], [91.5842, 45.0766], [91.3121, 45.1183], [91.0497, 45.2173], [90.8771, 45.196], [90.6619, 45.5253], [90.7098, 45.7309], [91.0018, 46.0358], [90.9117, 46.2706], [91.0338, 46.529], [90.9859, 46.7492], [90.87, 46.9547], [90.7155, 47.0039], [90.4963, 47.2854], [90.3133, 47.676], [90.1035, 47.7453], [90.028, 47.8775], [89.778, 47.8269], [89.561, 48.004], [89.0478, 48.0027], [88.5759, 48.2202], [88.517, 48.3844], [87.9799, 48.5549], [88.0277, 48.7356], [87.7432, 48.8816], [87.86, 48.9655], [87.8142, 49.1624], [88.1156, 49.2562], [88.1925, 49.4518], [88.6332, 49.4862], [88.8316, 49.4485], [89.1801, 49.5324], [89.6542, 49.7174], [89.644, 49.903], [89.9774, 49.9843], [90.0049, 50.0692], [90.5167, 50.2133], [91.0214, 50.4155], [91.341, 50.4701], [91.8044, 50.6936], [92.1923, 50.7007], [92.3549, 50.8642], [92.6265, 50.6883], [92.7792, 50.7786], [92.9412, 50.7781], [93.1032, 50.6039], [94.2512, 50.5564], [94.3545, 50.2219], [94.6147, 50.0237], [94.9303, 50.0437], [95.0444, 49.9616], [95.5229, 49.9112], [95.8519, 50.0128], [96.0654, 49.9987], [96.3152, 49.9012], [96.5056, 49.9187], [96.986, 49.8828], [97.2088, 49.7308], [97.3597, 49.7414], [97.5893, 49.9114], [97.8538, 49.9468], [98.1033, 50.0779], [98.2502, 50.3025], [98.2795, 50.5333], [98.03, 50.6447], [97.9533, 50.8551], [97.8254, 50.9852], [97.9469, 51.3483], [98.22, 51.5057], [98.3528, 51.7176], [98.6403, 51.8011], [98.8486, 52.0701], [99.407, 51.9236], [99.7195, 51.8717], [99.9214, 51.7556], [100.4688, 51.7261], [101.3813, 51.4526], [101.571, 51.4673], [102.1115, 51.3534], [102.215, 50.8294], [102.3166, 50.7184], [102.2883, 50.585], [102.6833, 50.387], [103.1618, 50.2908], [103.3043, 50.2004], [103.6329, 50.1387], [103.8028, 50.176], [104.1797, 50.1694], [104.4664, 50.3061], [105.0945, 50.39], [105.3835, 50.4736], [105.8754, 50.4055], [106.218, 50.3045], [106.7112, 50.3125], [106.9411, 50.1966], [107.2332, 49.9894], [107.631, 49.9831], [107.9479, 49.9247], [107.9368, 49.6911], [108.034, 49.594], [108.4069, 49.3963], [108.6137, 49.3228], [109.2365, 49.3348], [109.5286, 49.2698], [110.1997, 49.1704], [110.4279, 49.2201], [110.6312, 49.1375], [110.8278, 49.1662], [111.3365, 49.3559], [112.0796, 49.4243], [112.4951, 49.5324], [112.8063, 49.5237], [113.0557, 49.6162], [113.1641, 49.7971], [113.5742, 50.0071], [113.8809, 50.1012], [114.2969, 50.2743], [114.7429, 50.2337], [115.0036, 50.1387], [115.2743, 49.9489], [115.7177, 49.8806], [116.1345, 50.0109], [116.5509, 49.9203], [116.6832, 49.8238]]] }, \"properties\": { \"name\": \"Mongolia\", \"id\": \"MN\" }, \"id\": \"MN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.1944, 43.5331], [19.2187, 43.4501], [19.5517, 43.2122], [19.9441, 43.0817], [20.34, 42.8931], [20.3444, 42.8278], [20.0293, 42.7319], [20.0639, 42.5472], [19.7883, 42.4762], [19.6547, 42.6285], [19.2808, 42.1727], [19.3612, 42.0692], [19.3426, 41.869], [19.1864, 41.9485], [19.1224, 42.0603], [18.8942, 42.2494], [18.5174, 42.4328], [18.4362, 42.5597], [18.5431, 42.6742], [18.4659, 42.7772], [18.4437, 42.9685], [18.6234, 43.0275], [18.674, 43.2309], [18.8512, 43.3463], [19.0367, 43.3574], [18.9404, 43.4968], [19.1944, 43.5331]]] }, \"properties\": { \"name\": \"Montenegro\", \"id\": \"ME\" }, \"id\": \"ME\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[98.5537, 11.7447], [98.5285, 11.5387], [98.4349, 11.5671], [98.3763, 11.7913], [98.5537, 11.7447]]], [[[97.575, 16.2533], [97.4805, 16.3057], [97.4689, 16.4611], [97.5994, 16.4295], [97.575, 16.2533]]], [[[93.6909, 18.6841], [93.4877, 18.8674], [93.7447, 18.8656], [93.6909, 18.6841]]], [[[93.7149, 19.5581], [93.9457, 19.4285], [93.9019, 19.3322], [93.7557, 19.3255], [93.6439, 19.4951], [93.7149, 19.5581]]], [[[101.139, 21.5676], [100.9277, 21.3661], [100.7564, 21.3128], [100.6591, 21.1304], [100.5362, 20.9923], [100.5651, 20.825], [100.4075, 20.8232], [100.2494, 20.7304], [100.1838, 20.5892], [100.1225, 20.3167], [99.8904, 20.4246], [99.6387, 20.3202], [99.4589, 20.3629], [99.5015, 20.1875], [99.3382, 20.0788], [99.197, 20.1152], [99.0208, 20.0419], [98.9874, 19.8613], [98.9169, 19.7729], [98.7607, 19.7712], [98.4548, 19.6943], [98.2391, 19.6908], [98.1112, 19.7623], [97.817, 19.46], [97.8041, 19.1306], [97.706, 18.9317], [97.7539, 18.621], [97.7277, 18.5722], [97.4849, 18.4941], [97.4508, 18.3596], [97.5994, 18.3027], [97.7197, 18.0373], [97.6984, 17.8336], [97.7929, 17.6813], [98.2564, 17.1477], [98.4389, 16.9755], [98.4783, 16.7322], [98.6892, 16.3053], [98.8352, 16.4175], [98.8884, 16.3519], [98.8179, 16.1809], [98.5924, 16.0504], [98.5582, 15.7686], [98.5653, 15.4037], [98.1912, 15.2039], [98.2462, 14.8146], [98.5703, 14.3601], [98.9338, 14.0498], [99.1366, 13.7165], [99.1761, 13.2331], [99.1073, 13.1035], [99.2196, 12.7399], [99.4052, 12.5477], [99.4629, 12.1904], [99.5229, 12.0896], [99.6147, 11.7811], [99.478, 11.6124], [99.1903, 11.1051], [98.7572, 10.6612], [98.7682, 10.4308], [98.7026, 10.1902], [98.5626, 10.0348], [98.497, 10.1826], [98.5231, 10.3531], [98.465, 10.6758], [98.6754, 10.987], [98.7446, 11.2404], [98.7416, 11.5916], [98.876, 11.7198], [98.8046, 11.7793], [98.6363, 11.7385], [98.6897, 11.9569], [98.6962, 12.2254], [98.6244, 12.4407], [98.6648, 12.5402], [98.6373, 12.8482], [98.576, 13.1621], [98.4215, 13.4839], [98.2453, 13.7334], [98.1108, 13.7129], [98.0726, 13.9864], [98.1001, 14.1617], [97.9985, 14.3352], [97.9097, 14.6526], [97.812, 14.8591], [97.7996, 15.1848], [97.7437, 15.307], [97.7743, 15.4308], [97.7104, 15.8755], [97.5844, 16.0194], [97.6407, 16.2538], [97.6194, 16.5374], [97.3758, 16.5228], [97.2674, 16.7429], [97.1782, 17.0621], [96.9701, 17.3173], [96.851, 17.2028], [96.9088, 17.031], [96.8107, 16.7784], [96.6225, 16.564], [96.3645, 16.5205], [96.3241, 16.4446], [96.0125, 16.2538], [95.7635, 16.169], [95.6796, 15.9768], [95.5557, 15.8378], [95.3897, 15.7229], [95.1771, 15.8259], [94.9427, 15.8183], [94.8913, 15.979], [94.6617, 15.9044], [94.6808, 16.1335], [94.5876, 16.2888], [94.4416, 16.0944], [94.2991, 16.0074], [94.2143, 16.1268], [94.2711, 16.5174], [94.3533, 16.64], [94.473, 17.1353], [94.5645, 17.3085], [94.5889, 17.5694], [94.4944, 17.8247], [94.431, 18.2015], [94.2658, 18.5074], [94.252, 18.6091], [94.07, 18.8936], [94.0017, 19.1816], [93.9293, 18.8998], [93.7056, 19.0267], [93.493, 19.3694], [93.5787, 19.401], [93.825, 19.2385], [93.9622, 19.3295], [93.9982, 19.4409], [93.8396, 19.5341], [93.7393, 19.697], [93.6115, 19.776], [93.5817, 19.9097], [93.3624, 20.0584], [93.1565, 20.0406], [93.0021, 20.0748], [93.0668, 20.3775], [92.8822, 20.152], [92.7912, 20.2115], [92.891, 20.3402], [92.7357, 20.5626], [92.6079, 20.4698], [92.3243, 20.7917], [92.2643, 21.0616], [92.1794, 21.2932], [92.3304, 21.4397], [92.5391, 21.3199], [92.5937, 21.4673], [92.5751, 21.9782], [92.6891, 22.1309], [92.8542, 22.0101], [92.9644, 22.0039], [93.1618, 22.3604], [93.0788, 22.7181], [93.1623, 22.9081], [93.164, 23.032], [93.3079, 23.0302], [93.3661, 23.1323], [93.4148, 23.6823], [93.3075, 24.0218], [93.4938, 23.973], [93.6834, 24.0063], [94.1278, 23.8763], [94.2929, 24.322], [94.5841, 24.7671], [94.7074, 25.0486], [94.5544, 25.2435], [94.6227, 25.4099], [94.786, 25.5191], [94.9919, 25.7704], [95.0151, 25.9128], [95.1323, 26.0412], [95.0688, 26.1912], [95.0599, 26.4739], [95.1287, 26.5973], [95.4638, 26.7562], [95.9051, 27.0466], [96.0614, 27.217], [96.191, 27.2614], [96.666, 27.3391], [96.7978, 27.2961], [96.8803, 27.1779], [97.0379, 27.102], [97.1037, 27.1633], [96.9021, 27.4394], [96.8999, 27.644], [97.2261, 27.89], [97.3353, 27.9379], [97.3224, 28.218], [97.5377, 28.5101], [97.6944, 28.4692], [97.8649, 28.3636], [98.0988, 28.1421], [98.1303, 27.9677], [98.299, 27.5499], [98.5045, 27.6476], [98.651, 27.5726], [98.675, 27.1908], [98.7163, 27.0448], [98.7319, 26.5836], [98.6629, 26.1392], [98.572, 26.1139], [98.6545, 25.9178], [98.6252, 25.8268], [98.4655, 25.789], [98.3337, 25.5866], [98.1725, 25.5946], [98.0109, 25.2923], [97.8197, 25.2519], [97.7149, 25.0344], [97.7237, 24.8421], [97.5834, 24.7747], [97.5315, 24.4915], [97.6664, 24.3801], [97.6904, 24.1306], [97.5684, 23.9886], [97.686, 23.898], [98.0167, 24.0654], [98.2125, 24.1107], [98.4996, 24.1155], [98.5835, 24.0698], [98.7642, 24.116], [98.6808, 23.8417], [98.8322, 23.6246], [98.7979, 23.5203], [98.8854, 23.3076], [98.8636, 23.1913], [99.0549, 23.1305], [99.3408, 23.0959], [99.5073, 22.9592], [99.3852, 22.8251], [99.3377, 22.498], [99.1726, 22.1926], [99.193, 22.126], [99.5925, 22.0892], [99.9179, 22.0279], [99.9254, 21.8206], [100.0892, 21.5579], [100.2149, 21.4628], [100.3507, 21.501], [100.5314, 21.4579], [100.6769, 21.505], [100.8349, 21.6551], [101.1208, 21.7461], [101.139, 21.5676]]]] }, \"properties\": { \"name\": \"Myanmar\", \"id\": \"MM\" }, \"id\": \"MM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.5663, 35.8529], [14.4363, 35.8219], [14.3524, 35.8725], [14.4483, 35.9573], [14.5663, 35.8529]]] }, \"properties\": { \"name\": \"Malta\", \"id\": \"MT\" }, \"id\": \"MT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[4.2276, 19.1426], [4.2321, 17.8305], [4.2347, 16.9964], [4.2028, 16.9626], [4.1824, 16.5818], [4.1211, 16.3577], [4.0151, 16.1929], [3.8769, 15.7553], [3.5205, 15.4831], [3.5041, 15.3562], [3.0602, 15.4272], [3.0012, 15.3411], [1.8595, 15.3016], [1.3002, 15.2723], [0.9601, 14.9869], [0.7187, 14.9549], [0.2863, 14.9802], [0.2175, 14.9114], [-0.2359, 15.0592], [-0.4055, 15.0126], [-0.5364, 15.0779], [-0.7604, 15.0477], [-1.0496, 14.8196], [-1.4937, 14.626], [-1.7678, 14.4862], [-1.9731, 14.4564], [-2.0572, 14.1946], [-2.1131, 14.1684], [-2.4572, 14.274], [-2.5868, 14.2274], [-2.7788, 14.0738], [-2.874, 13.9509], [-2.917, 13.6796], [-3.0387, 13.6393], [-3.1985, 13.6729], [-3.2701, 13.5775], [-3.3017, 13.2805], [-3.5758, 13.194], [-3.8534, 13.3734], [-4.0512, 13.3822], [-4.3286, 13.119], [-4.2252, 12.8793], [-4.2272, 12.7936], [-4.4807, 12.6725], [-4.4218, 12.5814], [-4.4287, 12.3377], [-4.587, 12.1548], [-4.798, 12.0319], [-5.1059, 11.9675], [-5.2881, 11.8277], [-5.2906, 11.6835], [-5.2293, 11.5223], [-5.2998, 11.2058], [-5.4905, 11.0424], [-5.457, 10.7713], [-5.5236, 10.4259], [-5.8439, 10.3895], [-6.0345, 10.1946], [-6.2414, 10.2794], [-6.1907, 10.4001], [-6.2611, 10.7242], [-6.5647, 10.5866], [-6.6542, 10.6562], [-6.6932, 10.3496], [-6.9502, 10.3424], [-7.105, 10.2035], [-7.3631, 10.2595], [-7.498, 10.4397], [-7.6611, 10.4272], [-7.8143, 10.2364], [-7.9907, 10.1627], [-8.0074, 10.322], [-8.2316, 10.4379], [-8.3241, 10.7495], [-8.3374, 10.9905], [-8.4748, 11.0482], [-8.6639, 11.0358], [-8.4075, 11.3865], [-8.665, 11.5152], [-8.8219, 11.6732], [-8.8184, 11.9227], [-9.043, 12.4026], [-9.2156, 12.4829], [-9.3652, 12.4793], [-9.3581, 12.2556], [-9.6582, 12.1433], [-9.7148, 12.0426], [-9.8207, 12.0426], [-10.2748, 12.2126], [-10.4659, 12.1389], [-10.6774, 11.8996], [-10.7431, 11.9271], [-10.9333, 12.205], [-11.0658, 12.1708], [-11.2096, 12.0248], [-11.3053, 12.0154], [-11.5021, 12.1988], [-11.3894, 12.4043], [-11.4489, 12.5322], [-11.3903, 12.9419], [-11.5487, 13.17], [-11.6349, 13.3698], [-11.8945, 13.4444], [-12.0543, 13.633], [-11.9609, 13.8754], [-12.0202, 13.9748], [-12.0193, 14.2065], [-12.2284, 14.4586], [-12.1866, 14.6482], [-12.2807, 14.8089], [-12.1047, 14.7454], [-11.8728, 14.9954], [-11.8289, 15.2448], [-11.7602, 15.4254], [-11.5026, 15.6367], [-11.4553, 15.6252], [-11.1692, 15.3584], [-10.8955, 15.1502], [-10.6965, 15.4228], [-10.4117, 15.4379], [-9.9414, 15.374], [-9.4469, 15.4583], [-9.4478, 15.575], [-9.1768, 15.496], [-8.3752, 15.496], [-7.3555, 15.496], [-6.1317, 15.496], [-5.5125, 15.4964], [-5.36, 16.2831], [-5.6285, 16.5685], [-5.7417, 17.5557], [-5.8556, 18.5505], [-5.9411, 19.2962], [-6.0549, 20.2909], [-6.2258, 21.7829], [-6.3113, 22.529], [-6.4251, 23.5234], [-6.594, 24.9944], [-5.9597, 24.9949], [-4.8227, 24.9958], [-3.9129, 24.4094], [-3.2579, 23.9811], [-2.2754, 23.3387], [-1.2931, 22.6964], [-0.3105, 22.0541], [0.6721, 21.4118], [1.1457, 21.1024], [1.1657, 20.8174], [1.2905, 20.7135], [1.6104, 20.5555], [1.6855, 20.3784], [1.9287, 20.2728], [2.2195, 20.2479], [2.4063, 20.0637], [2.9927, 19.9168], [3.2035, 19.7898], [3.2018, 19.5603], [3.2559, 19.4107], [3.1059, 19.1502], [3.2559, 19.0134], [3.4007, 18.9886], [4.2276, 19.1426]]] }, \"properties\": { \"name\": \"Mali\", \"id\": \"ML\" }, \"id\": \"ML\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.3441, 42.3137], [22.5826, 42.1047], [22.8369, 41.9937], [23.0055, 41.7172], [22.9159, 41.3363], [22.7552, 41.3128], [22.7246, 41.1783], [22.4933, 41.1184], [22.2377, 41.1552], [21.9296, 41.1073], [21.7795, 40.9506], [21.5758, 40.8689], [20.9641, 40.8498], [20.7409, 40.9053], [20.4892, 41.2724], [20.4487, 41.5214], [20.5659, 41.8739], [20.7444, 41.9045], [20.7781, 42.0709], [21.0595, 42.1713], [21.2562, 42.0994], [21.3894, 42.2196], [21.5625, 42.2477], [21.9043, 42.3222], [22.2398, 42.3582], [22.3441, 42.3137]]] }, \"properties\": { \"name\": \"North Macedonia\", \"id\": \"MK\" }, \"id\": \"MK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[171.1017, 7.1385], [171.2268, 7.087], [171.2025, 7.0736], [171.0955, 7.1092], [171.1017, 7.1385]]] }, \"properties\": { \"name\": \"Marshall Islands\", \"id\": \"MH\" }, \"id\": \"MH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-86.9396, 20.3034], [-87.0195, 20.3824], [-86.9278, 20.5515], [-86.755, 20.552], [-86.9396, 20.3034]]], [[[-112.0572, 24.5457], [-112.1755, 24.7294], [-112.2967, 24.7898], [-112.2223, 24.951], [-112.0572, 24.5457]]], [[[-115.1707, 28.0693], [-115.3529, 28.1039], [-115.1971, 28.3281], [-115.1707, 28.0693]]], [[[-112.2031, 29.0055], [-112.2785, 28.7693], [-112.514, 28.8474], [-112.4698, 29.1679], [-112.2851, 29.2403], [-112.2031, 29.0055]]], [[[-113.1557, 29.052], [-113.2648, 29.0969], [-113.5806, 29.4134], [-113.5873, 29.5732], [-113.416, 29.4858], [-113.3738, 29.3388], [-113.2023, 29.302], [-113.1557, 29.052]]], [[[-97.1462, 25.9617], [-97.1644, 25.7548], [-97.225, 25.5852], [-97.4241, 25.2333], [-97.5071, 25.0144], [-97.6676, 24.3899], [-97.7171, 23.9806], [-97.7659, 23.3063], [-97.7453, 22.9423], [-97.8578, 22.6245], [-97.7823, 22.2791], [-97.7539, 22.0266], [-97.6376, 21.6036], [-97.5007, 21.398], [-97.1951, 20.8001], [-97.1214, 20.615], [-96.7088, 20.1884], [-96.456, 19.8697], [-96.2895, 19.3437], [-95.9848, 19.0538], [-95.821, 18.7547], [-95.5615, 18.7191], [-95.1818, 18.7005], [-95.0146, 18.5704], [-94.798, 18.5145], [-94.5461, 18.1749], [-94.189, 18.1953], [-93.5523, 18.4306], [-93.1272, 18.4235], [-92.8849, 18.4688], [-92.7102, 18.6117], [-92.441, 18.6752], [-91.9738, 18.7161], [-91.8803, 18.6379], [-91.9136, 18.5287], [-91.8031, 18.4705], [-91.5339, 18.4564], [-91.2753, 18.6246], [-91.3679, 18.8061], [-91.343, 18.9007], [-90.955, 19.1515], [-90.7393, 19.3521], [-90.6932, 19.7298], [-90.5071, 19.9119], [-90.4825, 20.0255], [-90.484, 20.5564], [-90.4586, 20.7135], [-90.3531, 21.0096], [-90.1829, 21.121], [-89.8198, 21.2746], [-88.8788, 21.414], [-88.4668, 21.5693], [-88.2511, 21.5667], [-88.1317, 21.616], [-87.6889, 21.5356], [-87.4805, 21.4726], [-87.251, 21.4469], [-87.2163, 21.5822], [-87.0348, 21.5924], [-86.8242, 21.4216], [-86.7718, 21.1503], [-86.8648, 20.8849], [-87.0597, 20.6314], [-87.2213, 20.5071], [-87.4214, 20.2315], [-87.4672, 20.1023], [-87.4318, 19.8985], [-87.5859, 19.7796], [-87.6878, 19.6371], [-87.6454, 19.5541], [-87.4248, 19.5834], [-87.6529, 18.7986], [-87.7335, 18.6552], [-87.7619, 18.4461], [-87.8534, 18.269], [-88.0565, 18.5243], [-88.0112, 18.7267], [-88.0737, 18.8345], [-88.1967, 18.7196], [-88.2957, 18.4723], [-88.523, 18.4457], [-88.5862, 18.2903], [-88.8064, 17.9654], [-88.8978, 17.9144], [-89.0506, 17.9996], [-89.1335, 17.9707], [-89.1615, 17.8149], [-90.1836, 17.8158], [-90.9892, 17.8162], [-90.993, 17.2525], [-91.4096, 17.2561], [-91.2243, 17.1122], [-90.9759, 16.8677], [-90.7107, 16.7083], [-90.6341, 16.5108], [-90.4171, 16.3909], [-90.4473, 16.0727], [-91.7365, 16.07], [-92.1871, 15.3207], [-92.2044, 15.2377], [-92.0748, 15.0743], [-92.1442, 15.002], [-92.1864, 14.8182], [-92.16, 14.6912], [-92.2352, 14.5452], [-92.8089, 15.1387], [-93.1669, 15.4481], [-93.7342, 15.8884], [-93.916, 16.0536], [-94.3741, 16.2848], [-94.4265, 16.2262], [-94.6615, 16.2018], [-94.9004, 16.4175], [-95.1343, 16.177], [-95.4643, 15.9746], [-95.7717, 15.888], [-96.2136, 15.6931], [-96.5108, 15.6518], [-96.808, 15.7264], [-97.1847, 15.9093], [-97.7548, 15.967], [-98.139, 16.2062], [-98.5203, 16.3048], [-98.7622, 16.5347], [-99.3482, 16.6648], [-99.6906, 16.7198], [-100.0244, 16.9205], [-100.8478, 17.2006], [-101.1479, 17.3932], [-101.6002, 17.6516], [-101.8471, 17.9223], [-101.9956, 17.9725], [-102.2166, 17.9574], [-102.6996, 18.0626], [-103.4415, 18.3254], [-103.699, 18.633], [-103.9125, 18.8283], [-104.4052, 19.0911], [-104.603, 19.1528], [-104.9385, 19.3095], [-105.1076, 19.5621], [-105.2863, 19.7063], [-105.4821, 19.9762], [-105.5704, 20.2279], [-105.6694, 20.3855], [-105.5426, 20.4978], [-105.3771, 20.512], [-105.2602, 20.579], [-105.3271, 20.7531], [-105.4923, 20.7766], [-105.2371, 21.1193], [-105.2087, 21.4908], [-105.4315, 21.6182], [-105.6492, 21.9879], [-105.6454, 22.3271], [-105.7917, 22.6276], [-106.0216, 22.8291], [-106.2345, 23.0608], [-106.4023, 23.1958], [-106.5665, 23.4493], [-106.7288, 23.6108], [-106.9354, 23.8812], [-107.5273, 24.3601], [-107.512, 24.4893], [-107.8167, 24.539], [-107.9513, 24.6149], [-108.0151, 24.7836], [-108.2075, 24.9749], [-108.0928, 25.0934], [-108.3736, 25.1942], [-108.7509, 25.4241], [-108.7873, 25.5382], [-109.0288, 25.4805], [-109.0685, 25.5515], [-109.3042, 25.6332], [-109.385, 25.7273], [-109.4256, 26.0327], [-109.1997, 26.3052], [-109.2762, 26.5339], [-109.4829, 26.7105], [-109.7548, 26.703], [-109.8911, 26.8832], [-109.9441, 27.0794], [-110.2772, 27.1624], [-110.4779, 27.3227], [-110.5607, 27.45], [-110.6155, 27.6538], [-110.5298, 27.8642], [-110.7591, 27.9153], [-110.9208, 27.8891], [-111.1215, 27.9672], [-111.2824, 28.1154], [-111.4717, 28.384], [-111.6802, 28.4706], [-111.9407, 28.823], [-112.1617, 29.0188], [-112.2234, 29.2695], [-112.3781, 29.3477], [-112.4146, 29.5363], [-112.573, 29.7197], [-112.7384, 29.9856], [-112.8247, 30.3003], [-113.0578, 30.651], [-113.1104, 30.7935], [-113.1079, 31.0771], [-113.0467, 31.1792], [-113.2315, 31.256], [-113.6235, 31.3461], [-113.633, 31.4677], [-113.9477, 31.6293], [-114.0028, 31.525], [-114.1493, 31.5072], [-114.5486, 31.7336], [-114.8395, 31.7984], [-114.7898, 31.647], [-114.8482, 31.5378], [-114.882, 31.1566], [-114.761, 30.9586], [-114.6333, 30.5067], [-114.6498, 30.2382], [-114.5506, 30.0224], [-114.3725, 29.8302], [-114.1792, 29.7343], [-114.0618, 29.6096], [-113.7556, 29.3677], [-113.5454, 29.1022], [-113.4997, 28.9269], [-113.3818, 28.9469], [-113.3208, 28.8132], [-113.2056, 28.7986], [-113.0937, 28.5119], [-112.8709, 28.4244], [-112.7957, 28.2073], [-112.7339, 27.826], [-112.5526, 27.6573], [-112.3291, 27.5233], [-112.1915, 27.1868], [-112.004, 27.079], [-112.009, 26.9671], [-111.7954, 26.8796], [-111.5696, 26.7074], [-111.5459, 26.5792], [-111.3321, 26.1255], [-111.2917, 25.7899], [-111.1495, 25.5724], [-111.0345, 25.5271], [-110.894, 25.144], [-110.7557, 24.9944], [-110.6774, 24.7885], [-110.7345, 24.5901], [-110.6594, 24.3415], [-110.5471, 24.2141], [-110.2968, 24.195], [-110.2628, 24.3446], [-110.0229, 24.1746], [-109.7106, 23.8039], [-109.6766, 23.6614], [-109.5095, 23.598], [-109.421, 23.4803], [-109.458, 23.2149], [-109.7283, 22.9818], [-109.9235, 22.8859], [-110.0861, 23.0054], [-110.1807, 23.3414], [-110.3627, 23.6051], [-110.6299, 23.7373], [-111.0363, 24.1053], [-111.4194, 24.329], [-111.6828, 24.5559], [-111.8024, 24.5426], [-111.8484, 24.6699], [-112.0726, 24.84], [-112.1285, 25.0432], [-112.0557, 25.488], [-112.1738, 25.9124], [-112.3773, 26.2138], [-112.6585, 26.3168], [-113.0207, 26.5831], [-113.2058, 26.857], [-113.5986, 26.7212], [-113.841, 26.9666], [-113.9964, 26.9875], [-114.11, 27.106], [-114.4454, 27.2184], [-114.5399, 27.4309], [-114.9936, 27.7359], [-115.0364, 27.842], [-114.5701, 27.7838], [-114.3006, 27.8731], [-114.1755, 27.8305], [-114.1852, 28.0134], [-114.0927, 28.2215], [-114.0485, 28.4262], [-114.1455, 28.6055], [-114.3093, 28.7298], [-114.664, 29.0946], [-114.9936, 29.3845], [-115.1665, 29.4272], [-115.6739, 29.7565], [-115.7895, 30.0841], [-115.8156, 30.3038], [-115.9959, 30.4144], [-116.0623, 30.8041], [-116.2964, 30.9706], [-116.3334, 31.2027], [-116.6622, 31.565], [-116.6209, 31.8512], [-116.848, 31.9973], [-116.9136, 32.1984], [-117.0632, 32.3435], [-117.1283, 32.5335], [-116.2698, 32.5974], [-114.7248, 32.7155], [-114.836, 32.5082], [-113.8874, 32.2121], [-112.939, 31.9161], [-111.5161, 31.4721], [-111.0421, 31.3244], [-109.9816, 31.3261], [-109.2747, 31.3274], [-108.2145, 31.3292], [-108.2118, 31.7794], [-106.4533, 31.77], [-106.2558, 31.5445], [-105.8128, 31.2409], [-105.514, 30.9808], [-104.9179, 30.5835], [-104.6813, 30.1343], [-104.6813, 29.9904], [-104.504, 29.6775], [-104.1107, 29.3863], [-103.6639, 29.207], [-103.2577, 29.001], [-103.09, 29.0419], [-102.892, 29.2163], [-102.834, 29.444], [-102.7342, 29.6438], [-102.615, 29.7525], [-102.4763, 29.7689], [-102.269, 29.871], [-101.9909, 29.7955], [-101.4404, 29.7769], [-101.3035, 29.634], [-101.039, 29.4604], [-101.0163, 29.4005], [-100.6587, 29.0685], [-100.5498, 28.8212], [-100.3318, 28.5025], [-100.2961, 28.3277], [-100.0014, 28.048], [-99.7543, 27.7301], [-99.5053, 27.5481], [-99.5102, 27.3404], [-99.4403, 27.17], [-99.4436, 27.0368], [-99.2299, 26.762], [-99.1078, 26.4469], [-98.7653, 26.3403], [-98.5982, 26.2378], [-98.378, 26.1823], [-98.0828, 26.0642], [-97.8014, 26.042], [-97.5873, 25.9843], [-97.3582, 25.8707], [-97.1462, 25.9617]]]] }, \"properties\": { \"name\": \"Mexico\", \"id\": \"MX\" }, \"id\": \"MX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[73.5121, 4.1644], [73.473, 4.1706], [73.5041, 4.2345], [73.5285, 4.2434], [73.5121, 4.1644]]] }, \"properties\": { \"name\": \"Maldives\", \"id\": \"MV\" }, \"id\": \"MV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[48.3421, -13.364], [48.212, -13.3854], [48.1911, -13.2597], [48.3088, -13.1981], [48.3421, -13.364]]], [[[49.5383, -12.4323], [49.6378, -12.637], [49.9374, -13.0725], [49.9671, -13.2704], [50.0737, -13.578], [50.174, -14.0401], [50.2352, -14.7322], [50.3134, -14.9368], [50.4412, -15.1494], [50.483, -15.3855], [50.4048, -15.6293], [50.2091, -15.9604], [50.0204, -15.8019], [49.8926, -15.4579], [49.7438, -15.4495], [49.6497, -15.567], [49.6973, -15.8112], [49.7128, -16.0767], [49.8309, -16.256], [49.8389, -16.4864], [49.7341, -16.703], [49.7674, -16.8153], [49.5951, -16.9312], [49.4491, -17.2406], [49.4372, -17.3466], [49.4935, -17.6694], [49.478, -17.8984], [49.363, -18.3365], [49.2033, -18.7924], [49.0603, -19.1196], [48.9183, -19.5305], [48.7974, -19.9532], [48.607, -20.4575], [48.4686, -20.9], [48.351, -21.3488], [48.176, -21.8432], [47.9083, -22.4661], [47.8582, -22.7475], [47.7392, -23.2336], [47.6039, -23.633], [47.5582, -23.8746], [47.3726, -24.2185], [47.2727, -24.5643], [47.1773, -24.7872], [47.0348, -24.9789], [46.7285, -25.1498], [46.3868, -25.1729], [46.1585, -25.2307], [45.5079, -25.5631], [45.1154, -25.5431], [44.8131, -25.334], [44.3457, -25.2262], [44.2561, -25.117], [44.0354, -24.9958], [43.8517, -24.5386], [43.6874, -24.358], [43.6461, -23.7418], [43.7225, -23.5297], [43.5698, -23.0804], [43.398, -22.8864], [43.2648, -22.3835], [43.2665, -22.0493], [43.3696, -21.7381], [43.4379, -21.6466], [43.5019, -21.3563], [43.7039, -21.2551], [43.8556, -21.0767], [43.9111, -20.8658], [44.2397, -20.3798], [44.348, -20.1454], [44.4047, -19.9221], [44.4487, -19.4285], [44.2387, -19.0752], [44.233, -18.7405], [44.1087, -18.5034], [44.0399, -18.2886], [43.9937, -17.6902], [43.9435, -17.5815], [43.9795, -17.3915], [44.4215, -16.7026], [44.4269, -16.2893], [44.4762, -16.2174], [44.9094, -16.1743], [45.1669, -15.983], [45.3422, -16.0367], [45.5983, -15.9928], [45.7001, -15.8139], [46.3317, -15.7135], [46.475, -15.5134], [46.8821, -15.2298], [46.9931, -15.243], [47.0321, -15.4228], [47.1334, -15.3616], [47.0925, -15.1503], [47.2802, -14.9425], [47.3522, -14.7658], [47.4964, -14.8182], [47.5249, -14.9922], [47.8115, -14.5448], [47.7735, -14.37], [47.9954, -13.9606], [47.9013, -13.8581], [47.8959, -13.7307], [48.0398, -13.5962], [48.2555, -13.7192], [48.4051, -13.538], [48.6213, -13.4262], [48.7966, -13.2673], [48.9103, -12.9357], [48.8942, -12.7217], [48.7864, -12.4709], [48.8996, -12.4585], [49.2072, -12.0794], [49.312, -12.1238], [49.3639, -12.2361], [49.5383, -12.4323]]]] }, \"properties\": { \"name\": \"Madagascar\", \"id\": \"MG\" }, \"id\": \"MG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.2124, 45.4503], [28.0748, 45.599], [28.1597, 45.647], [28.0997, 45.9728], [28.1192, 46.1388], [28.2444, 46.4513], [28.2395, 46.6408], [28.0718, 46.9786], [27.8538, 47.1144], [27.3367, 47.6396], [27.152, 47.9592], [26.9806, 48.155], [26.7871, 48.2557], [26.6189, 48.2597], [26.8471, 48.3871], [27.2284, 48.3716], [27.5492, 48.4777], [27.8201, 48.4164], [28.0887, 48.257], [28.327, 48.1616], [28.774, 48.1194], [28.9733, 47.933], [29.1948, 47.8824], [29.2107, 47.7314], [29.1228, 47.5304], [29.1597, 47.4558], [29.5494, 47.2468], [29.5148, 47.091], [29.5721, 46.964], [29.8779, 46.829], [29.9423, 46.7239], [29.924, 46.5387], [30.131, 46.4229], [29.838, 46.3505], [29.1464, 46.5268], [28.9276, 46.4242], [29.0061, 46.1765], [28.9475, 46.05], [28.7389, 45.9373], [28.7291, 45.852], [28.4917, 45.6656], [28.4713, 45.5071], [28.2124, 45.4503]]] }, \"properties\": { \"name\": \"Moldova\", \"id\": \"MD\" }, \"id\": \"MD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[7.4387, 43.7506], [7.3779, 43.7316], [7.4143, 43.7711], [7.4387, 43.7506]]] }, \"properties\": { \"name\": \"Monaco\", \"id\": \"MC\" }, \"id\": \"MC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.2197, 35.1041], [-2.1318, 34.9709], [-1.7956, 34.7521], [-1.8497, 34.6074], [-1.7332, 34.4671], [-1.7918, 34.3681], [-1.707, 34.1759], [-1.703, 33.7169], [-1.6313, 33.5669], [-1.6793, 33.3187], [-1.5508, 33.0737], [-1.5099, 32.8775], [-1.3521, 32.7035], [-1.1111, 32.5521], [-1.0656, 32.4682], [-1.2402, 32.3378], [-1.2753, 32.0891], [-2.4485, 32.13], [-2.9308, 32.0426], [-3.0174, 31.8344], [-3.4397, 31.7048], [-3.8268, 31.6617], [-3.789, 31.3616], [-3.8335, 31.1978], [-3.6726, 31.1113], [-3.7021, 30.9444], [-3.9853, 30.9137], [-4.3228, 30.6989], [-4.7785, 30.5524], [-4.9683, 30.4654], [-5.1802, 30.1662], [-5.4488, 29.9567], [-5.775, 29.8688], [-6.2147, 29.8107], [-6.5008, 29.8093], [-6.5206, 29.6597], [-6.6353, 29.5687], [-7.095, 29.6252], [-7.235, 29.5749], [-7.4858, 29.3921], [-7.6851, 29.3495], [-7.9989, 29.1324], [-8.2652, 28.9806], [-8.6599, 28.7187], [-8.6834, 28.6206], [-8.6834, 27.6565], [-8.8184, 27.656], [-13.1774, 27.652], [-12.949, 27.9143], [-12.7936, 27.9783], [-12.4689, 28.0094], [-11.986, 28.1292], [-11.4302, 28.3822], [-11.0809, 28.7138], [-10.4865, 29.0649], [-10.2007, 29.3805], [-9.8526, 29.8093], [-9.6671, 30.1094], [-9.6238, 30.3527], [-9.6529, 30.4476], [-9.8755, 30.718], [-9.8325, 30.8472], [-9.8087, 31.4247], [-9.6751, 31.711], [-9.3475, 32.0865], [-9.2867, 32.2405], [-9.2458, 32.5725], [-8.8364, 32.9206], [-8.5962, 33.1874], [-8.3012, 33.3742], [-7.5624, 33.6401], [-7.1447, 33.8301], [-6.901, 33.9691], [-6.7558, 34.1328], [-6.3532, 34.776], [-5.9575, 35.6812], [-5.9248, 35.7859], [-5.6228, 35.8289], [-5.3973, 35.9297], [-5.3376, 35.745], [-5.1054, 35.4677], [-4.8373, 35.2812], [-4.6282, 35.2062], [-4.33, 35.1613], [-3.9824, 35.2435], [-3.6932, 35.2799], [-3.3947, 35.212], [-3.206, 35.239], [-2.9723, 35.4072], [-2.8401, 35.128], [-2.2197, 35.1041]]] }, \"properties\": { \"name\": \"Morocco\", \"id\": \"MA\" }, \"id\": \"MA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.0111, 18.0688], [-63.123, 18.0688], [-63.0631, 18.1155], [-63.0111, 18.0688]]] }, \"properties\": { \"name\": \"Saint Martin\", \"id\": \"MF\" }, \"id\": \"MF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[113.4787, 22.1957], [113.4943, 22.2414], [113.5467, 22.2241], [113.4787, 22.1957]]] }, \"properties\": { \"name\": \"Macau\", \"id\": \"MO\" }, \"id\": \"MO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.3518, 57.5282], [27.797, 57.3169], [27.8147, 57.1669], [27.6394, 56.8457], [27.8062, 56.867], [28.1032, 56.5456], [28.2022, 56.2604], [28.1481, 56.143], [27.8964, 56.0762], [27.6425, 55.9117], [27.5768, 55.7987], [27.0526, 55.8305], [26.8226, 55.7091], [26.5936, 55.6676], [26.281, 55.7504], [26.0853, 55.8969], [25.5859, 56.1302], [25.0697, 56.2005], [24.9033, 56.3983], [24.529, 56.2964], [24.1207, 56.2642], [23.8126, 56.3293], [22.9683, 56.3805], [22.5869, 56.3752], [22.0846, 56.4067], [21.6535, 56.3146], [21.0463, 56.07], [21.0152, 56.2589], [21.0711, 56.8237], [21.3507, 57.0177], [21.4591, 57.3224], [21.7285, 57.571], [22.5546, 57.7241], [22.6487, 57.5954], [23.137, 57.3238], [23.2875, 57.0898], [23.648, 56.9711], [23.9311, 57.0086], [24.2814, 57.1724], [24.4033, 57.3251], [24.3226, 57.8706], [25.1109, 58.0635], [25.34, 58.0395], [25.7937, 57.8686], [25.9912, 57.8382], [26.2979, 57.601], [26.5328, 57.5311], [26.8999, 57.6087], [27.3518, 57.5282]]] }, \"properties\": { \"name\": \"Latvia\", \"id\": \"LV\" }, \"id\": \"LV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[6.1164, 50.121], [6.1381, 49.9742], [6.2562, 49.8722], [6.4875, 49.7985], [6.344, 49.4527], [6.242, 49.4944], [5.9592, 49.4547], [5.7896, 49.5384], [5.8802, 49.6449], [5.7248, 49.8082], [5.7439, 49.9196], [5.9761, 50.1671], [6.1164, 50.121]]] }, \"properties\": { \"name\": \"Luxembourg\", \"id\": \"LU\" }, \"id\": \"LU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[26.5936, 55.6676], [26.4578, 55.3424], [26.7756, 55.2732], [26.6011, 55.1303], [26.2917, 55.1396], [26.175, 55.0033], [25.8594, 54.9192], [25.7226, 54.7179], [25.7249, 54.5643], [25.5473, 54.3317], [25.7027, 54.2931], [25.7492, 54.1571], [25.5731, 54.14], [25.4612, 54.2929], [25.0461, 54.133], [24.8256, 54.1191], [24.7683, 53.9746], [24.3178, 53.8929], [24.1912, 53.9504], [23.7336, 53.9123], [23.4846, 53.9397], [23.4814, 54.0791], [23.37, 54.2005], [23.0154, 54.3484], [22.7664, 54.3568], [22.6798, 54.493], [22.8312, 54.8384], [22.5675, 55.0591], [22.0725, 55.0637], [21.2358, 55.2641], [21.238, 55.455], [21.0617, 55.8134], [21.0463, 56.07], [21.6535, 56.3146], [22.0846, 56.4067], [22.5869, 56.3752], [22.9683, 56.3805], [23.8126, 56.3293], [24.1207, 56.2642], [24.529, 56.2964], [24.9033, 56.3983], [25.0697, 56.2005], [25.5859, 56.1302], [26.0853, 55.8969], [26.281, 55.7504], [26.5936, 55.6676]]] }, \"properties\": { \"name\": \"Lithuania\", \"id\": \"LT\" }, \"id\": \"LT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.8303, -28.9092], [27.9599, -28.8732], [28.2324, -28.7014], [28.6257, -28.5815], [28.9537, -28.8816], [29.3013, -29.0898], [29.3905, -29.2696], [29.2933, -29.567], [29.1424, -29.701], [29.098, -29.919], [28.9009, -30.0384], [28.6346, -30.129], [28.3922, -30.1476], [28.1392, -30.45], [28.018, -30.6421], [27.753, -30.6], [27.4921, -30.3638], [27.3886, -30.3159], [27.3553, -30.1587], [27.1306, -29.84], [27.0517, -29.6642], [27.2945, -29.5195], [27.7357, -28.9402], [27.8303, -28.9092]]] }, \"properties\": { \"name\": \"Lesotho\", \"id\": \"LS\" }, \"id\": \"LS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[79.9822, 9.8129], [80.253, 9.7964], [80.376, 9.6424], [80.7111, 9.3663], [80.8936, 9.0858], [81.1985, 8.6619], [81.2269, 8.5056], [81.373, 8.4315], [81.4359, 8.119], [81.6655, 7.7825], [81.6828, 7.6844], [81.8741, 7.2885], [81.8612, 6.9014], [81.7676, 6.6142], [81.6375, 6.4251], [81.38, 6.2409], [80.724, 5.979], [80.4958, 5.9492], [80.2672, 6.0096], [80.0954, 6.153], [80.0072, 6.3643], [79.8593, 6.8295], [79.7922, 7.5854], [79.7079, 8.0657], [79.8091, 8.0502], [79.8508, 8.4115], [79.9418, 8.6916], [79.929, 8.8994], [80.0648, 9.0955], [80.1185, 9.3268], [80.0862, 9.5776], [79.9822, 9.8129]]] }, \"properties\": { \"name\": \"Sri Lanka\", \"id\": \"LK\" }, \"id\": \"LK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5801, 47.0572], [9.4877, 47.0621], [9.5277, 47.2707], [9.5801, 47.0572]]] }, \"properties\": { \"name\": \"Liechtenstein\", \"id\": \"LI\" }, \"id\": \"LI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-60.8953, 13.8221], [-60.9515, 13.7174], [-61.0607, 13.783], [-61.0635, 13.9158], [-60.8866, 14.0112], [-60.8953, 13.8221]]] }, \"properties\": { \"name\": \"Saint Lucia\", \"id\": \"LC\" }, \"id\": \"LC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[25.1505, 31.655], [24.8526, 31.335], [24.8775, 31.0611], [24.9738, 30.7766], [24.8775, 30.4574], [24.7265, 30.2506], [24.7114, 30.1316], [24.8038, 29.8861], [24.9162, 29.3761], [24.9805, 29.1817], [24.9805, 28.2837], [24.9805, 27.6099], [24.9805, 26.4872], [24.9805, 25.8134], [24.9805, 24.915], [24.9805, 23.5677], [24.9805, 21.996], [24.9796, 20.5009], [24.9671, 19.9953], [23.9804, 19.9957], [23.9804, 19.4968], [23.0221, 19.9696], [21.5848, 20.6794], [20.6267, 21.1526], [19.6684, 21.6258], [18.7105, 22.0989], [17.7521, 22.5721], [16.7942, 23.0453], [15.9841, 23.4453], [14.9791, 22.996], [14.2308, 22.6183], [14.2005, 22.6236], [13.5987, 23.1194], [13.4815, 23.1803], [11.9678, 23.518], [11.7671, 23.8927], [11.5074, 24.3144], [10.6863, 24.5514], [10.439, 24.4804], [10.2556, 24.591], [10.1194, 24.7902], [10.028, 25.0508], [10.0009, 25.3322], [9.4482, 26.0673], [9.438, 26.2453], [9.4912, 26.3337], [9.8593, 26.552], [9.8944, 26.8482], [9.8371, 26.9161], [9.7474, 27.3306], [9.9162, 27.7857], [9.8584, 28.0431], [9.8158, 28.5602], [9.8424, 28.9669], [9.7461, 29.369], [9.6401, 29.6362], [9.3102, 30.1152], [9.5188, 30.2293], [9.8953, 30.3873], [10.2162, 30.7833], [10.2432, 31.0323], [10.1149, 31.4637], [10.3058, 31.7048], [10.4758, 31.7358], [10.609, 31.9294], [10.8265, 32.0807], [11.5048, 32.4136], [11.5336, 32.5251], [11.4538, 32.6427], [11.5043, 33.182], [11.8133, 33.0937], [12.2798, 32.8584], [12.7535, 32.8012], [13.2834, 32.9148], [13.6479, 32.7989], [13.8353, 32.7919], [14.237, 32.6813], [14.5135, 32.5109], [15.1767, 32.391], [15.359, 32.1597], [15.3631, 31.9711], [15.4963, 31.6568], [15.7058, 31.4264], [16.123, 31.2644], [16.7814, 31.2147], [17.3491, 31.0816], [17.8303, 30.9275], [18.1903, 30.7775], [18.6696, 30.4157], [18.9364, 30.2905], [19.2915, 30.2878], [19.7133, 30.4885], [20.0133, 30.8005], [20.151, 31.0784], [20.1039, 31.3003], [19.9614, 31.5561], [19.9263, 31.8175], [19.9734, 31.9991], [20.1217, 32.2188], [20.3707, 32.431], [20.621, 32.5801], [21.0622, 32.7754], [21.4249, 32.7994], [21.6357, 32.9375], [21.8395, 32.9086], [22.1874, 32.9184], [22.5235, 32.7941], [23.0908, 32.6187], [23.1063, 32.3315], [23.2865, 32.2139], [23.7975, 32.1589], [24.1295, 32.0093], [24.6839, 32.0159], [24.8784, 31.9844], [25.0249, 31.8832], [25.1505, 31.655]]] }, \"properties\": { \"name\": \"Libya\", \"id\": \"LY\" }, \"id\": \"LY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-8.4863, 7.5583], [-8.437, 7.5162], [-8.2965, 7.0741], [-8.3325, 6.8015], [-8.6035, 6.5076], [-8.4499, 6.4624], [-8.3449, 6.3514], [-8.2038, 6.2906], [-7.9817, 6.2862], [-7.8886, 6.2346], [-7.7965, 5.975], [-7.7304, 5.9191], [-7.4543, 5.8414], [-7.3999, 5.5506], [-7.4299, 5.3247], [-7.5097, 5.1085], [-7.5688, 5.0805], [-7.5912, 4.8213], [-7.5717, 4.3863], [-7.5451, 4.3512], [-7.66, 4.3668], [-7.9983, 4.5088], [-8.259, 4.59], [-9.1322, 5.0548], [-9.3748, 5.2412], [-9.6544, 5.5187], [-10.2763, 6.0775], [-10.4182, 6.1672], [-10.597, 6.2112], [-10.7857, 6.3101], [-10.8489, 6.465], [-11.2915, 6.6883], [-11.5075, 6.9067], [-11.2678, 7.2326], [-11.0853, 7.3986], [-10.878, 7.5384], [-10.6474, 7.7594], [-10.5709, 8.071], [-10.3895, 8.1576], [-10.2832, 8.4852], [-10.1474, 8.5198], [-10.0644, 8.4297], [-9.7683, 8.5345], [-9.5182, 8.3462], [-9.4362, 7.8668], [-9.369, 7.7039], [-9.4638, 7.4158], [-9.2633, 7.3777], [-9.1176, 7.2157], [-8.8896, 7.2627], [-8.7402, 7.4958], [-8.7083, 7.6591], [-8.5789, 7.6769], [-8.4863, 7.5583]]] }, \"properties\": { \"name\": \"Liberia\", \"id\": \"LR\" }, \"id\": \"LR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[35.8691, 33.4319], [35.5326, 33.2504], [35.411, 33.0755], [35.1088, 33.0835], [35.2513, 33.3924], [35.3355, 33.5034], [35.511, 33.8798], [35.6116, 34.0321], [35.6481, 34.2483], [35.8043, 34.4373], [35.978, 34.5474], [35.9761, 34.6291], [36.4329, 34.6136], [36.3264, 34.5133], [36.5044, 34.4325], [36.5851, 34.2212], [36.2824, 33.8941], [36.0924, 33.8314], [35.9423, 33.6677], [36.0222, 33.5624], [35.8691, 33.4319]]] }, \"properties\": { \"name\": \"Lebanon\", \"id\": \"LB\" }, \"id\": \"LB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[102.1276, 22.379], [102.183, 22.2841], [102.5825, 21.9045], [102.6954, 21.6621], [102.8454, 21.7349], [102.9497, 21.6812], [102.9487, 21.5698], [102.8511, 21.2658], [103.1046, 20.8915], [103.4637, 20.7797], [103.635, 20.6971], [104.0518, 20.9413], [104.1953, 20.9137], [104.5831, 20.6465], [104.3922, 20.4246], [104.6187, 20.3744], [104.6986, 20.2053], [104.8887, 20.1689], [104.928, 20.0179], [104.7435, 19.7547], [104.5463, 19.6105], [104.2601, 19.6855], [104.0319, 19.6753], [104.0629, 19.4826], [103.8965, 19.3401], [103.9182, 19.2687], [104.1087, 19.1954], [104.7164, 18.8035], [105.1149, 18.6787], [105.0856, 18.4502], [105.3334, 18.1896], [105.4581, 18.1545], [105.5886, 17.9836], [105.6916, 17.7377], [106.0063, 17.4154], [106.2696, 17.2166], [106.5021, 16.9542], [106.546, 16.6506], [106.6962, 16.4588], [106.8323, 16.5263], [106.9305, 16.3532], [107.0699, 16.28], [107.2172, 16.1366], [107.3966, 16.0429], [107.3606, 15.9217], [107.1888, 15.8387], [107.1897, 15.7473], [107.3388, 15.5604], [107.5644, 15.3917], [107.6531, 15.255], [107.4805, 14.9798], [107.5195, 14.705], [107.4147, 14.563], [107.2926, 14.5923], [107.1094, 14.4165], [106.8199, 14.3148], [106.5013, 14.578], [106.3548, 14.4546], [106.2255, 14.4764], [106.1652, 14.3726], [105.9787, 14.3433], [106.1247, 14.0489], [106.0666, 13.9211], [105.9047, 13.9247], [105.7395, 14.0849], [105.5318, 14.1559], [105.3503, 14.1098], [105.2455, 14.2003], [105.1833, 14.3464], [105.3422, 14.4165], [105.4754, 14.5301], [105.5469, 14.9323], [105.4905, 15.1276], [105.5131, 15.3606], [105.6157, 15.4881], [105.6224, 15.6998], [105.462, 15.7806], [105.3733, 15.8898], [105.4062, 15.9874], [105.0471, 16.1601], [104.9498, 16.3398], [104.8193, 16.4659], [104.7505, 16.6475], [104.7589, 17.0772], [104.8162, 17.3004], [104.7398, 17.4616], [104.4282, 17.699], [103.9497, 18.3192], [103.7921, 18.3165], [103.6297, 18.3827], [103.3669, 18.4235], [103.263, 18.2784], [103.0912, 18.1381], [103.0513, 18.0285], [102.7175, 17.8922], [102.3518, 18.0457], [102.1013, 18.2104], [101.9474, 18.0812], [101.7747, 18.0333], [101.6877, 17.8895], [101.4138, 17.7186], [101.1053, 17.4793], [100.9086, 17.5837], [101.1133, 18.0333], [101.1377, 18.2868], [101.0506, 18.4071], [101.1656, 18.6184], [101.2864, 18.977], [101.1976, 19.3277], [101.2207, 19.4866], [101.1546, 19.5794], [100.9664, 19.6109], [100.6254, 19.4999], [100.4203, 19.6446], [100.3978, 19.7561], [100.5429, 20.0886], [100.5193, 20.1777], [100.3179, 20.386], [100.1225, 20.3167], [100.1838, 20.5892], [100.2494, 20.7304], [100.4075, 20.8232], [100.5651, 20.825], [100.5362, 20.9923], [100.6591, 21.1304], [100.7564, 21.3128], [100.9277, 21.3661], [101.139, 21.5676], [101.2242, 21.2236], [101.2815, 21.1841], [101.5425, 21.2342], [101.705, 21.1503], [101.744, 21.778], [101.6029, 21.9897], [101.5243, 22.2538], [101.6713, 22.4625], [101.8417, 22.3884], [102.0246, 22.4394], [102.1276, 22.379]]] }, \"properties\": { \"name\": \"Lao People's Democratic Republic\", \"id\": \"LA\" }, \"id\": \"LA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[48.4424, 28.5429], [47.6714, 28.5331], [47.583, 28.6281], [47.4334, 28.9895], [46.5314, 29.0965], [46.7694, 29.3472], [46.9057, 29.5377], [47.1143, 29.9611], [47.3313, 30.0797], [47.6727, 30.0957], [47.9785, 29.9829], [48.0056, 29.836], [48.1362, 29.618], [47.9696, 29.6167], [47.7255, 29.4169], [48.0513, 29.3552], [48.1836, 28.9793], [48.3394, 28.7631], [48.4424, 28.5429]]], [[[48.2755, 29.6242], [48.1796, 29.6114], [48.0815, 29.7987], [48.1588, 29.9594], [48.3483, 29.7827], [48.2755, 29.6242]]]] }, \"properties\": { \"name\": \"Kuwait\", \"id\": \"KW\" }, \"id\": \"KW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[21.5625, 42.2477], [21.3894, 42.2196], [21.2562, 42.0994], [21.0595, 42.1713], [20.7781, 42.0709], [20.7444, 41.9045], [20.5659, 41.8739], [20.5753, 42.0133], [20.4856, 42.2232], [20.2406, 42.3391], [20.0639, 42.5472], [20.0293, 42.7319], [20.3444, 42.8278], [20.624, 43.0342], [20.6232, 43.1985], [20.8442, 43.1736], [21.0569, 43.0915], [21.3907, 42.7514], [21.7529, 42.6698], [21.5625, 42.2477]]] }, \"properties\": { \"name\": \"Kosovo\", \"id\": \"XK\" }, \"id\": \"XK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[128.3744, 38.6233], [128.6191, 38.1763], [129.0514, 37.6778], [129.335, 37.2747], [129.4185, 37.059], [129.4735, 36.7421], [129.3928, 36.3225], [129.4033, 36.0522], [129.5619, 35.9475], [129.4189, 35.4978], [129.2143, 35.1818], [128.9799, 35.1014], [128.5112, 35.101], [128.4188, 35.0158], [128.4442, 34.8706], [128.0944, 34.9336], [128.0362, 35.022], [127.7149, 34.9545], [127.7423, 34.7827], [127.6323, 34.6903], [127.5235, 34.84], [127.3895, 34.7432], [127.4791, 34.6251], [127.3247, 34.4631], [127.0308, 34.6069], [126.8972, 34.4387], [126.7547, 34.5119], [126.5083, 34.3508], [126.4817, 34.4937], [126.3326, 34.5896], [126.5935, 34.8244], [126.4209, 34.8235], [126.2913, 35.1542], [126.4604, 35.4556], [126.614, 35.5711], [126.4884, 35.647], [126.7174, 35.7691], [126.7529, 35.872], [126.6935, 36.014], [126.5403, 36.1663], [126.5483, 36.4775], [126.4879, 36.6937], [126.3889, 36.651], [126.1807, 36.6914], [126.2171, 36.8707], [126.3517, 36.9582], [126.5776, 37.0195], [126.8688, 36.9755], [126.7462, 37.1935], [126.7906, 37.2951], [126.6504, 37.447], [126.5634, 37.7164], [126.634, 37.7816], [126.6668, 37.917], [127.0094, 38.2406], [127.1697, 38.3045], [128.0389, 38.3085], [128.1685, 38.3591], [128.3744, 38.6233]]], [[[128.7411, 34.7987], [128.6465, 34.737], [128.4894, 34.8653], [128.722, 35.0136], [128.7411, 34.7987]]], [[[128.066, 34.8058], [128.0549, 34.7082], [127.8733, 34.7348], [127.9155, 34.9212], [128.066, 34.8058]]], [[[126.2335, 34.3703], [126.123, 34.444], [126.2474, 34.5634], [126.38, 34.4977], [126.2335, 34.3703]]], [[[126.3268, 33.2237], [126.1657, 33.3121], [126.3375, 33.4603], [126.6956, 33.5491], [126.9011, 33.515], [126.8728, 33.3409], [126.5816, 33.2384], [126.3268, 33.2237]]]] }, \"properties\": { \"name\": \"South Korea\", \"id\": \"KR\" }, \"id\": \"KR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.6308, 17.2401], [-62.8389, 17.3391], [-62.7945, 17.4026], [-62.7137, 17.3533], [-62.6308, 17.2401]]] }, \"properties\": { \"name\": \"Saint Kitts and Nevis\", \"id\": \"KN\" }, \"id\": \"KN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-157.3422, 1.8557], [-157.2461, 1.7318], [-157.4201, 1.7873], [-157.3422, 1.8557]]] }, \"properties\": { \"name\": \"Kiribati\", \"id\": \"KI\" }, \"id\": \"KI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[104.4265, 10.4113], [104.2623, 10.5413], [103.9373, 10.5866], [103.6622, 10.5089], [103.5321, 10.6048], [103.6807, 10.7584], [103.722, 10.8902], [103.6541, 11.0589], [103.5326, 11.1468], [103.3536, 10.9217], [103.153, 10.9137], [103.0912, 11.2111], [103.1254, 11.4606], [102.9341, 11.7065], [102.7366, 12.0896], [102.7064, 12.2556], [102.7556, 12.4261], [102.4995, 12.6698], [102.4618, 13.0151], [102.3309, 13.2881], [102.3198, 13.5398], [102.547, 13.5855], [102.5448, 13.6601], [102.729, 13.8421], [102.9092, 14.1368], [103.0309, 14.2527], [103.1995, 14.3326], [103.6004, 14.4209], [103.8184, 14.3623], [104.2276, 14.3956], [104.4118, 14.3695], [104.779, 14.428], [104.9697, 14.3659], [105.0742, 14.2274], [105.1833, 14.3464], [105.2455, 14.2003], [105.3503, 14.1098], [105.5318, 14.1559], [105.7395, 14.0849], [105.9047, 13.9247], [106.0666, 13.9211], [106.1247, 14.0489], [105.9787, 14.3433], [106.1652, 14.3726], [106.2255, 14.4764], [106.3548, 14.4546], [106.5013, 14.578], [106.8199, 14.3148], [107.1094, 14.4165], [107.2926, 14.5923], [107.4147, 14.563], [107.5195, 14.705], [107.4485, 14.4511], [107.3646, 14.3685], [107.3313, 14.1266], [107.6056, 13.4377], [107.4756, 13.0302], [107.5555, 12.5402], [107.5061, 12.3644], [107.159, 12.277], [106.9305, 12.0776], [106.7649, 12.0523], [106.7001, 11.9795], [106.4137, 11.9485], [106.4107, 11.7385], [106.3401, 11.6816], [106.0059, 11.758], [105.8513, 11.6351], [105.8558, 11.2942], [106.1679, 11.0123], [106.0991, 10.7975], [105.9384, 10.8854], [105.8531, 10.8636], [105.755, 10.9901], [105.3867, 10.9399], [105.3147, 10.8454], [105.1594, 10.8978], [105.0222, 10.8866], [105.0613, 10.7339], [104.8504, 10.5347], [104.564, 10.516], [104.4265, 10.4113]]] }, \"properties\": { \"name\": \"Cambodia\", \"id\": \"KH\" }, \"id\": \"KH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[80.2096, 42.1899], [80.2162, 42.0324], [79.8406, 41.9959], [79.766, 41.8987], [79.2937, 41.7829], [78.7425, 41.5601], [78.3624, 41.3719], [78.346, 41.2813], [78.1233, 41.0758], [77.8152, 41.0558], [77.5816, 40.9928], [76.9869, 41.0393], [76.8239, 40.9821], [76.6397, 40.7424], [76.4804, 40.4494], [76.2585, 40.4308], [75.8719, 40.3034], [75.656, 40.3291], [75.5837, 40.6053], [75.5206, 40.6274], [75.241, 40.4805], [75.0044, 40.4494], [74.842, 40.3451], [74.6799, 40.3105], [74.4118, 40.1373], [73.9915, 40.0432], [73.8353, 39.8], [73.9147, 39.6065], [73.8228, 39.4888], [73.6315, 39.4489], [73.4703, 39.4605], [73.2351, 39.3743], [72.8724, 39.3606], [72.6398, 39.3859], [72.358, 39.3371], [72.2301, 39.2074], [72.0428, 39.3521], [71.8062, 39.2758], [71.7321, 39.4231], [71.5461, 39.4529], [71.4044, 39.598], [71.0648, 39.4933], [71.0049, 39.4121], [70.7333, 39.4134], [70.6077, 39.5643], [70.3919, 39.582], [70.245, 39.5426], [69.5987, 39.5736], [69.2978, 39.5248], [69.229, 39.7609], [69.307, 39.9687], [69.4318, 39.9096], [69.5304, 40.0974], [69.9667, 40.2021], [70.4515, 40.049], [70.9463, 40.1875], [70.9579, 40.2391], [71.3046, 40.287], [71.6926, 40.1525], [71.9558, 40.2586], [72.1311, 40.4387], [72.3575, 40.4015], [72.4019, 40.5781], [72.5674, 40.5244], [72.7739, 40.6505], [73.113, 40.7859], [72.99, 40.86], [72.6585, 40.8698], [72.3642, 41.0434], [72.1875, 41.026], [72.1644, 41.1739], [71.8786, 41.1952], [71.7924, 41.4131], [71.4208, 41.3417], [71.4084, 41.1361], [71.1106, 41.1525], [70.7826, 41.2626], [70.6459, 41.4602], [70.4714, 41.4127], [70.1811, 41.5716], [70.455, 41.7252], [70.6308, 41.8756], [70.8035, 41.9227], [70.8421, 42.0195], [71.2287, 42.1629], [71.036, 42.2845], [70.9468, 42.2485], [70.8927, 42.34], [71.0228, 42.5353], [71.2567, 42.7337], [71.8168, 42.822], [72.2758, 42.7577], [72.753, 42.6378], [72.8551, 42.561], [73.2829, 42.5042], [73.4219, 42.5934], [73.5565, 43.0027], [73.612, 43.048], [74.209, 43.2402], [74.6223, 43.056], [75.0476, 42.9046], [75.6356, 42.8145], [75.7897, 42.933], [76.5092, 42.9188], [76.9442, 42.9716], [77.2354, 42.9126], [77.8018, 42.8953], [78.0229, 42.8576], [78.524, 42.8646], [78.7917, 42.7909], [79.1646, 42.759], [79.2033, 42.6662], [79.4899, 42.4576], [79.9209, 42.4132], [80.2096, 42.1899]], [[71.206, 39.8924], [71.2287, 40.0482], [71.0804, 40.0797], [71.0116, 39.895], [71.206, 39.8924]]] }, \"properties\": { \"name\": \"Kyrgyzstan\", \"id\": \"KG\" }, \"id\": \"KG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[41.8839, 3.9779], [41.3419, 3.2015], [40.9645, 2.8145], [40.9699, 1.378], [40.9734, 0.5355], [40.9788, -0.8703], [41.5221, -1.572], [41.5328, -1.6954], [41.3871, -1.8668], [41.107, -1.9822], [40.9957, -1.9507], [40.8984, -2.2699], [40.6441, -2.5393], [40.4044, -2.5557], [40.2224, -2.6885], [40.1798, -2.8189], [40.1948, -3.0192], [40.1154, -3.2504], [39.9916, -3.3507], [39.8611, -3.5766], [39.8189, -3.7862], [39.4909, -4.4786], [39.3767, -4.6256], [39.2218, -4.6921], [38.5015, -4.1812], [37.7974, -3.6744], [37.6087, -3.4604], [37.6877, -3.2459], [37.6438, -3.0453], [36.9026, -2.6316], [35.8367, -2.0368], [34.9844, -1.5605], [33.9794, -1.0021], [33.9031, -1.0021], [33.9245, -0.3979], [33.9213, -0.0171], [33.9431, 0.1738], [34.0372, 0.2945], [34.1611, 0.6053], [34.2724, 0.6865], [34.4109, 0.8671], [34.4815, 1.042], [34.6493, 1.1854], [34.7873, 1.2307], [34.7833, 1.3812], [34.9653, 1.6435], [34.964, 2.0625], [34.8828, 2.4181], [34.7426, 2.818], [34.5889, 2.9246], [34.5224, 3.1199], [34.4478, 3.1634], [34.3994, 3.4128], [34.442, 3.6064], [34.3928, 3.6916], [34.1651, 3.8128], [33.9759, 4.2203], [34.3803, 4.6207], [35.2681, 5.4925], [35.3253, 5.3651], [35.4688, 5.4193], [35.7449, 5.3442], [35.8003, 5.1569], [35.763, 4.808], [35.9788, 4.5039], [36.0818, 4.4498], [36.8235, 4.4303], [36.9056, 4.4116], [37.3823, 4.1106], [38.0864, 3.649], [38.2254, 3.6188], [38.608, 3.6002], [39.2255, 3.479], [39.4944, 3.4559], [39.6573, 3.5779], [39.8424, 3.8514], [40.0142, 3.9482], [40.7653, 4.2731], [41.0871, 3.9921], [41.2207, 3.9438], [41.8839, 3.9779]]] }, \"properties\": { \"name\": \"Kenya\", \"id\": \"KE\" }, \"id\": \"KE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[87.3229, 49.0858], [86.8861, 49.0907], [86.7534, 49.0088], [86.7178, 48.6972], [86.5496, 48.5287], [86.2656, 48.4546], [85.7494, 48.3849], [85.6263, 48.2038], [85.526, 47.9157], [85.5868, 47.4936], [85.6565, 47.2547], [85.4847, 47.0634], [85.2335, 47.0363], [84.7861, 46.8309], [84.6667, 46.9724], [84.339, 46.996], [84.0159, 46.9707], [83.6341, 47.043], [83.1929, 47.1864], [83.0296, 47.1859], [83.0042, 47.0337], [82.6922, 46.3865], [82.5551, 46.1588], [82.3264, 45.52], [82.5826, 45.4428], [82.6212, 45.2932], [82.4787, 45.1236], [82.2665, 45.2191], [81.989, 45.1618], [81.602, 45.3109], [80.8531, 45.1294], [80.6348, 45.1262], [80.059, 45.0064], [79.8717, 44.8839], [79.9973, 44.7974], [80.2553, 44.808], [80.4554, 44.7463], [80.3365, 44.4382], [80.3551, 44.0973], [80.4958, 43.8923], [80.704, 43.427], [80.6676, 43.3098], [80.7856, 43.1616], [80.3901, 43.0431], [80.5438, 42.9117], [80.2503, 42.7971], [80.1651, 42.6653], [80.2592, 42.2352], [80.2096, 42.1899], [79.9209, 42.4132], [79.4899, 42.4576], [79.2033, 42.6662], [79.1646, 42.759], [78.7917, 42.7909], [78.524, 42.8646], [78.0229, 42.8576], [77.8018, 42.8953], [77.2354, 42.9126], [76.9442, 42.9716], [76.5092, 42.9188], [75.7897, 42.933], [75.6356, 42.8145], [75.0476, 42.9046], [74.6223, 43.056], [74.209, 43.2402], [73.612, 43.048], [73.5565, 43.0027], [73.4219, 42.5934], [73.2829, 42.5042], [72.8551, 42.561], [72.753, 42.6378], [72.2758, 42.7577], [71.8168, 42.822], [71.2567, 42.7337], [71.0228, 42.5353], [70.8927, 42.34], [70.9468, 42.2485], [70.7151, 42.1686], [70.6134, 42.0545], [70.416, 42.0785], [70.0954, 41.8206], [69.664, 41.6719], [69.3683, 41.4904], [69.0651, 41.367], [68.9871, 41.2049], [68.7371, 41.042], [68.584, 40.8764], [68.6008, 40.6598], [68.4956, 40.6088], [68.2919, 40.6562], [68.0477, 40.8094], [68.113, 41.0287], [67.9359, 41.1965], [66.8142, 41.1423], [66.6687, 41.2707], [66.5381, 41.7412], [66.4986, 41.9951], [66.0094, 42.0048], [66.1004, 42.9907], [65.803, 42.8771], [65.4963, 43.3108], [65.2704, 43.4178], [64.9055, 43.7147], [64.4434, 43.5514], [63.2072, 43.6281], [62.0721, 43.4892], [61.9904, 43.4923], [61.1607, 44.1688], [61.008, 44.3938], [59.774, 44.9811], [58.5552, 45.5555], [57.4774, 45.3375], [55.9756, 44.9949], [55.9761, 44.077], [55.9766, 43.1585], [55.9771, 42.47], [55.9774, 41.3221], [55.5451, 41.2626], [55.4346, 41.2964], [55.2494, 41.4579], [54.9525, 41.81], [54.9037, 41.9192], [54.6781, 42.0781], [54.1212, 42.3351], [53.6852, 42.2969], [53.2502, 42.2059], [52.8706, 42.0607], [52.4938, 41.7802], [52.4622, 42.1007], [52.6186, 42.4283], [52.5968, 42.7603], [52.1839, 42.8686], [51.9607, 42.8505], [51.844, 42.9103], [51.6162, 43.1585], [51.2953, 43.174], [51.302, 43.4826], [51.1394, 43.6486], [50.9397, 43.9584], [50.8305, 44.1928], [50.685, 44.2652], [50.3311, 44.3255], [50.2526, 44.4062], [50.2974, 44.5816], [50.4092, 44.6242], [50.8603, 44.6287], [51.1772, 44.5013], [51.3765, 44.5412], [51.0578, 44.8115], [51.0405, 44.9802], [51.2501, 45.1219], [51.4155, 45.358], [51.7325, 45.3993], [52.531, 45.3988], [53.0789, 45.3074], [53.0859, 45.4073], [52.8374, 45.4965], [52.7738, 45.5728], [53.0415, 45.9679], [53.1353, 46.1916], [53.0784, 46.5476], [53.1703, 46.6693], [53.0695, 46.8561], [52.9159, 46.9543], [52.4831, 46.9906], [52.1888, 46.8397], [51.7445, 46.9338], [51.6499, 47.0181], [51.1781, 47.11], [50.9202, 47.0408], [50.5828, 46.8823], [50.4194, 46.8797], [50, 46.6342], [49.7603, 46.5716], [49.3475, 46.5192], [49.2321, 46.3372], [48.6102, 46.5662], [48.5094, 46.6502], [48.6053, 46.766], [48.7762, 46.7105], [48.9595, 46.7744], [48.5524, 47.3209], [48.1099, 47.7453], [47.4818, 47.8039], [47.2923, 47.7408], [47.0934, 47.9477], [47.1192, 48.1269], [47.0041, 48.2846], [46.661, 48.4124], [46.6091, 48.574], [46.7027, 48.8055], [47.0144, 49.0984], [47.018, 49.1999], [46.8022, 49.367], [46.8896, 49.697], [46.9917, 49.8526], [47.2953, 50.0586], [47.3264, 50.2734], [47.5036, 50.4028], [47.706, 50.3779], [47.8497, 50.2823], [48.2249, 49.9319], [48.4344, 49.8284], [48.7589, 49.9283], [48.8433, 50.0131], [48.7008, 50.3537], [48.6551, 50.6199], [48.8086, 50.6012], [49.3235, 50.8518], [49.498, 51.0835], [49.8225, 51.1319], [50.2468, 51.2895], [50.7941, 51.7292], [51.1635, 51.6475], [51.3445, 51.4752], [51.6091, 51.4839], [52.0073, 51.6728], [52.3309, 51.6812], [52.571, 51.4817], [53.0385, 51.4637], [53.3381, 51.4824], [53.5347, 51.3996], [53.6883, 51.2518], [54.0416, 51.1152], [54.4216, 50.7804], [54.4713, 50.5839], [54.6503, 50.6603], [54.6063, 50.88], [54.727, 50.998], [55.1953, 50.7446], [55.5424, 50.6017], [55.7976, 50.6021], [56.0498, 50.7135], [56.1439, 50.8447], [56.4915, 51.0196], [56.6202, 50.9808], [57.0117, 51.0651], [57.179, 51.036], [57.4422, 50.8889], [57.6535, 50.925], [57.8387, 51.0917], [58.3594, 51.0638], [58.5476, 50.971], [58.8837, 50.6945], [59.4522, 50.6203], [59.5228, 50.493], [59.8122, 50.5819], [59.9552, 50.7992], [60.1122, 50.834], [60.288, 50.7043], [60.6378, 50.6638], [60.9424, 50.6956], [61.3894, 50.8609], [61.5852, 51.2298], [61.5545, 51.3245], [61.3632, 51.4419], [60.4647, 51.6512], [60.3875, 51.7731], [60.0675, 51.8908], [60.0657, 51.9764], [60.4257, 52.1256], [60.6703, 52.1509], [60.9375, 52.2805], [60.9797, 52.3948], [60.8212, 52.5699], [60.8021, 52.7448], [61.0476, 52.9725], [61.401, 52.996], [61.974, 52.9436], [62.0148, 53.1079], [61.6597, 53.2284], [61.1994, 53.2872], [61.2478, 53.5509], [60.9797, 53.6217], [61.1133, 53.7535], [61.1435, 53.9637], [61.3339, 54.0491], [61.9287, 53.9464], [62.0401, 54.0026], [62.4991, 54.0132], [62.6327, 54.0694], [63.0739, 54.1053], [63.1911, 54.171], [64.0039, 54.2671], [64.4611, 54.3841], [64.6497, 54.3521], [64.9268, 54.3965], [65.1576, 54.3644], [65.2374, 54.5161], [65.4767, 54.6234], [66.2224, 54.6673], [67.6936, 54.8724], [68.074, 54.9596], [68.2439, 55.0524], [68.2063, 55.1609], [68.5249, 55.2048], [68.9772, 55.3895], [69.4931, 55.3569], [70.1824, 55.1624], [70.4865, 55.2823], [70.7382, 55.3052], [70.9099, 55.1281], [71.1856, 54.5994], [71.0933, 54.2123], [71.3366, 54.1584], [72.0047, 54.2056], [72.2692, 54.2723], [72.3873, 54.1231], [72.404, 53.9644], [72.5862, 53.9959], [72.6225, 54.1344], [72.9142, 54.1073], [73.1192, 53.9808], [73.3807, 53.9628], [73.6181, 54.0674], [73.679, 53.9295], [73.3993, 53.8115], [73.2856, 53.5984], [73.4699, 53.469], [73.6429, 53.5762], [74.0687, 53.6115], [74.403, 53.5045], [74.4518, 53.6472], [74.834, 53.8257], [75.0524, 53.8268], [75.3769, 53.9702], [75.4372, 54.0898], [75.6569, 54.106], [76.2664, 54.312], [76.7888, 54.3219], [76.6544, 54.1453], [76.4222, 54.1135], [76.5758, 53.9424], [77.7042, 53.3791], [77.8601, 53.2693], [78.4756, 52.6385], [79.4687, 51.493], [79.9862, 50.7746], [80.2202, 50.9117], [80.4234, 50.9464], [80.4483, 51.1834], [80.6503, 51.2773], [80.8772, 51.2815], [81.1275, 51.1912], [81.1248, 50.9464], [81.3881, 50.9566], [81.4657, 50.7398], [81.9336, 50.7664], [82.0983, 50.7109], [82.4938, 50.7275], [82.7611, 50.8933], [83.0194, 50.8973], [83.1601, 50.9892], [83.3571, 50.9945], [83.7176, 50.8871], [83.9454, 50.7746], [84.1761, 50.5204], [84.2578, 50.2883], [84.6071, 50.2024], [84.9893, 50.0615], [85.0009, 49.8941], [85.2099, 49.6649], [85.3715, 49.624], [86.1807, 49.4993], [86.61, 49.7692], [86.6144, 49.6098], [86.812, 49.488], [86.9531, 49.3219], [87.2337, 49.2161], [87.3229, 49.0858]]] }, \"properties\": { \"name\": \"Kazakhstan\", \"id\": \"KZ\" }, \"id\": \"KZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[123.8885, 24.2802], [123.6807, 24.2882], [123.7713, 24.4143], [123.8885, 24.2802]]], [[[124.2933, 24.5159], [124.2343, 24.3579], [124.0847, 24.436], [124.2933, 24.5159]]], [[[128.2586, 26.6528], [128.1268, 26.552], [127.9261, 26.5556], [128.2165, 26.7971], [128.2586, 26.6528]]], [[[129.4527, 28.2091], [129.3665, 28.1278], [129.2481, 28.2824], [129.3226, 28.3596], [129.6418, 28.4111], [129.4527, 28.2091]]], [[[130.6228, 30.263], [130.4456, 30.2648], [130.3879, 30.3882], [130.4972, 30.4654], [130.6734, 30.3668], [130.6228, 30.263]]], [[[130.0826, 32.2294], [129.9792, 32.3462], [130.0098, 32.5215], [130.1677, 32.5411], [130.1997, 32.3404], [130.0826, 32.2294]]], [[[128.6652, 32.7838], [128.8387, 32.763], [128.8947, 32.652], [128.6572, 32.6285], [128.6652, 32.7838]]], [[[131.1745, 33.6024], [131.4187, 33.5842], [131.5829, 33.6525], [131.7108, 33.5025], [131.5377, 33.2739], [131.8967, 33.2548], [131.8479, 33.1181], [131.9491, 33.0471], [131.9767, 32.8438], [131.7321, 32.593], [131.5647, 32.2232], [131.4604, 31.8837], [131.46, 31.6705], [131.3374, 31.4047], [131.1399, 31.442], [131.0352, 31.3776], [131.0982, 31.256], [130.9024, 31.1121], [130.6858, 31.0149], [130.7897, 31.2688], [130.6551, 31.7185], [130.5282, 31.4597], [130.6446, 31.2675], [130.5886, 31.1783], [130.2007, 31.2919], [130.1474, 31.4087], [130.2943, 31.4508], [130.3219, 31.6013], [130.1878, 31.7687], [130.1944, 32.091], [130.3192, 32.1433], [130.4621, 32.3049], [130.6406, 32.6192], [130.5473, 32.8318], [130.3817, 33.0924], [130.2375, 33.1776], [130.127, 33.1048], [130.1749, 32.8513], [130.3263, 32.8527], [130.3405, 32.7017], [130.2454, 32.6773], [130.0542, 32.771], [129.8269, 32.7252], [129.8283, 32.8926], [129.897, 33.0222], [129.5801, 33.2362], [129.66, 33.3649], [130.0719, 33.5216], [130.1677, 33.5984], [130.3649, 33.6344], [130.4838, 33.8345], [130.7156, 33.9278], [130.953, 33.8719], [131.0583, 33.673], [131.1745, 33.6024]]], [[[129.2796, 34.1235], [129.1863, 34.1448], [129.2148, 34.3206], [129.3372, 34.2846], [129.2796, 34.1235]]], [[[134.3572, 34.2562], [134.6374, 34.2265], [134.6351, 34.0441], [134.739, 33.8203], [134.3772, 33.6082], [134.2427, 33.4395], [134.1814, 33.2473], [133.9586, 33.4484], [133.6319, 33.511], [133.2861, 33.36], [132.9772, 32.842], [132.8697, 32.7545], [132.6922, 32.7759], [132.7091, 32.9024], [132.4951, 32.9166], [132.4755, 33.1265], [132.5115, 33.293], [132.405, 33.3312], [132.366, 33.5123], [132.6429, 33.6899], [132.7841, 33.9926], [132.9901, 34.088], [133.1339, 33.9273], [133.5822, 34.017], [133.7065, 34.2372], [133.9485, 34.3482], [134.0758, 34.3584], [134.3572, 34.2562]]], [[[134.9329, 34.2882], [134.8247, 34.203], [134.668, 34.294], [134.8344, 34.4728], [134.9329, 34.2882]]], [[[129.3856, 34.3534], [129.2667, 34.3703], [129.3258, 34.6074], [129.4753, 34.5403], [129.3856, 34.3534]]], [[[138.3443, 37.8221], [138.2502, 38.0786], [138.4615, 38.2916], [138.4535, 38.0755], [138.497, 37.9037], [138.3443, 37.8221]]], [[[141.2295, 41.3727], [141.4555, 41.4047], [141.4001, 41.0962], [141.4626, 40.611], [141.6464, 40.4738], [141.7969, 40.2914], [141.978, 39.8444], [141.9771, 39.4289], [141.9007, 39.1115], [141.6583, 38.9748], [141.5465, 38.7626], [141.4676, 38.404], [141.1084, 38.3378], [140.9619, 38.1487], [140.9281, 37.9495], [141.0365, 37.4673], [140.9686, 37.0022], [140.7919, 36.8468], [140.6272, 36.5028], [140.5735, 36.2311], [140.6219, 36.0593], [140.874, 35.7251], [140.6392, 35.6611], [140.4572, 35.5103], [140.4164, 35.267], [140.3147, 35.1551], [140.059, 35.0384], [139.9206, 34.8994], [139.7994, 34.9567], [139.8265, 35.2967], [140.0866, 35.5404], [139.9876, 35.6683], [139.8349, 35.6581], [139.7679, 35.4947], [139.6502, 35.4091], [139.7438, 35.2523], [139.636, 35.1422], [139.4744, 35.2985], [139.2494, 35.2781], [139.1157, 35.097], [139.0861, 34.8391], [138.9826, 34.6984], [138.8374, 34.6193], [138.7611, 34.6993], [138.8028, 34.9749], [138.7197, 35.1241], [138.5774, 35.0863], [138.2533, 34.7325], [138.1889, 34.5962], [137.9789, 34.6411], [137.5435, 34.6642], [137.3179, 34.6362], [137.2754, 34.7725], [137.0321, 34.7658], [136.8848, 34.8058], [136.8519, 35.0597], [136.6898, 34.9843], [136.5333, 34.6784], [136.6158, 34.5892], [136.8804, 34.4338], [136.8536, 34.3241], [136.5443, 34.2576], [136.3299, 34.1768], [135.9161, 33.5615], [135.6951, 33.487], [135.4528, 33.5536], [135.3466, 33.7218], [135.1753, 33.898], [135.1278, 34.0068], [135.1003, 34.2882], [135.3848, 34.5004], [135.3551, 34.6544], [135.0417, 34.6309], [134.7398, 34.7654], [134.5836, 34.7707], [134.208, 34.6975], [133.9684, 34.5275], [133.4455, 34.4329], [133.1423, 34.3024], [133.0189, 34.3295], [132.6567, 34.246], [132.4214, 34.3534], [132.2381, 34.2269], [132.2021, 34.0321], [132.0902, 33.8554], [131.7405, 34.052], [131.4759, 34.0192], [131.2326, 33.9482], [131.072, 34.0205], [130.9188, 33.9757], [130.889, 34.262], [131.0041, 34.3925], [131.3543, 34.4134], [131.6082, 34.6153], [131.8558, 34.7263], [132.619, 35.3069], [132.6975, 35.4184], [132.9231, 35.5111], [133.267, 35.5564], [133.3767, 35.4587], [133.6155, 35.5116], [133.8601, 35.4947], [134.2139, 35.5391], [134.4562, 35.6278], [134.8823, 35.6634], [135.1745, 35.7473], [135.2321, 35.5919], [135.3272, 35.5253], [135.6805, 35.5032], [135.9033, 35.607], [136.0956, 35.7677], [136.0063, 35.9905], [136.1564, 36.2232], [136.3588, 36.3616], [136.6983, 36.7421], [136.7494, 36.9511], [136.7191, 37.1984], [136.8435, 37.3821], [137.3224, 37.522], [137.3375, 37.4376], [137.152, 37.2831], [136.9238, 37.1721], [137.0165, 36.837], [137.1235, 36.774], [137.3424, 36.7704], [137.5142, 36.9515], [137.9133, 37.0647], [138.3199, 37.2183], [138.5484, 37.3923], [138.7097, 37.5606], [138.885, 37.8437], [139.2471, 38.0089], [139.4012, 38.1425], [139.4767, 38.4], [139.5801, 38.5988], [139.8021, 38.8816], [139.9121, 39.2287], [140.0479, 39.4635], [140.0546, 39.7494], [139.9081, 40.0215], [140.0142, 40.3149], [139.9228, 40.5986], [140.0293, 40.7331], [140.2814, 40.8463], [140.3436, 41.0056], [140.3151, 41.161], [140.3857, 41.2298], [140.6277, 41.1956], [140.6796, 40.8933], [140.8008, 40.8343], [140.9362, 40.9408], [141.1186, 40.8822], [141.262, 41.1028], [141.2002, 41.2435], [140.8003, 41.1388], [140.8594, 41.4256], [140.937, 41.5054], [141.2295, 41.3727]]], [[[143.8242, 44.1169], [144.1016, 44.1018], [144.482, 43.9495], [144.7985, 43.9402], [145.3427, 44.3339], [145.352, 44.2296], [145.1265, 43.8692], [145.1012, 43.7644], [145.3408, 43.3023], [145.3476, 43.1767], [145.0289, 43.0315], [144.6307, 42.9468], [144.3013, 42.9845], [143.9693, 42.8815], [143.5809, 42.5987], [143.4295, 42.419], [143.2364, 42.0004], [142.5084, 42.2578], [141.8515, 42.5792], [141.4066, 42.5468], [140.9864, 42.3422], [140.7098, 42.5557], [140.4802, 42.5593], [140.3151, 42.3342], [140.4164, 42.2006], [140.5775, 42.1185], [140.7337, 42.1162], [141.151, 41.8051], [140.9996, 41.7376], [140.6601, 41.8157], [140.4892, 41.6724], [140.3849, 41.5192], [140.1487, 41.4234], [139.9951, 41.5765], [140.1083, 41.913], [140.0569, 42.0674], [139.8952, 42.1899], [139.8211, 42.3875], [139.8913, 42.6494], [140.2242, 42.7954], [140.4865, 43.0497], [140.3973, 43.1674], [140.4869, 43.3383], [140.7808, 43.2149], [141.1381, 43.1798], [141.2962, 43.1998], [141.4125, 43.3813], [141.3978, 43.6428], [141.6446, 44.0196], [141.661, 44.2638], [141.7609, 44.4827], [141.7822, 44.7166], [141.7192, 44.9412], [141.5829, 45.156], [141.6682, 45.4015], [141.9376, 45.5093], [142.4161, 45.125], [142.7041, 44.8191], [143.2884, 44.3965], [143.8242, 44.1169]]]] }, \"properties\": { \"name\": \"Japan\", \"id\": \"JP\" }, \"id\": \"JP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.1455, 32.1246], [38.9621, 31.995], [38.1117, 31.7811], [36.9585, 31.4917], [37.4791, 31.0078], [37.9803, 30.5], [37.6336, 30.3132], [37.4694, 29.9949], [36.7551, 29.8662], [36.476, 29.4951], [36.0684, 29.2003], [36.0156, 29.1906], [34.9507, 29.3535], [34.9734, 29.555], [35.0683, 29.978], [35.1416, 30.1418], [35.174, 30.524], [35.4395, 31.1326], [35.4008, 31.2307], [35.4506, 31.4792], [35.5589, 31.7656], [35.5314, 31.9848], [35.5721, 32.2378], [35.5513, 32.3955], [35.5731, 32.6409], [35.7874, 32.735], [35.8949, 32.7137], [36.0595, 32.5339], [36.2198, 32.4949], [36.3721, 32.387], [36.8182, 32.3173], [38.0557, 32.9947], [38.7736, 33.372], [39.0581, 32.4931], [39.0412, 32.3058], [39.2476, 32.3511], [39.2928, 32.2437], [39.1455, 32.1246]]] }, \"properties\": { \"name\": \"Jordan\", \"id\": \"JO\" }, \"id\": \"JO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.0186, 49.2311], [-2.2359, 49.1764], [-2.2206, 49.2665], [-2.0186, 49.2311]]] }, \"properties\": { \"name\": \"Jersey\", \"id\": \"JE\" }, \"id\": \"JE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-77.2614, 18.4572], [-76.9083, 18.3902], [-76.7008, 18.257], [-76.3499, 18.1519], [-76.2107, 17.9134], [-76.5246, 17.8664], [-76.8533, 17.9738], [-76.9443, 17.8486], [-77.0712, 17.9015], [-77.2051, 17.715], [-77.3615, 17.8336], [-77.7681, 17.8775], [-77.963, 18.0475], [-78.0737, 18.1913], [-78.2941, 18.218], [-78.3258, 18.3498], [-78.2167, 18.4479], [-77.9781, 18.4679], [-77.8736, 18.522], [-77.2614, 18.4572]]] }, \"properties\": { \"name\": \"Jamaica\", \"id\": \"JM\" }, \"id\": \"JM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.632, 40.8822], [9.8051, 40.4996], [9.6431, 40.2684], [9.7008, 40.0916], [9.6169, 39.3544], [9.5624, 39.1661], [9.0562, 39.2394], [9.0225, 39.0432], [8.8814, 38.9127], [8.6483, 38.9264], [8.4179, 39.2056], [8.3993, 39.4817], [8.4513, 39.7214], [8.5476, 39.8391], [8.4077, 39.9172], [8.4712, 40.2927], [8.3531, 40.5005], [8.1898, 40.6519], [8.2036, 40.8707], [8.4685, 40.8343], [8.821, 40.9497], [8.9981, 41.1103], [9.2831, 41.2018], [9.4554, 41.1503], [9.6156, 41.0172], [9.632, 40.8822]]], [[[15.5765, 38.2202], [15.2344, 37.7847], [15.0995, 37.4585], [15.174, 37.209], [15.2944, 37.0132], [15.1425, 36.8916], [15.1127, 36.6879], [14.7758, 36.7105], [14.5019, 36.7988], [14.3674, 36.9729], [14.1429, 37.1038], [13.9053, 37.1007], [13.3611, 37.3489], [13.1699, 37.4794], [12.9239, 37.5703], [12.6989, 37.5717], [12.5266, 37.6693], [12.4357, 37.8198], [12.5475, 38.0529], [12.7344, 38.1829], [12.9026, 38.0346], [13.16, 38.1904], [13.3519, 38.1807], [13.6816, 38.0009], [13.7891, 37.9814], [14.0501, 38.0404], [14.2875, 38.0169], [14.5059, 38.0453], [14.846, 38.1718], [15.1189, 38.1527], [15.499, 38.2908], [15.5765, 38.2202]]], [[[13.6998, 46.5201], [13.6799, 46.4628], [13.3993, 46.3177], [13.3998, 46.2249], [13.6324, 46.1769], [13.4863, 46.0394], [13.6141, 45.9617], [13.5698, 45.8343], [13.8313, 45.6803], [13.7198, 45.5875], [13.6284, 45.7708], [13.4651, 45.71], [13.2062, 45.7712], [13.0304, 45.6377], [12.4978, 45.4619], [12.2744, 45.4459], [12.2257, 45.2417], [12.3926, 45.0397], [12.5236, 44.9678], [12.4636, 44.8453], [12.2789, 44.8324], [12.2483, 44.7223], [12.3051, 44.4293], [12.3961, 44.2238], [12.6913, 43.9948], [12.907, 43.9211], [13.2955, 43.6863], [13.564, 43.5713], [13.8046, 43.1802], [14.0106, 42.6897], [14.1828, 42.5064], [14.5406, 42.2441], [14.8659, 42.0523], [15.1687, 41.9338], [15.4049, 41.9134], [15.9641, 41.9396], [16.1648, 41.8961], [16.1515, 41.7585], [15.9139, 41.6209], [15.9007, 41.5121], [16.0125, 41.4353], [16.5518, 41.232], [17.1031, 41.062], [17.4743, 40.8405], [17.955, 40.6554], [18.3283, 40.3709], [18.4605, 40.2212], [18.4858, 40.105], [18.3438, 39.8213], [18.0779, 39.9367], [17.8649, 40.2803], [17.476, 40.3149], [17.2576, 40.3993], [17.2154, 40.4863], [17.0312, 40.5133], [16.9283, 40.4578], [16.6694, 40.1373], [16.5301, 39.8595], [16.5976, 39.6389], [16.8244, 39.5785], [17.1148, 39.3805], [17.1227, 39.1364], [17.1746, 38.9979], [16.7556, 38.8896], [16.5589, 38.7147], [16.5457, 38.4093], [16.2824, 38.2495], [16.0569, 37.9419], [15.7244, 37.9393], [15.6432, 38.1754], [15.8225, 38.3028], [15.9047, 38.4834], [15.8789, 38.6139], [15.9725, 38.7125], [16.1967, 38.7591], [16.2101, 38.9411], [16.1075, 39.0236], [16.0236, 39.3535], [15.8545, 39.6265], [15.6929, 39.99], [15.585, 40.053], [15.2944, 40.0699], [14.9508, 40.2391], [14.9863, 40.3775], [14.9068, 40.5559], [14.7656, 40.6683], [14.4593, 40.6328], [14.4607, 40.7287], [14.3088, 40.8125], [14.1024, 40.8272], [13.8596, 41.1299], [13.7332, 41.2356], [13.5547, 41.232], [13.2471, 41.2888], [13.0887, 41.244], [12.8494, 41.4087], [12.6309, 41.4695], [12.0752, 41.9409], [11.8071, 42.0821], [11.6375, 42.2876], [11.1847, 42.4567], [11.1678, 42.5353], [10.7085, 42.9361], [10.5149, 42.9677], [10.5322, 43.1403], [10.4475, 43.3711], [10.3205, 43.5132], [10.2459, 43.8523], [10.0475, 44.0201], [9.731, 44.1013], [9.2893, 44.3193], [8.766, 44.4222], [8.552, 44.3459], [8.2924, 44.1364], [8.0815, 43.9189], [7.7334, 43.8026], [7.493, 43.7671], [7.4818, 43.8647], [7.6514, 44.0338], [7.6371, 44.1648], [7.3708, 44.1275], [6.9674, 44.2802], [6.843, 44.5106], [7.0308, 44.7166], [6.9926, 44.8271], [6.7383, 44.9212], [6.6278, 45.1178], [6.8421, 45.1356], [7.0783, 45.2399], [7.1533, 45.4011], [7.0135, 45.5005], [6.8044, 45.8147], [7.021, 45.9257], [7.1289, 45.8805], [7.5387, 45.9781], [7.788, 45.9217], [7.9931, 46.0158], [8.1249, 46.161], [8.0815, 46.256], [8.3705, 46.4451], [8.4583, 46.2457], [8.9537, 45.8298], [9.0465, 45.8755], [9.0225, 46.0513], [9.2511, 46.2866], [9.26, 46.4753], [9.4278, 46.4823], [9.481, 46.3487], [9.6396, 46.2959], [9.9391, 46.3616], [10.087, 46.6], [10.4306, 46.5503], [10.3977, 46.6648], [10.4528, 46.865], [10.7599, 46.7935], [11.025, 46.7971], [11.2442, 46.9755], [11.7756, 46.9862], [12.1693, 47.082], [12.1542, 46.9352], [12.3881, 46.7025], [13.1689, 46.5725], [13.6998, 46.5201]], [[12.4854, 43.9016], [12.5147, 43.9531], [12.441, 43.9824], [12.397, 43.9345], [12.4854, 43.9016]]]] }, \"properties\": { \"name\": \"Italy\", \"id\": \"IT\" }, \"id\": \"IT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[35.7874, 32.735], [35.5731, 32.6409], [35.5513, 32.3955], [35.3622, 32.5073], [35.193, 32.5344], [35.0653, 32.4603], [34.9561, 32.1611], [34.9898, 31.9134], [35.198, 31.7762], [34.9507, 31.6022], [34.8726, 31.3967], [35.1012, 31.3661], [35.4506, 31.4792], [35.4008, 31.2307], [35.4395, 31.1326], [35.174, 30.524], [35.1416, 30.1418], [35.0683, 29.978], [34.9734, 29.555], [34.9042, 29.4773], [34.6587, 30.1915], [34.2453, 31.2085], [34.3501, 31.3629], [34.5255, 31.5254], [34.4775, 31.5849], [34.6786, 31.8957], [34.8037, 32.1961], [34.9219, 32.6143], [35.1088, 33.0835], [35.411, 33.0755], [35.5326, 33.2504], [35.8691, 33.4319], [35.8372, 33.2784], [35.9068, 33.1359], [35.9135, 32.9494], [35.7874, 32.735]]] }, \"properties\": { \"name\": \"Israel\", \"id\": \"IL\" }, \"id\": \"IL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-15.5431, 66.2284], [-14.9121, 66.2844], [-15.1165, 66.1024], [-14.6981, 66.0203], [-14.7577, 65.7557], [-14.4263, 65.7899], [-14.3022, 65.6274], [-13.9355, 65.6161], [-13.616, 65.4872], [-13.8048, 65.3549], [-13.5809, 65.1429], [-13.5993, 65.0359], [-13.8539, 64.9929], [-13.853, 64.8621], [-14.1351, 64.7148], [-14.4653, 64.6358], [-14.547, 64.446], [-15.0215, 64.296], [-15.495, 64.2583], [-16.0604, 64.1113], [-16.6404, 63.8654], [-17.8156, 63.7129], [-17.947, 63.5358], [-18.6537, 63.4066], [-19.2503, 63.4419], [-19.7783, 63.5367], [-20.1982, 63.5558], [-20.593, 63.7353], [-21.2462, 63.9353], [-21.4487, 63.8583], [-22.607, 63.8372], [-22.51, 63.9914], [-22.0566, 64.0714], [-21.8329, 64.2054], [-21.9513, 64.3139], [-21.9502, 64.515], [-22.2843, 64.5865], [-22.2336, 64.7139], [-22.4671, 64.7949], [-23.3469, 64.8244], [-23.8785, 64.7505], [-24.0261, 64.8635], [-22.684, 65.0264], [-21.8921, 65.0488], [-22.4734, 65.2268], [-21.907, 65.3997], [-22.0057, 65.4934], [-22.9024, 65.5804], [-23.8998, 65.4075], [-24.2241, 65.4872], [-23.9091, 65.7657], [-23.7047, 65.7812], [-23.7372, 66.0695], [-23.3765, 66.1819], [-23.0626, 66.0862], [-23.0189, 65.9821], [-22.6217, 65.9999], [-22.9721, 66.3241], [-22.8893, 66.4407], [-22.4261, 66.4302], [-21.6253, 66.0897], [-21.3035, 65.8765], [-21.4662, 65.6352], [-21.4322, 65.4741], [-21.2301, 65.4205], [-20.7397, 65.6583], [-20.4547, 65.5711], [-20.3567, 65.7191], [-20.3567, 66.0331], [-20.0262, 66.0494], [-19.5936, 65.779], [-19.4338, 65.8145], [-19.383, 66.0757], [-18.7776, 66.1688], [-18.4551, 65.9646], [-18.2972, 66.1574], [-17.9071, 66.1432], [-17.5821, 65.9714], [-17.1531, 66.2029], [-16.7485, 66.1317], [-16.428, 66.2784], [-16.5407, 66.4466], [-15.9854, 66.5145], [-15.5431, 66.2284]]] }, \"properties\": { \"name\": \"Iceland\", \"id\": \"IS\" }, \"id\": \"IS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[44.7651, 37.1424], [44.881, 36.7993], [45.0342, 36.659], [45.031, 36.5263], [45.241, 36.3559], [45.3617, 36.0154], [45.4838, 36.0087], [45.7235, 35.8365], [46.1674, 35.8205], [45.9712, 35.524], [46.112, 35.3216], [46.1337, 35.1276], [45.9211, 35.0286], [45.6783, 34.7982], [45.6375, 34.5736], [45.5007, 34.5816], [45.4377, 34.4152], [45.5269, 34.2846], [45.5287, 34.1523], [45.3968, 33.9708], [45.4732, 33.9256], [45.7381, 33.6028], [45.8794, 33.6099], [46.1457, 33.2295], [46.0809, 33.0866], [46.1128, 32.9578], [46.2984, 32.9503], [46.5701, 32.834], [47.1213, 32.4665], [47.3713, 32.4239], [47.512, 32.1509], [47.8298, 31.7944], [47.6794, 31.4007], [47.6794, 31.0025], [48.0105, 30.9896], [48.0149, 30.4654], [48.3309, 30.2856], [48.4344, 30.0375], [48.5467, 29.9625], [48.3545, 29.9567], [48.1419, 30.0411], [47.9785, 29.9829], [47.6727, 30.0957], [47.3313, 30.0797], [47.1143, 29.9611], [46.9057, 29.5377], [46.7694, 29.3472], [46.5314, 29.0965], [46.3565, 29.0636], [44.7164, 29.1937], [44.3608, 29.4351], [43.4406, 30.0841], [42.8578, 30.4952], [42.0743, 31.0802], [40.8083, 31.7256], [40.3693, 31.9391], [39.1455, 32.1246], [39.2928, 32.2437], [39.2476, 32.3511], [39.0412, 32.3058], [39.0581, 32.4931], [38.7736, 33.372], [39.5646, 33.7684], [40.6894, 34.3322], [40.9872, 34.4289], [41.1946, 34.7689], [41.2162, 35.2883], [41.3543, 35.6403], [41.3525, 35.8098], [41.2455, 36.0735], [41.2962, 36.3834], [41.4169, 36.5148], [41.7885, 36.5973], [42.3499, 37.0608], [42.3588, 37.1087], [42.4561, 37.1287], [42.7748, 37.372], [42.9368, 37.3248], [43.0926, 37.3675], [43.516, 37.2445], [43.8365, 37.2236], [44.0133, 37.3134], [44.1561, 37.2831], [44.2019, 37.0519], [44.2817, 36.9782], [44.6058, 37.1762], [44.7651, 37.1424]]] }, \"properties\": { \"name\": \"Iraq\", \"id\": \"IQ\" }, \"id\": \"IQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[46.1147, 38.8776], [46.4906, 38.9065], [46.5549, 38.9042], [46.8528, 39.1484], [46.9891, 39.1803], [47.1883, 39.3411], [47.773, 39.6487], [47.9958, 39.6842], [48.3221, 39.3992], [48.1362, 39.3122], [48.1254, 39.1715], [48.2742, 39.0991], [48.2422, 38.9788], [48.05, 38.9349], [48.0233, 38.819], [48.4175, 38.5864], [48.5928, 38.4111], [48.8686, 38.4355], [48.96, 37.8899], [49.0812, 37.6676], [49.1713, 37.6005], [49.47, 37.4966], [49.727, 37.4807], [50.1305, 37.407], [50.3378, 37.1491], [50.5331, 37.0137], [50.9273, 36.8104], [51.1186, 36.7425], [51.7623, 36.6146], [52.1901, 36.6217], [53.374, 36.8686], [53.7677, 36.9303], [53.9702, 36.8184], [54.0172, 36.9524], [53.9142, 37.3435], [54.1917, 37.3324], [54.7452, 37.502], [54.8487, 37.7226], [55.0754, 37.9023], [55.3809, 38.0511], [55.5784, 38.0999], [56.2287, 38.0733], [56.4409, 38.2495], [56.7746, 38.2499], [56.9065, 38.2131], [57.1937, 38.2162], [57.4236, 37.9476], [57.7104, 37.9055], [58.109, 37.783], [58.2617, 37.6658], [58.4358, 37.6387], [58.8157, 37.6836], [59.241, 37.5207], [59.3674, 37.3337], [59.5623, 37.1788], [59.9485, 37.0417], [60.0626, 36.9631], [60.3413, 36.6377], [61.1195, 36.6426], [61.2123, 36.0993], [61.1528, 35.9768], [61.2522, 35.8676], [61.262, 35.6194], [61.2784, 35.5138], [61.1892, 35.3118], [61.0999, 35.2723], [61.1497, 35.0939], [61.08, 34.8555], [60.9513, 34.654], [60.7262, 34.5181], [60.8896, 34.3193], [60.6428, 34.3073], [60.4856, 34.0947], [60.5269, 33.8421], [60.5109, 33.6388], [60.6547, 33.5602], [60.9171, 33.5052], [60.5606, 33.1376], [60.5767, 32.9947], [60.8292, 32.2494], [60.7901, 31.9871], [60.7915, 31.6608], [60.854, 31.4833], [61.6602, 31.3825], [61.7551, 31.2853], [61.8142, 31.0727], [61.7844, 30.8321], [61.104, 30.1285], [60.8434, 29.8586], [61.3183, 29.3726], [61.3379, 29.2652], [61.6229, 28.7915], [61.8901, 28.5464], [62.3531, 28.4146], [62.5647, 28.2353], [62.7623, 28.202], [62.7397, 28.0022], [62.812, 27.4971], [62.7633, 27.2503], [62.9155, 27.2184], [63.1667, 27.2525], [63.2422, 27.0776], [63.2502, 26.8792], [63.168, 26.6657], [63.093, 26.6324], [62.7867, 26.644], [62.4391, 26.5609], [62.3122, 26.4908], [62.2394, 26.3572], [61.8697, 26.2422], [61.8102, 26.1654], [61.7543, 25.8432], [61.6686, 25.769], [61.5878, 25.2021], [61.412, 25.1023], [60.6641, 25.2821], [60.5105, 25.437], [60.4004, 25.3114], [60.0248, 25.3841], [59.6161, 25.4032], [59.4562, 25.4814], [59.0461, 25.4175], [58.7979, 25.5546], [58.5307, 25.5924], [58.3141, 25.5808], [58.0224, 25.6407], [57.796, 25.6532], [57.7326, 25.7251], [57.3344, 25.7917], [57.2056, 26.0371], [57.2013, 26.1587], [57.1045, 26.3714], [57.0721, 26.6799], [56.9824, 26.9054], [56.8128, 27.09], [56.356, 27.2001], [56.1181, 27.1433], [55.9411, 27.0377], [55.6503, 26.9778], [55.4239, 26.7705], [55.2943, 26.786], [54.8956, 26.5565], [54.6449, 26.509], [54.2471, 26.6968], [54.0691, 26.7323], [53.7056, 26.7256], [53.5072, 26.8517], [53.4548, 26.9431], [52.9826, 27.142], [52.6917, 27.3235], [52.6025, 27.4936], [52.4761, 27.6165], [52.1919, 27.7173], [52.0308, 27.8243], [51.6663, 27.8451], [51.5185, 27.9099], [51.2789, 28.1314], [51.2762, 28.2189], [51.0937, 28.5123], [51.0622, 28.7262], [50.8669, 28.8701], [50.8758, 29.0627], [50.6751, 29.1466], [50.6498, 29.4201], [50.1691, 29.9212], [50.0715, 30.1986], [49.9831, 30.2093], [49.5548, 30.029], [49.43, 30.1307], [49.0546, 30.307], [49.1304, 30.5093], [48.9169, 30.3971], [48.9191, 30.121], [48.8326, 30.0357], [48.5467, 29.9625], [48.4344, 30.0375], [48.3309, 30.2856], [48.0149, 30.4654], [48.0105, 30.9896], [47.6794, 31.0025], [47.6794, 31.4007], [47.8298, 31.7944], [47.512, 32.1509], [47.3713, 32.4239], [47.1213, 32.4665], [46.5701, 32.834], [46.2984, 32.9503], [46.1128, 32.9578], [46.0809, 33.0866], [46.1457, 33.2295], [45.8794, 33.6099], [45.7381, 33.6028], [45.4732, 33.9256], [45.3968, 33.9708], [45.5287, 34.1523], [45.5269, 34.2846], [45.4377, 34.4152], [45.5007, 34.5816], [45.6375, 34.5736], [45.6783, 34.7982], [45.9211, 35.0286], [46.1337, 35.1276], [46.112, 35.3216], [45.9712, 35.524], [46.1674, 35.8205], [45.7235, 35.8365], [45.4838, 36.0087], [45.3617, 36.0154], [45.241, 36.3559], [45.031, 36.5263], [45.0342, 36.659], [44.881, 36.7993], [44.7651, 37.1424], [44.794, 37.2903], [44.5739, 37.4354], [44.5615, 37.7448], [44.2112, 37.9081], [44.4309, 38.3569], [44.2906, 38.42], [44.2715, 38.8359], [44.1446, 38.9944], [44.1779, 39.1448], [44.0789, 39.2185], [44.023, 39.3774], [44.3892, 39.4223], [44.4558, 39.6668], [44.5871, 39.7685], [44.8172, 39.6504], [45.1412, 39.2545], [45.4799, 39.0064], [46.1147, 38.8776]]], [[[56.1879, 26.9214], [55.9543, 26.7012], [55.8478, 26.731], [55.4239, 26.5831], [55.3472, 26.6479], [55.7626, 26.8122], [55.7577, 26.9475], [55.9073, 26.9098], [56.0742, 26.9835], [56.1879, 26.9214]]]] }, \"properties\": { \"name\": \"Iran\", \"id\": \"IR\" }, \"id\": \"IR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.218, 54.0887], [-6.3452, 53.9873], [-6.1419, 53.5775], [-6.1348, 53.3012], [-6.0274, 52.927], [-6.1306, 52.8074], [-6.2172, 52.543], [-6.4631, 52.3453], [-6.325, 52.2467], [-6.5612, 52.1888], [-7.5273, 52.0989], [-7.6645, 51.9797], [-8.8135, 51.5849], [-9.2964, 51.4981], [-9.4629, 51.529], [-9.8353, 51.4833], [-9.5799, 51.6892], [-9.899, 51.647], [-9.8029, 51.7802], [-10.3411, 51.7988], [-10.3787, 51.8687], [-9.9559, 52.1366], [-10.3902, 52.1349], [-10.2109, 52.2716], [-9.9374, 52.2377], [-9.9061, 52.4036], [-9.5863, 52.5592], [-9.3313, 52.5788], [-8.7835, 52.6796], [-8.9904, 52.7554], [-9.1754, 52.6349], [-9.561, 52.654], [-9.2993, 53.0975], [-8.9973, 53.162], [-9.1404, 53.2504], [-9.4706, 53.2349], [-9.7954, 53.3951], [-10.0912, 53.4129], [-10.117, 53.5485], [-9.8784, 53.5904], [-9.9017, 53.7271], [-9.5783, 53.8055], [-9.5787, 53.8798], [-9.9141, 53.8639], [-9.8564, 54.0044], [-9.996, 54.276], [-9.3155, 54.2986], [-9.146, 54.2096], [-9.0026, 54.288], [-8.588, 54.2312], [-8.623, 54.3468], [-8.2304, 54.5073], [-8.1334, 54.6409], [-8.4566, 54.6094], [-8.764, 54.6812], [-8.3773, 54.8895], [-8.4117, 54.9651], [-8.2746, 55.1462], [-7.8032, 55.2], [-7.2468, 55.3531], [-6.9615, 55.2379], [-7.2186, 55.0921], [-7.3768, 55.0277], [-7.5504, 54.7681], [-7.8862, 54.666], [-7.7939, 54.5712], [-8.0445, 54.5124], [-8.1184, 54.4143], [-7.8549, 54.2152], [-7.3553, 54.1213], [-6.9363, 54.3743], [-6.6497, 54.0587], [-6.218, 54.0887]]] }, \"properties\": { \"name\": \"Ireland\", \"id\": \"IE\" }, \"id\": \"IE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[72.4919, -7.3773], [72.4671, -7.3675], [72.4738, -7.3098], [72.4357, -7.2303], [72.4938, -7.2618], [72.4919, -7.3773]]] }, \"properties\": { \"name\": \"British Indian Ocean Territory\", \"id\": \"IO\" }, \"id\": \"IO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[93.8898, 6.8312], [93.829, 6.7487], [93.7092, 7.0008], [93.6844, 7.1837], [93.8592, 7.2068], [93.9297, 6.9733], [93.8898, 6.8312]]], [[[92.5026, 10.5551], [92.3695, 10.5475], [92.3526, 10.7513], [92.5101, 10.8973], [92.5741, 10.7042], [92.5026, 10.5551]]], [[[92.7228, 11.5361], [92.6682, 11.5387], [92.5337, 11.8734], [92.6074, 11.9494], [92.6948, 12.2148], [92.7402, 12.7794], [92.8072, 12.8788], [92.8574, 13.3582], [92.9247, 13.4856], [93.0624, 13.5456], [93.0739, 13.2522], [93.0047, 13.0892], [92.8862, 12.9423], [92.9652, 12.8504], [92.99, 12.5384], [92.8636, 12.4359], [92.8795, 12.2281], [92.7477, 11.9928], [92.7974, 11.8748], [92.7228, 11.5361]]], [[[78.7197, 31.8876], [78.6936, 31.7403], [78.8028, 31.6182], [78.7269, 31.4717], [78.7433, 31.3239], [78.8446, 31.3017], [79.1073, 31.4025], [79.3386, 31.1055], [79.3697, 31.0797], [79.5654, 30.9493], [79.7945, 30.9684], [79.9166, 30.8942], [79.9246, 30.8889], [80.1944, 30.7593], [80.1913, 30.5684], [80.6823, 30.4148], [80.9854, 30.2372], [81.0103, 30.1645], [80.9078, 30.172], [80.549, 29.8999], [80.4017, 29.7303], [80.2548, 29.4231], [80.2331, 29.1945], [80.1304, 29.1004], [80.0706, 28.8301], [80.4186, 28.6122], [80.5868, 28.6495], [80.7506, 28.5398], [81.1687, 28.3352], [81.3108, 28.1762], [81.8529, 27.8669], [81.9878, 27.9139], [82.4512, 27.672], [82.6775, 27.6733], [82.7334, 27.5188], [83.2897, 27.3711], [83.4473, 27.4652], [83.829, 27.3777], [84.0909, 27.4913], [84.6103, 27.2987], [84.6853, 27.0412], [85.293, 26.7412], [85.5687, 26.8397], [85.7, 26.7815], [85.7373, 26.6399], [85.8558, 26.6], [86.0072, 26.6493], [86.3662, 26.5742], [86.7014, 26.4348], [87.0166, 26.5556], [87.0894, 26.4331], [87.2873, 26.3603], [87.4134, 26.4229], [87.6331, 26.3989], [87.8494, 26.4371], [88.0549, 26.43], [88.1614, 26.7248], [88.1113, 26.9285], [87.9842, 27.134], [88.0242, 27.4088], [88.1472, 27.7492], [88.1099, 27.8704], [88.109, 27.933], [88.4259, 28.0116], [88.6213, 28.0919], [88.8037, 28.0071], [88.8485, 27.8686], [88.7491, 27.522], [88.8912, 27.316], [88.7389, 27.1757], [88.8579, 26.9613], [89.1481, 26.8162], [89.3319, 26.8486], [89.7638, 26.7017], [90.1229, 26.7545], [90.3458, 26.8903], [90.5598, 26.7967], [90.7395, 26.7718], [91.1337, 26.8033], [91.2865, 26.79], [91.4266, 26.8672], [91.6717, 26.802], [91.9984, 26.8548], [92.0734, 26.9147], [91.9922, 27.0998], [92.0836, 27.2907], [91.9909, 27.45], [91.7431, 27.4425], [91.5949, 27.5575], [91.6317, 27.7599], [91.9775, 27.7301], [92.1014, 27.8078], [92.4147, 27.8247], [92.6642, 27.949], [92.702, 28.147], [92.8817, 28.2282], [93.1193, 28.4022], [93.2067, 28.5909], [93.3607, 28.6539], [93.6648, 28.6903], [93.9022, 28.803], [94.2933, 29.1448], [94.6231, 29.3126], [94.7696, 29.1759], [94.9991, 29.1493], [95.2792, 29.0494], [95.4204, 29.0543], [95.5158, 29.2066], [96.0351, 29.4471], [96.2349, 29.2456], [96.1221, 29.0822], [96.1622, 28.9095], [96.4356, 29.0507], [96.5811, 28.7635], [96.3956, 28.6064], [96.2815, 28.412], [96.3663, 28.3671], [96.6024, 28.4599], [96.776, 28.3671], [97.0752, 28.3689], [97.3224, 28.218], [97.3353, 27.9379], [97.2261, 27.89], [96.8999, 27.644], [96.9021, 27.4394], [97.1037, 27.1633], [97.0379, 27.102], [96.8803, 27.1779], [96.7978, 27.2961], [96.666, 27.3391], [96.191, 27.2614], [96.0614, 27.217], [95.9051, 27.0466], [95.4638, 26.7562], [95.1287, 26.5973], [95.0599, 26.4739], [95.0688, 26.1912], [95.1323, 26.0412], [95.0151, 25.9128], [94.9919, 25.7704], [94.786, 25.5191], [94.6227, 25.4099], [94.5544, 25.2435], [94.7074, 25.0486], [94.5841, 24.7671], [94.2929, 24.322], [94.1278, 23.8763], [93.6834, 24.0063], [93.4938, 23.973], [93.3075, 24.0218], [93.4148, 23.6823], [93.3661, 23.1323], [93.3079, 23.0302], [93.164, 23.032], [93.1623, 22.9081], [93.0788, 22.7181], [93.1618, 22.3604], [92.9644, 22.0039], [92.8542, 22.0101], [92.6891, 22.1309], [92.5751, 21.9782], [92.4916, 22.6853], [92.3615, 22.929], [92.3344, 23.3236], [92.2461, 23.6836], [92.1272, 23.7209], [91.9296, 23.6859], [91.938, 23.5047], [91.7543, 23.2872], [91.7737, 23.1061], [91.6197, 22.9796], [91.5115, 23.0338], [91.4365, 23.1998], [91.3153, 23.1044], [91.1604, 23.6605], [91.2319, 23.9206], [91.3672, 24.0933], [91.5266, 24.0907], [91.6686, 24.1901], [91.8767, 24.1954], [91.9519, 24.3566], [92.0641, 24.3743], [92.1982, 24.6859], [92.2514, 24.895], [92.4431, 24.8493], [92.4684, 24.9443], [92.2047, 25.1107], [92.0498, 25.1693], [91.4799, 25.1423], [91.293, 25.1778], [90.4394, 25.1578], [90.2503, 25.1849], [89.814, 25.3052], [89.8229, 25.9412], [89.7097, 26.1712], [89.6191, 26.2156], [89.5499, 26.0052], [89.2894, 26.0376], [89.1082, 26.2023], [88.683, 26.2915], [88.5183, 26.5179], [88.346, 26.505], [88.4402, 26.3696], [88.1508, 26.0873], [88.0847, 25.8885], [88.2528, 25.7899], [88.4522, 25.5746], [88.5933, 25.4951], [88.769, 25.4903], [88.8201, 25.3655], [88.944, 25.291], [88.8902, 25.1942], [88.7477, 25.1689], [88.4562, 25.1884], [88.3132, 24.8817], [88.1498, 24.9145], [88.0234, 24.6278], [88.1454, 24.4857], [88.287, 24.48], [88.3971, 24.3894], [88.6421, 24.3259], [88.7335, 24.231], [88.6999, 24.0023], [88.5671, 23.6743], [88.7407, 23.4368], [88.7243, 23.2548], [88.9279, 23.1865], [88.8507, 23.0404], [88.9209, 22.632], [89.0501, 22.2747], [89.0515, 22.0932], [89.0195, 21.8335], [89.0518, 21.6542], [88.8343, 21.6613], [88.691, 21.7336], [88.7402, 22.0053], [88.6595, 22.067], [88.5667, 21.8321], [88.5848, 21.6599], [88.446, 21.6142], [88.3052, 21.7234], [88.2537, 21.6222], [88.0567, 21.6941], [88.181, 22.0328], [88.0509, 22.0013], [87.9483, 21.8255], [87.678, 21.6537], [87.2008, 21.545], [87.1005, 21.5005], [86.8595, 21.2369], [86.8421, 21.1064], [86.9754, 20.7002], [86.7627, 20.4193], [86.7503, 20.3131], [86.4985, 20.1715], [86.2793, 19.9194], [85.5749, 19.693], [85.5553, 19.8671], [85.4599, 19.8959], [85.2486, 19.7579], [85.4416, 19.6264], [85.2255, 19.5084], [84.771, 19.1253], [84.7496, 19.0503], [84.4629, 18.6898], [84.1043, 18.2925], [83.654, 18.0697], [83.1982, 17.609], [82.9767, 17.462], [82.5933, 17.2738], [82.3597, 17.0963], [82.282, 16.936], [82.3597, 16.7829], [82.2589, 16.56], [82.1414, 16.4854], [81.7618, 16.3296], [81.4018, 16.3652], [81.2385, 16.264], [81.1319, 15.9617], [80.9788, 15.7584], [80.8261, 15.7659], [80.7817, 15.8676], [80.6468, 15.8951], [80.3849, 15.793], [80.2933, 15.7109], [80.1012, 15.3238], [80.0532, 15.0739], [80.0986, 14.7982], [80.1656, 14.5776], [80.1701, 14.3495], [80.1118, 14.2123], [80.2441, 13.7733], [80.0621, 13.6064], [80.114, 13.5287], [80.3422, 13.3613], [80.229, 12.6902], [80.1429, 12.4518], [79.9819, 12.2356], [79.8583, 11.9888], [79.754, 11.5751], [79.8486, 11.197], [79.8379, 10.3225], [79.3905, 10.306], [79.2534, 10.1747], [79.2579, 10.0353], [78.9963, 9.6832], [78.9191, 9.4529], [78.9794, 9.2687], [78.4215, 9.1049], [78.1924, 8.8909], [78.1263, 8.5114], [78.0602, 8.3845], [77.7703, 8.19], [77.5178, 8.0781], [77.3015, 8.1452], [76.9669, 8.4071], [76.5537, 8.9029], [76.472, 9.1608], [76.4032, 9.2367], [76.3246, 9.452], [76.2424, 9.927], [76.3432, 9.8275], [76.3756, 9.5399], [76.4586, 9.5363], [76.3463, 9.9221], [76.1954, 10.0863], [76.2016, 10.2009], [75.9224, 10.7841], [75.8447, 11.0576], [75.724, 11.3616], [75.5247, 11.703], [75.3147, 11.9587], [75.1966, 12.0576], [74.9454, 12.5646], [74.8681, 12.8447], [74.7705, 13.0773], [74.6822, 13.507], [74.671, 13.6676], [74.4984, 14.0462], [74.3822, 14.4946], [73.9493, 15.0748], [73.8845, 15.3065], [73.9319, 15.3971], [73.7717, 15.5729], [73.6079, 15.8711], [73.4761, 16.0544], [73.3376, 16.4597], [73.2391, 17.1984], [73.149, 17.5273], [73.156, 17.6218], [72.9941, 18.0977], [72.9173, 18.5762], [72.8712, 18.6832], [73.0056, 19.021], [72.8347, 18.9757], [72.8116, 19.2988], [72.6677, 19.8311], [72.7091, 20.0779], [72.8812, 20.563], [72.8791, 20.8285], [72.8138, 21.117], [72.6927, 21.1774], [72.6132, 21.4619], [72.8395, 21.6875], [72.543, 21.6968], [72.5924, 21.8774], [72.5222, 21.9764], [72.5901, 22.2783], [72.3327, 22.2703], [72.2443, 22.0275], [72.037, 21.8233], [72.1711, 21.7744], [72.2567, 21.6613], [72.254, 21.5312], [72.0152, 21.1557], [71.571, 20.9706], [71.3965, 20.8698], [71.0245, 20.7388], [70.7191, 20.7406], [70.4852, 20.8401], [70.1273, 21.0948], [69.7483, 21.5059], [69.3856, 21.8397], [69.1917, 21.9915], [69.0088, 22.1966], [68.9835, 22.3853], [69.1312, 22.4163], [69.2764, 22.2854], [69.549, 22.4083], [69.8189, 22.4518], [70.0058, 22.5477], [70.1771, 22.5726], [70.3276, 22.8158], [70.2513, 22.9707], [69.8499, 22.8562], [69.6644, 22.759], [69.236, 22.8487], [68.8171, 23.0537], [68.6408, 23.19], [68.4176, 23.5713], [68.2351, 23.597], [68.1649, 23.8572], [68.2826, 23.9277], [68.4886, 23.9673], [68.7242, 23.9646], [68.7282, 24.2656], [68.901, 24.2927], [69.1193, 24.2687], [69.5592, 24.2731], [69.7163, 24.1728], [70.0213, 24.1914], [70.098, 24.2873], [70.5469, 24.4183], [70.5793, 24.2789], [70.7164, 24.238], [71.044, 24.4001], [70.9729, 24.4875], [71.0481, 24.6877], [70.8776, 25.0628], [70.6521, 25.4228], [70.6486, 25.6669], [70.2646, 25.7064], [70.1004, 25.9102], [70.0776, 26.0717], [70.1327, 26.2147], [70.1566, 26.4713], [70.0595, 26.5787], [69.7359, 26.6271], [69.5068, 26.7425], [69.47, 26.8046], [69.5681, 27.1744], [69.8961, 27.4736], [70.1447, 27.8491], [70.4035, 28.0249], [70.629, 27.9374], [70.7373, 27.7292], [70.8749, 27.7146], [71.1847, 27.8318], [71.5429, 27.87], [71.8701, 27.9623], [71.9478, 28.1771], [72.179, 28.4218], [72.3419, 28.752], [72.903, 29.029], [73.2312, 29.5506], [73.3816, 29.9345], [73.809, 30.0934], [73.9333, 30.2222], [73.8991, 30.4352], [74.0093, 30.5196], [74.2156, 30.769], [74.6329, 31.0345], [74.5179, 31.1854], [74.5938, 31.4655], [74.5099, 31.7127], [74.5556, 31.8184], [74.7395, 31.9489], [75.2543, 32.1402], [75.3334, 32.2792], [75.2334, 32.3719], [74.9876, 32.462], [74.7887, 32.4576], [74.6578, 32.5189], [74.6631, 32.7577], [74.3545, 32.7688], [74.3035, 32.9916], [74.1265, 33.0755], [73.9942, 33.2424], [74.118, 33.384], [74.1499, 33.507], [74.0039, 33.6326], [74.0008, 33.7884], [74.2156, 33.8865], [74.2467, 33.9904], [73.9497, 34.0187], [73.9795, 34.1914], [73.8099, 34.3255], [73.8122, 34.4223], [73.9612, 34.6536], [74.3004, 34.7654], [74.9521, 34.646], [75.1872, 34.6389], [75.4523, 34.5368], [75.7093, 34.5031], [76.041, 34.67], [76.1723, 34.6677], [76.4569, 34.7561], [76.5944, 34.7356], [76.7831, 34.9003], [77.0011, 34.9922], [77.0485, 35.1099], [77.7991, 35.496], [77.8107, 35.4845], [78.0473, 35.4494], [78.0123, 35.251], [78.2822, 34.654], [78.3269, 34.6064], [78.671, 34.5181], [78.9364, 34.3521], [78.9706, 34.2283], [78.7531, 34.0875], [78.8019, 33.4998], [79.1127, 33.2264], [79.1353, 33.1718], [79.1087, 33.0227], [79.2023, 32.9459], [79.2165, 32.5641], [79.2192, 32.5011], [79.067, 32.3883], [78.9191, 32.3581], [78.7713, 32.4682], [78.7008, 32.597], [78.3895, 32.5197], [78.4962, 32.2157], [78.7353, 31.9578], [78.7197, 31.8876]]]] }, \"properties\": { \"name\": \"India\", \"id\": \"IN\" }, \"id\": \"IN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-4.4121, 54.1854], [-4.6143, 54.0587], [-4.7456, 54.1189], [-4.5086, 54.3768], [-4.3379, 54.2691], [-4.4121, 54.1854]]] }, \"properties\": { \"name\": \"Isle of Man\", \"id\": \"IM\" }, \"id\": \"IM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[122.9488, -10.9093], [122.8263, -10.8991], [122.8458, -10.762], [123.0615, -10.6985], [123.2653, -10.5182], [123.3709, -10.4748], [123.418, -10.6515], [123.2147, -10.8059], [122.9488, -10.9093]]], [[[120.0124, -9.3748], [120.221, -9.5062], [120.2912, -9.6478], [120.5039, -9.674], [120.8327, -10.0375], [120.6978, -10.2066], [120.439, -10.2941], [120.1447, -10.2], [119.9307, -9.9665], [119.601, -9.7734], [119.3626, -9.7716], [119.0856, -9.7068], [118.9586, -9.5195], [119.1855, -9.3846], [119.6147, -9.3526], [119.7949, -9.3806], [119.9423, -9.3016], [120.0124, -9.3748]]], [[[125.0679, -9.512], [124.9631, -9.6656], [124.7083, -9.9141], [124.4273, -10.1485], [124.1761, -10.1831], [123.8574, -10.3439], [123.6444, -10.3109], [123.6142, -10.2151], [123.7162, -10.0788], [123.5893, -9.967], [123.7092, -9.615], [124.0363, -9.3416], [124.0901, -9.4166], [124.2822, -9.428], [124.4131, -9.3144], [124.4442, -9.1902], [124.5757, -9.1555], [124.9223, -8.9424], [124.9734, -9.0645], [125.1003, -9.0042], [125.1495, -9.1231], [124.9774, -9.1951], [124.9685, -9.2945], [125.0679, -9.512]]], [[[119.4642, -8.7409], [119.379, -8.5864], [119.43, -8.455], [119.5468, -8.4826], [119.4642, -8.7409]]], [[[123.3177, -8.3547], [123.2972, -8.3987], [123.0251, -8.3956], [123.1335, -8.2539], [123.3363, -8.2691], [123.3177, -8.3547]]], [[[116.6407, -8.6139], [116.5141, -8.8208], [116.3774, -8.9292], [115.8745, -8.8257], [115.8691, -8.7427], [116.0764, -8.745], [116.0613, -8.4373], [116.2197, -8.2953], [116.4014, -8.2043], [116.6468, -8.2828], [116.7343, -8.3872], [116.6407, -8.6139]]], [[[124.2867, -8.3294], [124.1845, -8.4985], [124.0656, -8.5518], [123.9715, -8.3543], [124.1104, -8.3645], [124.2396, -8.2033], [124.2867, -8.3294]]], [[[123.9248, -8.2726], [123.7837, -8.2996], [123.6293, -8.4227], [123.5529, -8.567], [123.4108, -8.5864], [123.3252, -8.4391], [123.5298, -8.2651], [123.6004, -8.2912], [123.7758, -8.1905], [123.9248, -8.2726]]], [[[138.8952, -8.3889], [138.5941, -8.3716], [138.6767, -8.1993], [138.7961, -8.1737], [138.8952, -8.3889]]], [[[117.5564, -8.3671], [117.4906, -8.1834], [117.6691, -8.1891], [117.5564, -8.3671]]], [[[124.5757, -8.1407], [125.1247, -8.2047], [125.0967, -8.353], [124.4442, -8.4444], [124.4305, -8.1834], [124.5757, -8.1407]]], [[[127.8236, -8.0986], [128.1192, -8.1705], [128.0233, -8.2554], [127.821, -8.1901], [127.8236, -8.0986]]], [[[122.7827, -8.6117], [122.4703, -8.7254], [122.0942, -8.7445], [121.8386, -8.8603], [121.6513, -8.8989], [121.5847, -8.8208], [121.4147, -8.8146], [121.3282, -8.9166], [121.191, -8.8954], [121.0352, -8.9354], [120.5504, -8.8017], [120.3197, -8.8204], [120.1207, -8.7768], [119.9095, -8.8577], [119.8078, -8.6974], [119.818, -8.5705], [119.9183, -8.4453], [120.2313, -8.2899], [120.6103, -8.2407], [120.7515, -8.3214], [120.886, -8.3267], [121.2766, -8.4781], [121.4444, -8.578], [121.9664, -8.455], [122.263, -8.6251], [122.4334, -8.6007], [122.6034, -8.4027], [122.8507, -8.3046], [122.7583, -8.1861], [122.8458, -8.0933], [122.9781, -8.1519], [123.0061, -8.3289], [122.8112, -8.4813], [122.7827, -8.6117]]], [[[130.8621, -8.3187], [130.8336, -8.2708], [131.0201, -8.0915], [131.0436, -8.2122], [130.8621, -8.3187]]], [[[118.2426, -8.3179], [118.338, -8.3534], [118.4907, -8.2713], [118.7482, -8.3312], [118.8459, -8.2931], [118.9879, -8.3379], [119.0421, -8.5611], [119.1295, -8.6681], [119.0061, -8.7498], [118.9031, -8.7028], [118.8179, -8.7907], [118.4788, -8.8563], [118.398, -8.8133], [118.3789, -8.6748], [118.1898, -8.8404], [117.8613, -8.9314], [117.7317, -8.9198], [117.508, -9.0077], [117.2101, -9.0338], [117.0614, -9.0991], [116.7885, -9.0064], [116.7832, -8.6646], [116.835, -8.5323], [116.9531, -8.5034], [117.1649, -8.3671], [117.3566, -8.4284], [117.567, -8.4267], [117.8062, -8.7112], [117.9696, -8.7281], [118.2351, -8.5918], [118.1006, -8.4754], [117.979, -8.459], [117.8147, -8.3423], [117.7553, -8.1496], [117.9208, -8.0893], [118.1175, -8.1221], [118.2426, -8.3179]]], [[[115.4479, -8.1549], [115.5495, -8.2082], [115.7045, -8.4071], [115.5602, -8.5141], [115.3338, -8.6157], [115.2361, -8.7977], [115.055, -8.5732], [114.842, -8.4284], [114.6133, -8.3783], [114.502, -8.2606], [114.4753, -8.1195], [114.8331, -8.1825], [114.9982, -8.1745], [115.154, -8.0657], [115.4479, -8.1549]]], [[[129.8388, -7.9548], [129.7132, -8.0409], [129.592, -7.9175], [129.6089, -7.8034], [129.8131, -7.8199], [129.8388, -7.9548]]], [[[126.8008, -7.668], [126.8128, -7.7377], [126.5771, -7.8078], [126.472, -7.9503], [126.1084, -7.8842], [125.9517, -7.9108], [125.8434, -7.8167], [125.9753, -7.6632], [126.2136, -7.7067], [126.6096, -7.5717], [126.8008, -7.668]]], [[[138.5352, -8.2735], [138.2963, -8.4054], [137.872, -8.3796], [137.6878, -8.4116], [137.6851, -8.2624], [137.8324, -7.9321], [138.0074, -7.6414], [138.2954, -7.4386], [138.544, -7.3795], [138.7699, -7.3906], [138.9626, -7.5881], [138.9893, -7.696], [138.786, -8.0591], [138.5352, -8.2735]]], [[[131.3254, -7.9996], [131.1137, -7.9974], [131.0866, -7.8651], [131.1377, -7.6849], [131.2602, -7.4705], [131.3495, -7.4252], [131.5608, -7.1359], [131.6912, -7.439], [131.6246, -7.6263], [131.377, -7.8691], [131.3254, -7.9996]]], [[[113.8446, -7.1052], [113.6559, -7.1118], [113.4708, -7.2184], [113.0407, -7.2117], [112.7636, -7.1398], [112.7259, -7.0728], [112.8679, -6.9001], [113.0673, -6.8802], [113.9747, -6.873], [114.0829, -6.9894], [113.8446, -7.1052]]], [[[134.5371, -6.4425], [134.5042, -6.5916], [134.3559, -6.8149], [134.2001, -6.909], [134.059, -6.7692], [134.1246, -6.4264], [134.1144, -6.1907], [134.1682, -6.1761], [134.415, -6.3869], [134.5371, -6.4425]]], [[[107.374, -6.0075], [107.4747, -6.122], [107.6669, -6.2156], [107.884, -6.2334], [108.1374, -6.2968], [108.2951, -6.2649], [108.5161, -6.4713], [108.6035, -6.7292], [108.6777, -6.7905], [109.0186, -6.8171], [109.2942, -6.8668], [109.5007, -6.81], [109.8211, -6.9023], [110.1984, -6.8952], [110.4261, -6.9472], [110.5837, -6.8055], [110.7369, -6.4722], [110.9721, -6.4358], [111.1545, -6.6692], [111.3419, -6.6995], [111.5403, -6.6484], [111.7373, -6.7736], [111.99, -6.806], [112.0872, -6.8934], [112.5391, -6.9263], [112.6487, -7.2215], [112.7944, -7.3045], [112.7944, -7.5526], [113.0136, -7.6578], [113.2483, -7.7182], [113.7473, -7.703], [114.0705, -7.633], [114.3825, -7.771], [114.4442, -7.8957], [114.3848, -8.2633], [114.3869, -8.4054], [114.5836, -8.7698], [114.3834, -8.7055], [114.2769, -8.6144], [114.1597, -8.6264], [113.6922, -8.4781], [113.2533, -8.2869], [113.1338, -8.2882], [112.6789, -8.4093], [112.1151, -8.3241], [111.5101, -8.305], [111.3388, -8.2616], [111.0555, -8.2398], [110.6072, -8.1496], [110.0386, -7.8904], [109.8526, -7.8283], [109.2818, -7.7049], [108.9866, -7.704], [108.7411, -7.6672], [108.5707, -7.7071], [108.4517, -7.7968], [108.2204, -7.7821], [107.9172, -7.7239], [107.547, -7.5419], [107.2851, -7.4718], [106.6312, -7.4155], [106.4551, -7.3688], [106.4169, -7.2392], [106.5199, -7.0537], [106.1981, -6.9276], [105.9446, -6.8588], [105.2552, -6.8353], [105.2735, -6.7292], [105.4838, -6.7816], [105.581, -6.6711], [105.6552, -6.4695], [105.787, -6.4571], [105.8682, -6.1167], [106.0751, -5.9142], [106.1656, -5.9648], [106.6761, -6.0385], [106.8253, -6.0984], [107.0117, -6.0083], [107.0463, -5.9045], [107.374, -6.0075]]], [[[120.5283, -6.2987], [120.4608, -6.2543], [120.4466, -5.8764], [120.5491, -5.9693], [120.5283, -6.2987]]], [[[132.8072, -5.8508], [132.6815, -5.9124], [132.6979, -5.6088], [132.8072, -5.8508]]], [[[134.747, -5.7069], [134.7124, -5.9497], [134.7559, -6.1708], [134.6377, -6.3652], [134.4411, -6.335], [134.1752, -6.0904], [134.3018, -6.0097], [134.3413, -5.7127], [134.4904, -5.5249], [134.6165, -5.4387], [134.747, -5.7069]]], [[[132.9261, -5.9022], [132.9377, -5.6825], [133.0087, -5.6212], [133.1148, -5.3105], [133.1729, -5.3483], [133.1197, -5.576], [132.971, -5.7358], [132.9261, -5.9022]]], [[[102.3672, -5.4787], [102.286, -5.4836], [102.1356, -5.3607], [102.1986, -5.2887], [102.3717, -5.3664], [102.3672, -5.4787]]], [[[122.0433, -5.4379], [121.9797, -5.4645], [121.8084, -5.2564], [121.9656, -5.0757], [122.0619, -5.2212], [122.0433, -5.4379]]], [[[122.6451, -5.2692], [122.5639, -5.3873], [122.2829, -5.3195], [122.3291, -5.1378], [122.3961, -5.07], [122.3344, -4.8466], [122.369, -4.7671], [122.702, -4.6184], [122.7597, -4.9341], [122.6141, -5.1387], [122.6451, -5.2692]]], [[[123.1796, -4.5511], [123.2032, -4.7663], [123.0553, -4.7482], [122.9865, -4.963], [122.9719, -5.1383], [123.2018, -5.2733], [123.0433, -5.4193], [122.9857, -5.3935], [122.812, -5.6714], [122.6451, -5.6634], [122.5848, -5.5445], [122.67, -5.3309], [122.7663, -5.2102], [122.8493, -4.8311], [122.8534, -4.6184], [122.947, -4.4427], [123.0384, -4.3947], [123.1796, -4.5511]]], [[[123.2422, -4.1129], [123.1446, -4.2332], [122.9945, -4.1479], [123.0247, -3.9811], [123.212, -3.9975], [123.2422, -4.1129]]], [[[128.2755, -3.6747], [128.1432, -3.733], [128.0163, -3.6007], [128.2644, -3.5123], [128.2755, -3.6747]]], [[[116.3033, -3.8683], [116.0933, -4.0538], [116.0769, -3.8177], [116.0183, -3.7], [116.1173, -3.3397], [116.2619, -3.3946], [116.3188, -3.7631], [116.3033, -3.8683]]], [[[126.8613, -3.088], [127.0255, -3.1661], [127.2274, -3.3911], [127.2296, -3.633], [126.9408, -3.7645], [126.6863, -3.8234], [126.2144, -3.6051], [126.0565, -3.4209], [126.0262, -3.1705], [126.0885, -3.1053], [126.2198, -3.1483], [126.555, -3.0654], [126.8613, -3.088]]], [[[129.7545, -2.866], [129.9845, -2.9765], [130.379, -2.9894], [130.5699, -3.131], [130.6712, -3.3916], [130.7733, -3.4187], [130.8597, -3.5704], [130.8052, -3.8577], [130.2698, -3.5793], [130.0195, -3.4746], [129.8442, -3.3273], [129.5117, -3.3286], [129.4678, -3.4532], [128.9675, -3.3259], [128.8627, -3.2349], [128.639, -3.4333], [128.4193, -3.416], [128.28, -3.2407], [128.0819, -3.1838], [127.9701, -3.4445], [127.8778, -3.222], [128.1135, -2.9343], [128.1986, -2.866], [128.5698, -2.842], [129.0576, -2.8385], [129.1162, -2.937], [129.2796, -2.8891], [129.4274, -2.7905], [129.5433, -2.7905], [129.7545, -2.866]]], [[[100.4252, -3.1829], [100.2042, -2.9867], [100.1794, -2.8203], [100.2454, -2.7834], [100.4545, -3.0018], [100.4252, -3.1829]]], [[[108.2072, -2.9979], [108.1672, -3.143], [108.0553, -3.227], [107.9411, -3.1292], [107.6145, -3.2096], [107.598, -2.7999], [107.6665, -2.5664], [107.8378, -2.5304], [108.0744, -2.597], [108.2151, -2.6969], [108.2906, -2.83], [108.2072, -2.9979]]], [[[100.2042, -2.7409], [100.0151, -2.8198], [100.012, -2.5105], [100.202, -2.6796], [100.2042, -2.7409]]], [[[99.8428, -2.3431], [99.6071, -2.2575], [99.5374, -2.1616], [99.5721, -2.0258], [99.6866, -2.0634], [99.8428, -2.3431]]], [[[126.0245, -1.7895], [125.9566, -1.9166], [125.4794, -1.94], [125.5207, -1.8007], [125.7204, -1.814], [126.0245, -1.7895]]], [[[130.3534, -1.6906], [130.4252, -1.8046], [130.419, -1.9712], [130.2481, -2.0479], [129.8864, -1.9862], [129.7377, -1.8668], [129.9937, -1.7589], [130.3534, -1.6906]]], [[[124.9694, -1.7056], [125.3201, -1.81], [125.0067, -1.9432], [124.8344, -1.8943], [124.6391, -1.9782], [124.4176, -2.0053], [124.3297, -1.8588], [124.3808, -1.6875], [124.664, -1.636], [124.9694, -1.7056]]], [[[135.4741, -1.5916], [135.8692, -1.6422], [136.2016, -1.6551], [136.3898, -1.7217], [136.7188, -1.7341], [136.8928, -1.7997], [136.4608, -1.8903], [136.1927, -1.8593], [135.8655, -1.7523], [135.4874, -1.6684], [135.4741, -1.5916]]], [[[106.0458, -1.6693], [106.1617, -1.8668], [106.2087, -2.1887], [106.3659, -2.4648], [106.8186, -2.5735], [106.6788, -2.7039], [106.6122, -2.8953], [106.6673, -3.072], [106.547, -3.0555], [106.25, -2.894], [105.9988, -2.8248], [105.9082, -2.6431], [105.9392, -2.4936], [105.8069, -2.3076], [105.7857, -2.1815], [105.5526, -2.079], [105.3426, -2.1252], [105.1331, -2.0425], [105.1909, -1.9169], [105.3746, -1.8131], [105.3733, -1.6573], [105.5854, -1.5268], [105.9099, -1.505], [106.0458, -1.6693]]], [[[128.1529, -1.6604], [128.0611, -1.7123], [127.9136, -1.6852], [127.5617, -1.7284], [127.3922, -1.6449], [127.457, -1.4536], [127.6465, -1.3324], [127.9052, -1.4389], [128.1485, -1.6036], [128.1529, -1.6604]]], [[[123.2124, -1.1712], [123.1978, -1.2875], [123.4349, -1.2369], [123.5471, -1.3372], [123.5121, -1.4473], [123.3669, -1.5072], [123.275, -1.4371], [123.1827, -1.4926], [123.1503, -1.3044], [122.8906, -1.5871], [122.8107, -1.4322], [122.832, -1.283], [122.9079, -1.1823], [123.2124, -1.1712]]], [[[109.7101, -1.1805], [109.5108, -1.2827], [109.4283, -1.2413], [109.4762, -0.9853], [109.6147, -0.9791], [109.7435, -1.0394], [109.7101, -1.1805]]], [[[134.9654, -1.1162], [134.8087, -1.0377], [134.8895, -0.9386], [134.9965, -1.034], [134.9654, -1.1162]]], [[[99.1637, -1.778], [99.0718, -1.7833], [98.8744, -1.6639], [98.6018, -1.1979], [98.6763, -0.9706], [98.869, -0.9155], [99.0651, -1.2409], [99.1309, -1.4424], [99.2672, -1.6276], [99.2716, -1.7386], [99.1637, -1.778]]], [[[131.0019, -1.3155], [130.8452, -1.3173], [130.7822, -1.2556], [130.6729, -0.96], [130.8971, -0.8902], [131.0737, -0.9684], [131.0019, -1.3155]]], [[[130.9056, -0.7775], [130.8323, -0.8627], [130.4026, -0.924], [130.4843, -0.8326], [130.8137, -0.8139], [130.9056, -0.7775]]], [[[135.3831, -0.6514], [135.7493, -0.7326], [135.8935, -0.7261], [136.1545, -0.9781], [136.2828, -1.0647], [136.3054, -1.173], [136.1107, -1.217], [135.9149, -1.1783], [135.8389, -1.1193], [135.747, -0.8232], [135.6459, -0.8818], [135.4315, -0.7691], [135.3831, -0.6514]]], [[[140.9735, -2.6098], [140.974, -4.0232], [140.9743, -4.8364], [140.9748, -6.3461], [140.8745, -6.6116], [140.8625, -6.7399], [140.9752, -6.9055], [140.9756, -7.6827], [140.9761, -9.1187], [140.6614, -8.8466], [140.4896, -8.6206], [140.1016, -8.3006], [139.9347, -8.1012], [139.6493, -8.1253], [139.3856, -8.1891], [139.1929, -8.0861], [138.9333, -8.2624], [138.8561, -8.1452], [138.936, -7.913], [139.003, -7.8376], [139.0878, -7.5873], [138.9377, -7.4723], [138.7477, -7.2516], [138.9191, -7.2037], [138.7197, -7.0696], [138.6013, -6.9365], [138.8646, -6.8584], [138.7265, -6.731], [138.6981, -6.6257], [138.4388, -6.3434], [138.2963, -5.9489], [138.2826, -5.8387], [138.066, -5.6758], [138.061, -5.4655], [137.7593, -5.2564], [137.3065, -5.0144], [137.0894, -4.9243], [136.8568, -4.8932], [136.6188, -4.8187], [136.3938, -4.7011], [136.2105, -4.6509], [135.9797, -4.531], [135.4501, -4.4431], [135.1957, -4.4507], [134.7541, -4.1955], [134.6795, -4.0791], [134.7075, -3.9301], [134.5468, -3.9793], [134.391, -3.91], [134.2663, -3.946], [134.1473, -3.7968], [133.9736, -3.8182], [133.7229, -3.578], [133.6533, -3.3645], [133.5183, -3.412], [133.5423, -3.5163], [133.4154, -3.732], [133.4011, -3.8989], [133.2488, -4.0623], [132.9688, -4.0947], [132.8369, -3.9491], [132.754, -3.7037], [132.8697, -3.551], [132.7513, -3.2948], [132.3481, -2.9752], [132.0539, -2.9144], [131.9714, -2.7888], [132.2306, -2.6805], [132.5755, -2.727], [132.725, -2.7893], [132.8973, -2.6582], [133.0336, -2.4874], [133.1911, -2.4377], [133.6088, -2.5473], [133.7002, -2.6245], [133.7536, -2.4505], [133.905, -2.3911], [133.9219, -2.1021], [133.7104, -2.189], [133.4877, -2.2255], [133.2248, -2.2143], [132.963, -2.2726], [132.5027, -2.2183], [132.3078, -2.2423], [132.0233, -1.9902], [131.9362, -1.715], [131.9305, -1.5596], [131.7316, -1.541], [131.2935, -1.3937], [131.1177, -1.4553], [130.9961, -1.4247], [131.0463, -1.284], [131.1519, -1.2187], [131.254, -1.007], [131.2571, -0.8557], [131.4617, -0.782], [131.8044, -0.7038], [132.1284, -0.4539], [132.394, -0.3554], [132.6252, -0.3589], [132.8564, -0.4175], [133.077, -0.5121], [133.4726, -0.7261], [133.9746, -0.7442], [134.1113, -0.8468], [134.0719, -1.0017], [134.2596, -1.363], [134.2169, -1.529], [134.106, -1.7212], [134.1558, -2.1952], [134.1948, -2.3089], [134.4597, -2.8323], [134.4833, -2.5832], [134.6276, -2.5366], [134.7021, -2.9335], [134.8433, -2.909], [134.8526, -3.1075], [134.917, -3.2499], [135.0372, -3.333], [135.3715, -3.3747], [135.4865, -3.345], [135.6276, -3.1861], [135.859, -2.9952], [136.0129, -2.7342], [136.2433, -2.5832], [136.3898, -2.2734], [136.8431, -2.1975], [137.0721, -2.1052], [137.1711, -2.0258], [137.1235, -1.8411], [137.3805, -1.6857], [137.8063, -1.4833], [137.911, -1.4837], [138.1108, -1.616], [138.6497, -1.7909], [138.8113, -1.9179], [139.0394, -1.992], [139.7895, -2.3484], [140.1545, -2.3502], [140.2513, -2.4119], [140.6224, -2.4457], [140.7476, -2.6073], [140.9735, -2.6098]]], [[[104.474, -0.3345], [104.5903, -0.4667], [104.4855, -0.6129], [104.2569, -0.4632], [104.474, -0.3345]]], [[[127.567, -0.3189], [127.6824, -0.4686], [127.6047, -0.6102], [127.6584, -0.6896], [127.8045, -0.6945], [127.8799, -0.8086], [127.7611, -0.8836], [127.6238, -0.766], [127.4627, -0.8059], [127.4685, -0.643], [127.2998, -0.5005], [127.3713, -0.3318], [127.4552, -0.4064], [127.567, -0.3189]]], [[[127.2501, -0.4952], [127.1191, -0.5205], [127.1263, -0.2785], [127.2807, -0.3909], [127.2501, -0.4952]]], [[[103.7367, -0.3478], [103.4614, -0.3576], [103.549, -0.2275], [103.7238, -0.2768], [103.7367, -0.3478]]], [[[130.8132, -0.0042], [131.0258, -0.0397], [131.277, -0.1498], [131.3396, -0.2906], [131.2575, -0.3656], [131.0977, -0.3301], [130.7502, -0.4437], [130.6889, -0.2968], [130.5508, -0.3664], [130.4962, -0.2675], [130.2365, -0.2097], [130.2948, -0.1014], [130.8132, -0.0042]]], [[[98.4593, -0.5307], [98.3096, -0.532], [98.4273, -0.2266], [98.544, -0.2577], [98.4593, -0.5307]]], [[[104.7785, -0.176], [104.9498, -0.2475], [104.9143, -0.3234], [104.7021, -0.2089], [104.5667, -0.2457], [104.4469, -0.1893], [104.5427, 0.0175], [104.6355, -0.0184], [104.7785, -0.176]]], [[[103.0274, 0.7468], [102.9715, 0.7366], [102.5417, 0.8316], [102.4538, 0.8893], [102.5492, 1.1304], [102.7801, 0.9595], [103.0025, 0.8591], [103.0274, 0.7468]]], [[[103.1662, 0.8702], [103.0868, 0.848], [102.8862, 0.9967], [102.7019, 1.0536], [102.7903, 1.1654], [103.0678, 1.0149], [103.1662, 0.8702]]], [[[104.0247, 1.1805], [104.1273, 1.0922], [104.066, 0.9896], [103.9636, 1.0132], [104.0247, 1.1805]]], [[[104.5854, 1.216], [104.6529, 0.9612], [104.5752, 0.8321], [104.4287, 0.9563], [104.2521, 1.0149], [104.3617, 1.1814], [104.5854, 1.216]]], [[[102.4272, 0.9901], [102.3251, 1.007], [102.2554, 1.1472], [102.2287, 1.3479], [102.3588, 1.3456], [102.4427, 1.2342], [102.4272, 0.9901]]], [[[97.4813, 1.4651], [97.6984, 1.1836], [97.7863, 1.1459], [97.9319, 0.9741], [97.8764, 0.6283], [97.8205, 0.5644], [97.6837, 0.5959], [97.6038, 0.8338], [97.4054, 0.947], [97.2967, 1.1871], [97.0792, 1.4256], [97.2443, 1.4238], [97.3562, 1.5396], [97.4813, 1.4651]]], [[[102.4919, 1.4593], [102.4995, 1.331], [102.2741, 1.453], [102.0787, 1.4983], [102.0424, 1.6253], [102.4694, 1.5099], [102.4919, 1.4593]]], [[[124.889, 0.9954], [124.6981, 0.8254], [124.4273, 0.4707], [124.217, 0.3802], [123.754, 0.3056], [123.2653, 0.3265], [123.0824, 0.4858], [122.2807, 0.4809], [121.8422, 0.4366], [121.4258, 0.4947], [121.0129, 0.4419], [120.7005, 0.5147], [120.4598, 0.5102], [120.349, 0.4495], [120.1274, 0.1667], [120.036, -0.0899], [120.0119, -0.307], [120.0972, -0.6501], [120.2699, -0.8991], [120.5176, -1.0394], [120.6676, -1.3701], [121.0338, -1.4064], [121.1484, -1.3394], [121.2771, -1.1179], [121.5194, -0.8557], [121.6326, -0.8405], [121.7379, -0.9257], [121.9695, -0.9334], [122.2799, -0.7571], [122.659, -0.77], [122.8889, -0.7554], [122.8294, -0.659], [123.1715, -0.5707], [123.3798, -0.6488], [123.4339, -0.7784], [123.378, -1.0044], [123.2258, -1.0017], [123.0495, -0.8725], [122.8076, -0.9662], [122.5066, -1.3479], [122.334, -1.498], [122.1578, -1.5938], [121.8586, -1.6932], [121.7188, -1.8628], [121.5726, -1.9059], [121.3947, -1.8339], [121.349, -1.9459], [121.5021, -2.0448], [121.575, -2.1509], [121.7259, -2.2081], [121.8484, -2.3315], [122.0828, -2.7498], [122.2918, -2.9077], [122.3065, -3.0515], [122.3993, -3.2007], [122.3171, -3.2752], [122.2528, -3.6206], [122.4343, -3.74], [122.6101, -3.9234], [122.6895, -4.0845], [122.8773, -4.1089], [122.8973, -4.349], [122.722, -4.4108], [122.4716, -4.4223], [122.2071, -4.4964], [122.0543, -4.6203], [122.073, -4.7916], [121.9172, -4.848], [121.5887, -4.7596], [121.4866, -4.5812], [121.5412, -4.2829], [121.618, -4.093], [121.5376, -4.0148], [121.3126, -3.9194], [120.9144, -3.5558], [120.9069, -3.404], [121.0542, -3.167], [121.0521, -2.7515], [120.9903, -2.6703], [120.7652, -2.6414], [120.6539, -2.6676], [120.3413, -2.8695], [120.2539, -3.0529], [120.3923, -3.3481], [120.4369, -3.7072], [120.3831, -3.8524], [120.3627, -4.0858], [120.42, -4.6176], [120.3103, -4.9634], [120.2792, -5.1462], [120.391, -5.3927], [120.3116, -5.5418], [119.9516, -5.5777], [119.7172, -5.6932], [119.5575, -5.611], [119.3763, -5.425], [119.3604, -5.3141], [119.5197, -4.8773], [119.5158, -4.742], [119.6116, -4.4237], [119.6236, -4.0344], [119.4935, -3.7685], [119.4944, -3.554], [119.4199, -3.4755], [119.24, -3.4755], [118.9945, -3.5376], [118.8676, -3.3983], [118.8126, -3.1568], [118.8583, -2.9286], [118.7837, -2.7648], [118.8534, -2.6503], [119.0922, -2.4829], [119.1722, -2.1403], [119.3217, -1.9298], [119.3484, -1.825], [119.3083, -1.6595], [119.3088, -1.4083], [119.5081, -0.9066], [119.7115, -0.6807], [119.8451, -0.773], [119.7718, -0.4836], [119.7217, -0.0886], [119.8654, 0.0402], [119.8091, 0.2386], [119.9135, 0.445], [120.0351, 0.5666], [120.0563, 0.6927], [120.2299, 0.8614], [120.2695, 0.971], [120.5167, 0.8174], [120.6023, 0.8543], [120.755, 1.0358], [120.9122, 1.2888], [121.0817, 1.3274], [121.2083, 1.2626], [121.44, 1.2142], [121.5919, 1.0677], [121.8675, 1.0887], [122.1081, 1.0309], [122.4365, 1.018], [122.8924, 0.8498], [122.9599, 0.9231], [123.2782, 0.9279], [123.8468, 0.8383], [123.9307, 0.8502], [124.2738, 1.022], [124.4109, 1.1849], [124.534, 1.2307], [124.6001, 1.3922], [124.7878, 1.4677], [124.9894, 1.7012], [125.1651, 1.6435], [125.2339, 1.5023], [125.1176, 1.3789], [125.028, 1.1801], [124.889, 0.9954]]], [[[101.7081, 2.0785], [101.7738, 1.9436], [101.7197, 1.7891], [101.6029, 1.7158], [101.4679, 1.7594], [101.4036, 1.9014], [101.4098, 2.0217], [101.6407, 2.1269], [101.7081, 2.0785]]], [[[127.7326, 0.8481], [127.8808, 0.8321], [127.9674, 1.0425], [128.1609, 1.1579], [128.1574, 1.3168], [128.2227, 1.4007], [128.4241, 1.5174], [128.6883, 1.5725], [128.7171, 1.3674], [128.7026, 1.1064], [128.299, 0.8769], [128.2608, 0.734], [128.611, 0.5498], [128.6914, 0.3602], [128.5405, 0.338], [128.4464, 0.3917], [127.9829, 0.4721], [127.8875, 0.2985], [127.8888, 0.0495], [127.9776, -0.2484], [128.0894, -0.4855], [128.2537, -0.7318], [128.0464, -0.706], [127.8888, -0.4237], [127.6917, -0.2417], [127.6856, 0.1489], [127.7086, 0.2883], [127.5555, 0.4898], [127.5417, 0.6807], [127.6078, 0.848], [127.5204, 0.9239], [127.4285, 1.1401], [127.4201, 1.252], [127.5372, 1.4673], [127.5347, 1.5721], [127.6318, 1.8437], [127.8999, 2.1375], [128.0313, 2.1198], [127.9066, 1.9458], [127.8867, 1.833], [128.0109, 1.7012], [128.0119, 1.3319], [127.8853, 1.1628], [127.6527, 1.0141], [127.7326, 0.8481]]], [[[128.4539, 2.0519], [128.2959, 2.0345], [128.2177, 2.2973], [128.3305, 2.4691], [128.4722, 2.5703], [128.6022, 2.5974], [128.6887, 2.4736], [128.6231, 2.2246], [128.4539, 2.0519]]], [[[96.4636, 2.36], [96.2904, 2.4296], [96.0218, 2.5956], [95.8087, 2.6556], [95.7173, 2.826], [95.8062, 2.9161], [96.4174, 2.5153], [96.4636, 2.36]]], [[[117.8849, 4.1861], [117.9231, 4.0543], [117.7371, 4.0041], [117.6492, 4.1688], [117.8849, 4.1861]]], [[[108.3159, 3.6899], [108.243, 3.8106], [108.0886, 3.8523], [108.0034, 4.0427], [108.2022, 4.2003], [108.3931, 3.9863], [108.3935, 3.8363], [108.3159, 3.6899]]], [[[117.5745, 4.1706], [117.4653, 4.076], [117.5661, 3.93], [117.7282, 3.7968], [117.7774, 3.6894], [117.6301, 3.6361], [117.5097, 3.7302], [117.4502, 3.6286], [117.1661, 3.5922], [117.3846, 3.3654], [117.3526, 3.1936], [117.6105, 3.0644], [117.6389, 2.8251], [117.7858, 2.7466], [117.8857, 2.542], [118.0664, 2.3178], [118.0415, 2.2152], [117.8812, 2.0608], [117.8648, 1.9684], [118.0806, 1.7017], [118.4716, 1.4163], [118.639, 1.319], [118.9848, 0.9821], [118.8926, 0.8867], [118.5347, 0.8134], [118.196, 0.8743], [118.0162, 1.0394], [117.9231, 0.8312], [117.7451, 0.7295], [117.5222, 0.2359], [117.4626, -0.3239], [117.5489, -0.5543], [117.5626, -0.7708], [117.2408, -0.9257], [117.0033, -1.1877], [116.7711, -1.2666], [116.7152, -1.3759], [116.5544, -1.4739], [116.4245, -1.7847], [116.4235, -2.0529], [116.314, -2.1398], [116.5283, -2.2077], [116.5656, -2.2996], [116.5292, -2.5105], [116.3756, -2.578], [116.3308, -2.9025], [116.1723, -3.0254], [116.167, -3.1829], [116.0573, -3.3481], [115.9561, -3.5949], [115.2583, -3.9069], [114.6937, -4.1697], [114.6253, -4.1116], [114.6058, -3.7032], [114.5361, -3.4946], [114.446, -3.4817], [114.0825, -3.2789], [113.9586, -3.3943], [113.7957, -3.4564], [113.6336, -3.42], [113.6301, -3.2459], [113.5258, -3.1838], [113.3434, -3.2464], [113.034, -2.9335], [112.9714, -3.187], [112.6003, -3.4005], [112.2852, -3.3209], [112.1266, -3.3814], [111.9548, -3.5296], [111.8222, -3.5323], [111.8231, -3.0573], [111.6948, -2.8896], [111.6255, -2.9757], [111.3676, -2.9335], [111.0445, -3.0555], [110.8687, -3.0489], [110.811, -2.9383], [110.7031, -3.0209], [110.5739, -2.8913], [110.2326, -2.9251], [110.2242, -2.6889], [110.075, -1.9462], [109.9601, -1.8628], [110.0236, -1.6427], [110.0191, -1.3989], [109.9383, -1.181], [109.7873, -1.0114], [109.454, -0.8689], [109.3337, -0.8751], [109.2711, -0.7323], [109.3727, -0.6382], [109.1606, -0.4947], [109.1219, -0.2653], [109.1948, -0.0096], [109.2574, 0.0313], [109.0749, 0.2528], [108.9444, 0.3558], [108.9058, 0.7939], [108.9586, 1.1348], [109.0758, 1.4957], [109.2733, 1.7056], [109.3786, 1.9227], [109.6289, 2.0274], [109.5388, 1.8961], [109.636, 1.7767], [109.6542, 1.6151], [109.818, 1.4389], [110.3151, 0.9958], [110.5056, 0.8618], [110.6148, 0.8782], [110.9379, 1.0172], [111.2869, 1.0434], [111.483, 0.9958], [111.7698, 0.9994], [111.9229, 1.113], [112.0783, 1.1432], [112.1857, 1.4393], [112.4761, 1.5592], [112.9429, 1.5671], [113.0065, 1.4339], [113.359, 1.327], [113.5134, 1.3084], [113.6222, 1.236], [113.9022, 1.4344], [114.3869, 1.5001], [114.5458, 1.4673], [114.6609, 1.6861], [114.7035, 1.8508], [114.8304, 1.98], [114.7585, 2.1624], [114.7865, 2.2503], [115.1509, 2.4931], [115.0808, 2.6342], [115.0861, 2.8411], [115.2469, 3.0258], [115.4545, 3.0342], [115.5198, 3.3618], [115.566, 3.4457], [115.5446, 3.6334], [115.5686, 3.9388], [115.6787, 4.1932], [115.8962, 4.3486], [116.0215, 4.2909], [116.1345, 4.3553], [116.4147, 4.3082], [116.5146, 4.3708], [117.1005, 4.337], [117.2776, 4.2993], [117.4507, 4.1928], [117.5745, 4.1706]]], [[[126.8164, 4.0334], [126.7045, 4.0711], [126.8137, 4.2585], [126.7223, 4.3441], [126.7574, 4.5479], [126.8653, 4.4799], [126.9212, 4.2909], [126.8164, 4.0334]]], [[[96.4924, 5.2292], [96.6153, 5.2204], [96.8426, 5.2745], [97.1901, 5.2075], [97.4512, 5.2359], [97.5874, 5.1702], [97.9084, 4.8799], [98.0206, 4.6353], [98.2483, 4.4147], [98.2413, 4.1945], [98.3074, 4.0929], [98.6585, 3.9282], [98.778, 3.7595], [99.1513, 3.5811], [99.5215, 3.3112], [99.7323, 3.1829], [99.9068, 2.988], [100.1273, 2.6476], [100.3072, 2.4665], [100.4572, 2.2574], [100.6854, 2.1203], [100.8167, 1.9893], [100.8283, 2.2428], [100.9362, 2.2947], [101.0463, 2.2574], [101.3006, 2.0119], [101.4049, 1.7576], [101.4769, 1.6932], [101.7848, 1.6213], [102.0201, 1.442], [102.1572, 1.2591], [102.239, 0.9905], [102.4694, 0.7792], [102.8494, 0.7153], [102.9492, 0.6643], [103.0664, 0.4921], [103.0029, 0.3318], [103.2769, 0.4947], [103.4788, 0.48], [103.6727, 0.2887], [103.7869, 0.0468], [103.4286, -0.1916], [103.4051, -0.362], [103.509, -0.4654], [103.4313, -0.5334], [103.5329, -0.7549], [103.7211, -0.8867], [104.1983, -1.0541], [104.3608, -1.0385], [104.4469, -1.3625], [104.5161, -1.8193], [104.5685, -1.9218], [104.8451, -2.0932], [104.826, -2.2344], [104.6683, -2.3857], [104.6306, -2.5433], [104.7358, -2.5708], [104.8783, -2.4191], [105.0258, -2.3578], [105.3968, -2.3804], [105.5819, -2.4918], [105.8993, -2.8878], [106.0445, -3.1061], [106.0582, -3.2171], [105.9015, -3.4102], [105.8438, -3.6136], [105.9278, -3.8812], [105.8314, -4.163], [105.8864, -4.5541], [105.8873, -5.0096], [105.8163, -5.6768], [105.7483, -5.8183], [105.6184, -5.7997], [105.5229, -5.6728], [105.3493, -5.5494], [105.0812, -5.7455], [104.6395, -5.5204], [104.6182, -5.6417], [104.6839, -5.893], [104.6013, -5.9045], [104.0669, -5.386], [103.8313, -5.0797], [103.4055, -4.8165], [103.1388, -4.5963], [102.919, -4.4707], [102.5378, -4.1519], [102.3722, -3.9691], [102.1276, -3.5994], [101.8178, -3.3778], [101.5785, -3.167], [101.3055, -2.7289], [101.1186, -2.5877], [100.9446, -2.3454], [100.8478, -2.1438], [100.8554, -1.9343], [100.4865, -1.2991], [100.3937, -1.1011], [100.308, -0.8267], [100.0879, -0.5529], [99.8601, -0.3137], [99.7213, -0.0331], [99.5979, 0.1023], [99.3347, 0.2088], [99.1592, 0.3518], [98.9355, 1.0318], [98.7962, 1.4948], [98.7026, 1.7021], [98.5645, 1.9023], [98.0052, 2.2383], [97.7952, 2.2827], [97.7006, 2.3586], [97.591, 2.8465], [97.3912, 2.9752], [96.9691, 3.5753], [96.8008, 3.7085], [96.5252, 3.7666], [96.4448, 3.8164], [96.23, 4.0729], [95.988, 4.2633], [95.4949, 4.7614], [95.2069, 5.2838], [95.2473, 5.4108], [95.2277, 5.5648], [95.396, 5.6287], [95.629, 5.6092], [95.8412, 5.5146], [96.1332, 5.294], [96.4924, 5.2292]]]] }, \"properties\": { \"name\": \"Indonesia\", \"id\": \"ID\" }, \"id\": \"ID\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.132, 48.4053], [22.2537, 48.4075], [22.3505, 48.2561], [22.5826, 48.1341], [22.769, 48.1097], [22.8764, 47.9472], [22.6767, 47.7989], [22.2905, 47.7279], [21.9997, 47.5051], [21.7854, 47.138], [21.4945, 46.7895], [21.4972, 46.7043], [21.3201, 46.608], [21.1519, 46.3043], [21.0401, 46.2422], [20.8372, 46.2596], [20.6135, 46.1335], [20.5083, 46.1668], [20.2419, 46.1086], [20.1616, 46.1419], [19.5308, 46.1552], [19.2085, 45.9843], [19.0874, 46.0163], [18.9054, 45.9315], [18.6661, 45.9075], [18.4374, 45.7673], [17.9639, 45.7704], [17.7064, 45.8271], [17.6069, 45.9137], [17.3105, 45.9963], [16.7481, 46.4162], [16.5164, 46.4997], [16.3814, 46.6386], [16.2838, 46.8575], [16.0929, 46.8632], [16.2527, 46.9719], [16.4533, 47.0066], [16.4342, 47.3675], [16.6229, 47.4474], [16.6397, 47.609], [16.7476, 47.6862], [17.0667, 47.7075], [17.0299, 47.8371], [17.1476, 48.0058], [17.3171, 47.9907], [17.7619, 47.7701], [18.1454, 47.7634], [18.7242, 47.787], [18.7917, 48.0005], [18.9143, 48.0507], [19.4669, 48.1105], [19.6254, 48.2233], [19.8988, 48.1314], [20.3338, 48.2957], [20.4901, 48.5269], [20.8665, 48.5455], [21.0671, 48.5061], [21.4515, 48.5522], [21.7671, 48.3383], [22.132, 48.4053]]] }, \"properties\": { \"name\": \"Hungary\", \"id\": \"HU\" }, \"id\": \"HU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-72.8045, 18.7777], [-72.8223, 18.7071], [-73.078, 18.7911], [-73.2853, 18.8967], [-73.1705, 18.9672], [-72.9193, 18.8616], [-72.8045, 18.7777]]], [[[-71.7791, 19.7184], [-71.707, 19.4218], [-71.7465, 19.286], [-71.6571, 19.1306], [-71.8071, 18.9868], [-71.7336, 18.8563], [-71.7432, 18.7329], [-71.8666, 18.6144], [-72.0004, 18.5979], [-71.8726, 18.4164], [-71.7618, 18.3414], [-71.7683, 18.0391], [-71.946, 18.186], [-72.0599, 18.2286], [-72.5036, 18.2198], [-72.8766, 18.1519], [-73.3851, 18.2513], [-73.7473, 18.19], [-73.885, 18.0418], [-74.0854, 18.2153], [-74.4189, 18.3463], [-74.4782, 18.4502], [-74.3875, 18.6246], [-74.2276, 18.6627], [-73.5915, 18.5225], [-72.7894, 18.4346], [-72.6181, 18.5509], [-72.4181, 18.5589], [-72.3478, 18.6747], [-72.6492, 18.894], [-72.8112, 19.0716], [-72.7033, 19.4409], [-73.0526, 19.6109], [-73.3965, 19.6588], [-73.4005, 19.8075], [-73.1177, 19.9039], [-72.8765, 19.9283], [-72.6369, 19.9008], [-72.2199, 19.7445], [-71.7791, 19.7184]]]] }, \"properties\": { \"name\": \"Haiti\", \"id\": \"HT\" }, \"id\": \"HT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[18.9054, 45.9315], [18.8393, 45.8356], [19.0549, 45.5271], [19.0048, 45.3997], [19.3302, 45.2679], [19.3883, 45.1729], [19.0629, 45.1374], [19.1003, 44.9736], [19.007, 44.8693], [18.8366, 44.8834], [18.6626, 45.0774], [18.2848, 45.1343], [17.9962, 45.1418], [17.813, 45.0779], [17.69, 45.1582], [17.5461, 45.1227], [17.1253, 45.1715], [16.9185, 45.2768], [16.7906, 45.1969], [16.5306, 45.2168], [16.2935, 45.0086], [16.0285, 45.1898], [15.788, 45.1791], [15.7369, 44.7658], [16.1301, 44.4737], [16.214, 44.215], [16.5905, 43.9131], [16.7134, 43.7786], [17.0845, 43.5167], [17.2737, 43.4457], [17.2931, 43.3054], [17.6248, 43.0427], [17.5853, 42.9384], [17.1293, 43.2113], [16.903, 43.3925], [16.3938, 43.5433], [15.9854, 43.5198], [15.9415, 43.6565], [15.4994, 43.9087], [15.1229, 44.2567], [15.2699, 44.3836], [14.8952, 44.7064], [14.9064, 44.9713], [14.8549, 45.081], [14.5503, 45.2976], [14.3862, 45.342], [13.9657, 44.8355], [13.8609, 44.8373], [13.6292, 45.1081], [13.517, 45.4819], [13.5778, 45.5169], [13.8787, 45.4286], [14.0856, 45.4778], [14.3701, 45.4814], [14.5339, 45.6452], [14.7336, 45.5085], [15.1105, 45.4507], [15.3396, 45.4672], [15.277, 45.7326], [15.6246, 45.8338], [15.6663, 46.0487], [15.6361, 46.2005], [16.2274, 46.3727], [16.321, 46.5347], [16.5164, 46.4997], [16.7481, 46.4162], [17.3105, 45.9963], [17.6069, 45.9137], [17.7064, 45.8271], [17.9639, 45.7704], [18.4374, 45.7673], [18.6661, 45.9075], [18.9054, 45.9315]]], [[[14.8105, 44.9771], [14.6871, 44.9559], [14.4381, 45.0988], [14.6298, 45.1782], [14.8105, 44.9771]]], [[[14.4882, 44.6602], [14.4194, 44.6704], [14.3026, 44.9403], [14.4674, 44.97], [14.4882, 44.6602]]], [[[16.7853, 43.2708], [16.4231, 43.3174], [16.4489, 43.3871], [16.8342, 43.3507], [16.7853, 43.2708]]], [[[17.1942, 43.1256], [16.6793, 43.123], [16.6974, 43.175], [17.1942, 43.1256]]], [[[17.6678, 42.897], [17.8413, 42.8451], [18.3039, 42.5996], [18.4362, 42.5597], [18.5174, 42.4328], [17.6678, 42.897]]]] }, \"properties\": { \"name\": \"Croatia\", \"id\": \"HR\" }, \"id\": \"HR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.1577, 14.9931], [-83.4151, 15.0082], [-83.8674, 14.7947], [-84.0659, 14.7862], [-84.1144, 14.7312], [-84.3936, 14.6917], [-84.5377, 14.6335], [-84.646, 14.6611], [-84.7891, 14.7903], [-84.9851, 14.7525], [-85.0364, 14.6078], [-85.1613, 14.5253], [-85.1796, 14.3433], [-85.3738, 14.2238], [-85.5798, 14.0281], [-85.6818, 13.9824], [-85.7868, 13.8443], [-85.9837, 13.9655], [-86.1512, 13.9948], [-86.3317, 13.7702], [-86.7336, 13.7635], [-86.7707, 13.6987], [-86.7108, 13.3134], [-86.9183, 13.2238], [-86.9589, 13.0537], [-87.0592, 12.9916], [-87.3373, 12.9791], [-87.4985, 13.2748], [-87.4891, 13.3529], [-87.8143, 13.3991], [-87.7153, 13.8128], [-87.8023, 13.89], [-87.9909, 13.8798], [-88.151, 13.9872], [-88.449, 13.851], [-88.5125, 13.9788], [-88.7076, 14.0321], [-89.0002, 14.2527], [-89.0572, 14.329], [-89.3626, 14.416], [-89.1717, 14.6069], [-89.2223, 14.8662], [-89.1427, 15.0721], [-88.9764, 15.1427], [-88.6845, 15.3606], [-88.2284, 15.7291], [-88.131, 15.7011], [-87.8749, 15.8791], [-87.6181, 15.9098], [-87.4869, 15.7904], [-87.2858, 15.8343], [-86.9072, 15.7623], [-86.757, 15.7943], [-86.3568, 15.7832], [-86.1812, 15.8853], [-85.784, 16.0029], [-85.4836, 15.8995], [-85.1636, 15.9182], [-84.9738, 15.9901], [-84.646, 15.8836], [-84.2614, 15.8228], [-83.9728, 15.5195], [-83.9274, 15.3939], [-83.7604, 15.2204], [-83.5511, 15.2941], [-83.3691, 15.2399], [-83.2908, 15.0788], [-83.1577, 14.9931]]] }, \"properties\": { \"name\": \"Honduras\", \"id\": \"HN\" }, \"id\": \"HN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[73.7074, -53.1372], [73.4651, -53.1843], [73.3363, -53.0298], [73.5858, -53.0272], [73.7074, -53.1372]]] }, \"properties\": { \"name\": \"Heard Island and McDonald Islands\", \"id\": \"HM\" }, \"id\": \"HM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[114.0154, 22.5118], [114.1228, 22.565], [114.2658, 22.5411], [114.268, 22.2955], [113.8965, 22.4283], [114.0154, 22.5118]]] }, \"properties\": { \"name\": \"Hong Kong\", \"id\": \"HK\" }, \"id\": \"HK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-57.1948, 5.5484], [-57.3185, 5.3354], [-57.2073, 5.2142], [-57.3309, 5.0202], [-57.7111, 4.9909], [-57.8449, 4.923], [-57.9171, 4.8204], [-57.846, 4.6682], [-57.9497, 4.3499], [-58.0544, 4.1719], [-58.0322, 4.0019], [-57.9077, 3.8567], [-57.8327, 3.6761], [-57.6493, 3.5176], [-57.6467, 3.3947], [-57.5497, 3.3529], [-57.3036, 3.3769], [-57.2317, 3.1088], [-57.2097, 2.8829], [-57.029, 2.6373], [-56.9314, 2.3955], [-56.7043, 2.0363], [-56.4828, 1.9422], [-56.8368, 1.8814], [-57.0377, 1.9364], [-57.119, 2.0141], [-57.4128, 1.909], [-57.5943, 1.7043], [-57.7957, 1.6998], [-57.9827, 1.6484], [-58.0347, 1.5201], [-58.3408, 1.5876], [-58.3958, 1.4819], [-58.5061, 1.4384], [-58.5118, 1.2848], [-58.6845, 1.2813], [-58.8625, 1.2036], [-58.9684, 1.3043], [-59.2312, 1.3758], [-59.5357, 1.6998], [-59.6666, 1.7465], [-59.7563, 1.9005], [-59.7552, 2.2742], [-59.8897, 2.3631], [-59.9942, 2.6902], [-59.9722, 2.9903], [-59.8311, 3.3494], [-59.8544, 3.5873], [-59.6791, 3.6996], [-59.5512, 3.9336], [-59.7386, 4.2269], [-59.7033, 4.381], [-59.8333, 4.476], [-60.1112, 4.5111], [-60.1245, 4.5976], [-60.0318, 4.7405], [-59.9907, 5.0828], [-60.142, 5.239], [-60.3352, 5.1991], [-60.7422, 5.2022], [-61.3767, 5.9071], [-61.303, 6.0496], [-61.1286, 6.2143], [-61.151, 6.4464], [-61.2036, 6.5884], [-61.1457, 6.6946], [-60.938, 6.7327], [-60.8733, 6.7869], [-60.718, 6.7682], [-60.395, 6.9453], [-60.3254, 7.134], [-60.5231, 7.1438], [-60.6334, 7.2112], [-60.6066, 7.3209], [-60.7191, 7.4989], [-60.5136, 7.8132], [-60.3806, 7.8278], [-60.1783, 7.9943], [-60.0324, 8.0537], [-59.9649, 8.1918], [-59.8316, 8.3059], [-60.0175, 8.5491], [-59.8364, 8.3738], [-59.6662, 8.3627], [-59.2003, 8.0746], [-58.8115, 7.7355], [-58.6266, 7.5459], [-58.4772, 7.3258], [-58.4806, 7.0381], [-58.5829, 6.8437], [-58.5696, 6.6271], [-58.4149, 6.8512], [-58.2986, 6.8792], [-57.9825, 6.786], [-57.6076, 6.4504], [-57.5402, 6.3314], [-57.3437, 6.272], [-57.1901, 6.0975], [-57.1673, 5.8849], [-57.1948, 5.5484]]] }, \"properties\": { \"name\": \"Guyana\", \"id\": \"GY\" }, \"id\": \"GY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[144.7417, 13.2593], [144.6502, 13.3134], [144.6493, 13.4288], [144.7905, 13.5269], [144.7417, 13.2593]]] }, \"properties\": { \"name\": \"Guam\", \"id\": \"GU\" }, \"id\": \"GU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-51.6526, 4.0614], [-51.7671, 3.9926], [-51.8275, 3.8696], [-51.9907, 3.7018], [-52.1626, 3.3645], [-52.3277, 3.1816], [-52.3566, 3.0515], [-52.5546, 2.6476], [-52.5595, 2.573], [-52.7006, 2.3635], [-52.9648, 2.1837], [-53.2297, 2.205], [-53.3345, 2.34], [-53.509, 2.253], [-53.7677, 2.355], [-54.13, 2.1211], [-54.515, 2.2454], [-54.6162, 2.3266], [-54.4021, 2.4616], [-54.1955, 2.818], [-54.1706, 2.9938], [-54.2032, 3.1381], [-54.0094, 3.4483], [-53.9904, 3.5895], [-54.1129, 3.7693], [-54.2556, 3.9012], [-54.3508, 4.0543], [-54.4495, 4.4849], [-54.4711, 4.7494], [-54.4522, 5.0135], [-54.3317, 5.1875], [-54.1559, 5.3589], [-54.0854, 5.4117], [-53.9897, 5.6758], [-53.8472, 5.7824], [-53.4544, 5.5635], [-53.2704, 5.5431], [-52.8993, 5.425], [-52.765, 5.2737], [-52.4538, 5.0215], [-52.2905, 4.9421], [-52.0581, 4.7174], [-51.9196, 4.5244], [-51.7856, 4.5705], [-51.6659, 4.2288], [-51.6526, 4.0614]]] }, \"properties\": { \"name\": \"French Guiana\", \"id\": \"GF\" }, \"id\": \"GF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-89.1615, 17.8149], [-89.2126, 16.5272], [-89.2374, 15.8942], [-88.894, 15.8907], [-88.6033, 15.7642], [-88.5363, 15.8498], [-88.2284, 15.7291], [-88.6845, 15.3606], [-88.9764, 15.1427], [-89.1427, 15.0721], [-89.2223, 14.8662], [-89.1717, 14.6069], [-89.3626, 14.416], [-89.5406, 14.4098], [-89.5473, 14.2411], [-89.7495, 14.0769], [-89.8726, 14.0454], [-90.1048, 13.8346], [-90.0952, 13.7365], [-90.4792, 13.9011], [-90.607, 13.9291], [-91.1462, 13.9255], [-91.3774, 13.9904], [-91.8191, 14.2283], [-92.2352, 14.5452], [-92.16, 14.6912], [-92.1864, 14.8182], [-92.1442, 15.002], [-92.0748, 15.0743], [-92.2044, 15.2377], [-92.1871, 15.3207], [-91.7365, 16.07], [-90.4473, 16.0727], [-90.4171, 16.3909], [-90.6341, 16.5108], [-90.7107, 16.7083], [-90.9759, 16.8677], [-91.2243, 17.1122], [-91.4096, 17.2561], [-90.993, 17.2525], [-90.9892, 17.8162], [-90.1836, 17.8158], [-89.1615, 17.8149]]] }, \"properties\": { \"name\": \"Guatemala\", \"id\": \"GT\" }, \"id\": \"GT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-18.5827, 76.0422], [-19.0853, 76.4304], [-18.7327, 76.6419], [-18.5827, 76.0422]]], [[[-18.0005, 75.4073], [-17.886, 75.2044], [-17.4978, 75.1516], [-17.5861, 74.9929], [-18.6708, 75.0016], [-18.8914, 75.0721], [-18.8561, 75.3191], [-18.0005, 75.4073]]], [[[-55.0168, 72.7912], [-55.5236, 72.5683], [-56.2147, 72.7193], [-55.9934, 72.7823], [-55.0168, 72.7912]]], [[[-53.5351, 71.0409], [-53.9475, 71.1555], [-53.7009, 71.2831], [-53.4415, 71.1858], [-53.5351, 71.0409]]], [[[-25.4323, 70.9213], [-25.4022, 70.6527], [-25.9113, 70.573], [-26.2178, 70.4541], [-26.6047, 70.5533], [-27.898, 70.4541], [-28.0369, 70.5144], [-27.7142, 70.7128], [-27.7089, 70.8971], [-26.9755, 70.8627], [-26.3374, 70.9193], [-25.819, 71.0435], [-25.4323, 70.9213]]], [[[-52.7313, 69.9447], [-52.0452, 69.8071], [-51.9001, 69.6047], [-52.1125, 69.4891], [-52.7705, 69.3639], [-53.5784, 69.2567], [-54.0512, 69.3372], [-53.7831, 69.5064], [-54.804, 69.6304], [-54.9192, 69.7137], [-54.8413, 69.9019], [-54.6646, 69.9656], [-54.8304, 70.1611], [-54.3717, 70.3173], [-53.3752, 70.2212], [-52.7313, 69.9447]]], [[[-51.0136, 69.5526], [-51.234, 69.5519], [-51.3503, 69.8548], [-50.9402, 69.9088], [-51.0136, 69.5526]]], [[[-46.2666, 60.7814], [-46.3817, 60.6603], [-46.79, 60.7799], [-46.2052, 60.9435], [-46.2666, 60.7814]]], [[[-29.953, 83.5649], [-28.4839, 83.4348], [-25.9475, 83.2896], [-26.1827, 83.2213], [-30.0921, 83.1574], [-31.9927, 83.0853], [-31.5157, 82.9916], [-30.386, 83.0937], [-27.0019, 83.0673], [-25.1234, 83.1596], [-24.4702, 82.8773], [-22.5249, 82.7892], [-21.5208, 82.5954], [-22.4725, 82.3848], [-23.8623, 82.2872], [-29.5794, 82.1611], [-29.8875, 82.0548], [-29.5439, 81.94], [-27.8396, 82.049], [-25.1489, 82.001], [-24.5892, 81.8827], [-24.2931, 81.701], [-23.6366, 81.7418], [-23.1037, 82.0119], [-21.3379, 82.0687], [-21.1466, 81.6952], [-21.7236, 81.3483], [-23.0724, 80.9266], [-21.9314, 81.0502], [-20.7557, 81.3119], [-20.0158, 81.5643], [-17.2261, 81.4305], [-16.359, 81.7292], [-15.5555, 81.8337], [-13.7045, 81.7891], [-12.1928, 81.649], [-11.5288, 81.424], [-13.4513, 81.038], [-14.4902, 80.9732], [-14.5035, 80.7633], [-15.5426, 80.6503], [-16.3188, 80.6499], [-16.7607, 80.5733], [-15.9326, 80.3951], [-16.8683, 80.1982], [-18.0709, 80.172], [-19.4292, 80.2577], [-20.1501, 80.0113], [-20.1385, 79.8033], [-19.2836, 79.6831], [-19.4141, 79.3488], [-19.0749, 79.1524], [-19.723, 79.0649], [-20.0504, 78.8419], [-20.6157, 78.8039], [-21.1337, 78.6587], [-20.9557, 78.5552], [-21.3972, 78.0735], [-21.7476, 77.7905], [-21.3796, 77.6975], [-20.8625, 77.9119], [-19.4904, 77.7188], [-20.6809, 77.6189], [-20.232, 77.3684], [-19.3002, 77.2223], [-18.5859, 77.2831], [-18.339, 77.2152], [-18.3372, 76.9211], [-18.5103, 76.7782], [-20.0644, 76.9276], [-20.9422, 76.887], [-21.6147, 76.6879], [-22.1853, 76.794], [-22.6065, 76.6808], [-21.8772, 76.5734], [-21.5692, 76.2937], [-20.8873, 76.3039], [-20.1036, 76.2191], [-19.8628, 76.1206], [-19.9579, 75.9967], [-19.509, 75.7575], [-19.3665, 75.3864], [-19.4261, 75.23], [-19.7985, 75.1575], [-20.1986, 75.3081], [-20.485, 75.3143], [-20.9058, 75.1569], [-20.7952, 74.806], [-20.417, 74.9751], [-19.9849, 74.9751], [-19.5379, 74.6244], [-19.2252, 74.4795], [-19.3692, 74.284], [-20.2563, 74.2828], [-20.2306, 74.2046], [-21.1295, 74.1109], [-22.3215, 74.3027], [-22.3353, 74.0634], [-21.9878, 73.971], [-21.2984, 73.9624], [-20.3673, 73.8483], [-20.5096, 73.493], [-21.5481, 73.4317], [-22.1851, 73.2699], [-22.9874, 73.3463], [-23.7607, 73.5432], [-24.1577, 73.7644], [-24.7911, 73.5112], [-26.0622, 73.2531], [-26.4067, 73.313], [-26.7532, 73.1212], [-25.3991, 73.2757], [-25.2683, 73.362], [-24.5872, 73.423], [-23.8989, 73.3982], [-22.8522, 73.0839], [-22.0364, 72.9184], [-22.0747, 72.3992], [-22.2803, 72.3449], [-22.2932, 72.1196], [-24.0692, 72.4987], [-24.3586, 72.6873], [-24.63, 73.0377], [-25.1705, 72.9803], [-24.771, 72.8686], [-24.6669, 72.4374], [-24.4172, 72.3482], [-22.8684, 71.9706], [-22.4969, 71.9138], [-22.3702, 71.7698], [-22.0133, 71.6888], [-22.5031, 71.5003], [-22.2992, 71.4324], [-21.7522, 71.4784], [-21.6713, 71.2059], [-21.6746, 70.8563], [-21.5228, 70.5262], [-21.9436, 70.4434], [-23.3279, 70.451], [-23.7917, 70.5551], [-24.1304, 70.791], [-24.377, 71.1463], [-25.6559, 71.5301], [-26.2114, 71.59], [-26.6886, 71.5833], [-26.7372, 71.5008], [-25.8427, 71.4801], [-25.6993, 71.3683], [-25.7422, 71.1836], [-26.1574, 71.0502], [-26.7179, 70.9506], [-27.6887, 70.9934], [-27.9923, 70.8951], [-28.1456, 70.6556], [-28.5409, 70.4769], [-28.0149, 70.4024], [-27.5961, 70.4068], [-26.7472, 70.4756], [-26.5767, 70.3571], [-27.0726, 70.2812], [-27.5608, 70.1245], [-27.3842, 69.9916], [-27.0277, 70.2013], [-26.4156, 70.2212], [-25.53, 70.3531], [-24.7488, 70.2952], [-24.041, 70.1811], [-23.1731, 70.1145], [-22.2845, 70.1259], [-22.4352, 69.9858], [-23.0882, 69.883], [-23.0145, 69.8049], [-23.5525, 69.7405], [-23.7089, 69.6273], [-24.7405, 69.3184], [-25.1886, 69.2605], [-25.0923, 69.1653], [-25.544, 69.0456], [-25.6981, 68.8898], [-26.3414, 68.7023], [-26.8153, 68.6543], [-27.8511, 68.4934], [-28.1265, 68.479], [-29.2496, 68.2988], [-29.8686, 68.3117], [-30.6108, 68.1179], [-30.9785, 68.0613], [-31.4196, 68.1285], [-32.1373, 68.3849], [-32.3668, 68.2131], [-32.156, 68.0633], [-32.2747, 67.9228], [-33.157, 67.6267], [-33.5176, 67.3541], [-33.5281, 67.258], [-34.1016, 66.7258], [-34.423, 66.6302], [-34.6329, 66.4349], [-35.1887, 66.2502], [-35.7555, 66.3235], [-35.6301, 66.1399], [-36.3792, 65.8307], [-36.9325, 65.7825], [-37.0628, 65.8714], [-37.4101, 65.6563], [-37.7541, 65.593], [-38.0012, 65.7095], [-37.7974, 65.8567], [-37.7879, 65.9781], [-37.2787, 66.3044], [-37.8138, 66.3856], [-37.7524, 66.2615], [-37.9694, 66.1412], [-38.2164, 65.8383], [-38.2034, 65.7118], [-38.6368, 65.6243], [-39.9609, 65.5562], [-40.1916, 65.5224], [-39.5779, 65.3407], [-40.028, 65.1025], [-40.253, 65.0488], [-40.6676, 65.1087], [-41.0844, 65.1007], [-40.9659, 64.8688], [-40.6554, 64.9154], [-40.1822, 64.48], [-41.0305, 64.1211], [-40.6177, 64.1317], [-40.6523, 63.9277], [-40.5504, 63.7254], [-41.0487, 63.5138], [-41.1077, 63.2737], [-41.3878, 63.062], [-41.6344, 62.9725], [-41.909, 62.737], [-42.0583, 62.6939], [-42.4236, 62.7231], [-42.4671, 62.5983], [-42.1529, 62.5686], [-42.3216, 62.1527], [-42.1431, 62.0135], [-42.1103, 61.8572], [-42.2496, 61.7713], [-42.4188, 61.5369], [-42.6461, 61.0642], [-42.7171, 60.7675], [-43.044, 60.5237], [-43.3483, 60.5198], [-43.1565, 60.3329], [-43.123, 60.0613], [-43.3201, 59.9281], [-43.6168, 59.937], [-43.9065, 59.8156], [-44.0654, 59.9247], [-44.3837, 59.899], [-44.4536, 60.0146], [-44.8122, 60.05], [-45.3793, 60.2028], [-45.3677, 60.3729], [-45.5904, 60.5189], [-46.0467, 60.6157], [-46.1419, 60.7766], [-46.0116, 61.0969], [-46.5825, 60.9621], [-46.8745, 60.8163], [-47.2243, 60.7828], [-47.4647, 60.8427], [-47.7963, 60.829], [-48.014, 60.722], [-48.2051, 60.856], [-47.8587, 61.0156], [-48.3864, 61.0047], [-48.4948, 61.2247], [-48.922, 61.2775], [-49.0492, 61.5239], [-49.2891, 61.59], [-49.2652, 61.7101], [-49.3804, 61.8901], [-49.0396, 62.0394], [-49.6238, 61.9986], [-49.6678, 62.1509], [-49.5534, 62.2327], [-50.0701, 62.3646], [-50.3192, 62.4732], [-50.2593, 62.5781], [-50.3383, 62.8287], [-50.7435, 63.0513], [-51.4689, 63.6423], [-51.5381, 63.758], [-51.4511, 63.9047], [-51.7079, 64.205], [-51.2316, 64.5605], [-50.4921, 64.6933], [-50.6481, 64.8533], [-50.989, 64.6649], [-51.4009, 64.6231], [-51.758, 64.28], [-51.9986, 64.2567], [-52.0934, 64.4158], [-52.089, 64.6815], [-52.259, 65.1549], [-52.4476, 65.205], [-52.5513, 65.4614], [-52.761, 65.5908], [-53.1989, 65.5942], [-53.2337, 65.7708], [-53.1063, 65.9772], [-53.3569, 66.0733], [-53.0178, 66.171], [-52.0561, 66.5072], [-51.8231, 66.6979], [-52.9219, 66.2411], [-53.1561, 66.1776], [-53.6146, 66.1545], [-53.6346, 66.4136], [-53.4189, 66.6486], [-53.0383, 66.8268], [-53.6872, 66.9864], [-53.8845, 67.1356], [-53.7986, 67.4181], [-52.6665, 67.7496], [-52.3835, 67.7523], [-51.9092, 67.6638], [-51.1814, 67.6365], [-50.9688, 67.8067], [-51.7651, 67.7379], [-52.3449, 67.8369], [-52.9797, 67.7577], [-53.4189, 67.5746], [-53.7352, 67.549], [-53.578, 67.8369], [-53.353, 67.9705], [-53.1516, 68.2078], [-52.4361, 68.1456], [-52.0586, 68.0755], [-51.5969, 68.0549], [-51.2074, 68.3256], [-51.4562, 68.3935], [-51.6324, 68.273], [-52.1986, 68.2209], [-52.7801, 68.3099], [-53.3831, 68.2974], [-53.0393, 68.6109], [-52.6045, 68.7087], [-52.3029, 68.7011], [-51.7807, 68.5482], [-51.1333, 68.5984], [-51.2493, 68.74], [-51.0849, 69.1282], [-50.3926, 69.1373], [-50.5367, 69.2478], [-51.0769, 69.2094], [-50.8922, 69.4118], [-50.7202, 69.7254], [-50.3496, 69.7962], [-50.5, 69.9358], [-51.1057, 70.0575], [-51.4189, 69.9891], [-52.2545, 70.0591], [-53.0231, 70.3019], [-54.0143, 70.4217], [-54.5011, 70.6569], [-54.1659, 70.8201], [-53.0913, 70.7694], [-52.4052, 70.6867], [-51.5245, 70.4394], [-50.9326, 70.4539], [-51.3228, 70.5888], [-51.1301, 70.9717], [-51.3768, 71.119], [-52.0614, 71.1217], [-52.5346, 71.2005], [-53.0076, 71.1801], [-53.117, 71.3128], [-52.7495, 71.5015], [-51.9673, 71.5991], [-52.6562, 71.6724], [-53.1676, 71.5359], [-53.4761, 71.6402], [-53.139, 71.7751], [-53.4777, 71.8499], [-53.7798, 71.6786], [-54.0199, 71.6579], [-53.9631, 71.4591], [-54.6891, 71.3672], [-55.3365, 71.4266], [-55.5939, 71.5536], [-55.5493, 71.7682], [-55.3156, 72.1107], [-55.6594, 72.2226], [-55.6017, 72.4536], [-55.1218, 72.4995], [-54.7905, 72.6416], [-54.7379, 72.8724], [-55.6685, 73.0078], [-55.6927, 73.1128], [-55.2972, 73.2624], [-55.7388, 73.384], [-56.104, 73.5582], [-55.9295, 73.8954], [-56.2984, 74.1635], [-56.7063, 74.2192], [-56.6559, 74.4576], [-56.2555, 74.5268], [-56.8712, 74.6951], [-57.0716, 74.8402], [-57.8132, 75.0399], [-58.2533, 75.2789], [-58.6035, 75.3853], [-58.2498, 75.5067], [-58.5163, 75.6891], [-59.0816, 75.7646], [-60.1727, 75.9932], [-61.3747, 76.1801], [-62.8234, 76.2616], [-63.4388, 76.3394], [-63.843, 76.2171], [-64.3875, 76.3039], [-64.9119, 76.1725], [-65.4568, 76.1299], [-65.9541, 76.2418], [-66.4657, 76.1392], [-67.0548, 76.1519], [-66.8262, 75.9688], [-68.1488, 76.0671], [-69.3728, 76.3319], [-69.3996, 76.4362], [-68.2233, 76.6777], [-69.2521, 76.6861], [-69.8882, 76.827], [-70.4412, 76.8073], [-70.7928, 76.869], [-71.1548, 77.0738], [-70.8629, 77.1755], [-69.6567, 77.229], [-68.9784, 77.1952], [-68.5916, 77.3426], [-68.1355, 77.3795], [-66.938, 77.3642], [-66.4531, 77.393], [-66.3064, 77.5646], [-66.6912, 77.6813], [-67.5147, 77.5431], [-67.9774, 77.5189], [-68.6215, 77.6018], [-69.3515, 77.4671], [-69.9767, 77.5477], [-70.1263, 77.6378], [-71.65, 77.8997], [-72.065, 77.9368], [-72.818, 78.1944], [-72.3957, 78.5043], [-71.6513, 78.6232], [-70.9058, 78.6384], [-69.9736, 78.7777], [-68.9935, 78.8574], [-69.0305, 78.9429], [-67.4823, 79.1168], [-65.9679, 79.1324], [-65.4199, 79.3401], [-65.117, 79.589], [-64.7923, 80.0007], [-66.8437, 80.0761], [-67.1414, 80.1665], [-66.996, 80.413], [-66.3723, 80.5841], [-65.6452, 80.6852], [-64.5155, 81.0001], [-63.4417, 81.0139], [-62.9932, 81.2069], [-61.436, 81.1337], [-61.1, 81.396], [-61.2029, 81.7469], [-60.8429, 81.8554], [-59.2618, 82.0066], [-58.7174, 82.0932], [-56.5894, 82.2272], [-55.5486, 82.2456], [-54.7259, 82.3513], [-53.9872, 82.2791], [-53.582, 82.0616], [-52.9255, 82.0383], [-53.1108, 82.2512], [-52.7756, 82.3218], [-50.8944, 81.8952], [-49.6942, 81.9722], [-50.7131, 82.2374], [-50.9899, 82.4601], [-50.0371, 82.4725], [-48.8612, 82.4055], [-47.3575, 82.1737], [-46.6173, 82.0969], [-45.2912, 81.8288], [-44.5324, 81.849], [-44.6371, 82.1045], [-44.2389, 82.3681], [-44.5772, 82.5426], [-46.4782, 82.9518], [-45.4146, 83.0178], [-43.1945, 83.2551], [-42.2596, 83.232], [-41.3002, 83.1008], [-40.3569, 83.3323], [-38.9311, 83.1754], [-38.7478, 83.3325], [-37.828, 83.4856], [-34.6678, 83.5711], [-33.8374, 83.5301], [-32.9845, 83.5995], [-29.953, 83.5649]]], [[[-44.8646, 82.0836], [-46.7518, 82.3482], [-47.3075, 82.5335], [-47.2723, 82.6569], [-46.3992, 82.6922], [-45.4115, 82.5774], [-44.7499, 82.4012], [-44.8646, 82.0836]]], [[[-17.6125, 79.8258], [-18.0358, 79.7112], [-19.0323, 79.773], [-18.9973, 79.9405], [-17.983, 80.0553], [-17.4714, 80.0286], [-17.6125, 79.8258]]]] }, \"properties\": { \"name\": \"Greenland\", \"id\": \"GL\" }, \"id\": \"GL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.7154, 12.0128], [-61.715, 12.185], [-61.6071, 12.2232], [-61.6271, 12.0541], [-61.7154, 12.0128]]] }, \"properties\": { \"name\": \"Grenada\", \"id\": \"GD\" }, \"id\": \"GD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[25.5459, 36.9675], [25.3617, 37.0705], [25.5878, 37.1526], [25.5459, 36.9675]]], [[[27.8427, 35.9293], [27.7158, 35.9573], [27.7162, 36.1717], [27.9146, 36.3452], [28.1716, 36.426], [28.2302, 36.3701], [28.1441, 36.2098], [27.8427, 35.9293]]], [[[23.8521, 35.5356], [24.0346, 35.5356], [24.1659, 35.595], [24.3129, 35.3638], [24.7213, 35.425], [25.0031, 35.4099], [25.1044, 35.3469], [25.4758, 35.3061], [25.7301, 35.3487], [25.7449, 35.1427], [26.2989, 35.2688], [26.2442, 35.0446], [25.8296, 35.025], [25.2055, 34.9594], [24.7998, 34.9345], [24.7089, 35.089], [24.4638, 35.1604], [23.8836, 35.2461], [23.6381, 35.235], [23.5618, 35.2949], [23.5698, 35.5347], [23.715, 35.6048], [23.8521, 35.5356]]], [[[26.0392, 40.7269], [25.8558, 40.844], [25.2499, 40.9328], [25.1044, 40.9945], [24.7931, 40.8573], [24.5565, 40.9355], [24.3839, 40.9129], [24.0825, 40.7242], [23.7629, 40.7477], [23.8787, 40.5445], [23.8667, 40.4184], [23.7207, 40.2861], [23.9675, 40.1147], [23.8352, 40.0224], [23.6644, 40.2239], [23.4264, 40.2639], [23.3119, 40.2164], [22.8964, 40.3997], [22.8116, 40.5786], [22.6296, 40.4956], [22.6425, 40.3664], [22.5692, 40.1192], [22.5923, 40.037], [22.8356, 39.8004], [22.919, 39.6291], [23.1033, 39.492], [23.2883, 39.2887], [22.9928, 39.3313], [22.8391, 39.2584], [22.9657, 39.0307], [22.8027, 38.9016], [22.7739, 38.8003], [23.2528, 38.6614], [23.3692, 38.5256], [23.5698, 38.4892], [23.6838, 38.3525], [23.9671, 38.2748], [24.0244, 38.1399], [24.0554, 37.7097], [23.8774, 37.7777], [23.5805, 38.0107], [23.1937, 37.9592], [23.0362, 37.8784], [23.1472, 37.7954], [23.1978, 37.62], [23.3474, 37.5974], [23.4894, 37.4403], [23.1614, 37.3337], [23.0966, 37.4407], [22.7748, 37.585], [22.7651, 37.3932], [22.995, 37.0159], [23.0735, 36.7749], [22.9829, 36.5286], [22.7801, 36.786], [22.6083, 36.7798], [22.4889, 36.568], [22.0805, 37.0288], [21.9558, 36.9902], [21.8923, 36.7371], [21.7383, 36.8632], [21.5829, 37.0807], [21.5789, 37.2002], [21.6926, 37.3094], [21.5714, 37.5411], [21.3295, 37.6693], [21.1448, 37.9192], [21.3082, 38.0276], [21.4036, 38.1967], [21.6583, 38.1749], [21.8249, 38.3281], [21.9531, 38.3214], [22.2438, 38.1887], [22.5559, 38.1132], [22.7996, 37.9814], [22.8933, 38.0511], [23.1219, 38.0733], [23.149, 38.1763], [22.9324, 38.202], [22.4218, 38.4386], [22.2269, 38.3529], [21.9651, 38.4124], [21.4724, 38.3214], [21.3902, 38.408], [21.1133, 38.3849], [20.9921, 38.6539], [20.7769, 38.8075], [20.7772, 38.9277], [21.0742, 38.8851], [21.1181, 39.0299], [20.7794, 39.0086], [20.4683, 39.2554], [20.301, 39.3273], [20.1913, 39.5457], [20.0013, 39.7095], [20.2069, 39.6535], [20.3817, 39.8417], [20.3112, 39.9794], [20.6574, 40.1174], [20.8062, 40.4454], [20.9504, 40.4943], [21.0312, 40.6585], [20.9641, 40.8498], [21.5758, 40.8689], [21.7795, 40.9506], [21.9296, 41.1073], [22.2377, 41.1552], [22.4933, 41.1184], [22.7246, 41.1783], [22.7552, 41.3128], [22.9159, 41.3363], [23.1561, 41.3221], [23.2399, 41.3852], [23.6351, 41.3869], [24.0559, 41.5272], [24.5184, 41.5525], [24.596, 41.4429], [25.1332, 41.3159], [25.2512, 41.2435], [25.7847, 41.3305], [25.9233, 41.3119], [26.1355, 41.3856], [26.1435, 41.5214], [26.0658, 41.6733], [26.321, 41.7167], [26.5812, 41.6014], [26.6246, 41.4016], [26.3308, 41.2387], [26.3312, 40.9546], [26.0392, 40.7269]]], [[[24.774, 40.615], [24.6458, 40.5795], [24.5157, 40.647], [24.6232, 40.793], [24.7865, 40.7038], [24.774, 40.615]]], [[[25.4376, 39.9834], [25.3569, 39.808], [25.0622, 39.8524], [25.0582, 39.9998], [25.4376, 39.9834]]], [[[20.0781, 39.4329], [19.8841, 39.4613], [19.6488, 39.7264], [19.8384, 39.82], [19.937, 39.7468], [19.9042, 39.6194], [19.9551, 39.4702], [20.0781, 39.4329]]], [[[26.4103, 39.3295], [26.393, 39.27], [26.5785, 39.1093], [26.4689, 38.9726], [26.1608, 39.0259], [25.9064, 39.1391], [25.9096, 39.2877], [26.1656, 39.3735], [26.4103, 39.3295]]], [[[23.4153, 38.9588], [23.4722, 38.8501], [23.8783, 38.6867], [24.0989, 38.6712], [24.2756, 38.2202], [24.5632, 38.1474], [24.5024, 37.9698], [24.2121, 38.1177], [24.0403, 38.3898], [23.7588, 38.4013], [23.6173, 38.5527], [23.252, 38.8013], [23.0291, 38.8736], [23.1459, 39.0028], [23.3128, 39.0347], [23.4153, 38.9588]]], [[[26.0941, 38.218], [25.9987, 38.1616], [25.8745, 38.2695], [25.9912, 38.3534], [25.8514, 38.5083], [26.0126, 38.602], [26.1497, 38.4684], [26.0941, 38.218]]], [[[20.6121, 38.3836], [20.6245, 38.2677], [20.7888, 38.1421], [20.7613, 38.0706], [20.5234, 38.1066], [20.4088, 38.3369], [20.6121, 38.3836]]], [[[26.8244, 37.8114], [27.0397, 37.7701], [26.8448, 37.6449], [26.6383, 37.7808], [26.8244, 37.8114]]]] }, \"properties\": { \"name\": \"Greece\", \"id\": \"GR\" }, \"id\": \"GR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[8.7358, 3.7582], [8.9102, 3.7582], [8.9462, 3.6277], [8.7039, 3.2238], [8.4748, 3.2646], [8.4646, 3.4506], [8.5773, 3.4826], [8.6758, 3.736], [8.7358, 3.7582]]], [[[9.5907, 1.0318], [9.3861, 1.1392], [9.4944, 1.4353], [9.632, 1.5654], [9.8069, 1.9276], [9.7799, 2.0683], [9.8007, 2.3045], [9.98, 2.1677], [11.3285, 2.1673], [11.3352, 0.9998], [10.0284, 1.0039], [9.9068, 0.9599], [9.7608, 1.0749], [9.5907, 1.0318]]]] }, \"properties\": { \"name\": \"Equatorial Guinea\", \"id\": \"GQ\" }, \"id\": \"GQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-15.0431, 10.9404], [-15.1811, 11.034], [-15.2166, 11.1561], [-15.3931, 11.2173], [-15.3946, 11.3345], [-15.4794, 11.4105], [-15.413, 11.6151], [-15.5018, 11.7238], [-15.4348, 11.9436], [-15.6508, 11.8184], [-15.8194, 11.7633], [-15.9417, 11.7864], [-15.9588, 11.9596], [-16.1384, 11.9174], [-16.3281, 12.0514], [-16.3124, 12.2432], [-16.4368, 12.2041], [-16.7119, 12.3551], [-16.4162, 12.3675], [-16.1441, 12.4576], [-15.8397, 12.4381], [-15.5748, 12.4905], [-15.1962, 12.68], [-13.7293, 12.6737], [-13.6737, 12.4785], [-13.7078, 12.3129], [-13.9488, 12.1784], [-13.738, 12.0097], [-13.7327, 11.7358], [-13.9533, 11.6648], [-14.2656, 11.6599], [-14.4525, 11.556], [-14.6831, 11.5086], [-14.7794, 11.4055], [-14.9445, 11.0722], [-15.0431, 10.9404]]] }, \"properties\": { \"name\": \"Guinea-Bissau\", \"id\": \"GW\" }, \"id\": \"GW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-16.7633, 13.064], [-16.8249, 13.341], [-16.6695, 13.475], [-16.5565, 13.3032], [-16.4134, 13.2699], [-16.1852, 13.2828], [-16.1355, 13.4484], [-16.3519, 13.3431], [-16.5301, 13.4581], [-16.5623, 13.5873], [-16.3088, 13.5971], [-15.5096, 13.5864], [-15.4268, 13.7271], [-15.1083, 13.8119], [-14.9359, 13.7853], [-14.7661, 13.669], [-14.5708, 13.6162], [-14.4054, 13.5038], [-13.9773, 13.5433], [-13.8527, 13.4785], [-13.8475, 13.3352], [-14.2467, 13.2357], [-14.6719, 13.3516], [-15.1512, 13.5566], [-15.2863, 13.396], [-15.8143, 13.325], [-15.8343, 13.1563], [-16.6488, 13.154], [-16.7633, 13.064]]] }, \"properties\": { \"name\": \"Gambia\", \"id\": \"GM\" }, \"id\": \"GM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-61.3272, 16.2302], [-61.5221, 16.228], [-61.529, 16.4339], [-61.4065, 16.4682], [-61.3272, 16.2302]]], [[[-61.5896, 16.007], [-61.7593, 16.062], [-61.7942, 16.3008], [-61.748, 16.3554], [-61.5523, 16.2711], [-61.5896, 16.007]]]] }, \"properties\": { \"name\": \"Guadeloupe\", \"id\": \"GP\" }, \"id\": \"GP\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-11.3894, 12.4043], [-11.5021, 12.1988], [-11.3053, 12.0154], [-11.2096, 12.0248], [-11.0658, 12.1708], [-10.9333, 12.205], [-10.7431, 11.9271], [-10.6774, 11.8996], [-10.4659, 12.1389], [-10.2748, 12.2126], [-9.8207, 12.0426], [-9.7148, 12.0426], [-9.6582, 12.1433], [-9.3581, 12.2556], [-9.3652, 12.4793], [-9.2156, 12.4829], [-9.043, 12.4026], [-8.8184, 11.9227], [-8.8219, 11.6732], [-8.665, 11.5152], [-8.4075, 11.3865], [-8.6639, 11.0358], [-8.4748, 11.0482], [-8.3374, 10.9905], [-8.3241, 10.7495], [-8.2316, 10.4379], [-8.0074, 10.322], [-7.9907, 10.1627], [-8.1366, 10.022], [-8.137, 9.4955], [-8.0309, 9.3978], [-7.8962, 9.4161], [-7.9181, 9.1883], [-7.7779, 9.0809], [-7.9381, 8.9797], [-7.951, 8.7866], [-7.7841, 8.7205], [-7.6909, 8.5625], [-7.6811, 8.4102], [-7.8236, 8.4674], [-8.0491, 8.4954], [-8.2369, 8.4555], [-8.2562, 8.2535], [-8.0167, 8.1447], [-8.0098, 8.0786], [-8.1268, 7.8678], [-8.1155, 7.7608], [-8.232, 7.5566], [-8.43, 7.6019], [-8.4863, 7.5583], [-8.5789, 7.6769], [-8.7083, 7.6591], [-8.7402, 7.4958], [-8.8896, 7.2627], [-9.1176, 7.2157], [-9.2633, 7.3777], [-9.4638, 7.4158], [-9.369, 7.7039], [-9.4362, 7.8668], [-9.5182, 8.3462], [-9.7683, 8.5345], [-10.0644, 8.4297], [-10.1474, 8.5198], [-10.2832, 8.4852], [-10.3944, 8.4808], [-10.5578, 8.3157], [-10.712, 8.3352], [-10.6286, 8.5301], [-10.5005, 8.6876], [-10.6057, 8.8674], [-10.6159, 9.0592], [-10.75, 9.1222], [-10.6904, 9.3144], [-10.8647, 9.5164], [-11.2056, 9.9776], [-11.2735, 9.9967], [-11.911, 9.9931], [-11.9227, 9.9225], [-12.1422, 9.8755], [-12.2776, 9.9296], [-12.5016, 9.8621], [-12.5579, 9.705], [-12.7559, 9.3734], [-12.9588, 9.2634], [-13.028, 9.1035], [-13.1299, 9.0476], [-13.2928, 9.0494], [-13.2695, 9.1705], [-13.4361, 9.4205], [-13.5682, 9.5434], [-13.6914, 9.5359], [-13.6586, 9.7765], [-13.7005, 9.8511], [-13.9546, 9.9687], [-14.0449, 10.1414], [-14.1704, 10.1285], [-14.427, 10.2483], [-14.6096, 10.5497], [-14.7758, 10.9315], [-15.0431, 10.9404], [-14.9445, 11.0722], [-14.7794, 11.4055], [-14.6831, 11.5086], [-14.4525, 11.556], [-14.2656, 11.6599], [-13.9533, 11.6648], [-13.7327, 11.7358], [-13.738, 12.0097], [-13.9488, 12.1784], [-13.7078, 12.3129], [-13.6737, 12.4785], [-13.7293, 12.6737], [-13.0828, 12.6334], [-13.0613, 12.49], [-12.9308, 12.5322], [-12.7974, 12.4518], [-12.2912, 12.328], [-12.0423, 12.3981], [-11.8079, 12.3875], [-11.5736, 12.4265], [-11.3894, 12.4043]]] }, \"properties\": { \"name\": \"Guinea\", \"id\": \"GN\" }, \"id\": \"GN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-0.0686, 11.1157], [0.0095, 11.0212], [-0.0901, 10.7153], [-0.0577, 10.6305], [0.3319, 10.3069], [0.3627, 10.2364], [0.3238, 9.6877], [0.2619, 9.4955], [0.4476, 9.4804], [0.5291, 9.3583], [0.466, 9.1151], [0.4887, 8.8514], [0.3726, 8.7591], [0.4153, 8.6526], [0.6162, 8.4794], [0.688, 8.3041], [0.5837, 8.1456], [0.605, 7.7284], [0.4998, 7.5468], [0.5096, 7.4349], [0.6348, 7.3537], [0.5792, 7.0039], [0.5256, 6.8508], [0.7369, 6.4526], [0.9849, 6.3203], [1.1874, 6.0895], [1.0502, 5.9941], [0.9499, 5.8103], [0.7488, 5.7602], [0.2597, 5.7575], [-0.1265, 5.5684], [-0.3486, 5.5009], [-0.4854, 5.3944], [-0.7977, 5.2266], [-1.0643, 5.1827], [-1.6384, 4.9807], [-2.0018, 4.7623], [-2.0903, 4.7641], [-2.399, 4.9292], [-2.723, 5.0135], [-3.1139, 5.0886], [-3.0868, 5.1285], [-3.0191, 5.1307], [-2.7952, 5.1844], [-2.755, 5.4326], [-2.7936, 5.5999], [-2.9623, 5.643], [-3.2007, 6.3483], [-3.2402, 6.5356], [-3.2357, 6.8073], [-2.9858, 7.205], [-2.959, 7.4545], [-2.8964, 7.6848], [-2.7899, 7.9321], [-2.6134, 8.0467], [-2.6117, 8.1474], [-2.5058, 8.2087], [-2.6003, 8.8004], [-2.7466, 9.1097], [-2.6742, 9.2825], [-2.6958, 9.4813], [-2.7659, 9.658], [-2.7508, 9.9096], [-2.7832, 10.0832], [-2.7866, 10.402], [-2.9148, 10.5924], [-2.9073, 10.7282], [-2.8298, 10.9985], [-2.7517, 10.9865], [-1.5996, 10.9976], [-1.5368, 11.0225], [-1.2327, 10.9972], [-0.7014, 10.9888], [-0.6485, 10.9266], [-0.4918, 11.0074], [-0.2994, 11.1668], [-0.0686, 11.1157]]] }, \"properties\": { \"name\": \"Ghana\", \"id\": \"GH\" }, \"id\": \"GH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-2.5124, 49.4946], [-2.5475, 49.4287], [-2.646, 49.4682], [-2.5124, 49.4946]]] }, \"properties\": { \"name\": \"Guernsey\", \"id\": \"GG\" }, \"id\": \"GG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.4298, 41.8908], [46.1821, 41.6573], [46.3055, 41.5077], [46.6188, 41.3439], [46.6264, 41.1597], [46.4578, 41.07], [46.1706, 41.1978], [46.0311, 41.1672], [45.7928, 41.2245], [45.7155, 41.3377], [45.281, 41.4495], [45.0014, 41.2911], [44.8415, 41.2111], [44.4731, 41.1912], [44.2271, 41.2134], [43.7931, 41.1313], [43.4393, 41.1073], [43.2054, 41.1992], [43.149, 41.307], [42.7876, 41.5636], [42.5674, 41.5592], [42.4663, 41.4398], [41.9256, 41.4957], [41.8235, 41.4322], [41.5101, 41.5175], [41.7019, 41.7052], [41.7631, 41.9702], [41.6633, 42.1469], [41.4888, 42.6591], [41.4196, 42.7377], [41.1288, 42.8283], [41.0618, 42.9308], [40.8368, 43.0635], [40.5242, 43.1212], [39.9783, 43.4199], [40.1501, 43.57], [40.519, 43.5119], [40.6481, 43.534], [41.0831, 43.3746], [41.3583, 43.3334], [41.5807, 43.2193], [42.0499, 43.19], [42.4192, 43.2242], [42.5661, 43.1549], [42.7605, 43.1696], [42.9919, 43.0915], [43.089, 42.9889], [43.5578, 42.8447], [43.7824, 42.747], [43.7598, 42.5939], [43.9572, 42.5663], [44.5059, 42.7488], [44.8505, 42.747], [45.1603, 42.6751], [45.3436, 42.53], [45.5628, 42.5357], [45.7275, 42.4749], [45.6388, 42.205], [45.9539, 42.0354], [46.2128, 41.9897], [46.4298, 41.8908]]] }, \"properties\": { \"name\": \"Georgia\", \"id\": \"GE\" }, \"id\": \"GE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[13.2937, 2.1615], [13.2094, 1.9205], [13.1627, 1.6479], [13.2742, 1.2409], [13.8512, 1.4189], [14.1811, 1.3701], [14.3865, 1.0043], [14.4344, 0.8116], [14.3244, 0.6243], [14.2312, 0.5511], [14.0873, 0.5364], [13.9498, 0.354], [13.8845, 0.1906], [13.8601, -0.2035], [14.0696, -0.2701], [14.2067, -0.4272], [14.3639, -0.4686], [14.4806, -0.6181], [14.4105, -0.9719], [14.4558, -1.4131], [14.4029, -1.5934], [14.3838, -1.8898], [14.2516, -2.0013], [14.1628, -2.2175], [14.1996, -2.3541], [14.0873, -2.467], [13.8867, -2.4652], [13.8876, -2.3746], [13.7842, -2.1638], [13.4651, -2.3955], [13.3571, -2.4048], [12.9919, -2.3134], [12.7933, -1.9316], [12.5906, -1.8268], [12.4321, -1.929], [12.4787, -2.1118], [12.4462, -2.3298], [12.0646, -2.4127], [11.9504, -2.3449], [11.5754, -2.3973], [11.6033, -2.5957], [11.5377, -2.8367], [11.6393, -2.8554], [11.76, -2.9832], [11.7152, -3.1767], [11.934, -3.3188], [11.8329, -3.5314], [11.8493, -3.6965], [11.6859, -3.6819], [11.5043, -3.5203], [11.2882, -3.6411], [11.1301, -3.9162], [11.032, -3.8266], [10.9473, -3.6623], [10.6405, -3.3983], [10.5855, -3.2779], [10.3475, -3.013], [10.0062, -2.7484], [9.6245, -2.367], [9.5331, -2.1638], [9.2658, -1.825], [9.3306, -1.5348], [9.2037, -1.3825], [9.0647, -1.2982], [8.8441, -0.9138], [8.8215, -0.7082], [8.9462, -0.6887], [9.1366, -0.5734], [9.2968, -0.3514], [9.339, -0.0584], [9.3017, 0.2883], [9.411, 0.2004], [9.7385, 0.085], [9.7767, 0.1924], [9.47, 0.362], [9.3302, 0.611], [9.4953, 0.6647], [9.6178, 0.5764], [9.6258, 0.7792], [9.5907, 1.0318], [9.7608, 1.0749], [9.9068, 0.9599], [10.0284, 1.0039], [11.3352, 0.9998], [11.3285, 2.1673], [11.3485, 2.2996], [11.9398, 2.2854], [12.3615, 2.296], [12.8675, 2.2468], [13.2204, 2.2565], [13.2937, 2.1615]]] }, \"properties\": { \"name\": \"Gabon\", \"id\": \"GA\" }, \"id\": \"GA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[5.7896, 49.5384], [5.9592, 49.4547], [6.242, 49.4944], [6.344, 49.4527], [6.4582, 49.4429], [6.7356, 49.1606], [6.891, 49.2077], [7.0219, 49.1235], [7.4508, 49.1522], [7.611, 49.0618], [8.1348, 48.9735], [8.1401, 48.8865], [7.8378, 48.6361], [7.7055, 48.2801], [7.5844, 48.0644], [7.5293, 47.6738], [7.6154, 47.5926], [7.4201, 47.4553], [7.203, 47.4327], [7.0535, 47.4896], [7.0006, 47.3226], [6.6246, 47.0044], [6.4564, 46.9485], [6.4103, 46.7554], [6.1608, 46.6111], [6.06, 46.4282], [6.0867, 46.1472], [6.273, 46.2524], [6.2349, 46.3328], [6.4289, 46.4304], [6.7582, 46.4158], [6.8168, 46.275], [6.772, 46.165], [7.021, 45.9257], [6.8044, 45.8147], [7.0135, 45.5005], [7.1533, 45.4011], [7.0783, 45.2399], [6.8421, 45.1356], [6.6278, 45.1178], [6.7383, 44.9212], [6.9926, 44.8271], [7.0308, 44.7166], [6.843, 44.5106], [6.9674, 44.2802], [7.3708, 44.1275], [7.6371, 44.1648], [7.6514, 44.0338], [7.4818, 43.8647], [7.493, 43.7671], [7.4387, 43.7506], [7.4143, 43.7711], [7.3779, 43.7316], [7.1812, 43.6592], [6.8648, 43.4382], [6.7165, 43.3738], [6.6571, 43.2615], [6.4942, 43.1692], [6.116, 43.0724], [5.8097, 43.0977], [5.6716, 43.178], [5.4065, 43.2286], [5.3201, 43.3449], [5.1203, 43.3489], [5.0599, 43.4444], [4.7892, 43.3791], [4.6289, 43.3871], [4.1628, 43.5038], [4.0527, 43.5931], [3.2591, 43.1931], [3.0518, 42.9153], [3.0908, 42.5908], [3.2115, 42.4309], [2.9701, 42.4674], [2.5679, 42.3457], [2.2004, 42.4207], [2.0326, 42.3537], [1.7059, 42.5033], [1.7099, 42.6045], [1.4285, 42.5961], [1.3494, 42.6906], [0.6969, 42.8451], [0.6316, 42.6897], [-0.041, 42.6893], [-0.2992, 42.8252], [-0.5864, 42.799], [-0.7626, 42.9396], [-0.9339, 42.9494], [-1.2855, 43.0595], [-1.4286, 43.0369], [-1.4107, 43.2402], [-1.7534, 43.3245], [-1.794, 43.4075], [-1.6313, 43.4382], [-1.4848, 43.5638], [-1.3459, 44.0201], [-1.2456, 44.5599], [-1.189, 45.1613], [-1.0809, 45.5324], [-1.1699, 45.6861], [-1.066, 45.8059], [-1.1463, 46.3115], [-1.3925, 46.3501], [-1.7867, 46.5148], [-2.0595, 46.8104], [-2.0188, 47.0377], [-2.197, 47.1628], [-2.1083, 47.2632], [-2.5031, 47.312], [-2.4277, 47.4709], [-2.5542, 47.5268], [-2.7703, 47.5139], [-3.1587, 47.6946], [-3.901, 47.8376], [-4.312, 47.8229], [-4.4281, 47.969], [-4.6292, 48.0857], [-4.3779, 48.1288], [-4.5122, 48.2295], [-4.3932, 48.3676], [-4.7194, 48.3631], [-4.7208, 48.5398], [-4.5312, 48.6201], [-4.0589, 48.7076], [-3.7147, 48.7105], [-3.4715, 48.813], [-3.2315, 48.8407], [-3.0032, 48.7906], [-2.6924, 48.5367], [-2.4463, 48.6483], [-1.8246, 48.6304], [-1.4376, 48.6415], [-1.5654, 48.8055], [-1.5832, 49.2023], [-1.8701, 49.5952], [-1.8564, 49.6837], [-1.2587, 49.6802], [-1.2322, 49.4948], [-1.1386, 49.3879], [-0.5209, 49.3545], [-0.1636, 49.2968], [0.2776, 49.4634], [0.1094, 49.5576], [0.1869, 49.703], [0.6162, 49.8631], [1.2456, 49.9982], [1.4072, 50.0886], [1.5514, 50.2939], [1.5793, 50.7393], [1.6721, 50.8851], [1.9123, 50.9905], [2.5249, 51.0971], [2.5967, 50.876], [2.8396, 50.7118], [3.1069, 50.7795], [3.2733, 50.5315], [3.6266, 50.4574], [3.7482, 50.3436], [4.0444, 50.3213], [4.1743, 50.2466], [4.1761, 49.9602], [4.3687, 49.9449], [4.656, 50.0024], [4.8677, 49.788], [5.2788, 49.6779], [5.5073, 49.5108], [5.7896, 49.5384]]], [[[9.4802, 42.8056], [9.454, 42.6587], [9.5264, 42.5526], [9.5508, 42.1295], [9.4008, 41.9263], [9.3949, 41.7314], [9.1863, 41.3847], [8.8077, 41.5885], [8.8867, 41.7007], [8.718, 41.7616], [8.7406, 41.9249], [8.615, 41.9591], [8.7012, 42.0954], [8.5663, 42.2188], [8.7131, 42.5499], [9.4802, 42.8056]]]] }, \"properties\": { \"name\": \"France\", \"id\": \"FR\" }, \"id\": \"FR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[158.315, 6.8135], [158.1836, 6.8011], [158.1348, 6.9449], [158.2945, 6.9511], [158.315, 6.8135]]] }, \"properties\": { \"name\": \"Federated States of Micronesia\", \"id\": \"FM\" }, \"id\": \"FM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-6.6311, 62.2279], [-6.6557, 62.0936], [-7.0135, 62.0941], [-7.1722, 62.2856], [-6.9587, 62.3162], [-6.6311, 62.2279]]] }, \"properties\": { \"name\": \"Faroe Islands\", \"id\": \"FO\" }, \"id\": \"FO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-58.8501, -51.2697], [-58.5063, -51.3079], [-58.4737, -51.509], [-58.2065, -51.4047], [-57.9765, -51.3843], [-57.8085, -51.5179], [-57.8383, -51.7092], [-58.151, -51.7655], [-58.3361, -51.8637], [-58.6834, -51.9361], [-58.6528, -52.0994], [-59.1313, -52.008], [-59.0681, -52.1731], [-59.3415, -52.1962], [-59.3957, -52.308], [-59.6487, -52.1344], [-59.5708, -51.9254], [-59.2618, -51.7372], [-59.0596, -51.6857], [-59.0967, -51.4913], [-58.8501, -51.2697]]], [[[-60.2863, -51.462], [-60.1416, -51.481], [-59.917, -51.3883], [-59.7885, -51.446], [-59.3876, -51.3598], [-59.2681, -51.4273], [-59.9214, -51.9693], [-60.2463, -51.9862], [-60.3536, -52.1398], [-60.6863, -52.1882], [-60.9615, -52.0572], [-60.7624, -51.9462], [-60.591, -51.9516], [-60.2384, -51.7719], [-60.2453, -51.6391], [-60.5058, -51.4855], [-60.2863, -51.462]]]] }, \"properties\": { \"name\": \"Falkland Islands\", \"id\": \"FK\" }, \"id\": \"FK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[178.2804, -17.372], [178.4109, -17.5229], [178.5915, -17.6516], [178.5751, -17.7493], [178.6679, -18.0808], [178.3315, -18.1354], [178.1601, -18.2504], [177.8471, -18.2548], [177.4574, -18.1483], [177.3215, -18.0773], [177.2639, -17.8633], [177.4233, -17.7372], [177.4005, -17.6316], [177.618, -17.4611], [177.8178, -17.3884], [177.9403, -17.395], [178.1876, -17.3129], [178.2804, -17.372]]], [[[179.999, -16.1686], [179.7483, -16.4464], [179.6191, -16.5277], [179.568, -16.7473], [179.8411, -16.5375], [179.928, -16.7443], [179.7145, -16.7434], [179.4194, -16.8064], [179.3236, -16.718], [179.2023, -16.7128], [179.007, -16.9002], [178.8836, -16.8859], [178.7065, -16.976], [178.6036, -16.8007], [178.5835, -16.6217], [178.805, -16.6316], [178.8658, -16.5402], [179.0913, -16.4376], [179.359, -16.3798], [179.5516, -16.2498], [179.999, -16.1686]]]] }, \"properties\": { \"name\": \"Fiji\", \"id\": \"FJ\" }, \"id\": \"FJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.9657, 69.0219], [28.5662, 68.9282], [28.7522, 68.7715], [28.4708, 68.4883], [28.6851, 68.1898], [29.344, 68.0619], [29.9791, 67.6886], [29.9414, 67.5475], [29.0869, 66.9709], [29.0932, 66.8492], [29.4642, 66.5321], [29.671, 66.2762], [29.9032, 66.0911], [30.0954, 65.6816], [29.7159, 65.6246], [29.6298, 65.2239], [29.8108, 65.1079], [29.604, 64.9685], [29.7834, 64.8043], [30.0728, 64.7649], [29.9858, 64.5576], [30.1083, 64.3661], [30.4878, 64.2365], [30.5038, 64.0206], [30.0555, 63.689], [30.4186, 63.5041], [31.1808, 63.2082], [31.5341, 62.8855], [31.2855, 62.5679], [30.9357, 62.3237], [30.5655, 62.1276], [29.6901, 61.5461], [29.2516, 61.2877], [28.4073, 60.8969], [27.7978, 60.5362], [27.4623, 60.4647], [27.2421, 60.5386], [26.5345, 60.4128], [26.2047, 60.4066], [25.7156, 60.2675], [25.6565, 60.3331], [25.1558, 60.1942], [24.6005, 60.1143], [24.3426, 60.0424], [23.7215, 59.9656], [23.1982, 60.0217], [22.8445, 60.1867], [22.7934, 60.0768], [22.4627, 60.0293], [22.4698, 60.2013], [22.5759, 60.3591], [22.2581, 60.4008], [21.934, 60.5002], [21.4359, 60.5963], [21.3606, 60.9674], [21.479, 61.1705], [21.4981, 61.5521], [21.606, 61.5916], [21.3849, 61.9149], [21.2562, 61.9898], [21.3539, 62.2239], [21.1657, 62.4141], [21.1035, 62.6229], [21.1958, 62.7905], [21.6508, 63.0393], [21.5451, 63.2042], [22.1205, 63.2442], [22.3198, 63.3105], [22.2435, 63.438], [23.0144, 63.8219], [23.2488, 63.8963], [23.9249, 64.274], [24.2782, 64.5153], [24.5579, 64.8009], [25.3728, 65.0096], [25.2556, 65.1432], [25.348, 65.4791], [25.2419, 65.5462], [24.5815, 65.757], [24.1557, 65.8052], [23.9072, 66.1483], [23.7513, 66.1912], [23.7012, 66.4808], [23.8655, 66.5767], [23.9884, 66.8106], [23.6773, 67.0681], [23.623, 67.1842], [23.7749, 67.3286], [23.4682, 67.4501], [23.537, 67.5903], [23.5018, 67.8753], [23.639, 67.9543], [22.7823, 68.3911], [21.9975, 68.5207], [21.4652, 68.6907], [20.6223, 69.0369], [21.128, 69.0809], [21.0525, 69.1865], [21.2668, 69.2738], [21.622, 69.2707], [22.3003, 68.8558], [22.4108, 68.7198], [23.3238, 68.649], [23.7069, 68.7138], [23.8539, 68.8059], [24.9414, 68.5933], [25.3574, 68.8625], [25.7484, 68.9901], [25.7489, 69.2314], [26.0116, 69.6527], [26.5256, 69.915], [27.1085, 69.9048], [27.5919, 70.0422], [27.8897, 70.0617], [28.4117, 69.8226], [29.1415, 69.6715], [29.3333, 69.4731], [28.8463, 69.1768], [28.9657, 69.0219]]] }, \"properties\": { \"name\": \"Finland\", \"id\": \"FI\" }, \"id\": \"FI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[42.3784, 12.4664], [41.9958, 11.9125], [41.8155, 11.7238], [41.7667, 11.5889], [41.7982, 10.9803], [41.9576, 10.9412], [42.3082, 11.0052], [42.5577, 11.0806], [42.9226, 10.9994], [42.6594, 10.6212], [42.8417, 10.2031], [43.0691, 9.9261], [43.1818, 9.8799], [43.303, 9.6091], [43.4828, 9.3797], [43.6203, 9.3375], [44.023, 8.9859], [44.8935, 8.7], [46.2962, 8.2349], [46.9785, 7.9969], [47.9781, 7.9969], [46.9713, 7.0261], [46.4231, 6.4974], [45.9348, 5.9972], [44.9405, 4.9119], [44.9116, 4.8999], [44.0283, 4.9509], [43.5383, 4.8404], [43.1259, 4.6446], [43.0158, 4.5634], [42.8946, 4.361], [42.7916, 4.2922], [42.2284, 4.2016], [42.0241, 4.1377], [41.8839, 3.9779], [41.2207, 3.9438], [41.0871, 3.9921], [40.7653, 4.2731], [40.0142, 3.9482], [39.8424, 3.8514], [39.6573, 3.5779], [39.4944, 3.4559], [39.2255, 3.479], [38.608, 3.6002], [38.2254, 3.6188], [38.0864, 3.649], [37.3823, 4.1106], [36.9056, 4.4116], [36.8235, 4.4303], [36.0818, 4.4498], [35.9788, 4.5039], [35.763, 4.808], [35.8003, 5.1569], [35.7449, 5.3442], [35.4688, 5.4193], [35.3253, 5.3651], [35.2681, 5.4925], [35.0822, 5.6731], [34.9836, 5.8582], [34.9591, 6.0452], [34.838, 6.2999], [34.7106, 6.6604], [34.4842, 6.8983], [34.2791, 7.003], [34.0643, 7.2259], [34.0203, 7.3679], [33.9022, 7.5095], [33.6661, 7.6711], [33.2262, 7.7608], [33.0145, 7.8687], [33.0126, 7.9516], [33.2342, 8.3964], [33.4096, 8.4479], [33.9533, 8.4435], [34.0945, 8.5824], [34.1015, 8.752], [34.078, 9.4613], [34.1202, 9.7299], [34.2915, 10.1249], [34.3146, 10.2514], [34.2756, 10.528], [34.4313, 10.7877], [34.5717, 10.88], [34.7714, 10.746], [34.9312, 10.8649], [34.9605, 11.2768], [35.1123, 11.8166], [35.2526, 11.9569], [35.5962, 12.5375], [35.8207, 12.6849], [36.1076, 12.7266], [36.1598, 13.0932], [36.2123, 13.2712], [36.3907, 13.6259], [36.4471, 13.8421], [36.444, 13.9886], [36.5243, 14.2567], [36.812, 14.3148], [37.0246, 14.2718], [37.1325, 14.4062], [37.2572, 14.4538], [37.5071, 14.1563], [37.571, 14.1493], [37.8844, 14.8524], [38.0025, 14.737], [38.2213, 14.6495], [38.3771, 14.4702], [38.5045, 14.4245], [38.8121, 14.4822], [39.074, 14.6282], [39.1979, 14.4795], [39.5317, 14.5368], [39.8953, 14.4405], [40.2215, 14.4312], [40.5242, 14.2252], [40.7697, 14.1444], [40.9384, 13.9833], [41.1221, 13.736], [41.3627, 13.4999], [41.7649, 13.1838], [41.9522, 12.8824], [42.1343, 12.7714], [42.3784, 12.4664]]] }, \"properties\": { \"name\": \"Ethiopia\", \"id\": \"ET\" }, \"id\": \"ET\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[28.0127, 59.4842], [28.1512, 59.3743], [27.8978, 59.2776], [27.7575, 59.052], [27.5129, 58.8863], [27.4272, 58.7331], [27.5315, 58.4353], [27.488, 58.2701], [27.753, 57.8411], [27.5422, 57.7994], [27.3518, 57.5282], [26.8999, 57.6087], [26.5328, 57.5311], [26.2979, 57.601], [25.9912, 57.8382], [25.7937, 57.8686], [25.34, 58.0395], [25.1109, 58.0635], [24.3226, 57.8706], [24.4638, 58.1059], [24.529, 58.3543], [24.3368, 58.3813], [24.1148, 58.2661], [23.7677, 58.3609], [23.5094, 58.6585], [23.4322, 58.9207], [23.5152, 58.9993], [23.4943, 59.1957], [23.7824, 59.2751], [24.0834, 59.292], [24.3804, 59.4726], [24.5836, 59.4556], [24.8775, 59.5221], [25.4439, 59.521], [25.5091, 59.6389], [25.7937, 59.6346], [26.6251, 59.5539], [26.9749, 59.4507], [27.8924, 59.4143], [28.0127, 59.4842]]], [[[22.9235, 58.827], [22.7672, 58.8208], [22.5422, 58.6901], [22.4112, 58.8634], [22.5869, 59.0812], [22.9097, 58.9912], [22.9235, 58.827]]], [[[22.6172, 58.6213], [22.9643, 58.6057], [23.2928, 58.4834], [22.7304, 58.2306], [22.4982, 58.2362], [22.1874, 58.1543], [21.8821, 58.2624], [22.0814, 58.4781], [22.3282, 58.5809], [22.6172, 58.6213]]]] }, \"properties\": { \"name\": \"Estonia\", \"id\": \"EE\" }, \"id\": \"EE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-1.794, 43.4075], [-1.7534, 43.3245], [-1.4107, 43.2402], [-1.4286, 43.0369], [-1.2855, 43.0595], [-0.9339, 42.9494], [-0.7626, 42.9396], [-0.5864, 42.799], [-0.2992, 42.8252], [-0.041, 42.6893], [0.6316, 42.6897], [0.6969, 42.8451], [1.3494, 42.6906], [1.4285, 42.5961], [1.4862, 42.4345], [1.7059, 42.5033], [2.0326, 42.3537], [2.2004, 42.4207], [2.5679, 42.3457], [2.9701, 42.4674], [3.2115, 42.4309], [3.3065, 42.2889], [3.1663, 42.2565], [3.248, 41.9445], [3.0047, 41.7674], [2.3109, 41.4664], [2.0828, 41.2875], [1.5665, 41.1956], [1.0329, 41.062], [0.7147, 40.8228], [0.8593, 40.686], [0.5961, 40.6145], [0.3637, 40.3189], [-0.075, 39.8759], [-0.327, 39.5199], [-0.329, 39.4169], [-0.2049, 39.0627], [-0.0342, 38.8914], [0.2015, 38.7591], [-0.0526, 38.5855], [-0.3813, 38.4355], [-0.6468, 38.1518], [-0.6832, 37.992], [-0.823, 37.7115], [-0.8221, 37.581], [-1.3275, 37.561], [-1.6409, 37.387], [-1.7976, 37.233], [-1.9393, 36.9458], [-2.1116, 36.7766], [-2.3056, 36.8197], [-2.5957, 36.8064], [-2.7877, 36.715], [-3.2591, 36.7558], [-3.4313, 36.7078], [-3.8277, 36.7562], [-4.3668, 36.718], [-4.6742, 36.5063], [-4.9352, 36.5019], [-5.1716, 36.4238], [-5.3296, 36.2356], [-5.3609, 36.1348], [-5.6255, 36.0261], [-6.0407, 36.1885], [-6.1705, 36.3337], [-6.2688, 36.5969], [-6.384, 36.6368], [-6.3963, 36.8317], [-6.4924, 36.9546], [-6.8845, 37.1944], [-7.1751, 37.209], [-7.4061, 37.1793], [-7.5035, 37.5855], [-7.4441, 37.7284], [-7.1855, 38.0062], [-7.0228, 38.0448], [-7.3431, 38.4572], [-7.2816, 38.7147], [-7.0461, 38.9069], [-6.998, 39.0565], [-7.1724, 39.135], [-7.3058, 39.3379], [-7.3355, 39.4653], [-7.4452, 39.5363], [-7.4541, 39.6806], [-7.0368, 39.7139], [-6.8961, 40.022], [-7.0146, 40.2084], [-6.8102, 40.3429], [-6.8184, 40.6541], [-6.9285, 41.0092], [-6.6901, 41.2147], [-6.4031, 41.3754], [-6.2125, 41.5321], [-6.3916, 41.6652], [-6.5421, 41.6724], [-6.6182, 41.9423], [-7.0304, 41.9507], [-7.4037, 41.8335], [-7.6931, 41.8885], [-7.9208, 41.8837], [-8.1525, 41.8122], [-8.2246, 41.8956], [-8.1299, 42.0181], [-8.2131, 42.1336], [-8.5381, 42.0692], [-8.7771, 41.9409], [-8.8872, 42.1052], [-8.691, 42.2743], [-8.8122, 42.47], [-8.8115, 42.6405], [-8.9877, 42.5859], [-9.0416, 42.814], [-9.2352, 42.977], [-9.1781, 43.174], [-8.8736, 43.3343], [-8.5369, 43.3369], [-8.2488, 43.4395], [-8.2568, 43.5797], [-8.0047, 43.6943], [-7.6982, 43.7644], [-7.5035, 43.74], [-7.2621, 43.5948], [-7.061, 43.554], [-6.9007, 43.5855], [-6.0802, 43.5948], [-5.8467, 43.645], [-5.6659, 43.5824], [-5.3158, 43.5531], [-5.1052, 43.5016], [-4.523, 43.416], [-4.3129, 43.4146], [-3.8893, 43.4994], [-3.6046, 43.5194], [-3.0455, 43.3716], [-2.8751, 43.4546], [-2.3371, 43.3281], [-1.9913, 43.3449], [-1.794, 43.4075]]], [[[4.2937, 39.8417], [3.8428, 39.9762], [3.8535, 40.0633], [4.2259, 40.0322], [4.2937, 39.8417]]], [[[3.1454, 39.7902], [3.3421, 39.7867], [3.4619, 39.6979], [3.2449, 39.3868], [3.0726, 39.3011], [2.7698, 39.4103], [2.634, 39.5563], [2.4996, 39.4778], [2.3713, 39.6132], [2.7849, 39.8546], [3.1588, 39.9705], [3.1454, 39.7902]]], [[[1.4453, 38.9189], [1.2571, 38.8789], [1.3486, 39.0809], [1.5643, 39.1209], [1.6237, 39.0387], [1.4453, 38.9189]]], [[[-13.716, 28.9114], [-13.7882, 29.056], [-13.4537, 29.1515], [-13.4779, 29.0068], [-13.716, 28.9114]]], [[[-17.8343, 28.4932], [-18.0007, 28.7582], [-17.9288, 28.8447], [-17.7446, 28.7866], [-17.7579, 28.5691], [-17.8343, 28.4932]]], [[[-14.1968, 28.1692], [-14.2321, 28.2157], [-14.0035, 28.7067], [-13.8572, 28.7382], [-13.8277, 28.5851], [-13.928, 28.2535], [-14.1968, 28.1692]]], [[[-16.3345, 28.38], [-16.4182, 28.1514], [-16.5428, 28.032], [-16.6579, 28.0071], [-16.7947, 28.1492], [-16.9054, 28.3396], [-16.5175, 28.4128], [-16.319, 28.558], [-16.119, 28.5283], [-16.3345, 28.38]]], [[[-17.1846, 28.0218], [-17.3249, 28.1177], [-17.2585, 28.2033], [-17.1295, 28.1559], [-17.1846, 28.0218]]], [[[-15.4006, 28.1474], [-15.3891, 27.8748], [-15.5593, 27.747], [-15.7102, 27.7843], [-15.8094, 27.9947], [-15.6827, 28.154], [-15.4006, 28.1474]]], [[[-17.888, 27.8096], [-17.9847, 27.6463], [-18.1066, 27.7075], [-17.888, 27.8096]]]] }, \"properties\": { \"name\": \"Spain\", \"id\": \"ES\" }, \"id\": \"ES\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[38.6093, 18.0049], [38.9116, 17.427], [39.1424, 16.7291], [39.2228, 16.1938], [39.299, 15.9212], [39.4221, 15.7868], [39.5064, 15.532], [39.6312, 15.4525], [39.7208, 15.2137], [39.8637, 15.4703], [40.0408, 15.3344], [40.0839, 15.152], [40.2042, 15.014], [40.5464, 14.9336], [40.7994, 14.7432], [41.1763, 14.6202], [41.4794, 14.2438], [41.6584, 13.9833], [42.2451, 13.5878], [42.3464, 13.3982], [42.3992, 13.2126], [42.5226, 13.2215], [42.7344, 13.0187], [42.796, 12.8642], [42.9696, 12.8083], [43.0828, 12.8247], [43.1165, 12.7084], [42.8836, 12.6214], [42.7672, 12.423], [42.6701, 12.3763], [42.4795, 12.5135], [42.3784, 12.4664], [42.1343, 12.7714], [41.9522, 12.8824], [41.7649, 13.1838], [41.3627, 13.4999], [41.1221, 13.736], [40.9384, 13.9833], [40.7697, 14.1444], [40.5242, 14.2252], [40.2215, 14.4312], [39.8953, 14.4405], [39.5317, 14.5368], [39.1979, 14.4795], [39.074, 14.6282], [38.8121, 14.4822], [38.5045, 14.4245], [38.3771, 14.4702], [38.2213, 14.6495], [38.0025, 14.737], [37.8844, 14.8524], [37.571, 14.1493], [37.5071, 14.1563], [37.2572, 14.4538], [37.1325, 14.4062], [37.0246, 14.2718], [36.812, 14.3148], [36.5243, 14.2567], [36.4267, 15.132], [36.5217, 15.2501], [36.6792, 15.7264], [36.8133, 15.9941], [36.9136, 16.2964], [36.8879, 16.6248], [36.9789, 16.8006], [37.0091, 17.059], [37.4112, 17.0617], [37.5102, 17.288], [37.7823, 17.458], [38.2537, 17.5845], [38.4224, 17.8238], [38.6093, 18.0049]]], [[[40.1412, 15.6962], [40.2499, 15.7033], [40.3991, 15.5799], [40.095, 15.591], [39.9455, 15.789], [40.0426, 15.8755], [40.1412, 15.6962]]]] }, \"properties\": { \"name\": \"Eritrea\", \"id\": \"ER\" }, \"id\": \"ER\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-6.1988, 58.3634], [-6.4364, 58.0919], [-6.4251, 58.0213], [-6.9569, 57.7502], [-7.0834, 57.8138], [-6.8642, 57.9328], [-7.057, 58.0032], [-7.0852, 58.1822], [-6.2373, 58.5027], [-6.1988, 58.3634]]], [[[-7.2055, 57.6829], [-7.3207, 57.5337], [-7.4993, 57.6362], [-7.2055, 57.6829]]], [[[-6.1448, 57.5049], [-6.1355, 57.3142], [-5.6687, 57.227], [-5.949, 57.0452], [-6.0343, 57.2012], [-6.3228, 57.2026], [-6.4424, 57.3275], [-6.7611, 57.4423], [-6.6169, 57.5628], [-6.2469, 57.6511], [-6.1448, 57.5049]]], [[[-7.2499, 57.1153], [-7.3815, 57.1307], [-7.4105, 57.381], [-7.2672, 57.3717], [-7.2499, 57.1153]]], [[[-5.7779, 56.3443], [-6.1761, 56.2886], [-6.1026, 56.6457], [-5.7608, 56.4908], [-5.7779, 56.3443]]], [[[-5.9701, 55.8146], [-6.072, 55.8931], [-5.9391, 56.0454], [-5.7972, 56.0056], [-5.9701, 55.8146]]], [[[-6.1288, 55.9306], [-6.0553, 55.6953], [-6.2531, 55.6073], [-6.3113, 55.8565], [-6.1288, 55.9306]]], [[[-5.1054, 55.4488], [-5.3316, 55.4809], [-5.3926, 55.6183], [-5.1605, 55.6667], [-5.1054, 55.4488]]], [[[-6.218, 54.0887], [-6.6497, 54.0587], [-6.9363, 54.3743], [-7.3553, 54.1213], [-7.8549, 54.2152], [-8.1184, 54.4143], [-8.0445, 54.5124], [-7.7939, 54.5712], [-7.8862, 54.666], [-7.5504, 54.7681], [-7.3768, 55.0277], [-7.2186, 55.0921], [-6.9471, 55.1825], [-6.4751, 55.2411], [-6.1293, 55.2175], [-5.9857, 55.0298], [-5.7169, 54.8175], [-5.4703, 54.5002], [-5.6461, 54.4778], [-5.6068, 54.2727], [-5.8261, 54.2358], [-6.0189, 54.0512], [-6.218, 54.0887]]], [[[-4.1968, 53.3214], [-4.0842, 53.2644], [-4.373, 53.1341], [-4.5532, 53.2603], [-4.5679, 53.3864], [-4.3151, 53.4173], [-4.1968, 53.3214]]], [[[-1.0656, 50.6903], [-1.3064, 50.5886], [-1.5155, 50.6698], [-1.3128, 50.7735], [-1.0656, 50.6903]]], [[[-1.3082, 60.5376], [-1.0656, 60.3815], [-1.1792, 60.1138], [-1.4944, 60.2925], [-1.4495, 60.4686], [-1.3082, 60.5376]]], [[[-3.1097, 58.5154], [-3.2125, 58.3212], [-3.9901, 57.959], [-3.8878, 57.7869], [-4.0785, 57.6771], [-3.8681, 57.6003], [-3.4029, 57.7082], [-3.0839, 57.6736], [-2.2441, 57.6809], [-2.0741, 57.7024], [-1.8675, 57.6123], [-1.778, 57.4937], [-2.0204, 57.259], [-2.2603, 56.8632], [-2.5926, 56.5616], [-2.7752, 56.483], [-2.6527, 56.3184], [-2.7677, 56.202], [-2.9799, 56.1941], [-3.1783, 56.0802], [-3.0486, 55.9519], [-2.8369, 56.0263], [-2.5995, 56.0274], [-2.1471, 55.9031], [-1.6555, 55.5704], [-1.2917, 54.7738], [-1.1543, 54.6544], [-0.6714, 54.5039], [-0.3704, 54.2793], [-0.0843, 54.118], [-0.2056, 54.0217], [0.0107, 53.7429], [0.1283, 53.4684], [0.3558, 53.16], [0.0459, 52.9057], [0.2798, 52.8087], [0.5589, 52.967], [1.0556, 52.9589], [1.3823, 52.8935], [1.6565, 52.7537], [1.7467, 52.4689], [1.5589, 52.0869], [1.3166, 51.9569], [1.2744, 51.8455], [0.9553, 51.8078], [0.8908, 51.5714], [0.5934, 51.5194], [0.6867, 51.3865], [0.8896, 51.3594], [1.4151, 51.3632], [1.3655, 51.1554], [1.0445, 51.0474], [0.9601, 50.926], [0.6845, 50.8855], [0.2051, 50.763], [-0.204, 50.8143], [-0.7852, 50.7655], [-1.2851, 50.8574], [-1.5168, 50.7475], [-2.031, 50.7253], [-2.0359, 50.603], [-2.3502, 50.6374], [-2.5477, 50.6164], [-2.777, 50.7055], [-2.9994, 50.7167], [-3.4047, 50.6323], [-3.5844, 50.3218], [-3.7933, 50.2293], [-4.1726, 50.3908], [-4.7279, 50.2905], [-5.2253, 50.0213], [-5.5706, 50.1968], [-5.3422, 50.2461], [-4.583, 50.7763], [-4.523, 50.9774], [-4.2965, 51.0272], [-4.1881, 51.1885], [-3.8424, 51.2309], [-3.1359, 51.2049], [-2.5903, 51.6086], [-2.9785, 51.5387], [-3.2932, 51.3905], [-3.5625, 51.4138], [-3.9435, 51.5976], [-4.1153, 51.5665], [-4.3863, 51.7411], [-4.6007, 51.7376], [-4.9023, 51.6262], [-5.1247, 51.7059], [-5.2007, 51.8615], [-5.0881, 51.996], [-4.3832, 52.1972], [-4.1493, 52.3262], [-3.9804, 52.5417], [-4.1016, 52.9155], [-4.6382, 52.8911], [-4.1111, 53.2189], [-3.8093, 53.3028], [-3.3261, 53.3472], [-3.0646, 53.4269], [-3.0595, 53.5862], [-2.925, 53.7327], [-3.0269, 53.9061], [-2.8999, 53.9606], [-2.8465, 54.1353], [-3.1658, 54.1279], [-3.5693, 54.4676], [-3.592, 54.5643], [-3.4645, 54.7732], [-3.2679, 54.9065], [-3.4342, 54.9638], [-3.958, 54.7809], [-4.3037, 54.8358], [-4.5175, 54.7583], [-4.818, 54.8462], [-5.0324, 54.7614], [-5.1354, 54.8575], [-4.9651, 55.1496], [-4.7213, 55.4211], [-4.7241, 55.5984], [-4.8919, 55.6991], [-4.8442, 56.0511], [-5.2457, 55.9293], [-5.386, 55.7702], [-5.5565, 55.3895], [-5.7682, 55.3626], [-5.6228, 55.8132], [-5.6097, 56.0553], [-5.3919, 56.5148], [-5.9368, 56.6058], [-6.0347, 56.764], [-5.7307, 56.853], [-5.7362, 56.9607], [-5.562, 57.2328], [-5.8181, 57.4361], [-5.6787, 57.5717], [-5.7448, 57.6682], [-5.6084, 57.8813], [-5.1769, 57.9064], [-5.3937, 58.0435], [-5.3383, 58.2386], [-5.0082, 58.2626], [-5.0666, 58.5203], [-4.9245, 58.5884], [-4.7155, 58.5101], [-3.0531, 58.6348], [-3.1097, 58.5154]]]] }, \"properties\": { \"name\": \"United Kingdom\", \"id\": \"GB\" }, \"id\": \"GB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.1983, 31.3226], [34.2453, 31.2085], [34.6587, 30.1915], [34.9042, 29.4773], [34.7364, 29.2704], [34.6174, 28.7577], [34.4464, 28.3574], [34.3999, 28.016], [34.2201, 27.7643], [34.0452, 27.8287], [33.7602, 28.0475], [33.5941, 28.2557], [33.2475, 28.5678], [33.2035, 28.7777], [33.0757, 29.0729], [32.8706, 29.2864], [32.7215, 29.5217], [32.5657, 29.974], [32.3597, 29.6304], [32.3971, 29.5337], [32.5652, 29.3863], [32.6381, 29.1821], [32.6318, 28.9921], [32.7846, 28.7866], [32.8981, 28.5651], [33.2022, 28.2082], [33.5471, 27.8984], [33.5498, 27.6072], [33.6971, 27.3413], [33.8015, 27.268], [33.893, 27.0497], [33.959, 26.6488], [34.0496, 26.5507], [34.3292, 26.0243], [34.565, 25.6913], [35.194, 24.4751], [35.478, 24.1546], [35.6245, 24.0658], [35.5043, 23.7795], [35.5229, 23.4426], [35.5642, 23.2712], [35.6978, 22.9463], [35.9135, 22.7395], [36.2296, 22.6289], [36.4147, 22.3941], [36.8297, 22.0976], [36.8714, 21.9968], [35.5589, 21.9964], [34.2467, 21.9964], [33.2621, 21.996], [32.2781, 21.996], [31.4346, 21.996], [31.4862, 22.1478], [31.3583, 22.1886], [31.2607, 22.0022], [30.7106, 21.9951], [29.5645, 21.9951], [28.8006, 21.9951], [27.2723, 21.9955], [26.1261, 21.9955], [24.9805, 21.996], [24.9805, 23.5677], [24.9805, 24.915], [24.9805, 25.8134], [24.9805, 26.4872], [24.9805, 27.6099], [24.9805, 28.2837], [24.9805, 29.1817], [24.9162, 29.3761], [24.8038, 29.8861], [24.7114, 30.1316], [24.7265, 30.2506], [24.8775, 30.4574], [24.9738, 30.7766], [24.8775, 31.0611], [24.8526, 31.335], [25.1505, 31.655], [25.2255, 31.5338], [25.3822, 31.513], [25.8931, 31.6209], [26.4573, 31.5121], [27.2478, 31.378], [27.54, 31.2125], [27.8298, 31.1952], [27.9674, 31.0975], [28.5147, 31.0504], [29.0722, 30.8303], [29.2787, 30.8671], [29.5916, 31.0114], [29.9299, 31.2276], [30.2229, 31.2582], [30.395, 31.4575], [30.5708, 31.473], [30.7004, 31.4038], [31.0018, 31.4628], [31.052, 31.5916], [31.1941, 31.5876], [31.5244, 31.4584], [31.8888, 31.5414], [31.8759, 31.4136], [31.7712, 31.2924], [32.0086, 31.2205], [32.1019, 31.0926], [32.2066, 31.1188], [32.3233, 31.256], [32.6034, 31.0687], [33.1298, 31.1681], [33.1943, 31.0846], [33.378, 31.1308], [33.6665, 31.1304], [33.9027, 31.1809], [34.1983, 31.3226]]] }, \"properties\": { \"name\": \"Egypt\", \"id\": \"EG\" }, \"id\": \"EG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-80.1316, -2.973], [-80.273, -2.9961], [-80.2238, -2.7533], [-80.0808, -2.6689], [-79.909, -2.7257], [-80.0934, -2.8461], [-80.1316, -2.973]]], [[[-89.4189, -0.9111], [-89.5366, -0.9523], [-89.6085, -0.8885], [-89.4232, -0.7224], [-89.2594, -0.7283], [-89.4189, -0.9111]]], [[[-90.3349, -0.7718], [-90.5422, -0.6762], [-90.4696, -0.5173], [-90.2694, -0.4845], [-90.1927, -0.659], [-90.3349, -0.7718]]], [[[-91.426, -0.461], [-91.5263, -0.4783], [-91.6466, -0.3909], [-91.6466, -0.2844], [-91.4602, -0.2554], [-91.3994, -0.3225], [-91.426, -0.461]]], [[[-90.574, -0.3341], [-90.809, -0.3296], [-90.7804, -0.1605], [-90.6676, -0.1898], [-90.574, -0.3341]]], [[[-91.2722, 0.0251], [-91.2101, -0.0393], [-91.1763, -0.2231], [-90.9755, -0.417], [-90.9591, -0.5955], [-90.7997, -0.7522], [-90.9056, -0.9404], [-91.131, -1.0198], [-91.3716, -1.0171], [-91.4835, -0.9249], [-91.4582, -0.7996], [-91.1448, -0.623], [-91.2496, -0.3736], [-91.3692, -0.287], [-91.4289, -0.0233], [-91.491, 0.105], [-91.3614, 0.1258], [-91.2722, 0.0251]]], [[[-75.2845, -0.1063], [-75.4758, -0.1569], [-75.4248, -0.4091], [-75.2632, -0.5555], [-75.2837, -0.707], [-75.2497, -0.952], [-75.4204, -0.9622], [-75.5707, -1.5312], [-76.0897, -2.1331], [-76.679, -2.5629], [-77.8607, -2.9819], [-78.1834, -3.3502], [-78.2262, -3.4892], [-78.3472, -3.4311], [-78.4198, -3.7769], [-78.5505, -3.9868], [-78.6795, -4.3259], [-78.6861, -4.5625], [-78.8615, -4.6651], [-79.0763, -4.9905], [-79.3308, -4.9279], [-79.5019, -4.6705], [-79.5162, -4.539], [-79.6385, -4.4547], [-79.7974, -4.4764], [-80.1396, -4.2962], [-80.3835, -4.4635], [-80.4885, -4.3939], [-80.4537, -4.2052], [-80.51, -4.0694], [-80.4373, -3.9788], [-80.3032, -4.0051], [-80.1793, -3.8776], [-80.2734, -3.4249], [-80.3247, -3.388], [-80.0266, -3.2282], [-79.9216, -3.0902], [-79.8227, -2.7768], [-79.7299, -2.5793], [-79.8224, -2.3564], [-79.9256, -2.5487], [-80.1272, -2.5282], [-80.2848, -2.7066], [-80.4501, -2.6259], [-80.6849, -2.3968], [-80.839, -2.3489], [-80.9628, -2.189], [-80.7704, -2.0768], [-80.7631, -1.8228], [-80.8349, -1.6324], [-80.8014, -1.3834], [-80.9024, -1.0789], [-80.8414, -0.9746], [-80.554, -0.848], [-80.4554, -0.5853], [-80.4823, -0.3683], [-80.3214, -0.1658], [-80.1334, -0.006], [-80.0462, 0.1555], [-80.0251, 0.4104], [-80.0883, 0.7846], [-79.9035, 0.86], [-79.7412, 0.9798], [-79.6132, 0.971], [-79.4653, 1.0602], [-79.229, 1.1046], [-78.8996, 1.2063], [-78.827, 1.2959], [-78.8596, 1.4553], [-78.6816, 1.2835], [-78.5116, 1.1987], [-78.3121, 1.046], [-78.0369, 0.8986], [-77.8296, 0.8254], [-77.7029, 0.8378], [-77.6487, 0.7237], [-77.4676, 0.6363], [-77.4227, 0.425], [-77.2927, 0.3602], [-77.1141, 0.3549], [-76.9201, 0.2683], [-76.4946, 0.2355], [-76.4133, 0.3788], [-76.311, 0.4485], [-76.068, 0.3456], [-75.8798, 0.1512], [-75.6172, 0.0628], [-75.2845, -0.1063]]]] }, \"properties\": { \"name\": \"Ecuador\", \"id\": \"EC\" }, \"id\": \"EC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[8.5765, 36.9374], [8.6013, 36.8339], [8.4442, 36.7607], [8.3695, 36.6324], [8.2306, 36.5454], [8.3487, 36.3678], [8.2458, 35.8707], [8.3181, 35.6549], [8.3163, 35.4033], [8.3945, 35.204], [8.2768, 34.9793], [8.2458, 34.7339], [8.1237, 34.5638], [7.8382, 34.4103], [7.7485, 34.2545], [7.5138, 34.0804], [7.5, 33.8323], [7.7627, 33.2331], [8.0757, 33.0888], [8.2111, 32.9268], [8.3332, 32.5437], [9.0438, 32.0723], [9.3635, 30.8329], [9.5188, 30.2293], [9.3102, 30.1152], [9.6401, 29.6362], [9.7461, 29.369], [9.8424, 28.9669], [9.8158, 28.5602], [9.8584, 28.0431], [9.9162, 27.7857], [9.7474, 27.3306], [9.8371, 26.9161], [9.8944, 26.8482], [9.8593, 26.552], [9.4912, 26.3337], [9.438, 26.2453], [9.4482, 26.0673], [10.0009, 25.3322], [10.028, 25.0508], [10.1194, 24.7902], [10.2556, 24.591], [10.439, 24.4804], [10.6863, 24.5514], [11.5074, 24.3144], [11.7671, 23.8927], [11.9678, 23.518], [11.4501, 23.2127], [10.4146, 22.6019], [9.3785, 21.9915], [8.3429, 21.3807], [7.4818, 20.8729], [6.9895, 20.4707], [5.8367, 19.4791], [5.7484, 19.4342], [4.2276, 19.1426], [3.4007, 18.9886], [3.2559, 19.0134], [3.1059, 19.1502], [3.2559, 19.4107], [3.2018, 19.5603], [3.2035, 19.7898], [2.9927, 19.9168], [2.4063, 20.0637], [2.2195, 20.2479], [1.9287, 20.2728], [1.6855, 20.3784], [1.6104, 20.5555], [1.2905, 20.7135], [1.1657, 20.8174], [1.1457, 21.1024], [0.6721, 21.4118], [-0.3105, 22.0541], [-1.2931, 22.6964], [-2.2754, 23.3387], [-3.2579, 23.9811], [-3.9129, 24.4094], [-4.8227, 24.9958], [-5.5169, 25.4237], [-6.2387, 25.848], [-6.9908, 26.2906], [-7.9313, 26.8437], [-8.6834, 27.2858], [-8.6834, 27.6565], [-8.6834, 28.6206], [-8.6599, 28.7187], [-8.2652, 28.9806], [-7.9989, 29.1324], [-7.6851, 29.3495], [-7.4858, 29.3921], [-7.235, 29.5749], [-7.095, 29.6252], [-6.6353, 29.5687], [-6.5206, 29.6597], [-6.5008, 29.8093], [-6.2147, 29.8107], [-5.775, 29.8688], [-5.4488, 29.9567], [-5.1802, 30.1662], [-4.9683, 30.4654], [-4.7785, 30.5524], [-4.3228, 30.6989], [-3.9853, 30.9137], [-3.7021, 30.9444], [-3.6726, 31.1113], [-3.8335, 31.1978], [-3.789, 31.3616], [-3.8268, 31.6617], [-3.4397, 31.7048], [-3.0174, 31.8344], [-2.9308, 32.0426], [-2.4485, 32.13], [-1.2753, 32.0891], [-1.2402, 32.3378], [-1.0656, 32.4682], [-1.1111, 32.5521], [-1.3521, 32.7035], [-1.5099, 32.8775], [-1.5508, 33.0737], [-1.6793, 33.3187], [-1.6313, 33.5669], [-1.703, 33.7169], [-1.707, 34.1759], [-1.7918, 34.3681], [-1.7332, 34.4671], [-1.8497, 34.6074], [-1.7956, 34.7521], [-2.1318, 34.9709], [-2.2197, 35.1041], [-1.9132, 35.0943], [-1.6737, 35.1831], [-1.3359, 35.3642], [-1.2054, 35.4956], [-0.9175, 35.6683], [-0.4261, 35.8613], [-0.1891, 35.8192], [0.0479, 35.9004], [0.1516, 36.0633], [0.5149, 36.2617], [0.9717, 36.4438], [1.2571, 36.5196], [1.9745, 36.5676], [2.3428, 36.6102], [2.5932, 36.6009], [2.9728, 36.7847], [3.5205, 36.7953], [3.7788, 36.8961], [4.758, 36.8965], [4.9956, 36.8082], [5.1957, 36.6768], [5.4248, 36.6754], [5.7253, 36.7997], [6.0649, 36.8641], [6.2491, 36.9382], [6.3276, 37.0461], [6.4865, 37.0856], [6.5758, 37.003], [6.9274, 36.9196], [7.2385, 36.9684], [7.2043, 37.0923], [7.6078, 36.9999], [7.9106, 36.8566], [8.1272, 36.9103], [8.5765, 36.9374]]] }, \"properties\": { \"name\": \"Algeria\", \"id\": \"DZ\" }, \"id\": \"DZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.7683, 18.0391], [-71.7618, 18.3414], [-71.8726, 18.4164], [-72.0004, 18.5979], [-71.8666, 18.6144], [-71.7432, 18.7329], [-71.7336, 18.8563], [-71.8071, 18.9868], [-71.6571, 19.1306], [-71.7465, 19.286], [-71.707, 19.4218], [-71.7791, 19.7184], [-71.5579, 19.8954], [-71.236, 19.848], [-70.9542, 19.9141], [-70.6361, 19.7756], [-70.4364, 19.7712], [-70.3048, 19.6762], [-70.1294, 19.6362], [-69.9567, 19.6717], [-69.8913, 19.5896], [-69.8234, 19.3672], [-69.7395, 19.2993], [-69.3251, 19.3277], [-69.3229, 19.2012], [-69.606, 19.2065], [-69.6236, 19.1178], [-68.9014, 18.9886], [-68.6848, 18.9047], [-68.3814, 18.6712], [-68.3594, 18.538], [-68.5638, 18.3556], [-68.6588, 18.222], [-68.9349, 18.408], [-69.2745, 18.4399], [-69.5195, 18.4155], [-69.7708, 18.4435], [-70.0182, 18.3738], [-70.1831, 18.2517], [-70.4799, 18.2171], [-70.6447, 18.3361], [-70.7589, 18.3454], [-71.0278, 18.273], [-71.106, 18.0702], [-71.3958, 17.6462], [-71.6317, 17.7736], [-71.6737, 17.9543], [-71.7683, 18.0391]]] }, \"properties\": { \"name\": \"Dominican Republic\", \"id\": \"DO\" }, \"id\": \"DO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.7399, 54.8255], [9.3422, 54.8062], [8.9032, 54.897], [8.6701, 54.9034], [8.616, 55.4181], [8.1321, 55.5999], [8.2022, 55.9823], [8.1214, 56.1399], [8.1641, 56.6069], [8.5529, 56.5603], [9.0669, 56.794], [9.2548, 57.0117], [8.9928, 57.0161], [8.7722, 56.7252], [8.4685, 56.6646], [8.2684, 56.7541], [8.284, 56.8524], [8.6187, 57.1114], [9.2987, 57.1464], [9.5543, 57.2325], [9.9623, 57.581], [10.2593, 57.617], [10.5371, 57.4485], [10.5242, 57.2432], [10.2961, 56.999], [10.2827, 56.6204], [10.49, 56.5205], [10.846, 56.5217], [10.9264, 56.4433], [10.8562, 56.2955], [10.5389, 56.2003], [10.3187, 56.2129], [10.1829, 55.8651], [9.5912, 55.4931], [9.6711, 55.2663], [9.4535, 55.0395], [9.6453, 55.0228], [9.7399, 54.8255]]], [[[12.5688, 55.785], [12.571, 55.6849], [12.3206, 55.5879], [12.215, 55.4665], [12.413, 55.2861], [12.0899, 55.1882], [12.0504, 54.8153], [11.8625, 54.7727], [11.741, 54.9154], [11.6539, 55.1869], [11.2864, 55.2044], [11.1705, 55.3287], [11.1896, 55.4656], [10.9788, 55.7215], [11.3224, 55.7526], [11.4746, 55.9435], [11.6956, 55.908], [11.6908, 55.7291], [11.8195, 55.6976], [11.9345, 55.896], [11.8666, 55.9681], [12.219, 56.1186], [12.5785, 56.064], [12.5688, 55.785]]], [[[10.6449, 55.6099], [10.8194, 55.3218], [10.7852, 55.1334], [10.443, 55.0488], [9.9889, 55.1631], [9.8589, 55.3573], [9.8606, 55.5156], [10.2864, 55.6108], [10.5051, 55.5579], [10.6449, 55.6099]]], [[[15.0879, 55.022], [14.6844, 55.1023], [14.7651, 55.2967], [15.1328, 55.1445], [15.0879, 55.022]]], [[[11.3614, 54.8917], [11.7396, 54.8073], [11.7658, 54.6795], [11.4573, 54.6289], [11.0355, 54.7732], [11.0587, 54.9405], [11.3614, 54.8917]]]] }, \"properties\": { \"name\": \"Denmark\", \"id\": \"DK\" }, \"id\": \"DK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.2817, 15.2492], [-61.3754, 15.2275], [-61.481, 15.5253], [-61.3201, 15.5853], [-61.2511, 15.373], [-61.2817, 15.2492]]] }, \"properties\": { \"name\": \"Dominica\", \"id\": \"DM\" }, \"id\": \"DM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[43.2462, 11.4996], [42.9226, 10.9994], [42.5577, 11.0806], [42.3082, 11.0052], [41.9576, 10.9412], [41.7982, 10.9803], [41.7667, 11.5889], [41.8155, 11.7238], [41.9958, 11.9125], [42.3784, 12.4664], [42.4795, 12.5135], [42.6701, 12.3763], [42.7672, 12.423], [42.8836, 12.6214], [43.1165, 12.7084], [43.2985, 12.4638], [43.41, 12.1899], [43.2719, 11.9697], [43.0482, 11.8291], [42.7992, 11.7394], [42.6398, 11.5601], [42.9115, 11.5867], [43.1618, 11.5658], [43.2462, 11.4996]]] }, \"properties\": { \"name\": \"Djibouti\", \"id\": \"DJ\" }, \"id\": \"DJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[9.7399, 54.8255], [10.0222, 54.674], [10.0289, 54.5814], [10.2126, 54.409], [10.3604, 54.4383], [10.7315, 54.3162], [11.0134, 54.3792], [11.0086, 54.1812], [10.8105, 54.0752], [11.3996, 53.9446], [11.7964, 54.1455], [12.1112, 54.1684], [12.5755, 54.4673], [13.0287, 54.411], [13.1476, 54.2827], [13.4482, 54.1408], [13.7243, 54.1533], [13.8654, 53.8534], [14.2587, 53.7296], [14.4145, 53.2834], [14.3688, 53.1054], [14.1286, 52.8782], [14.5139, 52.6456], [14.6196, 52.5284], [14.5548, 52.3597], [14.7527, 52.0819], [14.6018, 51.8324], [14.7385, 51.6271], [14.7248, 51.5239], [14.9059, 51.4633], [15.0164, 51.2526], [14.8096, 50.8589], [14.7234, 50.8148], [14.5073, 51.0098], [14.3693, 50.8987], [13.8987, 50.7613], [13.5267, 50.6929], [13.4726, 50.617], [12.4526, 50.3498], [12.2771, 50.1813], [12.2763, 50.0424], [12.4574, 49.9556], [12.4978, 49.8531], [12.3903, 49.7396], [12.6319, 49.4613], [12.9169, 49.3303], [13.1406, 49.1584], [13.5476, 48.9597], [13.8148, 48.7669], [13.7855, 48.5873], [13.6749, 48.5229], [13.4867, 48.582], [13.4095, 48.3942], [12.8143, 48.1607], [12.7601, 48.076], [12.9537, 47.8908], [12.8978, 47.7217], [13.0336, 47.6986], [13.0145, 47.478], [12.7828, 47.5641], [12.686, 47.6693], [12.4827, 47.6373], [12.1969, 47.7093], [12.1857, 47.6196], [11.717, 47.5837], [11.2979, 47.4248], [10.981, 47.3981], [10.8731, 47.5202], [10.4306, 47.541], [10.313, 47.3133], [10.0963, 47.3795], [10.0342, 47.4736], [9.7488, 47.5757], [9.5242, 47.5242], [9.1828, 47.6707], [8.8809, 47.6564], [8.6177, 47.7661], [8.1982, 47.6068], [7.927, 47.5637], [7.6154, 47.5926], [7.5293, 47.6738], [7.5844, 48.0644], [7.7055, 48.2801], [7.8378, 48.6361], [8.1401, 48.8865], [8.1348, 48.9735], [7.611, 49.0618], [7.4508, 49.1522], [7.0219, 49.1235], [6.891, 49.2077], [6.7356, 49.1606], [6.4582, 49.4429], [6.344, 49.4527], [6.4875, 49.7985], [6.2562, 49.8722], [6.1381, 49.9742], [6.1164, 50.121], [6.1749, 50.2326], [6.3646, 50.3162], [6.2358, 50.5968], [5.9939, 50.7504], [6.0485, 50.9049], [5.8949, 50.9843], [6.1302, 51.1475], [6.076, 51.224], [6.1932, 51.4888], [5.9487, 51.7625], [6.1665, 51.8808], [6.3556, 51.8246], [6.7418, 51.9109], [6.7489, 52.0987], [6.9771, 52.2055], [7.0352, 52.3802], [6.7489, 52.4641], [6.7485, 52.634], [7.0131, 52.6336], [7.1897, 52.9996], [7.1973, 53.2824], [7.0535, 53.3758], [7.1072, 53.5569], [7.2852, 53.6814], [8.0092, 53.6907], [8.3017, 53.5842], [8.5387, 53.5569], [8.5285, 53.7811], [8.619, 53.8749], [8.8978, 53.8357], [8.9067, 54.2607], [8.648, 54.3977], [8.9519, 54.4676], [8.9573, 54.5383], [8.6821, 54.7918], [8.6701, 54.9034], [8.9032, 54.897], [9.3422, 54.8062], [9.7399, 54.8255]]], [[[13.7092, 54.3828], [13.4819, 54.3375], [13.3643, 54.2458], [13.1898, 54.3257], [13.1765, 54.5443], [13.4229, 54.6992], [13.6705, 54.5355], [13.7092, 54.3828]]], [[[14.2139, 53.8707], [13.9257, 53.8789], [13.9217, 53.9966], [14.2112, 53.9504], [14.2139, 53.8707]]]] }, \"properties\": { \"name\": \"Germany\", \"id\": \"DE\" }, \"id\": \"DE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[14.8096, 50.8589], [14.9826, 50.8867], [14.9938, 51.0143], [15.2587, 50.9586], [15.3542, 50.8118], [15.7306, 50.7398], [16.0072, 50.6117], [16.2824, 50.6556], [16.4196, 50.5737], [16.2105, 50.4237], [16.6793, 50.0975], [16.9936, 50.2596], [16.8692, 50.4146], [17.152, 50.3784], [17.5892, 50.1573], [17.8746, 49.9722], [18.0282, 50.0353], [18.3053, 49.9141], [18.5623, 49.8793], [18.5946, 49.7578], [18.8068, 49.6138], [18.8321, 49.5108], [18.5965, 49.4915], [18.3647, 49.3361], [18.161, 49.2573], [18.0859, 49.0652], [17.7583, 48.888], [17.4827, 48.8277], [17.1883, 48.861], [17.0632, 48.7809], [16.9531, 48.5989], [16.8839, 48.7036], [16.4777, 48.8001], [16.3672, 48.7389], [16.0574, 48.7548], [15.8252, 48.8645], [15.7009, 48.8605], [15.3108, 48.9739], [14.9721, 48.9839], [14.9228, 48.7713], [14.822, 48.7739], [14.6915, 48.5993], [14.3674, 48.5762], [14.0491, 48.6024], [13.8148, 48.7669], [13.5476, 48.9597], [13.1406, 49.1584], [12.9169, 49.3303], [12.6319, 49.4613], [12.3903, 49.7396], [12.4978, 49.8531], [12.4574, 49.9556], [12.2763, 50.0424], [12.2771, 50.1813], [12.4526, 50.3498], [13.4726, 50.617], [13.5267, 50.6929], [13.8987, 50.7613], [14.3693, 50.8987], [14.5073, 51.0098], [14.7234, 50.8148], [14.8096, 50.8589]]] }, \"properties\": { \"name\": \"Czechia\", \"id\": \"CZ\" }, \"id\": \"CZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[34.4633, 35.5937], [33.9417, 35.2919], [33.9081, 35.2026], [34.0501, 34.9882], [33.6994, 34.97], [33.5143, 34.8067], [33.2968, 34.7179], [33.1156, 34.6957], [32.9416, 34.5759], [32.8671, 34.6611], [32.6931, 34.6496], [32.449, 34.7294], [32.3171, 34.9531], [32.3908, 35.0499], [32.6523, 35.1827], [32.88, 35.1804], [32.9416, 35.3904], [33.4588, 35.3358], [34.0633, 35.4739], [34.4109, 35.6292], [34.4633, 35.5937]]] }, \"properties\": { \"name\": \"Cyprus\", \"id\": \"CY\" }, \"id\": \"CY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-81.3696, 19.349], [-81.1306, 19.3468], [-81.3037, 19.2718], [-81.3696, 19.349]]] }, \"properties\": { \"name\": \"Cayman Islands\", \"id\": \"KY\" }, \"id\": \"KY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[105.7254, -10.4929], [105.6969, -10.5639], [105.5842, -10.5125], [105.7053, -10.4308], [105.7254, -10.4929]]] }, \"properties\": { \"name\": \"Christmas Island\", \"id\": \"CX\" }, \"id\": \"CX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-68.7511, 12.0599], [-68.8033, 12.0457], [-68.995, 12.142], [-69.1539, 12.2982], [-69.0767, 12.3422], [-69.0133, 12.2312], [-68.8274, 12.1584], [-68.7511, 12.0599]]] }, \"properties\": { \"name\": \"Curaçao\", \"id\": \"CW\" }, \"id\": \"CW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-82.5617, 21.5716], [-82.8531, 21.4437], [-83.0673, 21.4695], [-82.9736, 21.5924], [-83.0826, 21.7913], [-82.9912, 21.9427], [-82.7146, 21.8903], [-82.5617, 21.5716]]], [[[-81.8375, 23.163], [-81.5754, 23.1163], [-81.2715, 23.1287], [-81.1785, 23.0595], [-80.6501, 23.103], [-80.3649, 22.9432], [-80.0753, 22.9423], [-79.6766, 22.743], [-79.5492, 22.5779], [-79.3584, 22.4487], [-79.183, 22.3879], [-78.9018, 22.3959], [-78.6866, 22.367], [-78.1432, 22.1096], [-77.8651, 21.9005], [-77.5451, 21.7744], [-77.4973, 21.8717], [-77.1813, 21.5978], [-77.0987, 21.5889], [-76.6475, 21.2844], [-76.2593, 21.2276], [-76.0736, 21.1335], [-75.7229, 21.1108], [-75.5957, 20.9945], [-75.7402, 20.8121], [-75.6428, 20.7335], [-75.2133, 20.714], [-74.8826, 20.6505], [-74.7321, 20.5732], [-74.513, 20.3846], [-74.1675, 20.2923], [-74.1537, 20.1684], [-74.2529, 20.0796], [-74.6347, 20.0584], [-75.1166, 19.9012], [-75.552, 19.891], [-75.7651, 19.9602], [-76.1586, 19.9895], [-76.7798, 19.9403], [-76.9995, 19.8928], [-77.7151, 19.8555], [-77.5537, 20.0823], [-77.2134, 20.3003], [-77.1079, 20.4916], [-77.2297, 20.6438], [-77.4669, 20.6895], [-77.9974, 20.7153], [-78.1164, 20.7619], [-78.4908, 21.0536], [-78.5374, 21.2968], [-78.6366, 21.5157], [-78.823, 21.6191], [-79.1892, 21.5529], [-79.2745, 21.5627], [-79.9103, 21.7425], [-80.2313, 21.8721], [-80.4991, 22.0634], [-80.9619, 22.0527], [-81.2225, 22.1429], [-81.3552, 22.1042], [-81.4411, 22.1837], [-81.8162, 22.2002], [-82.0777, 22.3875], [-81.7572, 22.4669], [-81.7456, 22.6329], [-81.9034, 22.6791], [-82.7381, 22.6893], [-83.0094, 22.514], [-83.3796, 22.2228], [-83.4859, 22.1873], [-83.9007, 22.1699], [-84.031, 21.9431], [-84.2407, 21.8983], [-84.4489, 21.7918], [-84.5328, 22.031], [-84.3264, 22.0745], [-84.383, 22.2556], [-84.3612, 22.379], [-84.045, 22.6662], [-83.2577, 22.9676], [-82.6658, 23.0436], [-82.3507, 23.1541], [-82.1014, 23.1904], [-81.8375, 23.163]]]] }, \"properties\": { \"name\": \"Cuba\", \"id\": \"CU\" }, \"id\": \"CU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-83.6419, 10.9173], [-83.4482, 10.4658], [-83.1246, 10.0415], [-83.0285, 9.9913], [-82.7783, 9.6695], [-82.5635, 9.5767], [-82.644, 9.5057], [-82.8009, 9.5918], [-82.9399, 9.4493], [-82.9403, 9.06], [-82.7411, 8.9518], [-82.9171, 8.7405], [-82.8558, 8.6352], [-82.8615, 8.4537], [-82.9976, 8.3676], [-82.8793, 8.0706], [-83.1232, 8.3529], [-83.1625, 8.5882], [-83.3913, 8.7178], [-83.4217, 8.6192], [-83.2977, 8.507], [-83.2915, 8.4062], [-83.5438, 8.4457], [-83.7341, 8.6144], [-83.6138, 8.8039], [-83.6373, 9.0352], [-83.8956, 9.2762], [-84.2223, 9.4626], [-84.4826, 9.5262], [-84.6589, 9.6469], [-84.6431, 9.7894], [-84.715, 9.8995], [-85.0251, 10.1156], [-85.1984, 10.1951], [-85.1607, 10.0175], [-84.9627, 9.9336], [-84.8864, 9.8209], [-85.1145, 9.5816], [-85.3145, 9.8111], [-85.6248, 9.9026], [-85.7966, 10.1329], [-85.8305, 10.3979], [-85.6634, 10.6354], [-85.6672, 10.7451], [-85.908, 10.8978], [-85.7522, 10.9852], [-85.7444, 11.062], [-85.6215, 11.1845], [-84.9093, 10.9452], [-84.7013, 11.0522], [-84.3484, 10.9799], [-84.1684, 10.7806], [-83.8113, 10.7433], [-83.659, 10.837], [-83.6419, 10.9173]]] }, \"properties\": { \"name\": \"Costa Rica\", \"id\": \"CR\" }, \"id\": \"CR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-24.3082, 14.8564], [-24.4922, 14.8741], [-24.4969, 14.9802], [-24.3295, 15.0193], [-24.3082, 14.8564]]], [[[-23.4442, 15.0078], [-23.5048, 14.9158], [-23.7054, 14.9611], [-23.7851, 15.077], [-23.7007, 15.2714], [-23.5351, 15.1391], [-23.4442, 15.0078]]], [[[-22.9177, 16.2374], [-22.7495, 16.2214], [-22.7102, 16.0434], [-22.8205, 15.9861], [-22.9592, 16.0451], [-22.9177, 16.2374]]], [[[-25.1698, 16.9467], [-25.3083, 16.936], [-25.3371, 17.091], [-25.1134, 17.1935], [-24.9796, 17.0949], [-25.1698, 16.9467]]]] }, \"properties\": { \"name\": \"Cape Verde\", \"id\": \"CV\" }, \"id\": \"CV\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[43.4659, -11.9014], [43.3035, -11.8442], [43.2267, -11.7519], [43.256, -11.4322], [43.3931, -11.4087], [43.3793, -11.6142], [43.4917, -11.8619], [43.4659, -11.9014]]] }, \"properties\": { \"name\": \"Comoros\", \"id\": \"KM\" }, \"id\": \"KM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-71.3197, 11.8619], [-71.5361, 11.774], [-71.958, 11.6666], [-72.2486, 11.1965], [-72.4461, 11.1144], [-72.6902, 10.8361], [-72.8693, 10.4911], [-72.9403, 10.1959], [-73.0065, 9.7894], [-73.0642, 9.6682], [-73.3563, 9.2269], [-73.1932, 9.1941], [-73.0584, 9.2598], [-72.9601, 9.135], [-72.7963, 9.1088], [-72.6653, 8.6277], [-72.4166, 8.3818], [-72.3575, 8.0875], [-72.4461, 7.9663], [-72.479, 7.6134], [-72.443, 7.4549], [-72.2077, 7.3701], [-72.0843, 7.0967], [-71.8928, 6.9902], [-71.6209, 7.0328], [-71.2178, 6.9853], [-71.0134, 6.9946], [-70.8108, 7.0776], [-70.6552, 7.083], [-70.3875, 6.9724], [-70.095, 6.9378], [-69.4392, 6.1348], [-69.2683, 6.0997], [-69.09, 6.1845], [-68.9373, 6.1983], [-68.7365, 6.157], [-68.4717, 6.1565], [-68.1432, 6.1974], [-67.8591, 6.2897], [-67.5682, 6.2418], [-67.482, 6.18], [-67.4394, 6.0256], [-67.6314, 5.7095], [-67.6423, 5.5586], [-67.7883, 5.3753], [-67.825, 5.2705], [-67.8143, 4.9309], [-67.8553, 4.5071], [-67.7954, 4.3805], [-67.7832, 4.1981], [-67.6616, 3.8643], [-67.4987, 3.6912], [-67.3111, 3.4159], [-67.3535, 3.3227], [-67.8347, 2.8926], [-67.6187, 2.7936], [-67.2108, 2.3901], [-67.2152, 2.2756], [-67.1138, 2.0505], [-66.8845, 1.3581], [-66.8761, 1.2231], [-67.0936, 1.2098], [-67.0901, 1.6155], [-67.1191, 1.7034], [-67.352, 2.086], [-67.4995, 2.1078], [-67.6092, 2.035], [-67.8152, 1.79], [-67.9899, 1.7527], [-68.1304, 1.9555], [-68.256, 1.8454], [-68.1765, 1.7198], [-69.3198, 1.7212], [-69.5812, 1.7709], [-69.8486, 1.7088], [-69.8522, 1.0594], [-69.3615, 1.0642], [-69.2587, 1.0154], [-69.1633, 0.864], [-69.1741, 0.6354], [-69.3586, 0.6514], [-69.4722, 0.7299], [-69.8071, 0.6074], [-70.0539, 0.5786], [-70.0706, -0.1387], [-69.9227, -0.3177], [-69.6675, -0.4823], [-69.592, -0.6395], [-69.6207, -0.7211], [-69.5435, -0.9173], [-69.4487, -0.9985], [-69.4003, -1.1948], [-69.6691, -2.6676], [-69.8497, -3.6597], [-69.9658, -4.2358], [-70.1675, -4.0503], [-70.2404, -3.8825], [-70.3396, -3.8142], [-70.5295, -3.8666], [-70.7351, -3.7817], [-70.0741, -2.7501], [-70.0959, -2.6582], [-70.5759, -2.4181], [-70.9146, -2.2183], [-71.1133, -2.2454], [-71.1963, -2.3129], [-71.397, -2.3342], [-71.5594, -2.2242], [-71.7525, -2.1527], [-71.9842, -2.3267], [-72.3957, -2.4288], [-72.6254, -2.3516], [-72.8871, -2.4084], [-73.1545, -2.2783], [-73.1265, -2.0812], [-73.1969, -1.8304], [-73.4963, -1.6932], [-73.4943, -1.5365], [-73.6644, -1.2489], [-73.8632, -1.1966], [-74.0545, -1.0287], [-74.2465, -0.9706], [-74.3344, -0.8507], [-74.4178, -0.5809], [-74.6165, -0.37], [-74.7554, -0.2986], [-74.8018, -0.2], [-74.9454, -0.188], [-75.1383, -0.0504], [-75.2845, -0.1063], [-75.6172, 0.0628], [-75.8798, 0.1512], [-76.068, 0.3456], [-76.311, 0.4485], [-76.4133, 0.3788], [-76.4946, 0.2355], [-76.9201, 0.2683], [-77.1141, 0.3549], [-77.2927, 0.3602], [-77.4227, 0.425], [-77.4676, 0.6363], [-77.6487, 0.7237], [-77.7029, 0.8378], [-77.8296, 0.8254], [-78.0369, 0.8986], [-78.3121, 1.046], [-78.5116, 1.1987], [-78.6816, 1.2835], [-78.8596, 1.4553], [-79.0255, 1.6235], [-78.9578, 1.7522], [-78.7931, 1.8486], [-78.5769, 1.774], [-78.5505, 1.9236], [-78.6286, 2.0563], [-78.6171, 2.3066], [-78.5347, 2.4238], [-78.2961, 2.5104], [-78.1201, 2.4882], [-77.9324, 2.6294], [-77.8744, 2.7257], [-77.67, 2.8789], [-77.6938, 3.04], [-77.559, 3.0759], [-77.4172, 3.3418], [-77.2427, 3.5855], [-77.1666, 3.8621], [-77.3582, 3.9446], [-77.4272, 4.0605], [-77.2863, 4.7219], [-77.3395, 4.8387], [-77.3593, 5.2151], [-77.4017, 5.4162], [-77.5344, 5.5373], [-77.3247, 5.6758], [-77.2492, 5.7801], [-77.3446, 5.9954], [-77.4694, 6.177], [-77.3984, 6.2751], [-77.3599, 6.5045], [-77.439, 6.6906], [-77.526, 6.6932], [-77.8036, 7.1371], [-77.901, 7.2295], [-77.8283, 7.443], [-77.744, 7.5371], [-77.5866, 7.5433], [-77.3508, 7.7057], [-77.3455, 7.8367], [-77.2159, 7.9326], [-77.2124, 8.0338], [-77.4072, 8.4271], [-77.4785, 8.4985], [-77.3742, 8.6583], [-77.2616, 8.4936], [-77.13, 8.4004], [-76.8519, 8.0906], [-76.7423, 8.0022], [-76.772, 8.3107], [-76.8879, 8.6197], [-76.6894, 8.6947], [-76.2769, 8.989], [-76.1355, 9.2656], [-75.9051, 9.4307], [-75.6394, 9.4502], [-75.6037, 9.5386], [-75.68, 9.7299], [-75.5926, 9.9927], [-75.5959, 10.1258], [-75.671, 10.1964], [-75.5538, 10.3278], [-75.4459, 10.611], [-75.2806, 10.7273], [-74.8446, 11.1095], [-74.4543, 10.9892], [-74.5161, 10.8627], [-74.3501, 10.8139], [-74.2192, 11.1055], [-74.2001, 11.2657], [-74.0592, 11.3407], [-73.7957, 11.2755], [-73.3134, 11.2959], [-72.7219, 11.7123], [-72.447, 11.8015], [-72.2749, 11.8894], [-72.1653, 12.0603], [-72.1358, 12.1886], [-71.97, 12.2383], [-71.9191, 12.3089], [-71.7145, 12.4199], [-71.4939, 12.4323], [-71.2622, 12.3351], [-71.155, 12.1642], [-71.1373, 12.0461], [-71.3197, 11.8619]]] }, \"properties\": { \"name\": \"Colombia\", \"id\": \"CO\" }, \"id\": \"CO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-159.7406, -21.2493], [-159.8395, -21.2382], [-159.832, -21.2005], [-159.7683, -21.1885], [-159.7406, -21.2493]]] }, \"properties\": { \"name\": \"Cook Islands\", \"id\": \"CK\" }, \"id\": \"CK\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[18.6102, 3.4785], [18.6221, 3.3041], [18.4908, 2.9246], [18.2115, 2.415], [18.0722, 2.0133], [18.058, 1.5347], [17.9026, 1.1179], [17.8857, 0.8569], [17.9252, 0.5373], [17.8875, 0.2341], [17.773, -0.0526], [17.7241, -0.2777], [17.753, -0.5489], [17.5426, -0.7748], [17.2789, -0.9995], [17.1076, -1.0647], [16.8799, -1.2259], [16.7801, -1.3763], [16.5408, -1.8402], [16.2153, -2.178], [16.1914, -2.2791], [16.2171, -3.0302], [16.1465, -3.4639], [15.9899, -3.7662], [15.8722, -3.9344], [15.6001, -4.0307], [15.3947, -4.2452], [15.2672, -4.3078], [15.106, -4.4609], [14.7794, -4.8458], [14.6338, -4.8853], [14.4105, -4.8311], [14.3652, -4.5856], [14.4496, -4.4493], [14.3581, -4.2993], [13.9408, -4.4848], [13.7171, -4.4543], [13.6851, -4.6886], [13.4149, -4.8373], [13.0726, -4.635], [12.8809, -4.4454], [12.7983, -4.4307], [12.6416, -4.531], [12.3846, -4.6189], [12.3078, -4.7654], [12.2044, -4.7787], [12.0184, -5.0042], [11.7808, -4.6767], [11.7773, -4.5657], [11.6681, -4.4342], [11.3938, -4.2003], [11.3645, -4.1307], [11.1301, -3.9162], [11.2882, -3.6411], [11.5043, -3.5203], [11.6859, -3.6819], [11.8493, -3.6965], [11.8329, -3.5314], [11.934, -3.3188], [11.7152, -3.1767], [11.76, -2.9832], [11.6393, -2.8554], [11.5377, -2.8367], [11.6033, -2.5957], [11.5754, -2.3973], [11.9504, -2.3449], [12.0646, -2.4127], [12.4462, -2.3298], [12.4787, -2.1118], [12.4321, -1.929], [12.5906, -1.8268], [12.7933, -1.9316], [12.9919, -2.3134], [13.3571, -2.4048], [13.4651, -2.3955], [13.7842, -2.1638], [13.8876, -2.3746], [13.8867, -2.4652], [14.0873, -2.467], [14.1996, -2.3541], [14.1628, -2.2175], [14.2516, -2.0013], [14.3838, -1.8898], [14.4029, -1.5934], [14.4558, -1.4131], [14.4105, -0.9719], [14.4806, -0.6181], [14.3639, -0.4686], [14.2067, -0.4272], [14.0696, -0.2701], [13.8601, -0.2035], [13.8845, 0.1906], [13.9498, 0.354], [14.0873, 0.5364], [14.2312, 0.5511], [14.3244, 0.6243], [14.4344, 0.8116], [14.3865, 1.0043], [14.1811, 1.3701], [13.8512, 1.4189], [13.2742, 1.2409], [13.1627, 1.6479], [13.2094, 1.9205], [13.2937, 2.1615], [14.4842, 2.1549], [14.5787, 2.1992], [14.9024, 2.0124], [15.2033, 2.0243], [15.3387, 1.9449], [15.6001, 1.9502], [15.7418, 1.9152], [16.0596, 1.6763], [16.1359, 1.7243], [16.08, 2.1069], [16.1835, 2.2703], [16.4683, 2.8318], [16.4964, 3.2086], [16.5705, 3.463], [16.6734, 3.5354], [17.0024, 3.5567], [17.2985, 3.617], [17.4378, 3.6845], [17.8805, 3.554], [18.1112, 3.5509], [18.161, 3.4998], [18.4744, 3.6228], [18.6102, 3.4785]]] }, \"properties\": { \"name\": \"Republic of Congo\", \"id\": \"CG\" }, \"id\": \"CG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[27.4032, 5.1094], [27.4911, 4.9674], [27.6642, 4.8462], [27.7881, 4.6446], [27.9807, 4.5319], [28.192, 4.3503], [28.4277, 4.3241], [28.7269, 4.5048], [28.9396, 4.4871], [29.1513, 4.3881], [29.3847, 4.4986], [29.4696, 4.6118], [29.6768, 4.5869], [29.8704, 4.3272], [30.1949, 3.9819], [30.5082, 3.8359], [30.5593, 3.653], [30.7572, 3.6241], [30.8385, 3.4905], [30.9064, 3.4088], [30.8278, 3.2828], [30.7542, 3.0418], [30.8465, 2.8469], [30.7697, 2.6778], [30.7284, 2.4554], [30.9619, 2.4034], [31.1763, 2.2703], [31.2739, 2.1464], [31.2527, 2.0448], [30.9424, 1.683], [30.4781, 1.2391], [30.321, 1.1854], [30.1829, 0.9736], [29.9428, 0.8192], [29.9344, 0.4991], [29.778, 0.1662], [29.7177, 0.0983], [29.6333, -0.4415], [29.648, -0.5352], [29.5619, -0.9772], [29.5769, -1.3878], [29.3515, -1.5174], [29.1295, -1.8602], [29.1481, -2.1318], [29.1064, -2.2334], [28.8765, -2.4003], [28.9217, -2.6823], [29.0146, -2.7205], [29.0168, -2.7995], [29.2246, -3.0533], [29.2099, -3.3631], [29.2231, -3.911], [29.3315, -4.0955], [29.4034, -4.4493], [29.3257, -4.8356], [29.3426, -4.9829], [29.5943, -5.651], [29.5965, -5.7758], [29.4801, -6.0252], [29.5406, -6.3137], [29.7097, -6.617], [30.1065, -6.9152], [30.3133, -7.2037], [30.4066, -7.4607], [30.7209, -8.1044], [30.751, -8.1936], [30.0515, -8.3001], [28.9724, -8.4648], [28.9178, -8.7005], [28.7935, -8.891], [28.6164, -9.072], [28.4006, -9.2247], [28.5405, -9.5102], [28.6302, -9.8312], [28.6076, -10.3975], [28.639, -10.6692], [28.544, -10.8023], [28.3571, -11.4828], [28.4823, -11.8122], [28.8499, -12.1207], [29.0642, -12.3488], [29.4274, -12.4314], [29.5051, -12.3862], [29.5596, -12.2023], [29.7954, -12.1554], [29.7954, -13.393], [29.6519, -13.4142], [29.5543, -13.2491], [29.2019, -13.3982], [29.0141, -13.3689], [28.773, -12.9819], [28.6727, -12.8612], [28.5507, -12.8363], [28.4743, -12.6232], [28.3576, -12.4821], [27.8573, -12.285], [27.6443, -12.2668], [27.5333, -12.1953], [27.4236, -11.9445], [27.2381, -11.7834], [27.1964, -11.6049], [27.0459, -11.6161], [26.9496, -11.8988], [26.8905, -11.9436], [26.5963, -11.972], [26.0258, -11.8904], [25.6188, -11.7443], [25.5118, -11.7536], [25.3493, -11.6231], [25.2827, -11.4051], [25.3192, -11.237], [25.1846, -11.2432], [24.6684, -11.3527], [24.5184, -11.4384], [24.335, -11.3715], [24.3963, -11.2551], [24.3199, -11.0718], [24.1366, -11.026], [24.0785, -10.8916], [23.9666, -10.8716], [23.8339, -11.0136], [23.4002, -10.9763], [23.1569, -11.0749], [22.8148, -11.0803], [22.5613, -11.0558], [22.279, -11.1943], [22.1777, -10.8924], [22.3069, -10.6913], [22.2745, -10.259], [22.1976, -10.0406], [22.0889, -9.8626], [21.9487, -9.7255], [21.8133, -9.4689], [21.8293, -9.1684], [21.9056, -8.6934], [21.8959, -8.341], [21.8008, -8.1119], [21.78, -7.8656], [21.8417, -7.4207], [21.7512, -7.3053], [21.1905, -7.2849], [20.6076, -7.2779], [20.5371, -7.1216], [20.5989, -6.9351], [20.482, -6.9161], [19.8752, -6.9862], [19.6604, -7.0373], [19.5276, -7.1446], [19.4797, -7.4723], [19.3714, -7.6551], [19.3408, -7.9667], [19.1428, -8.0014], [18.8982, -7.9982], [18.6532, -7.9361], [18.1916, -8.0236], [18.0087, -8.1075], [17.9133, -8.0675], [17.5795, -8.099], [17.5359, -8.0759], [17.1551, -7.4612], [16.9847, -7.2574], [16.9656, -7.0621], [16.8129, -6.7727], [16.7094, -6.4718], [16.7178, -6.2414], [16.5373, -5.9657], [16.3153, -5.8658], [15.7271, -5.8637], [14.3986, -5.8925], [13.9786, -5.8573], [13.0681, -5.865], [12.7916, -5.8779], [12.6806, -5.9608], [12.4117, -5.9866], [12.2137, -5.7589], [12.5035, -5.6959], [12.5222, -5.1489], [12.5737, -4.9967], [12.8298, -4.7366], [13.0726, -4.635], [13.4149, -4.8373], [13.6851, -4.6886], [13.7171, -4.4543], [13.9408, -4.4848], [14.3581, -4.2993], [14.4496, -4.4493], [14.3652, -4.5856], [14.4105, -4.8311], [14.6338, -4.8853], [14.7794, -4.8458], [15.106, -4.4609], [15.2672, -4.3078], [15.3947, -4.2452], [15.6001, -4.0307], [15.8722, -3.9344], [15.9899, -3.7662], [16.1465, -3.4639], [16.2171, -3.0302], [16.1914, -2.2791], [16.2153, -2.178], [16.5408, -1.8402], [16.7801, -1.3763], [16.8799, -1.2259], [17.1076, -1.0647], [17.2789, -0.9995], [17.5426, -0.7748], [17.753, -0.5489], [17.7241, -0.2777], [17.773, -0.0526], [17.8875, 0.2341], [17.9252, 0.5373], [17.8857, 0.8569], [17.9026, 1.1179], [18.058, 1.5347], [18.0722, 2.0133], [18.2115, 2.415], [18.4908, 2.9246], [18.6221, 3.3041], [18.6102, 3.4785], [18.5968, 3.6787], [18.6337, 3.9544], [18.5675, 4.2576], [18.8317, 4.5235], [19.0687, 4.8914], [19.3235, 5.0708], [19.501, 5.1276], [19.8064, 5.0894], [20.0023, 4.9447], [20.2264, 4.8297], [20.3938, 4.6864], [20.558, 4.4627], [20.9557, 4.4129], [21.2296, 4.3024], [21.3504, 4.3113], [21.5376, 4.2447], [21.6868, 4.2815], [21.9083, 4.254], [22.4223, 4.1351], [22.5057, 4.2078], [22.6172, 4.4453], [22.7557, 4.6469], [22.8644, 4.7236], [23.1157, 4.737], [23.4171, 4.6633], [24.3199, 4.994], [24.4371, 5.01], [24.7656, 4.9301], [25.2494, 5.0246], [25.3999, 5.2559], [25.5251, 5.3123], [26.1737, 5.1711], [26.8222, 5.0624], [27.0206, 5.1844], [27.1152, 5.1977], [27.4032, 5.1094]]] }, \"properties\": { \"name\": \"Democratic Republic of Congo\", \"id\": \"CD\" }, \"id\": \"CD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[15.4803, 7.5237], [15.3791, 7.3582], [15.246, 7.2636], [15.0347, 6.7842], [14.8619, 6.5556], [14.7395, 6.2799], [14.5121, 6.1619], [14.4309, 6.0389], [14.5033, 5.9168], [14.6169, 5.8649], [14.6169, 5.4956], [14.5632, 5.2799], [14.6405, 5.1791], [14.7088, 4.6655], [14.7705, 4.5581], [15.0226, 4.3584], [15.1367, 4.0689], [15.035, 4.0165], [15.1288, 3.827], [15.4585, 3.4568], [15.7751, 3.127], [15.9047, 3.0959], [16.0636, 2.9086], [16.1066, 2.4736], [16.1835, 2.2703], [16.08, 2.1069], [16.1359, 1.7243], [16.0596, 1.6763], [15.7418, 1.9152], [15.6001, 1.9502], [15.3387, 1.9449], [15.2033, 2.0243], [14.9024, 2.0124], [14.5787, 2.1992], [14.4842, 2.1549], [13.2937, 2.1615], [13.2204, 2.2565], [12.8675, 2.2468], [12.3615, 2.296], [11.9398, 2.2854], [11.3485, 2.2996], [11.3285, 2.1673], [9.98, 2.1677], [9.8007, 2.3045], [9.8855, 2.9166], [9.9485, 3.079], [9.8762, 3.3099], [9.6719, 3.5376], [9.5562, 3.7981], [9.628, 3.87], [9.6005, 4.0267], [9.4251, 3.9224], [8.9999, 4.0916], [8.9027, 4.4351], [8.9182, 4.5537], [8.762, 4.5798], [8.6564, 4.5164], [8.5329, 4.606], [8.5561, 4.7552], [8.801, 5.1973], [8.9351, 5.781], [9.0602, 6.0092], [9.3732, 6.3194], [9.66, 6.5321], [9.7799, 6.7602], [10.1439, 6.9964], [10.2055, 6.8916], [10.4825, 6.8912], [10.6064, 7.063], [10.7378, 6.9884], [11.0325, 6.6981], [11.0796, 6.5055], [11.1532, 6.438], [11.3245, 6.4846], [11.5519, 6.6972], [11.5802, 6.889], [11.8612, 7.1162], [11.7676, 7.2721], [12.0162, 7.5899], [12.0251, 7.7279], [12.156, 7.9423], [12.2332, 8.2823], [12.4037, 8.5957], [12.5825, 8.6242], [12.7312, 8.7457], [12.8067, 8.8865], [12.8755, 9.3037], [12.9296, 9.4262], [13.1756, 9.5395], [13.2213, 9.6451], [13.2697, 10.0362], [13.4144, 10.1716], [13.5351, 10.6052], [13.8921, 11.1401], [14.0567, 11.2449], [14.2023, 11.268], [14.5596, 11.4921], [14.5619, 11.7287], [14.6271, 12.1087], [14.5188, 12.2982], [14.1975, 12.3839], [14.0639, 13.0786], [14.2449, 13.0773], [14.5161, 12.9796], [14.5446, 12.8202], [14.7612, 12.6556], [14.8473, 12.502], [14.8806, 12.2694], [15.0812, 11.8455], [15.0781, 11.6426], [15.1221, 11.5414], [15.0555, 11.3687], [15.0298, 11.1135], [15.0688, 10.8511], [15.1323, 10.6483], [15.2761, 10.3575], [15.5318, 10.0885], [15.5412, 9.9603], [15.1931, 9.9815], [14.8358, 9.9416], [14.2432, 9.9798], [14.1397, 9.9017], [13.9773, 9.6917], [14.0048, 9.5887], [14.3324, 9.2034], [14.7328, 8.8656], [14.8606, 8.7986], [15.1162, 8.5571], [15.2525, 8.3223], [15.443, 7.8518], [15.5499, 7.7879], [15.5526, 7.6645], [15.4803, 7.5237]]] }, \"properties\": { \"name\": \"Cameroon\", \"id\": \"CM\" }, \"id\": \"CM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-5.5236, 10.4259], [-5.3822, 10.3141], [-5.2623, 10.3198], [-5.0999, 10.2417], [-4.9698, 9.93], [-4.6258, 9.7135], [-4.5266, 9.7237], [-4.3322, 9.6455], [-4.2672, 9.7432], [-3.8776, 9.895], [-3.5811, 9.9243], [-3.2235, 9.8955], [-2.9883, 9.6873], [-2.8167, 9.4258], [-2.6958, 9.4813], [-2.6742, 9.2825], [-2.7466, 9.1097], [-2.6003, 8.8004], [-2.5058, 8.2087], [-2.6117, 8.1474], [-2.6134, 8.0467], [-2.7899, 7.9321], [-2.8964, 7.6848], [-2.959, 7.4545], [-2.9858, 7.205], [-3.2357, 6.8073], [-3.2402, 6.5356], [-3.2007, 6.3483], [-2.9623, 5.643], [-2.7936, 5.5999], [-2.755, 5.4326], [-2.7952, 5.1844], [-3.0191, 5.1307], [-3.1688, 5.203], [-3.2376, 5.3354], [-3.3476, 5.1307], [-3.8705, 5.2208], [-4.0372, 5.2301], [-4.8997, 5.1382], [-5.5647, 5.0894], [-5.9138, 5.0109], [-6.5485, 4.7618], [-6.9229, 4.6384], [-7.0579, 4.5447], [-7.4261, 4.3761], [-7.5451, 4.3512], [-7.5717, 4.3863], [-7.5912, 4.8213], [-7.5688, 5.0805], [-7.5097, 5.1085], [-7.4299, 5.3247], [-7.3999, 5.5506], [-7.4543, 5.8414], [-7.7304, 5.9191], [-7.7965, 5.975], [-7.8886, 6.2346], [-7.9817, 6.2862], [-8.2038, 6.2906], [-8.3449, 6.3514], [-8.4499, 6.4624], [-8.6035, 6.5076], [-8.3325, 6.8015], [-8.2965, 7.0741], [-8.437, 7.5162], [-8.4863, 7.5583], [-8.43, 7.6019], [-8.232, 7.5566], [-8.1155, 7.7608], [-8.1268, 7.8678], [-8.0098, 8.0786], [-8.0167, 8.1447], [-8.2562, 8.2535], [-8.2369, 8.4555], [-8.0491, 8.4954], [-7.8236, 8.4674], [-7.6811, 8.4102], [-7.6909, 8.5625], [-7.7841, 8.7205], [-7.951, 8.7866], [-7.9381, 8.9797], [-7.7779, 9.0809], [-7.9181, 9.1883], [-7.8962, 9.4161], [-8.0309, 9.3978], [-8.137, 9.4955], [-8.1366, 10.022], [-7.9907, 10.1627], [-7.8143, 10.2364], [-7.6611, 10.4272], [-7.498, 10.4397], [-7.3631, 10.2595], [-7.105, 10.2035], [-6.9502, 10.3424], [-6.6932, 10.3496], [-6.6542, 10.6562], [-6.5647, 10.5866], [-6.2611, 10.7242], [-6.1907, 10.4001], [-6.2414, 10.2794], [-6.0345, 10.1946], [-5.8439, 10.3895], [-5.5236, 10.4259]]] }, \"properties\": { \"name\": \"Côte d'Ivoire\", \"id\": \"CI\" }, \"id\": \"CI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[110.8886, 19.9918], [110.9708, 19.8835], [111.0138, 19.6553], [110.8221, 19.5581], [110.5722, 19.1719], [110.4514, 18.748], [110.2516, 18.6556], [110.0484, 18.5052], [109.8158, 18.3968], [109.7026, 18.2593], [109.5192, 18.2184], [109.3999, 18.281], [109.0296, 18.3675], [108.7016, 18.5354], [108.6355, 18.9078], [108.6501, 19.2651], [108.6936, 19.3384], [109.0629, 19.6136], [109.1792, 19.6739], [109.2187, 19.8426], [109.3146, 19.9043], [109.5135, 19.9043], [109.6511, 19.9843], [109.9064, 19.9629], [110.1718, 20.0539], [110.5886, 20.0726], [110.6786, 20.137], [110.8886, 19.9918]]], [[[119.8211, 25.457], [119.7003, 25.4325], [119.7226, 25.639], [119.8286, 25.6074], [119.8211, 25.457]]], [[[122.2958, 29.9634], [122.0242, 30.0135], [122.1108, 30.1396], [122.2842, 30.0681], [122.2958, 29.9634]]], [[[121.8626, 31.4921], [121.7804, 31.4637], [121.3366, 31.6439], [121.4639, 31.7563], [121.5767, 31.6373], [121.8626, 31.4921]]], [[[130.5269, 42.5353], [130.2469, 42.7448], [130.2405, 42.8917], [129.8983, 42.9982], [129.7794, 42.7768], [129.7199, 42.4749], [129.5237, 42.3848], [129.3138, 42.4136], [129.1957, 42.2184], [128.9236, 42.0381], [128.0451, 41.9875], [128.0332, 41.8983], [128.291, 41.5627], [128.1112, 41.3891], [127.9186, 41.4611], [127.6877, 41.4402], [127.1795, 41.5312], [127.0069, 41.742], [126.9034, 41.7811], [126.6011, 41.6409], [126.4905, 41.3581], [125.989, 40.9049], [125.7285, 40.8667], [125.4169, 40.6598], [125.3143, 40.6448], [124.8895, 40.4596], [124.3865, 40.1041], [124.3622, 40.0042], [124.1055, 39.8409], [123.7602, 39.8226], [123.3483, 39.7632], [123.2266, 39.6868], [123.0322, 39.6735], [122.3348, 39.3664], [122.121, 39.1519], [121.8643, 38.9966], [121.6774, 39.0032], [121.65, 38.8652], [121.3201, 38.8084], [121.1634, 38.7316], [121.1066, 38.9207], [121.6801, 39.1089], [121.6277, 39.2203], [121.7853, 39.4009], [121.2757, 39.385], [121.2672, 39.5448], [121.5177, 39.6389], [121.5172, 39.8448], [121.8009, 39.9505], [122.191, 40.3584], [122.2749, 40.5418], [122.1404, 40.6882], [121.859, 40.8423], [121.1745, 40.9013], [120.7706, 40.5893], [120.4789, 40.231], [119.8504, 39.9873], [119.5912, 39.9026], [119.391, 39.7525], [119.2613, 39.5608], [119.2245, 39.4081], [119.0403, 39.2225], [118.9125, 39.1666], [118.6265, 39.1768], [118.2977, 39.0672], [118.0406, 39.227], [117.7845, 39.1346], [117.6167, 38.8527], [117.5577, 38.625], [117.6558, 38.4244], [117.7667, 38.3117], [118.0149, 38.1834], [118.5431, 38.095], [118.8002, 38.1265], [118.94, 38.0426], [119.0892, 37.7008], [118.9905, 37.6414], [118.9528, 37.3311], [119.1117, 37.201], [119.45, 37.1247], [119.7607, 37.1549], [119.8877, 37.2534], [119.8828, 37.3511], [120.1558, 37.4949], [120.3702, 37.7008], [120.7502, 37.834], [121.0489, 37.7253], [121.2194, 37.6001], [121.3881, 37.5788], [121.6401, 37.4603], [121.9646, 37.4452], [122.0566, 37.5291], [122.3375, 37.4052], [122.6025, 37.4266], [122.5875, 37.1811], [122.4467, 37.0683], [122.5195, 36.9467], [122.3411, 36.8322], [122.1622, 36.9586], [121.9326, 36.9596], [121.6694, 36.8362], [120.9899, 36.5978], [120.8958, 36.4442], [120.7759, 36.4562], [120.6822, 36.3408], [120.681, 36.1686], [120.3933, 36.054], [120.3276, 36.228], [120.0941, 36.1188], [120.2192, 35.9351], [120.0546, 35.8613], [119.8664, 35.6438], [119.7199, 35.5888], [119.5263, 35.3584], [119.4296, 35.3016], [119.3529, 35.1139], [119.2156, 35.0117], [119.1655, 34.8488], [119.201, 34.7485], [119.3515, 34.7494], [119.5828, 34.5821], [119.9636, 34.448], [120.2015, 34.3255], [120.3227, 34.1688], [120.5047, 33.6384], [120.6157, 33.4905], [120.8709, 33.0164], [120.8975, 32.8434], [120.8531, 32.6614], [120.9899, 32.5673], [121.2935, 32.4572], [121.401, 32.3719], [121.404, 32.2063], [121.6744, 32.051], [121.8323, 31.8996], [121.8661, 31.7034], [121.681, 31.7123], [121.3521, 31.8588], [120.9735, 31.8694], [120.7919, 32.0319], [120.5203, 32.106], [120.4971, 32.0199], [120.7155, 31.9836], [120.7879, 31.8197], [121.0556, 31.7194], [121.3511, 31.4855], [121.6605, 31.3199], [121.7858, 31.1628], [121.8781, 30.9169], [121.5274, 30.841], [121.3099, 30.6998], [120.9975, 30.5582], [120.8217, 30.3544], [120.4496, 30.3878], [120.6335, 30.1329], [120.9047, 30.1605], [121.1594, 30.3016], [121.4329, 30.2266], [121.6779, 29.9789], [121.9442, 29.8941], [121.9057, 29.7796], [121.6766, 29.5838], [121.9411, 29.6061], [121.9683, 29.4906], [121.9176, 29.1351], [121.7175, 29.2562], [121.5336, 29.2367], [121.5208, 29.1187], [121.665, 29.0108], [121.6299, 28.768], [121.475, 28.6415], [121.6019, 28.3667], [121.3548, 28.23], [121.2167, 28.3463], [121.0986, 28.2903], [120.9588, 28.0369], [120.6853, 27.7444], [120.5877, 27.5806], [120.629, 27.482], [120.5397, 27.3182], [120.2788, 27.0972], [120.1385, 26.8863], [120.0866, 26.6714], [119.8823, 26.6106], [119.8153, 26.7975], [119.6382, 26.6213], [119.7847, 26.5468], [119.881, 26.3341], [119.6928, 26.2364], [119.4633, 26.0545], [119.6186, 26.0034], [119.6484, 25.9186], [119.5392, 25.5914], [119.6191, 25.4375], [119.2631, 25.468], [119.2357, 25.2062], [119.0247, 25.2235], [118.9142, 25.1267], [118.909, 24.9287], [118.6369, 24.8355], [118.7194, 24.7463], [118.5604, 24.5803], [118.2955, 24.5727], [118.0872, 24.6269], [118.006, 24.4817], [118.0562, 24.246], [117.8395, 24.0121], [117.7415, 24.0147], [117.6283, 23.8368], [117.4663, 23.8408], [117.3309, 23.7089], [117.0822, 23.5789], [116.9104, 23.6468], [116.8608, 23.4532], [116.6824, 23.3276], [116.669, 23.2282], [116.538, 23.1798], [116.4706, 22.9459], [116.2517, 22.9814], [116.1572, 22.8873], [115.8522, 22.8016], [115.6406, 22.8535], [115.4985, 22.7191], [115.3826, 22.7191], [115.1958, 22.8171], [114.8539, 22.6169], [114.7506, 22.6262], [114.6515, 22.7554], [114.4961, 22.5268], [114.3408, 22.593], [114.2658, 22.5411], [114.1228, 22.565], [114.0154, 22.5118], [113.8282, 22.6072], [113.6195, 22.8616], [113.5862, 23.02], [113.331, 22.9121], [113.5529, 22.5938], [113.5467, 22.2241], [113.4943, 22.2414], [113.4787, 22.1957], [113.2666, 22.0887], [113.0082, 22.1194], [112.9838, 21.9382], [112.8085, 21.9445], [112.5861, 21.7766], [112.4947, 21.8184], [112.3051, 21.7416], [111.9438, 21.8495], [111.8733, 21.7172], [111.776, 21.7194], [111.6029, 21.5591], [111.3192, 21.4864], [111.1004, 21.4846], [110.771, 21.3865], [110.5673, 21.2143], [110.4581, 21.2307], [110.1935, 21.0376], [110.1803, 20.8587], [110.3653, 20.8374], [110.3129, 20.6718], [110.5113, 20.5182], [110.4497, 20.3553], [110.3449, 20.2949], [110.1229, 20.2639], [109.9383, 20.2949], [109.9462, 20.4743], [109.7918, 20.6221], [109.8051, 20.7113], [109.6626, 20.9168], [109.6813, 21.1317], [109.7794, 21.3377], [109.9209, 21.3763], [109.9308, 21.4806], [109.5442, 21.5379], [109.3466, 21.454], [109.1486, 21.4255], [109.1335, 21.5436], [109.0305, 21.6266], [108.7718, 21.6306], [108.6159, 21.7704], [108.5938, 21.901], [108.4801, 21.9045], [108.5258, 21.6715], [108.4446, 21.6071], [108.3247, 21.6937], [108.2462, 21.5583], [107.9728, 21.5081], [107.8018, 21.6453], [107.4716, 21.5982], [107.3512, 21.6089], [107.1786, 21.7172], [107.0063, 21.8934], [106.7294, 22.0004], [106.6544, 22.2414], [106.5363, 22.3954], [106.5825, 22.5735], [106.7014, 22.6378], [106.7804, 22.7789], [106.542, 22.9081], [106.2495, 22.8695], [106.1838, 22.9552], [106.001, 22.9747], [105.8429, 22.9228], [105.5482, 23.0729], [105.4945, 23.1807], [105.2751, 23.3454], [104.8646, 23.1363], [104.7958, 22.9112], [104.6876, 22.822], [104.5268, 22.8043], [104.3719, 22.7039], [104.2125, 22.8096], [104.054, 22.7523], [103.9151, 22.5384], [103.6204, 22.7821], [103.4713, 22.5974], [103.3563, 22.7546], [103.1374, 22.593], [103.0052, 22.4532], [102.8303, 22.5872], [102.5172, 22.7408], [102.4281, 22.7328], [102.2372, 22.4661], [102.1276, 22.379], [102.0246, 22.4394], [101.8417, 22.3884], [101.6713, 22.4625], [101.5243, 22.2538], [101.6029, 21.9897], [101.744, 21.778], [101.705, 21.1503], [101.5425, 21.2342], [101.2815, 21.1841], [101.2242, 21.2236], [101.139, 21.5676], [101.1208, 21.7461], [100.8349, 21.6551], [100.6769, 21.505], [100.5314, 21.4579], [100.3507, 21.501], [100.2149, 21.4628], [100.0892, 21.5579], [99.9254, 21.8206], [99.9179, 22.0279], [99.5925, 22.0892], [99.193, 22.126], [99.1726, 22.1926], [99.3377, 22.498], [99.3852, 22.8251], [99.5073, 22.9592], [99.3408, 23.0959], [99.0549, 23.1305], [98.8636, 23.1913], [98.8854, 23.3076], [98.7979, 23.5203], [98.8322, 23.6246], [98.6808, 23.8417], [98.7642, 24.116], [98.5835, 24.0698], [98.4996, 24.1155], [98.2125, 24.1107], [98.0167, 24.0654], [97.686, 23.898], [97.5684, 23.9886], [97.6904, 24.1306], [97.6664, 24.3801], [97.5315, 24.4915], [97.5834, 24.7747], [97.7237, 24.8421], [97.7149, 25.0344], [97.8197, 25.2519], [98.0109, 25.2923], [98.1725, 25.5946], [98.3337, 25.5866], [98.4655, 25.789], [98.6252, 25.8268], [98.6545, 25.9178], [98.572, 26.1139], [98.6629, 26.1392], [98.7319, 26.5836], [98.7163, 27.0448], [98.675, 27.1908], [98.651, 27.5726], [98.5045, 27.6476], [98.299, 27.5499], [98.1303, 27.9677], [98.0988, 28.1421], [97.8649, 28.3636], [97.6944, 28.4692], [97.5377, 28.5101], [97.3224, 28.218], [97.0752, 28.3689], [96.776, 28.3671], [96.6024, 28.4599], [96.3663, 28.3671], [96.2815, 28.412], [96.3956, 28.6064], [96.5811, 28.7635], [96.4356, 29.0507], [96.1622, 28.9095], [96.1221, 29.0822], [96.2349, 29.2456], [96.0351, 29.4471], [95.5158, 29.2066], [95.4204, 29.0543], [95.2792, 29.0494], [94.9991, 29.1493], [94.7696, 29.1759], [94.6231, 29.3126], [94.2933, 29.1448], [93.9022, 28.803], [93.6648, 28.6903], [93.3607, 28.6539], [93.2067, 28.5909], [93.1193, 28.4022], [92.8817, 28.2282], [92.702, 28.147], [92.6642, 27.949], [92.4147, 27.8247], [92.1014, 27.8078], [91.9775, 27.7301], [91.6317, 27.7599], [91.6056, 27.9517], [91.226, 28.0711], [91.0778, 27.9743], [90.7155, 28.072], [90.3529, 28.0804], [90.348, 28.2437], [89.9809, 28.3112], [89.537, 28.1075], [89.1606, 27.7115], [89.1024, 27.5925], [88.9475, 27.4638], [88.8912, 27.316], [88.7491, 27.522], [88.8485, 27.8686], [88.8037, 28.0071], [88.6213, 28.0919], [88.4259, 28.0116], [88.109, 27.933], [88.1099, 27.8704], [87.8608, 27.886], [87.6829, 27.8216], [87.1413, 27.8385], [87.0201, 27.9286], [86.5544, 28.0853], [86.5168, 27.9636], [86.4089, 27.9286], [86.0787, 28.0835], [86.064, 27.9348], [85.954, 27.9281], [85.8403, 28.1354], [85.6782, 28.2775], [85.4106, 28.2762], [85.1225, 28.3161], [85.0888, 28.3725], [85.159, 28.5922], [84.8552, 28.5536], [84.7141, 28.5957], [84.2285, 28.9118], [84.1016, 29.2199], [83.936, 29.2793], [83.5835, 29.1835], [83.3553, 29.4391], [83.1556, 29.6127], [82.8542, 29.6833], [82.4866, 29.9416], [82.1591, 30.1152], [82.0432, 30.3269], [81.6419, 30.3878], [81.4169, 30.3375], [81.2553, 30.0934], [81.1101, 30.0366], [81.0103, 30.1645], [80.9854, 30.2372], [80.6823, 30.4148], [80.1913, 30.5684], [80.1944, 30.7593], [79.9246, 30.8889], [79.9166, 30.8942], [79.7945, 30.9684], [79.5654, 30.9493], [79.3697, 31.0797], [79.3386, 31.1055], [79.1073, 31.4025], [78.8446, 31.3017], [78.7433, 31.3239], [78.7269, 31.4717], [78.8028, 31.6182], [78.6936, 31.7403], [78.7197, 31.8876], [78.7353, 31.9578], [78.4962, 32.2157], [78.3895, 32.5197], [78.7008, 32.597], [78.7713, 32.4682], [78.9191, 32.3581], [79.067, 32.3883], [79.2192, 32.5011], [79.2165, 32.5641], [79.2023, 32.9459], [79.1087, 33.0227], [79.1353, 33.1718], [79.1127, 33.2264], [78.8019, 33.4998], [78.7531, 34.0875], [78.9706, 34.2283], [78.9364, 34.3521], [78.671, 34.5181], [78.3269, 34.6064], [78.2822, 34.654], [78.0123, 35.251], [78.0473, 35.4494], [77.8107, 35.4845], [77.7991, 35.496], [77.4467, 35.4756], [76.879, 35.6132], [76.5634, 35.773], [76.5514, 35.8871], [76.2518, 35.8108], [76.1479, 35.8289], [76.0706, 35.983], [75.945, 36.0176], [75.9743, 36.3825], [75.8402, 36.6497], [75.6671, 36.7421], [75.4243, 36.7381], [75.3466, 36.9134], [75.0541, 36.9871], [74.8895, 36.9524], [74.6924, 37.0359], [74.5414, 37.0221], [74.3723, 37.1575], [74.7266, 37.2907], [74.8912, 37.2317], [75.1189, 37.3857], [74.8943, 37.6014], [74.9383, 37.7723], [74.7896, 38.1034], [74.7723, 38.2748], [74.8357, 38.4044], [74.7452, 38.5101], [74.2774, 38.6597], [74.1313, 38.661], [74.0257, 38.5398], [73.8015, 38.6068], [73.6958, 38.8545], [73.7958, 39.0023], [73.6076, 39.2291], [73.6315, 39.4489], [73.8228, 39.4888], [73.9147, 39.6065], [73.8353, 39.8], [73.9915, 40.0432], [74.4118, 40.1373], [74.6799, 40.3105], [74.842, 40.3451], [75.0044, 40.4494], [75.241, 40.4805], [75.5206, 40.6274], [75.5837, 40.6053], [75.656, 40.3291], [75.8719, 40.3034], [76.2585, 40.4308], [76.4804, 40.4494], [76.6397, 40.7424], [76.8239, 40.9821], [76.9869, 41.0393], [77.5816, 40.9928], [77.8152, 41.0558], [78.1233, 41.0758], [78.346, 41.2813], [78.3624, 41.3719], [78.7425, 41.5601], [79.2937, 41.7829], [79.766, 41.8987], [79.8406, 41.9959], [80.2162, 42.0324], [80.2096, 42.1899], [80.2592, 42.2352], [80.1651, 42.6653], [80.2503, 42.7971], [80.5438, 42.9117], [80.3901, 43.0431], [80.7856, 43.1616], [80.6676, 43.3098], [80.704, 43.427], [80.4958, 43.8923], [80.3551, 44.0973], [80.3365, 44.4382], [80.4554, 44.7463], [80.2553, 44.808], [79.9973, 44.7974], [79.8717, 44.8839], [80.059, 45.0064], [80.6348, 45.1262], [80.8531, 45.1294], [81.602, 45.3109], [81.989, 45.1618], [82.2665, 45.2191], [82.4787, 45.1236], [82.6212, 45.2932], [82.5826, 45.4428], [82.3264, 45.52], [82.5551, 46.1588], [82.6922, 46.3865], [83.0042, 47.0337], [83.0296, 47.1859], [83.1929, 47.1864], [83.6341, 47.043], [84.0159, 46.9707], [84.339, 46.996], [84.6667, 46.9724], [84.7861, 46.8309], [85.2335, 47.0363], [85.4847, 47.0634], [85.6565, 47.2547], [85.5868, 47.4936], [85.526, 47.9157], [85.6263, 48.2038], [85.7494, 48.3849], [86.2656, 48.4546], [86.5496, 48.5287], [86.7178, 48.6972], [86.7534, 49.0088], [86.8861, 49.0907], [87.3229, 49.0858], [87.8142, 49.1624], [87.86, 48.9655], [87.7432, 48.8816], [88.0277, 48.7356], [87.9799, 48.5549], [88.517, 48.3844], [88.5759, 48.2202], [89.0478, 48.0027], [89.561, 48.004], [89.778, 47.8269], [90.028, 47.8775], [90.1035, 47.7453], [90.3133, 47.676], [90.4963, 47.2854], [90.7155, 47.0039], [90.87, 46.9547], [90.9859, 46.7492], [91.0338, 46.529], [90.9117, 46.2706], [91.0018, 46.0358], [90.7098, 45.7309], [90.6619, 45.5253], [90.8771, 45.196], [91.0497, 45.2173], [91.3121, 45.1183], [91.5842, 45.0766], [92.0299, 45.0686], [92.4237, 45.0091], [92.7876, 45.0357], [93.2946, 44.9833], [93.6563, 44.9008], [93.9578, 44.6748], [94.1993, 44.6451], [94.3647, 44.5195], [94.7119, 44.3508], [95.0497, 44.2594], [95.3503, 44.278], [95.3564, 44.0059], [95.5256, 43.954], [95.842, 43.3836], [95.9127, 43.2064], [96.2997, 42.9286], [96.3854, 42.7204], [97.2057, 42.7896], [98.947, 42.6161], [99.4678, 42.5682], [99.984, 42.6773], [101.092, 42.5513], [101.4955, 42.5389], [101.7138, 42.4656], [101.973, 42.2157], [102.1569, 42.158], [103.0726, 42.0061], [103.7109, 41.7514], [104.4984, 41.877], [104.4984, 41.6586], [105.0506, 41.616], [105.1971, 41.7381], [105.8674, 41.9942], [106.7702, 42.2889], [108.1712, 42.4474], [108.6874, 42.4163], [109.4434, 42.4558], [109.6981, 42.5539], [110.4004, 42.7736], [111.0072, 43.3414], [111.5474, 43.4963], [111.7711, 43.6646], [111.9331, 43.7116], [111.8368, 43.9349], [111.5198, 44.1919], [111.4023, 44.3672], [111.6211, 44.8271], [111.8981, 45.0641], [112.4111, 45.0584], [112.5968, 44.9177], [113.0496, 44.8102], [113.5871, 44.7459], [114.0306, 44.9425], [114.4189, 45.2027], [114.517, 45.3647], [114.739, 45.4197], [114.9192, 45.3784], [115.6809, 45.4583], [116.2406, 45.7961], [116.2132, 45.8871], [116.3574, 46.0966], [116.5625, 46.2897], [116.859, 46.3878], [117.3335, 46.3621], [117.4054, 46.5707], [117.6709, 46.5219], [117.9105, 46.6195], [118.3087, 46.7172], [118.7229, 46.6919], [118.844, 46.7603], [119.1619, 46.6386], [119.7065, 46.6062], [119.8673, 46.6724], [119.8979, 46.8579], [119.711, 47.15], [119.5268, 47.2561], [119.1228, 47.5584], [119.082, 47.6542], [118.7598, 47.7577], [118.4983, 47.984], [118.1472, 48.0289], [117.7685, 47.9881], [117.3508, 47.652], [117.0698, 47.8065], [116.7604, 47.87], [116.5136, 47.8394], [116.2313, 47.858], [115.8984, 47.6871], [115.5575, 47.945], [115.5251, 48.131], [115.7857, 48.2482], [115.8207, 48.5771], [115.954, 48.6894], [116.2433, 49.1704], [116.6832, 49.8238], [117.2456, 49.6249], [117.4774, 49.6094], [117.8733, 49.5135], [118.4517, 49.8444], [118.7561, 49.9629], [118.9795, 49.9789], [119.2601, 50.0663], [119.3461, 50.279], [119.1921, 50.3798], [119.2809, 50.5611], [119.4456, 50.7029], [119.5734, 50.9468], [119.7461, 51.1077], [119.8132, 51.2671], [120.067, 51.6007], [120.5104, 51.8486], [120.7497, 52.0965], [120.6654, 52.2998], [120.656, 52.5666], [120.36, 52.6269], [120.0675, 52.6329], [120.0945, 52.7872], [120.4213, 52.9681], [120.704, 53.1718], [120.9854, 53.2845], [121.4053, 53.3169], [122.338, 53.485], [122.516, 53.457], [123.1543, 53.5447], [123.6079, 53.5465], [123.9945, 53.4055], [124.2915, 53.341], [124.466, 53.2298], [124.8122, 53.1339], [124.9711, 53.1974], [125.2255, 53.1658], [125.649, 53.0422], [125.728, 52.8909], [125.8718, 52.8715], [126.048, 52.7394], [126.016, 52.6103], [126.313, 52.3997], [126.5106, 51.9258], [126.701, 51.703], [126.8053, 51.5057], [126.9247, 51.1002], [127.3069, 50.708], [127.306, 50.4534], [127.3952, 50.2985], [127.5901, 50.2091], [127.5124, 50.0717], [127.5027, 49.8735], [127.7113, 49.6715], [127.9998, 49.5685], [128.5268, 49.5943], [128.7691, 49.577], [128.7704, 49.4946], [129.0651, 49.3748], [129.5339, 49.3235], [129.7926, 49.1987], [130.0373, 48.9722], [130.1962, 48.8916], [130.5531, 48.8612], [130.617, 48.7731], [130.5522, 48.6024], [130.8043, 48.3414], [130.712, 48.1279], [131.0027, 47.6915], [131.3192, 47.7279], [131.7853, 47.6805], [132.3801, 47.7297], [132.5617, 47.7684], [132.7073, 47.9472], [132.8772, 47.9792], [133.1441, 48.1057], [133.4686, 48.0972], [133.8423, 48.2739], [134.2933, 48.3733], [134.5637, 48.3218], [134.6693, 48.1532], [134.5659, 48.0227], [134.7522, 47.7155], [134.4833, 47.4474], [134.2906, 47.4136], [134.1677, 47.3022], [134.2023, 47.1282], [134.0386, 46.8583], [134.0225, 46.7132], [133.8668, 46.4992], [133.8614, 46.2476], [133.7007, 46.1397], [133.6856, 46.0087], [133.513, 45.8787], [133.4366, 45.6048], [133.1858, 45.4947], [133.1135, 45.3216], [133.1135, 45.1307], [132.9358, 45.0299], [131.9775, 45.2439], [131.8519, 45.3269], [131.6539, 45.2053], [131.4471, 44.9842], [131.0822, 44.9101], [130.9677, 44.8], [131.0608, 44.6597], [131.2554, 44.0716], [131.174, 43.7049], [131.1825, 43.5057], [131.2619, 43.4332], [131.0685, 42.9024], [130.5771, 42.8118], [130.4247, 42.7271], [130.5766, 42.6232], [130.5269, 42.5353]]]] }, \"properties\": { \"name\": \"China\", \"id\": \"CN\" }, \"id\": \"CN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-67.289, -55.777], [-67.5599, -55.7247], [-67.3507, -55.6119], [-67.289, -55.777]]], [[[-67.0799, -55.1538], [-67.2574, -55.2816], [-67.4634, -55.1818], [-67.7679, -55.2595], [-68.0699, -55.2213], [-68.3015, -54.9807], [-68.107, -54.9293], [-67.2452, -54.9777], [-67.0799, -55.1538]]], [[[-69.703, -54.9191], [-68.9007, -55.0175], [-68.4579, -54.9598], [-68.3998, -55.042], [-68.5982, -55.1285], [-68.2826, -55.255], [-68.2933, -55.5214], [-68.5942, -55.4499], [-68.867, -55.4504], [-68.8889, -55.2635], [-69.2971, -55.1659], [-69.4119, -55.4442], [-69.9798, -55.1476], [-69.8844, -54.8821], [-69.703, -54.9191]]], [[[-70.9917, -54.868], [-70.8048, -54.9678], [-70.4175, -54.9087], [-70.283, -55.0659], [-70.5433, -55.1614], [-70.9399, -55.0619], [-70.9917, -54.868]]], [[[-71.3905, -54.033], [-71.0218, -54.112], [-71.0047, -54.2465], [-71.1433, -54.3739], [-71.4733, -54.2309], [-71.9725, -54.207], [-72.2104, -54.0477], [-71.9964, -53.8848], [-71.5541, -53.9562], [-71.3905, -54.033]]], [[[-72.9233, -53.4816], [-72.8822, -53.5784], [-72.4822, -53.5883], [-72.2055, -53.8075], [-72.369, -53.9806], [-72.5628, -54.0738], [-72.8711, -54.1266], [-72.7637, -53.8647], [-72.9843, -53.8603], [-73.1199, -54.0094], [-73.3048, -53.9438], [-73.3143, -53.7294], [-73.471, -53.7361], [-73.6415, -53.5705], [-73.6865, -53.4267], [-73.447, -53.4103], [-73.0993, -53.5119], [-72.9233, -53.4816]]], [[[-74.3857, -52.9224], [-74.0661, -52.9654], [-73.4506, -53.1444], [-73.2258, -53.3582], [-73.5829, -53.3001], [-73.7935, -53.1208], [-74.2703, -53.0818], [-74.3857, -52.9224]]], [[[-68.6299, -52.6525], [-68.6335, -53.242], [-68.6399, -54.3242], [-68.6533, -54.8538], [-69.0816, -54.9097], [-69.4862, -54.8591], [-69.7235, -54.7121], [-70.0306, -54.8156], [-70.2817, -54.7517], [-70.4972, -54.8094], [-70.9246, -54.7143], [-71.2291, -54.6944], [-71.4409, -54.6199], [-71.8315, -54.6261], [-71.9278, -54.5288], [-71.7159, -54.4436], [-71.6063, -54.4973], [-71.3552, -54.3957], [-71.1588, -54.4507], [-70.8982, -54.3379], [-70.6989, -54.3491], [-70.7012, -54.4853], [-70.2976, -54.4853], [-70.54, -54.3034], [-70.7599, -54.2411], [-70.8632, -54.1102], [-70.8678, -53.8843], [-70.6446, -53.823], [-70.6956, -53.7276], [-70.5314, -53.6273], [-70.3798, -53.9868], [-70.6299, -54.0055], [-70.5353, -54.136], [-70.38, -54.1808], [-70.1689, -54.3793], [-69.8671, -54.3677], [-69.7419, -54.3059], [-69.4192, -54.4072], [-69.2531, -54.5572], [-69.0443, -54.4067], [-69.988, -54.1089], [-70.1511, -53.8883], [-70.1489, -53.7614], [-69.9496, -53.6717], [-69.3524, -53.4799], [-69.3936, -53.3734], [-69.6369, -53.3343], [-70.0903, -53.4182], [-70.3294, -53.3778], [-70.4603, -53.206], [-70.3906, -53.0262], [-70.1305, -52.9428], [-70.3802, -52.7519], [-70.1898, -52.7236], [-69.9936, -52.8212], [-69.7637, -52.7315], [-69.4984, -52.4914], [-69.4141, -52.4865], [-69.1671, -52.6675], [-68.7897, -52.5766], [-68.6299, -52.6525]]], [[[-74.8229, -51.6302], [-74.78, -51.8246], [-74.5319, -51.9919], [-74.6944, -52.2792], [-74.8518, -52.2707], [-75.0171, -52.0377], [-75.1054, -51.7886], [-74.8229, -51.6302]]], [[[-74.5586, -51.2769], [-74.8533, -51.434], [-75.0404, -51.3181], [-74.7368, -51.2076], [-74.5586, -51.2769]]], [[[-75.3021, -50.6798], [-75.4774, -50.6541], [-75.4277, -50.4806], [-75.1563, -50.497], [-75.3021, -50.6798]]], [[[-75.0549, -50.2964], [-75.2504, -50.3762], [-75.4492, -50.3434], [-75.3267, -50.0118], [-74.876, -50.1099], [-74.8386, -50.1973], [-75.0549, -50.2964]]], [[[-75.1068, -48.8363], [-75.2628, -49.0689], [-75.4876, -49.0823], [-75.6192, -48.886], [-75.1185, -48.7729], [-75.1068, -48.8363]]], [[[-74.4762, -49.1479], [-74.5222, -49.6229], [-74.4589, -49.6913], [-74.5699, -49.991], [-74.763, -50.0114], [-74.8804, -49.7259], [-74.8049, -49.516], [-74.96, -49.5332], [-75.0662, -49.8525], [-75.3001, -49.8475], [-75.5702, -49.6971], [-75.3372, -49.6283], [-75.3059, -49.4942], [-75.4674, -49.3589], [-75.3267, -49.2687], [-75.0861, -49.27], [-75.1842, -49.0836], [-74.9492, -48.9602], [-74.9807, -48.8191], [-74.7934, -48.705], [-74.5665, -48.7546], [-74.4762, -49.1479]]], [[[-75.5102, -48.7636], [-75.6228, -48.7645], [-75.651, -48.5865], [-75.5184, -48.329], [-75.5606, -48.0711], [-75.3913, -48.0196], [-75.1556, -48.4253], [-75.1585, -48.6228], [-75.5102, -48.7636]]], [[[-74.5672, -48.5918], [-74.923, -48.6264], [-75.2129, -48.1416], [-75.1982, -47.9748], [-74.9752, -47.9228], [-74.7292, -48.1262], [-74.5672, -48.5918]]], [[[-74.3129, -45.6914], [-74.4656, -45.7571], [-74.6899, -45.6625], [-74.4946, -45.4259], [-74.5024, -45.2852], [-74.3107, -45.1729], [-74.3155, -45.4641], [-74.24, -45.5746], [-74.3129, -45.6914]]], [[[-73.6321, -44.8214], [-73.8002, -44.6841], [-73.6413, -44.6109], [-73.6321, -44.8214]]], [[[-72.9861, -44.7801], [-73.2284, -44.8599], [-73.3501, -44.8333], [-73.445, -44.6411], [-73.315, -44.5314], [-73.2078, -44.3348], [-72.8425, -44.4578], [-72.7641, -44.5488], [-72.9861, -44.7801]]], [[[-73.7354, -44.3948], [-73.9833, -44.4946], [-73.7271, -45.1193], [-73.849, -45.3407], [-74.0991, -45.3252], [-74.3499, -44.911], [-74.6178, -44.6478], [-74.4805, -44.5848], [-74.5017, -44.4733], [-74.3013, -44.3956], [-74.0971, -44.3894], [-74.0827, -44.1866], [-73.9003, -44.1346], [-73.7032, -44.274], [-73.7354, -44.3948]]], [[[-73.7733, -43.3459], [-74.1144, -43.3578], [-74.355, -43.2637], [-74.2095, -42.8789], [-74.1564, -42.5903], [-74.1988, -42.4811], [-74.1602, -42.2166], [-74.0723, -42.106], [-74.0368, -41.7953], [-73.5278, -41.8961], [-73.4393, -42.2778], [-73.4708, -42.4665], [-73.7893, -42.5859], [-73.5682, -42.7617], [-73.4364, -42.9366], [-73.5409, -43.0737], [-73.7496, -43.1589], [-73.7733, -43.3459]]], [[[-67.1949, -22.8216], [-67.0088, -23.0014], [-67.3562, -24.0338], [-68.2502, -24.3921], [-68.5072, -24.6301], [-68.562, -24.8377], [-68.3842, -25.0921], [-68.5409, -25.2369], [-68.6002, -25.4859], [-68.5108, -25.7411], [-68.4144, -26.1539], [-68.5299, -26.2769], [-68.5811, -26.5183], [-68.3186, -26.8775], [-68.346, -27.028], [-68.6521, -27.1482], [-68.8463, -27.1536], [-68.942, -27.4052], [-68.9995, -27.4491], [-69.1744, -27.9246], [-69.2511, -27.9739], [-69.6569, -28.4138], [-69.8278, -29.1031], [-70.0269, -29.3241], [-69.9277, -29.7695], [-69.9601, -30.0784], [-69.8635, -30.1205], [-69.9563, -30.358], [-70.1613, -30.4401], [-70.3483, -30.9022], [-70.3089, -31.0225], [-70.3884, -31.1211], [-70.5196, -31.1486], [-70.5853, -31.5695], [-70.4501, -31.8419], [-70.2544, -31.9578], [-70.3638, -32.0834], [-70.3201, -32.2667], [-70.1696, -32.4718], [-70.1769, -32.6259], [-70.1161, -32.8074], [-70.022, -32.8846], [-70.093, -33.0267], [-70.0848, -33.2016], [-70.0198, -33.2717], [-69.8196, -33.2837], [-69.7978, -33.3986], [-69.8944, -33.7312], [-69.8524, -34.2243], [-70.0519, -34.3006], [-70.2899, -34.733], [-70.3933, -35.1467], [-70.5551, -35.247], [-70.4703, -35.326], [-70.3802, -35.7717], [-70.4049, -36.0616], [-70.722, -36.2831], [-70.7493, -36.3928], [-70.9051, -36.4198], [-71.0556, -36.5237], [-71.0665, -36.644], [-71.1923, -36.8437], [-71.1184, -37.1145], [-71.2005, -37.3], [-71.1348, -37.4452], [-71.1677, -37.7621], [-71.0281, -38.0414], [-70.9679, -38.4458], [-70.8476, -38.5416], [-70.9517, -38.7383], [-71.2858, -38.8453], [-71.4256, -38.9855], [-71.42, -39.2873], [-71.5394, -39.6025], [-71.7199, -39.6353], [-71.638, -39.8871], [-71.6597, -40.0207], [-71.8184, -40.1765], [-71.6952, -40.3354], [-71.8047, -40.4393], [-71.932, -40.6918], [-71.873, -40.8929], [-71.9114, -41.6506], [-71.75, -42.0466], [-72.1247, -42.2983], [-72.0534, -42.4732], [-72.1438, -42.577], [-72.1136, -42.7768], [-72.1464, -42.9898], [-72.0548, -43.1018], [-71.7816, -43.1669], [-71.7638, -43.2948], [-71.905, -43.44], [-71.7508, -43.59], [-71.7947, -43.7533], [-71.6801, -43.9296], [-71.8124, -44.1063], [-71.8199, -44.3832], [-71.2127, -44.4413], [-71.1508, -44.4942], [-71.2611, -44.7632], [-71.4551, -44.7499], [-71.9571, -44.7916], [-72.0417, -44.9043], [-71.5962, -44.9793], [-71.3537, -45.2306], [-71.3494, -45.3318], [-71.5081, -45.5129], [-71.7463, -45.5791], [-71.7508, -45.8391], [-71.6315, -45.9537], [-71.8757, -46.1606], [-71.7776, -46.28], [-71.6952, -46.5782], [-71.7328, -46.7056], [-71.9402, -46.8312], [-71.9629, -47.0159], [-71.905, -47.2016], [-72.346, -47.4927], [-72.3416, -47.5721], [-72.518, -47.8762], [-72.5091, -47.9735], [-72.3283, -48.1101], [-72.3549, -48.3658], [-72.6083, -48.5194], [-72.6143, -48.7928], [-72.7284, -48.8963], [-72.9819, -48.9766], [-73.149, -49.1879], [-73.1352, -49.3006], [-73.4615, -49.314], [-73.5762, -49.5829], [-73.4704, -49.7947], [-73.529, -49.9111], [-73.5012, -50.1254], [-73.3867, -50.2311], [-73.153, -50.7384], [-72.8036, -50.6376], [-72.5098, -50.6075], [-72.3402, -50.682], [-72.2763, -50.9102], [-72.3768, -51.0953], [-72.3032, -51.299], [-72.4077, -51.541], [-72.269, -51.691], [-71.9536, -51.8806], [-71.9187, -51.9897], [-69.9603, -52.0084], [-69.4884, -52.1362], [-69.2063, -52.1362], [-68.7152, -52.2556], [-68.4433, -52.3569], [-69.2409, -52.2055], [-69.4469, -52.2694], [-69.5606, -52.4217], [-70.795, -52.7688], [-70.8212, -52.9632], [-70.9522, -53.2269], [-70.9477, -53.5705], [-70.9959, -53.7791], [-71.2977, -53.8834], [-71.6939, -53.8031], [-72.1744, -53.6321], [-72.3768, -53.4711], [-72.413, -53.3503], [-72.306, -53.2539], [-71.9418, -53.234], [-71.8528, -53.2855], [-71.4002, -53.107], [-71.155, -52.8455], [-71.3878, -52.7643], [-71.8981, -53.0019], [-72.1291, -53.0644], [-72.4583, -53.2544], [-72.5489, -53.4608], [-72.7269, -53.42], [-73.0526, -53.2433], [-72.9155, -53.1221], [-72.8891, -52.8718], [-72.7277, -52.7621], [-72.4534, -52.8145], [-72.1176, -52.6498], [-71.7971, -52.6827], [-71.812, -52.5371], [-72.2257, -52.5211], [-72.4376, -52.6258], [-72.6447, -52.5291], [-72.7766, -52.5774], [-72.8019, -52.7124], [-73.0202, -52.8917], [-73.1225, -53.0737], [-73.3381, -53.0546], [-73.6453, -52.8371], [-73.2408, -52.7071], [-73.3822, -52.5952], [-73.5858, -52.6858], [-73.9147, -52.688], [-74.0143, -52.6392], [-74.0374, -52.403], [-74.1509, -52.3827], [-74.2958, -52.118], [-73.8343, -52.2339], [-73.5323, -52.1531], [-73.1374, -52.1296], [-72.8431, -51.9609], [-72.6955, -51.9853], [-72.5229, -51.8908], [-72.6001, -51.7993], [-72.9284, -51.8598], [-73.3833, -52.0701], [-73.5183, -52.0408], [-73.7527, -51.7953], [-73.9733, -51.7846], [-74.1966, -51.6803], [-73.9298, -51.6178], [-73.8958, -51.3315], [-74.1213, -51.1957], [-74.3324, -51.1952], [-74.8147, -51.0629], [-75.0553, -50.7855], [-75.0948, -50.6812], [-74.6857, -50.6621], [-74.7758, -50.4699], [-74.6445, -50.3612], [-74.3654, -50.4881], [-74.1857, -50.4854], [-74.6296, -50.1942], [-74.3337, -49.9744], [-74.0194, -50.0228], [-74.324, -49.7832], [-74.2909, -49.6039], [-73.8925, -49.5235], [-74.0945, -49.4299], [-74.2214, -49.5004], [-74.3666, -49.4006], [-74.3821, -48.7938], [-74.3411, -48.5957], [-74.5772, -48.2744], [-74.5848, -47.9991], [-74.2505, -48.0448], [-73.8539, -48.0423], [-73.5281, -48.198], [-73.7158, -47.6555], [-73.9409, -47.9295], [-74.227, -47.969], [-74.3763, -47.8296], [-74.6549, -47.7022], [-74.5337, -47.5677], [-74.243, -47.6791], [-74.1342, -47.5907], [-74.4826, -47.4305], [-74.4032, -47.3275], [-74.1584, -47.1825], [-74.1519, -46.9742], [-74.3135, -46.7882], [-74.5122, -46.885], [-74.6909, -46.8642], [-75.006, -46.7411], [-75.1458, -46.6], [-75.4785, -46.6626], [-75.3864, -46.8628], [-75.4967, -46.94], [-75.708, -46.7749], [-75.6567, -46.6102], [-74.9245, -46.1596], [-75.0746, -46.0044], [-75.0666, -45.8751], [-74.7632, -45.8237], [-74.4629, -45.8405], [-74.158, -45.7673], [-74.0825, -45.6447], [-74.1226, -45.496], [-74.0377, -45.4175], [-73.825, -45.4468], [-73.9602, -45.8352], [-73.6949, -45.8596], [-73.7566, -45.703], [-73.7307, -45.4801], [-73.5498, -45.4836], [-73.2264, -45.2551], [-73.445, -45.2382], [-73.3625, -44.978], [-73.0784, -44.9204], [-72.7391, -44.7343], [-72.6638, -44.4365], [-72.8276, -44.3953], [-73.265, -44.1689], [-73.2244, -43.898], [-73.0689, -43.8621], [-72.9965, -43.6317], [-73.101, -43.4551], [-73.076, -43.3237], [-72.9399, -43.2113], [-72.878, -43.048], [-72.7579, -43.0395], [-72.8449, -42.8078], [-72.7739, -42.5052], [-72.7852, -42.3014], [-72.6309, -42.1998], [-72.4123, -42.3884], [-72.4993, -41.9809], [-72.7382, -41.9947], [-72.8241, -41.909], [-72.6698, -41.6595], [-72.8052, -41.5446], [-73.0149, -41.5441], [-73.2417, -41.7807], [-73.5214, -41.7971], [-73.7351, -41.7425], [-73.6881, -41.6391], [-73.8108, -41.5175], [-73.9659, -41.1184], [-73.9202, -40.8716], [-73.6695, -40.0824], [-73.671, -39.9634], [-73.4104, -39.789], [-73.25, -39.4223], [-73.2264, -39.2244], [-73.4808, -38.6241], [-73.5325, -38.3667], [-73.4648, -38.0404], [-73.6619, -37.6987], [-73.6035, -37.479], [-73.6623, -37.3409], [-73.6017, -37.1886], [-73.3745, -37.2241], [-73.216, -37.1669], [-73.1182, -36.6883], [-73.0067, -36.6436], [-72.8746, -36.3905], [-72.7785, -35.9786], [-72.5875, -35.7597], [-72.6239, -35.5857], [-72.3868, -35.2403], [-72.2237, -35.0961], [-72.0559, -34.6159], [-71.9915, -34.2887], [-72.0028, -34.1653], [-71.8311, -33.8195], [-71.6644, -33.6526], [-71.743, -33.095], [-71.592, -32.9695], [-71.4522, -32.6596], [-71.4213, -32.3866], [-71.513, -32.2078], [-71.5259, -31.8059], [-71.6619, -31.1695], [-71.654, -30.9866], [-71.709, -30.6278], [-71.6695, -30.3305], [-71.4005, -30.1432], [-71.3157, -29.6496], [-71.3532, -29.3504], [-71.4857, -29.1982], [-71.5192, -28.9264], [-71.3068, -28.6726], [-71.1863, -28.3778], [-71.1546, -28.064], [-71.0527, -27.7275], [-70.9258, -27.5886], [-70.898, -27.1877], [-70.803, -26.8411], [-70.7085, -26.597], [-70.6466, -26.3293], [-70.6354, -25.9927], [-70.7138, -25.7841], [-70.633, -25.5458], [-70.4894, -25.3767], [-70.4455, -25.1724], [-70.5742, -24.6443], [-70.5074, -24.1298], [-70.4878, -23.7818], [-70.3924, -23.566], [-70.5881, -23.3684], [-70.5633, -23.0568], [-70.4497, -23.0342], [-70.3316, -22.8487], [-70.2595, -22.5562], [-70.2286, -22.193], [-70.0874, -21.4931], [-70.0883, -21.2533], [-70.1971, -20.7255], [-70.1474, -20.2297], [-70.1483, -19.8049], [-70.2759, -19.2678], [-70.3349, -18.8274], [-70.3616, -18.3978], [-70.4184, -18.3454], [-70.1838, -18.3254], [-69.9263, -18.206], [-69.8398, -18.0932], [-69.8025, -17.9002], [-69.8522, -17.7039], [-69.6849, -17.6498], [-69.5108, -17.506], [-69.4951, -17.6197], [-69.3579, -17.7719], [-69.3133, -17.9432], [-69.094, -18.0507], [-69.1455, -18.1439], [-69.0922, -18.2824], [-68.9684, -18.9682], [-68.8579, -19.0933], [-68.4628, -19.4329], [-68.6983, -19.7211], [-68.5783, -19.8564], [-68.6002, -20.0451], [-68.7276, -20.0695], [-68.6885, -20.3101], [-68.7451, -20.4588], [-68.4999, -20.612], [-68.5631, -20.7202], [-68.5583, -20.9018], [-68.4355, -20.9484], [-68.1969, -21.3004], [-68.1865, -21.6187], [-68.1121, -21.7531], [-68.0769, -21.9827], [-67.9883, -22.0572], [-67.9504, -22.3338], [-67.8817, -22.4936], [-67.8795, -22.8229], [-67.7945, -22.8793], [-67.5799, -22.8917], [-67.1949, -22.8216]]]] }, \"properties\": { \"name\": \"Chile\", \"id\": \"CL\" }, \"id\": \"CL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[9.5242, 47.5242], [9.6258, 47.4669], [9.5277, 47.2707], [9.4877, 47.0621], [9.5801, 47.0572], [9.8455, 47.0075], [9.9969, 46.8854], [10.1798, 46.8623], [10.3493, 46.9848], [10.4528, 46.865], [10.3977, 46.6648], [10.4306, 46.5503], [10.087, 46.6], [9.9391, 46.3616], [9.6396, 46.2959], [9.481, 46.3487], [9.4278, 46.4823], [9.26, 46.4753], [9.2511, 46.2866], [9.0225, 46.0513], [9.0465, 45.8755], [8.9537, 45.8298], [8.4583, 46.2457], [8.3705, 46.4451], [8.0815, 46.256], [8.1249, 46.161], [7.9931, 46.0158], [7.788, 45.9217], [7.5387, 45.9781], [7.1289, 45.8805], [7.021, 45.9257], [6.772, 46.165], [6.8168, 46.275], [6.7582, 46.4158], [6.4289, 46.4304], [6.2349, 46.3328], [6.273, 46.2524], [6.0867, 46.1472], [6.06, 46.4282], [6.1608, 46.6111], [6.4103, 46.7554], [6.4564, 46.9485], [6.6246, 47.0044], [7.0006, 47.3226], [7.0535, 47.4896], [7.203, 47.4327], [7.4201, 47.4553], [7.6154, 47.5926], [7.927, 47.5637], [8.1982, 47.6068], [8.6177, 47.7661], [8.8809, 47.6564], [9.1828, 47.6707], [9.5242, 47.5242]]] }, \"properties\": { \"name\": \"Switzerland\", \"id\": \"CH\" }, \"id\": \"CH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[96.8403, -12.182], [96.8351, -12.1797], [96.8279, -12.1509], [96.8257, -12.1261], [96.8328, -12.1261], [96.8395, -12.1603], [96.8403, -12.182]]] }, \"properties\": { \"name\": \"Cocos (Keeling) Islands\", \"id\": \"CC\" }, \"id\": \"CC\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-82.8067, 45.9898], [-82.539, 45.9398], [-82.2963, 45.9684], [-82.1821, 45.8685], [-82.0036, 45.9755], [-81.8502, 45.8363], [-81.589, 45.7729], [-81.8181, 45.5329], [-82.7175, 45.8042], [-83.1494, 45.8756], [-82.8067, 45.9898]]], [[[-61.1053, 45.9448], [-60.8061, 45.738], [-60.4723, 45.9466], [-60.5733, 46.0615], [-60.5049, 46.204], [-60.2978, 46.3115], [-60.2264, 46.1956], [-59.8651, 46.1597], [-60.0158, 45.8805], [-60.3862, 45.6545], [-60.673, 45.5906], [-60.8716, 45.6106], [-61.2837, 45.5737], [-61.4497, 45.7162], [-61.4953, 45.9413], [-61.4087, 46.1703], [-61.2404, 46.3026], [-60.8702, 46.7966], [-60.6166, 46.976], [-60.4255, 46.9231], [-60.3318, 46.7678], [-60.5769, 46.1721], [-61.1053, 45.9448]]], [[[-63.8337, 46.4939], [-63.6815, 46.5618], [-63.3687, 46.5081], [-63.1294, 46.422], [-62.1635, 46.4873], [-62.0237, 46.4215], [-62.5519, 46.1659], [-62.5313, 45.9772], [-62.8784, 46.0012], [-62.8946, 46.1237], [-63.117, 46.2529], [-63.2766, 46.1535], [-63.641, 46.2307], [-63.8605, 46.4082], [-64.1109, 46.4256], [-64.1067, 46.5623], [-64.3881, 46.6408], [-64.3546, 46.7691], [-63.9935, 47.0617], [-63.9815, 46.9129], [-64.0878, 46.7753], [-63.9032, 46.6391], [-63.8337, 46.4939]]], [[[-74.7088, 45.0038], [-74.2691, 45.1884], [-74.0499, 45.2412], [-73.7647, 45.3953], [-73.558, 45.425], [-73.4653, 45.6323], [-73.1596, 46.0101], [-72.7335, 46.1819], [-72.4962, 46.3527], [-72.2401, 46.442], [-72.1873, 46.5116], [-71.901, 46.632], [-71.6712, 46.6537], [-71.2611, 46.7563], [-70.5196, 47.0324], [-69.581, 47.8238], [-69.4711, 47.9672], [-68.9871, 48.2748], [-68.552, 48.4572], [-68.2382, 48.6263], [-67.5608, 48.8559], [-67.1176, 48.9641], [-66.598, 49.1264], [-66.1781, 49.2132], [-65.5233, 49.2662], [-64.8365, 49.1917], [-64.5676, 49.1049], [-64.2618, 48.9218], [-64.2088, 48.8062], [-64.2538, 48.5505], [-64.3488, 48.4231], [-64.6331, 48.3605], [-64.7645, 48.2282], [-65.2594, 48.0214], [-65.4758, 48.0316], [-65.9266, 48.1887], [-66.2103, 47.9885], [-65.8494, 47.9113], [-65.6665, 47.6959], [-65.4836, 47.6871], [-65.2282, 47.8114], [-64.874, 47.7972], [-64.7033, 47.7248], [-64.8522, 47.5699], [-64.9121, 47.3688], [-65.3189, 47.1011], [-64.8313, 47.0608], [-64.9057, 46.8881], [-64.8166, 46.6986], [-64.7259, 46.6715], [-64.6478, 46.3558], [-64.5415, 46.2405], [-63.916, 46.1659], [-64.0563, 46.0211], [-63.703, 45.8578], [-63.5092, 45.8747], [-63.2928, 45.7521], [-63.1079, 45.7824], [-62.7007, 45.7406], [-62.4832, 45.6217], [-61.9556, 45.868], [-61.8772, 45.714], [-61.6568, 45.6421], [-61.4924, 45.6869], [-61.282, 45.441], [-61.1066, 45.3487], [-61.1011, 45.2332], [-61.2837, 45.2355], [-62.514, 44.8435], [-63.3063, 44.6424], [-63.5442, 44.6549], [-63.6097, 44.48], [-63.7611, 44.4862], [-63.9997, 44.6451], [-64.286, 44.5501], [-64.3781, 44.3037], [-64.8624, 43.8678], [-65.0868, 43.7271], [-65.3296, 43.6681], [-65.3442, 43.5496], [-65.4816, 43.5181], [-65.7382, 43.5607], [-65.8869, 43.7951], [-66.1258, 43.8137], [-66.1932, 44.1439], [-66.0995, 44.3677], [-65.8681, 44.5687], [-65.6818, 44.6509], [-65.6568, 44.7605], [-64.903, 45.121], [-64.4489, 45.2559], [-64.2349, 45.1143], [-64.0931, 45.2173], [-63.7483, 45.3109], [-64.0872, 45.4108], [-64.6003, 45.41], [-64.7467, 45.3242], [-64.8273, 45.4756], [-64.5601, 45.6256], [-64.4822, 45.8063], [-64.5363, 45.8667], [-64.7785, 45.6385], [-64.8979, 45.6261], [-65.5451, 45.3371], [-65.8845, 45.223], [-66.1073, 45.2568], [-66.4398, 45.0961], [-66.511, 45.1431], [-66.8726, 45.0672], [-66.9188, 45.1458], [-67.1249, 45.1693], [-67.3668, 45.1738], [-67.4725, 45.2759], [-67.4936, 45.4743], [-67.4327, 45.603], [-67.7845, 45.7016], [-67.8067, 47.0829], [-68.0968, 47.2747], [-68.311, 47.3546], [-68.8288, 47.2033], [-69.0485, 47.2738], [-69.0503, 47.4265], [-69.2429, 47.4629], [-70.0078, 46.7087], [-70.0672, 46.4411], [-70.2483, 46.2511], [-70.2963, 45.9062], [-70.421, 45.7384], [-70.7023, 45.5515], [-70.898, 45.2625], [-71.3272, 45.2901], [-71.5174, 45.0078], [-73.1821, 45.0055], [-74.7088, 45.0038]]], [[[-126.6413, 49.6058], [-126.9385, 49.7186], [-126.9258, 49.8378], [-126.7381, 49.8437], [-126.6413, 49.6058]]], [[[-61.8011, 49.094], [-62.2195, 49.0791], [-63.0416, 49.2249], [-63.5658, 49.3994], [-63.6763, 49.5344], [-63.885, 49.6578], [-64.44, 49.8278], [-64.373, 49.9258], [-64.1315, 49.9416], [-63.2919, 49.8169], [-62.8584, 49.7055], [-61.8171, 49.2835], [-61.6961, 49.139], [-61.8011, 49.094]]], [[[-125.1842, 50.0972], [-125.3585, 50.3116], [-125.196, 50.3897], [-125.0739, 50.2206], [-125.1842, 50.0972]]], [[[-127.1973, 50.6403], [-126.701, 50.5156], [-126.2039, 50.4539], [-125.4821, 50.3167], [-125.2332, 50.0122], [-124.9348, 49.7317], [-124.8306, 49.5302], [-124.6429, 49.4287], [-123.9959, 49.2241], [-123.8201, 49.0836], [-123.6266, 48.8241], [-123.497, 48.582], [-123.2837, 48.455], [-123.5947, 48.3334], [-123.9169, 48.3866], [-124.6893, 48.5975], [-125.1207, 48.7609], [-125.1356, 48.8223], [-124.9274, 49.0143], [-125.3627, 48.9984], [-125.4603, 48.9411], [-125.8286, 49.0918], [-125.7022, 49.1393], [-125.8354, 49.2767], [-126.2436, 49.4427], [-126.5485, 49.4189], [-126.5419, 49.5905], [-126.3476, 49.6609], [-126.5929, 49.7641], [-126.683, 49.8764], [-126.9034, 49.9441], [-127.1143, 49.8797], [-127.2075, 49.9925], [-127.4671, 50.1636], [-127.864, 50.1278], [-127.9059, 50.4452], [-128.2675, 50.6092], [-128.346, 50.7442], [-128.2415, 50.8281], [-127.9181, 50.8605], [-127.7131, 50.8207], [-127.1973, 50.6403]]], [[[-55.4588, 51.5365], [-55.5835, 51.3887], [-56.0312, 51.3283], [-55.9999, 51.1991], [-55.815, 51.1912], [-55.8714, 50.9073], [-56.078, 50.781], [-56.1357, 50.6509], [-56.3825, 50.417], [-56.6939, 50.0597], [-56.8486, 49.7654], [-56.7567, 49.6516], [-56.3765, 49.9336], [-56.2471, 50.0901], [-55.7649, 49.9605], [-55.7176, 49.8291], [-55.892, 49.5803], [-55.678, 49.4347], [-55.376, 49.4897], [-55.2002, 49.4085], [-55.2446, 49.1999], [-54.9827, 49.268], [-54.579, 49.4908], [-54.3561, 49.4152], [-53.9578, 49.4418], [-53.6195, 49.3217], [-53.5733, 49.1413], [-53.758, 49.0354], [-53.853, 48.8113], [-53.966, 48.7067], [-53.6981, 48.6798], [-53.7946, 48.5265], [-53.552, 48.4817], [-53.4113, 48.562], [-53.0207, 48.5718], [-53.1356, 48.4018], [-53.3343, 48.3561], [-53.5311, 48.2317], [-53.695, 47.9211], [-53.8616, 47.7994], [-53.7651, 47.6502], [-53.6037, 47.6622], [-53.2828, 47.9978], [-52.955, 48.0293], [-53.1756, 47.6529], [-53.1223, 47.4549], [-52.945, 47.5526], [-52.7823, 47.7692], [-52.6536, 47.5494], [-52.6835, 47.4265], [-52.9124, 47.1034], [-52.8893, 46.9742], [-53.0697, 46.6812], [-53.2913, 46.7172], [-53.5361, 46.6324], [-53.6164, 46.6803], [-53.5813, 46.9573], [-53.6364, 47.1375], [-53.8601, 46.9396], [-54.0761, 46.8202], [-54.1737, 46.8805], [-54.0927, 47.0861], [-53.8692, 47.387], [-53.9891, 47.7563], [-54.1919, 47.8598], [-54.4345, 47.4625], [-54.8567, 47.3848], [-55.0903, 47.174], [-55.1396, 47.0461], [-55.3156, 46.9059], [-55.7886, 46.8672], [-55.95, 46.9276], [-55.8383, 47.0719], [-55.4916, 47.1606], [-55.1909, 47.4491], [-54.8695, 47.5708], [-55.0746, 47.6578], [-55.3662, 47.6609], [-55.4346, 47.5011], [-55.5762, 47.4651], [-55.8621, 47.5299], [-55.8443, 47.7879], [-56.1506, 47.7746], [-56.2212, 47.6716], [-56.4595, 47.6169], [-56.9524, 47.5744], [-57.9255, 47.6751], [-58.3332, 47.6769], [-59.1169, 47.5708], [-59.2598, 47.6343], [-59.3623, 47.8655], [-59.272, 47.9956], [-58.7105, 48.325], [-58.4923, 48.5132], [-58.7225, 48.5407], [-59.1668, 48.5216], [-58.9065, 48.6501], [-58.7165, 48.5979], [-58.4937, 49.0032], [-58.4038, 49.0843], [-58.0988, 49.0773], [-58.0491, 49.1799], [-58.1909, 49.2587], [-58.2134, 49.3867], [-58.0158, 49.5426], [-57.7126, 50.0249], [-57.4656, 50.4637], [-57.1316, 50.7875], [-56.9765, 51.028], [-56.8055, 51.1445], [-56.7503, 51.2748], [-56.5179, 51.3994], [-56.0256, 51.5685], [-55.6905, 51.4712], [-55.4588, 51.5365]]], [[[-128.3687, 52.4008], [-128.4397, 52.6964], [-128.2484, 52.7412], [-128.3687, 52.4008]]], [[[-80.7318, 52.7472], [-81.0099, 52.7605], [-81.8391, 52.9579], [-82.0392, 53.05], [-81.8473, 53.1862], [-81.3355, 53.2242], [-81.1357, 53.2058], [-80.7653, 52.9233], [-80.7318, 52.7472]]], [[[-131.8535, 53.2298], [-131.6524, 53.103], [-131.6346, 52.9221], [-131.9043, 52.8667], [-131.7274, 52.7563], [-131.4553, 52.7017], [-131.5907, 52.5781], [-131.327, 52.3176], [-131.1426, 52.2911], [-131.2216, 52.1535], [-131.4218, 52.2381], [-131.5621, 52.3999], [-131.8097, 52.5417], [-132.2601, 52.907], [-132.1438, 52.9994], [-132.3455, 53.1361], [-131.8535, 53.2298]]], [[[-128.5525, 52.9397], [-128.5099, 52.5187], [-128.7309, 52.3566], [-128.7664, 52.5983], [-129.0847, 52.8225], [-129.1777, 53.0178], [-129.0332, 53.2799], [-128.6326, 53.1126], [-128.5525, 52.9397]]], [[[-129.8486, 53.1678], [-130.5176, 53.5442], [-130.4519, 53.6312], [-129.9448, 53.4364], [-129.7547, 53.2448], [-129.8486, 53.1678]]], [[[-130.2364, 53.9586], [-130.3842, 53.8439], [-130.6956, 53.9513], [-130.3973, 54.0858], [-130.2364, 53.9586]]], [[[-132.6556, 54.1275], [-132.3444, 54.106], [-132.1345, 54.0343], [-131.7026, 53.9863], [-131.8211, 53.8414], [-131.9223, 53.588], [-131.9281, 53.3791], [-132.0113, 53.2653], [-132.3473, 53.1891], [-132.5204, 53.194], [-132.7475, 53.3105], [-132.6703, 53.4586], [-132.8449, 53.5076], [-133.0522, 53.7782], [-133.0977, 53.9202], [-133.0639, 54.1439], [-132.6556, 54.1275]]], [[[-130.5753, 54.7696], [-130.2142, 55.026], [-130.3494, 54.8147], [-130.5753, 54.7696]]], [[[-78.9356, 56.2662], [-79.1755, 55.8851], [-79.4074, 55.9348], [-79.7647, 55.8068], [-79.4975, 56.0931], [-79.5646, 56.121], [-79.9046, 55.8711], [-80.0009, 55.9322], [-79.5963, 56.2444], [-79.3925, 56.2764], [-79.2725, 56.6004], [-78.9633, 56.4218], [-78.9356, 56.2662]]], [[[-64.407, 60.3671], [-64.8089, 60.4104], [-64.6463, 60.5147], [-64.407, 60.3671]]], [[[-68.2338, 60.241], [-68.3383, 60.3606], [-68.1418, 60.5619], [-67.9141, 60.5397], [-67.8442, 60.3917], [-68.2338, 60.241]]], [[[-64.8326, 61.3661], [-65.394, 61.563], [-65.1298, 61.6857], [-64.7896, 61.6622], [-64.6695, 61.5931], [-64.8326, 61.3661]]], [[[-79.5452, 62.4116], [-79.2864, 62.2476], [-79.324, 62.0261], [-79.7143, 61.6127], [-79.816, 61.5947], [-80.2652, 61.8182], [-80.2601, 62.1092], [-80.0216, 62.3431], [-79.5452, 62.4116]]], [[[-64.8238, 62.5588], [-64.5153, 62.5517], [-64.4784, 62.4178], [-64.9013, 62.421], [-64.8238, 62.5588]]], [[[-70.3371, 62.5488], [-70.7661, 62.5968], [-70.8512, 62.7044], [-70.6743, 62.8069], [-70.4426, 62.7337], [-70.3371, 62.5488]]], [[[-82.0477, 62.9705], [-81.9487, 62.884], [-82.1138, 62.6522], [-82.5684, 62.4032], [-83.0158, 62.2099], [-83.3769, 62.2381], [-83.699, 62.1602], [-83.8994, 62.4764], [-83.7391, 62.5688], [-83.3765, 62.9051], [-82.9657, 62.8739], [-82.7064, 62.9445], [-82.0477, 62.9705]]], [[[-77.8767, 63.4705], [-77.5384, 63.287], [-77.5939, 63.1885], [-77.9424, 63.1144], [-78.4688, 63.3578], [-78.2349, 63.4896], [-77.8767, 63.4705]]], [[[-76.6524, 63.5036], [-76.7831, 63.384], [-77.3649, 63.5884], [-77.1338, 63.6821], [-76.6524, 63.5036]]], [[[-85.0559, 65.4374], [-84.8422, 65.2559], [-84.6125, 65.4472], [-84.2665, 65.3673], [-84.0849, 65.2177], [-83.4071, 65.1038], [-83.2222, 64.968], [-82.6676, 64.7802], [-82.0501, 64.6442], [-81.7871, 64.426], [-81.6761, 64.2127], [-81.7161, 64.0219], [-81.3357, 64.0758], [-81.005, 64.0334], [-80.829, 64.09], [-80.3021, 63.7622], [-81.0462, 63.4615], [-81.9633, 63.6645], [-82.3781, 63.7067], [-82.4671, 63.9269], [-83.034, 64.0232], [-83.0651, 64.159], [-83.4943, 64.0993], [-83.7282, 63.8134], [-84.0221, 63.6599], [-84.3075, 63.5857], [-84.6329, 63.3092], [-84.9616, 63.1971], [-85.4954, 63.1392], [-85.7142, 63.6579], [-85.8048, 63.7065], [-86.5756, 63.6623], [-86.8468, 63.5753], [-87.1889, 63.6723], [-86.8861, 63.9238], [-86.252, 64.1369], [-86.3743, 64.5659], [-86.1883, 65.0102], [-86.1142, 65.4173], [-85.9617, 65.7043], [-85.5547, 65.9186], [-85.241, 65.7954], [-85.1054, 65.6227], [-85.2399, 65.5102], [-85.0559, 65.4374]]], [[[-84.6263, 65.6041], [-84.7829, 65.5702], [-85.1363, 65.821], [-85.1496, 66.0154], [-84.9386, 66.0085], [-84.6917, 65.7932], [-84.6263, 65.6041]]], [[[-83.726, 65.7968], [-83.234, 65.6967], [-83.3816, 65.6301], [-83.8135, 65.7875], [-84.1182, 65.7717], [-84.1433, 65.916], [-83.9504, 66.0276], [-83.7014, 65.9202], [-83.726, 65.7968]]], [[[-73.6217, 67.7839], [-74.3741, 67.7896], [-74.5734, 67.8287], [-74.7066, 68.067], [-74.3794, 68.0935], [-73.4353, 67.9701], [-73.4071, 67.7929], [-73.6217, 67.7839]]], [[[-86.5956, 67.7359], [-86.861, 67.8105], [-86.847, 68.0103], [-86.9598, 68.1004], [-86.7021, 68.3056], [-86.4211, 68.1834], [-86.3825, 67.9272], [-86.5956, 67.7359]]], [[[-75.6758, 68.3225], [-75.1538, 68.234], [-75.1274, 67.5373], [-75.4002, 67.3666], [-75.7801, 67.2836], [-76.6939, 67.2359], [-77.0049, 67.2669], [-77.1571, 67.4083], [-77.3058, 67.7062], [-77.2286, 67.8502], [-76.7403, 68.2313], [-76.3645, 68.3188], [-75.6758, 68.3225]]], [[[-74.8808, 68.3487], [-75.4002, 68.5254], [-75.2874, 68.6878], [-74.9836, 68.6477], [-74.7983, 68.4579], [-74.8808, 68.3487]]], [[[-101.8459, 68.5864], [-102.2663, 68.6636], [-102.0132, 68.8254], [-101.7216, 68.724], [-101.8459, 68.5864]]], [[[-100.2173, 68.8068], [-100.6159, 68.7828], [-100.6117, 68.9901], [-100.1784, 68.9038], [-100.2173, 68.8068]]], [[[-79.2108, 68.8454], [-79.4058, 68.9231], [-79.2427, 69.0491], [-78.9001, 69.1355], [-78.5967, 69.3706], [-78.2289, 69.304], [-78.8528, 68.9158], [-79.2108, 68.8454]]], [[[-76.9953, 69.1437], [-77.3795, 69.274], [-77.3187, 69.4163], [-76.7456, 69.4041], [-76.6874, 69.3277], [-76.9953, 69.1437]]], [[[-95.5136, 69.5736], [-95.3808, 69.5066], [-95.4963, 69.3501], [-95.9948, 69.4698], [-95.8758, 69.606], [-95.5136, 69.5736]]], [[[-78.0291, 69.7148], [-77.9692, 69.6389], [-78.4702, 69.5026], [-78.5787, 69.6389], [-78.0291, 69.7148]]], [[[-79.5941, 69.8104], [-79.365, 69.7124], [-79.5528, 69.6309], [-80.1616, 69.5359], [-80.6525, 69.7505], [-80.2137, 69.802], [-79.9709, 69.739], [-79.5941, 69.8104]]], [[[-97.4394, 69.6427], [-97.2361, 69.6735], [-96.8752, 69.5099], [-96.2999, 69.3443], [-95.9513, 69.0236], [-95.4656, 68.7473], [-95.6856, 68.7358], [-96.4016, 68.4708], [-97.0084, 68.5387], [-97.4721, 68.5438], [-97.8853, 68.6725], [-98.8297, 68.8385], [-99.2541, 68.8632], [-99.5641, 69.0341], [-99.4558, 69.131], [-98.9122, 69.1677], [-98.4559, 69.3346], [-98.5482, 69.545], [-98.2888, 69.6291], [-98.2682, 69.7545], [-97.7907, 69.8617], [-97.4115, 69.7385], [-97.4394, 69.6427]]], [[[-74.7088, 45.0038], [-74.8566, 45.0038], [-75.1794, 44.8994], [-75.7919, 44.4968], [-75.876, 44.4169], [-76.5391, 44.2159], [-76.67, 44.116], [-76.8937, 44.0755], [-77.0269, 43.9804], [-77.0008, 43.8876], [-77.2102, 43.8638], [-77.2696, 43.9352], [-77.5361, 43.9494], [-77.7075, 44.0184], [-77.9916, 43.9542], [-78.3533, 43.928], [-78.9957, 43.8352], [-79.3431, 43.6472], [-79.5425, 43.5782], [-79.7567, 43.3403], [-79.7162, 43.2304], [-79.345, 43.1923], [-79.0592, 43.278], [-79.0661, 43.1061], [-78.9157, 42.9115], [-79.069, 42.8425], [-79.6948, 42.8615], [-80.2135, 42.7783], [-80.4205, 42.5784], [-81.2024, 42.6617], [-81.4808, 42.5879], [-81.833, 42.3761], [-81.9577, 42.25], [-82.3051, 42.1715], [-82.4573, 42.0525], [-82.9832, 41.9883], [-83.1069, 42.0763], [-83.0732, 42.3003], [-82.8817, 42.3798], [-82.8335, 42.3195], [-82.5844, 42.2946], [-82.4316, 42.4173], [-82.5858, 42.498], [-82.5755, 42.6044], [-82.4883, 42.7394], [-82.4173, 43.0174], [-82.2378, 43.0259], [-82.0165, 43.208], [-81.7595, 43.2993], [-81.7238, 43.3921], [-81.731, 44.1096], [-81.5846, 44.3237], [-81.2777, 44.5878], [-81.3669, 44.9769], [-81.6275, 45.266], [-81.3134, 45.2374], [-81.1956, 44.9804], [-80.9136, 44.7948], [-80.8529, 44.6378], [-80.6888, 44.7342], [-80.6067, 44.6271], [-80.082, 44.4772], [-79.9813, 44.6771], [-80.1098, 44.7984], [-79.9992, 44.8555], [-79.8671, 44.7627], [-79.7244, 44.7806], [-80.0456, 45.1054], [-80.1812, 45.3117], [-80.299, 45.3581], [-80.6666, 45.8149], [-81.0021, 45.9612], [-81.1413, 45.9291], [-81.5817, 46.0109], [-81.7467, 46.1004], [-82.1892, 46.1112], [-82.4284, 46.1825], [-83.0102, 46.179], [-83.3492, 46.2254], [-83.5313, 46.2896], [-83.7454, 46.286], [-83.8111, 46.1932], [-84.0377, 46.1587], [-84.1921, 46.5494], [-84.5035, 46.494], [-84.4835, 46.661], [-84.5806, 46.7653], [-84.455, 46.9466], [-84.642, 46.9566], [-84.8062, 47.0437], [-84.6149, 47.3083], [-84.7767, 47.4653], [-85.0289, 47.5676], [-84.9313, 47.9436], [-85.6257, 47.9341], [-85.8255, 47.9602], [-86.1539, 48.2291], [-86.3062, 48.5561], [-86.4775, 48.7535], [-86.6893, 48.7869], [-86.8944, 48.744], [-87.0205, 48.8059], [-87.2537, 48.7535], [-87.4393, 48.8273], [-88.0889, 48.9915], [-88.2483, 48.9272], [-88.2007, 48.8011], [-87.9176, 48.7416], [-88.3792, 48.6227], [-88.3173, 48.7821], [-88.4791, 48.8249], [-88.6528, 48.4704], [-88.8751, 48.5013], [-89.163, 48.4299], [-89.2819, 48.1801], [-89.5776, 48.0019], [-89.9936, 48.0152], [-90.0919, 48.1181], [-90.7444, 48.1048], [-90.8403, 48.2007], [-91.0436, 48.1936], [-91.2207, 48.1048], [-91.5183, 48.0582], [-92.1717, 48.3383], [-92.4145, 48.2766], [-92.5007, 48.4355], [-92.9963, 48.6117], [-93.2579, 48.629], [-93.3781, 48.6165], [-93.3769, 48.617], [-93.3781, 48.6165], [-93.7078, 48.5256], [-94.0552, 48.659], [-94.6209, 48.7427], [-94.705, 48.8086], [-94.8427, 49.1191], [-94.8544, 49.3046], [-95.1554, 49.3697], [-95.162, 48.9917], [-96.2507, 48.9933], [-97.5298, 48.9933], [-99.2354, 48.993], [-100.9409, 48.993], [-102.6465, 48.993], [-103.4992, 48.993], [-105.2046, 48.993], [-106.9103, 48.993], [-108.6157, 48.993], [-109.4684, 48.993], [-110.7478, 48.993], [-112.4532, 48.993], [-114.1589, 48.993], [-115.4379, 48.993], [-116.2906, 48.993], [-117.5697, 48.993], [-119.2754, 48.993], [-120.5544, 48.993], [-121.4071, 48.993], [-122.7888, 48.993], [-122.9241, 49.0747], [-123.0491, 48.993], [-123.1962, 49.1477], [-123.3356, 49.4591], [-123.5305, 49.3974], [-123.859, 49.4829], [-124.0539, 49.6618], [-123.8743, 49.7368], [-123.9722, 49.8921], [-124.1415, 49.7927], [-124.4833, 49.8082], [-124.7823, 50.0202], [-124.7843, 50.0728], [-125.0566, 50.4186], [-125.4763, 50.4971], [-125.6976, 50.4645], [-126.4045, 50.5298], [-126.5172, 50.7244], [-126.3972, 50.807], [-126.6318, 50.9151], [-127.0577, 50.8676], [-127.4412, 50.9894], [-127.7082, 51.1512], [-127.645, 51.4784], [-127.8189, 51.604], [-127.8589, 51.9902], [-128.1023, 51.7884], [-128.1936, 51.9982], [-128.3576, 52.1588], [-128.0375, 52.3182], [-128.0604, 52.4276], [-128.2753, 52.4354], [-128.1088, 52.858], [-128.4519, 52.8766], [-128.5248, 53.1408], [-128.6524, 53.2437], [-129.0809, 53.3673], [-129.1715, 53.5336], [-128.9356, 53.7152], [-128.833, 53.5493], [-128.7048, 53.9186], [-128.9593, 53.8414], [-129.2081, 53.6417], [-129.2842, 53.3931], [-129.5637, 53.2515], [-129.8218, 53.4129], [-129.9119, 53.5513], [-130.0744, 53.5758], [-130.3351, 53.724], [-130.0859, 53.9757], [-130.0433, 54.1335], [-130.2903, 54.2704], [-130.4303, 54.4209], [-130.37, 54.62], [-130.2189, 54.7303], [-129.6666, 55.4365], [-129.9851, 55.3589], [-130.093, 55.6319], [-130.0251, 55.8882], [-130.0229, 56.0145], [-130.4131, 56.1226], [-130.4772, 56.2307], [-130.7418, 56.3407], [-131.0829, 56.4049], [-131.5751, 56.5989], [-131.8242, 56.59], [-131.8661, 56.7928], [-132.1043, 56.8568], [-132.0315, 57.0266], [-132.338, 57.0794], [-132.2321, 57.1986], [-132.5504, 57.5], [-133.2752, 58.2229], [-133.4011, 58.4109], [-133.8208, 58.7049], [-134.2185, 58.8498], [-134.4407, 59.0853], [-134.9439, 59.2882], [-135.0713, 59.4413], [-135.051, 59.5787], [-135.4758, 59.7934], [-135.9346, 59.6627], [-136.3219, 59.6049], [-136.4664, 59.4591], [-136.4666, 59.28], [-136.5787, 59.1522], [-136.8133, 59.15], [-137.4386, 58.9032], [-137.5932, 59.2263], [-138.6322, 59.7783], [-138.7054, 59.9012], [-139.0434, 59.9934], [-139.1852, 60.0836], [-139.0794, 60.3437], [-139.6764, 60.3283], [-139.9734, 60.1831], [-140.4528, 60.2998], [-140.5253, 60.2184], [-141.0021, 60.3003], [-141.0021, 60.8847], [-141.0021, 62.0535], [-141.0021, 63.2222], [-141.0021, 64.0989], [-141.0021, 65.2677], [-141.0021, 66.7287], [-141.0021, 68.1898], [-141.0021, 69.6509], [-140.405, 69.6025], [-139.9767, 69.6218], [-139.1815, 69.5155], [-138.6899, 69.3169], [-138.1283, 69.1519], [-137.2598, 68.9642], [-136.7174, 68.8892], [-136.1224, 68.8823], [-135.3622, 68.6965], [-135.4068, 68.829], [-135.8763, 68.9169], [-135.9102, 69.1115], [-135.6914, 69.311], [-135.255, 69.3237], [-135.1409, 69.4677], [-134.494, 69.468], [-134.4516, 69.6655], [-134.242, 69.6688], [-133.8799, 69.5077], [-134.165, 69.2806], [-133.1632, 69.4338], [-132.8402, 69.6507], [-132.334, 69.7519], [-131.934, 69.7534], [-131.4409, 69.9178], [-131.1364, 69.907], [-130.9262, 70.0517], [-130.4985, 70.1431], [-129.9449, 70.091], [-129.6482, 69.9978], [-130.9601, 69.632], [-131.8628, 69.5494], [-132.3309, 69.3079], [-132.6867, 69.2598], [-133.3789, 68.8867], [-132.706, 68.8148], [-132.7188, 69.0791], [-131.9196, 69.2904], [-131.7884, 69.432], [-131.0134, 69.4287], [-130.6607, 69.4813], [-130.3536, 69.6558], [-129.5721, 69.8267], [-129.2649, 69.8555], [-128.9715, 69.7124], [-128.3867, 69.9603], [-128.2786, 70.108], [-127.765, 70.2219], [-128.1701, 70.4184], [-127.7528, 70.5171], [-127.1385, 70.2392], [-126.6123, 69.7303], [-126.0638, 69.4671], [-125.3869, 69.3493], [-125.1669, 69.4797], [-125.3569, 69.626], [-124.7678, 69.99], [-124.4445, 70.1105], [-124.407, 69.7674], [-124.1384, 69.6531], [-124.4813, 69.4251], [-124.4261, 69.3794], [-123.6091, 69.3774], [-123.2136, 69.5414], [-123.0258, 69.81], [-122.0701, 69.8162], [-121.5312, 69.7758], [-120.9623, 69.6604], [-120.2925, 69.4205], [-119.8529, 69.3423], [-118.8687, 69.2571], [-118.0952, 69.0429], [-117.3114, 68.9349], [-116.0651, 68.8554], [-116.2516, 68.958], [-115.6313, 68.9726], [-114.9938, 68.8501], [-114.4139, 68.6597], [-113.9644, 68.3991], [-114.096, 68.2668], [-114.7652, 68.2701], [-115.1269, 68.1321], [-115.1671, 68.0185], [-115.4268, 67.9234], [-115.1332, 67.8191], [-114.2671, 67.7312], [-113.6818, 67.7], [-112.4352, 67.6848], [-112.2368, 67.731], [-111.5758, 67.7568], [-111.1921, 67.8225], [-110.9901, 67.7907], [-110.372, 67.9543], [-110.0426, 67.9772], [-109.6305, 67.7328], [-109.0812, 67.7106], [-108.95, 67.494], [-108.5929, 67.591], [-108.3469, 67.4035], [-107.9093, 67.1627], [-108.2209, 67.0506], [-107.9579, 66.7813], [-107.7104, 66.7401], [-107.7459, 66.9616], [-107.6263, 67.003], [-107.1564, 66.8819], [-107.644, 67.3848], [-107.6498, 67.5113], [-107.9721, 67.7321], [-107.763, 67.9068], [-107.761, 68.0322], [-106.8357, 68.1285], [-106.4045, 68.3194], [-105.7812, 68.5265], [-105.9322, 68.6366], [-106.458, 68.5165], [-106.6085, 68.3574], [-106.9458, 68.3745], [-107.1462, 68.3041], [-107.6194, 68.3312], [-107.7342, 68.1738], [-108.261, 68.1498], [-108.6865, 68.2772], [-108.3134, 68.6109], [-107.4359, 68.689], [-106.1646, 68.9198], [-105.7979, 68.8647], [-105.5398, 68.7187], [-105.4286, 68.4583], [-105.1949, 68.3303], [-104.6365, 68.214], [-104.4868, 68.0633], [-104.1935, 68.0311], [-103.4741, 68.115], [-102.692, 67.8116], [-102.2097, 67.7328], [-101.555, 67.6931], [-100.4561, 67.8396], [-99.773, 67.8149], [-99.0321, 67.7188], [-98.4171, 67.8265], [-97.4549, 67.617], [-97.1554, 67.7264], [-97.2066, 67.8551], [-97.7391, 67.9783], [-98.1106, 67.903], [-98.4384, 68.0646], [-98.3809, 68.1326], [-98.633, 68.3312], [-98.2184, 68.3174], [-97.7943, 68.3876], [-97.9388, 68.5105], [-97.2659, 68.453], [-96.9766, 68.2555], [-96.4802, 68.2428], [-96.4393, 68.151], [-96.036, 68.1578], [-96.199, 67.7177], [-96.3714, 67.5539], [-96.0125, 67.2709], [-95.7826, 67.1937], [-95.2588, 67.2625], [-95.4634, 67.6103], [-95.6506, 67.7375], [-95.4608, 68.0213], [-95.1258, 68.0833], [-94.7443, 68.0709], [-93.9278, 68.4739], [-93.6517, 68.5431], [-93.6815, 68.8874], [-94.4784, 68.7427], [-94.5626, 68.9116], [-94.0836, 69.1231], [-94.2547, 69.3137], [-93.6126, 69.4027], [-94.3382, 69.4742], [-94.6338, 69.6495], [-94.8224, 69.5778], [-96.0503, 69.8311], [-96.4924, 70.1249], [-96.5456, 70.3271], [-96.2265, 70.5418], [-96.549, 70.8088], [-96.4056, 71.2737], [-96.1397, 71.3965], [-95.5642, 71.3368], [-95.4455, 71.5054], [-95.8376, 71.5982], [-95.2013, 71.9036], [-94.557, 71.9791], [-94.3084, 71.7649], [-93.8101, 71.7662], [-93.7629, 71.6382], [-93.2564, 71.4609], [-92.9488, 71.2622], [-92.8826, 71.0693], [-92.9814, 70.8522], [-92.3883, 70.6505], [-92.049, 70.3898], [-91.564, 70.1782], [-91.9951, 70.1431], [-92.2903, 70.2399], [-92.5118, 70.1038], [-91.9767, 70.0386], [-92.751, 69.7139], [-92.3116, 69.6728], [-91.9119, 69.5312], [-91.3843, 69.6495], [-91.2882, 69.5432], [-90.5549, 69.5044], [-90.8221, 69.2904], [-91.2372, 69.2856], [-90.7449, 69.106], [-90.4683, 68.8639], [-90.5738, 68.4748], [-90.2477, 68.2675], [-89.8795, 68.5216], [-89.6667, 69.0146], [-89.3519, 69.227], [-89.0568, 69.266], [-88.6377, 69.0589], [-88.0413, 68.8117], [-87.8103, 68.4042], [-87.8926, 68.2482], [-88.347, 68.2884], [-88.3139, 67.9503], [-88.1958, 67.7659], [-87.2663, 67.1839], [-86.5363, 67.5162], [-86.3697, 67.8247], [-85.9526, 68.0724], [-85.7311, 68.445], [-85.7337, 68.6301], [-85.5178, 68.7698], [-85.275, 68.7413], [-84.9161, 68.9622], [-84.8622, 69.074], [-85.3869, 69.2318], [-85.5074, 69.8453], [-85.0198, 69.8049], [-84.2416, 69.8351], [-83.6654, 69.6997], [-82.6183, 69.691], [-82.3741, 69.6418], [-82.642, 69.4585], [-82.3098, 69.4101], [-81.9518, 69.276], [-81.4123, 69.1981], [-81.3286, 69.12], [-81.9516, 68.9091], [-81.381, 68.8501], [-81.2816, 68.6572], [-81.5268, 68.556], [-82.0064, 68.4626], [-82.5526, 68.4464], [-81.9764, 67.862], [-81.4123, 67.5954], [-81.2702, 67.4598], [-81.4675, 67.0698], [-81.8746, 66.9879], [-82.1984, 66.7647], [-82.6416, 66.5876], [-82.9488, 66.5507], [-83.4065, 66.3712], [-84.0501, 66.7394], [-84.5384, 66.9729], [-84.7376, 66.9335], [-84.223, 66.6825], [-83.8259, 66.29], [-84.2931, 66.2919], [-84.4784, 66.1794], [-85.1916, 66.3696], [-85.604, 66.5683], [-86.0632, 66.5203], [-86.6331, 66.5314], [-86.7469, 66.4171], [-86.5847, 66.3219], [-86.0007, 66.1867], [-86.0429, 66.0225], [-87.2914, 65.3549], [-87.9701, 65.3489], [-88.6726, 65.6114], [-89.7495, 65.9359], [-89.9241, 65.7804], [-89.2419, 65.4463], [-88.974, 65.3482], [-88.1978, 65.2799], [-87.3919, 65.2606], [-87.0275, 65.1982], [-87.0286, 65.0637], [-87.2805, 64.8262], [-87.8851, 64.4005], [-88.1057, 64.1832], [-88.653, 64.0094], [-89.4036, 64.0401], [-90.1418, 63.9819], [-90.0135, 63.8044], [-90.2453, 63.6419], [-90.5964, 63.6612], [-90.9457, 63.5877], [-91.5387, 63.7255], [-91.842, 63.6976], [-91.3301, 63.5068], [-90.7466, 63.3516], [-90.6907, 63.1105], [-90.8712, 62.9459], [-91.1148, 62.9217], [-91.4491, 62.804], [-92.0341, 62.8635], [-92.3613, 62.8194], [-92.2072, 62.5854], [-92.5515, 62.5468], [-92.8658, 62.3062], [-93.0162, 62.0927], [-93.372, 61.9289], [-93.4207, 61.7059], [-93.9127, 61.4815], [-94.0607, 61.3179], [-94.0678, 61.1388], [-94.6467, 60.4163], [-94.7858, 59.9534], [-94.7883, 59.2678], [-94.8702, 59.088], [-94.7135, 58.9033], [-94.2871, 58.716], [-93.7799, 58.7726], [-93.2782, 58.7564], [-93.1545, 58.6945], [-93.1001, 58.4898], [-92.8418, 58.0759], [-92.7018, 57.7779], [-92.4328, 57.3204], [-92.6141, 57.039], [-92.249, 57.0091], [-91.1113, 57.2412], [-90.5922, 57.2246], [-89.7909, 56.9813], [-88.9484, 56.8512], [-88.447, 56.6086], [-88.0751, 56.4673], [-87.8782, 56.3417], [-87.5608, 56.0564], [-86.377, 55.7733], [-85.8305, 55.6569], [-85.4073, 55.4312], [-85.061, 55.2856], [-84.5179, 55.259], [-83.9107, 55.3147], [-83.2144, 55.2146], [-82.9863, 55.2314], [-82.8677, 55.1607], [-82.5775, 55.1487], [-82.3082, 54.9982], [-82.2195, 54.8136], [-82.4181, 54.3559], [-82.3941, 54.1806], [-82.2399, 54.0447], [-82.1414, 53.8177], [-82.1906, 53.6109], [-82.1591, 53.2642], [-82.2916, 53.0662], [-82.2605, 52.9612], [-82.0199, 52.8116], [-81.5994, 52.4325], [-81.6613, 52.2938], [-81.2851, 52.0892], [-80.9686, 51.9722], [-80.6579, 51.7582], [-80.368, 51.3299], [-80.1036, 51.2828], [-79.8362, 51.1734], [-79.4975, 51.5698], [-79.2642, 51.552], [-78.8275, 51.43], [-78.7314, 51.4974], [-78.9777, 51.7339], [-78.8281, 51.9631], [-78.4917, 52.2521], [-78.5571, 52.4918], [-78.7238, 52.6278], [-78.7216, 52.8564], [-78.8982, 53.0433], [-78.9919, 53.4104], [-79.1131, 53.7171], [-79.0032, 53.8366], [-78.9959, 54.0026], [-79.2418, 54.0989], [-79.6655, 54.6975], [-78.9091, 54.8815], [-78.3037, 55.0686], [-77.8911, 55.2364], [-77.3249, 55.5555], [-76.6504, 56.1073], [-76.5463, 56.3587], [-76.5197, 56.7069], [-76.573, 57.1813], [-76.891, 57.7581], [-77.1569, 58.0189], [-77.684, 58.2914], [-78.0136, 58.3991], [-78.5152, 58.6823], [-78.4586, 58.8734], [-77.9876, 59.2456], [-77.7606, 59.3801], [-77.8591, 59.4757], [-77.7261, 59.676], [-77.4854, 59.6846], [-77.3318, 59.7967], [-77.3118, 60.0424], [-77.6816, 60.427], [-77.5156, 60.5631], [-77.7908, 60.6399], [-77.8716, 60.7859], [-78.1596, 60.8523], [-77.83, 61.084], [-77.7268, 61.2307], [-77.7362, 61.4373], [-77.5144, 61.5563], [-77.9474, 61.7618], [-78.1372, 62.1074], [-78.0682, 62.3555], [-77.6039, 62.5313], [-77.3724, 62.5725], [-76.8795, 62.5253], [-75.817, 62.3158], [-75.6756, 62.2496], [-75.3411, 62.312], [-74.6899, 62.1835], [-73.764, 62.4687], [-73.63, 62.4543], [-72.8817, 62.1253], [-72.6709, 62.1138], [-72.5056, 61.9227], [-72.0814, 61.7283], [-71.6384, 61.6171], [-71.841, 61.4659], [-71.7434, 61.3372], [-71.4227, 61.159], [-70.7233, 61.0551], [-70.2792, 61.0687], [-70.0952, 60.8802], [-69.9093, 60.86], [-69.472, 61.011], [-69.4334, 60.8143], [-69.6404, 60.6898], [-69.7594, 60.4403], [-69.6331, 60.2203], [-69.6737, 60.0759], [-69.9629, 60.0177], [-69.6302, 59.8218], [-69.5794, 59.6751], [-69.6924, 59.4884], [-69.682, 59.3417], [-69.4001, 59.3377], [-69.4141, 59.0869], [-69.5317, 58.8692], [-69.8675, 58.8561], [-70.16, 58.7893], [-69.8786, 58.6969], [-69.6506, 58.7283], [-69.1735, 58.8967], [-68.6981, 58.9044], [-68.4748, 58.8235], [-68.3265, 58.5953], [-67.9812, 58.4612], [-67.8558, 58.2726], [-67.5697, 58.2135], [-67.0195, 58.4328], [-66.608, 58.5489], [-66.3625, 58.7912], [-65.9279, 58.6108], [-66.0431, 58.8205], [-65.6061, 59.1106], [-65.607, 59.2132], [-65.4075, 59.5394], [-65.4335, 59.7765], [-65.2122, 59.8095], [-64.9312, 60.2519], [-64.7059, 60.3362], [-64.4995, 60.2683], [-64.2836, 60.0641], [-63.9289, 59.6448], [-63.7502, 59.5126], [-63.9455, 59.3801], [-63.5398, 59.3328], [-63.1854, 58.8579], [-63.0502, 58.8781], [-62.874, 58.6725], [-63.1024, 58.5458], [-62.5939, 58.4741], [-62.6745, 58.3192], [-62.981, 58.0933], [-62.4863, 58.1541], [-62.3056, 57.9723], [-62.1174, 57.9641], [-61.899, 57.8613], [-61.9948, 57.7694], [-61.968, 57.6119], [-62.3387, 57.4845], [-61.851, 57.3812], [-61.9775, 57.2479], [-61.6286, 57.1833], [-61.3337, 57.0106], [-61.3716, 56.6808], [-61.855, 56.5843], [-61.9405, 56.4235], [-61.5145, 56.3902], [-61.301, 56.0471], [-61.0893, 55.8662], [-60.8319, 55.9579], [-60.5926, 55.8147], [-60.3409, 55.7846], [-60.4084, 55.6496], [-60.1924, 55.4809], [-60.3609, 55.3662], [-60.4501, 55.2], [-59.9303, 55.2594], [-58.997, 55.1494], [-58.7802, 54.8384], [-58.3982, 54.7741], [-58.1951, 54.8659], [-57.9625, 54.8757], [-57.9292, 54.7732], [-57.4045, 54.5705], [-57.6993, 54.3865], [-58.1514, 54.3504], [-58.4353, 54.2281], [-58.6333, 54.0496], [-58.8408, 54.0445], [-59.4966, 53.8341], [-59.8231, 53.8346], [-60.0142, 53.7616], [-60.1449, 53.5962], [-60.1003, 53.487], [-60.2903, 53.3915], [-60.1483, 53.3065], [-59.8291, 53.5045], [-59.3222, 53.6437], [-58.9195, 53.8754], [-58.3267, 54.0518], [-58.192, 54.2281], [-57.4161, 54.1628], [-57.1489, 53.8476], [-57.1569, 53.7569], [-57.4896, 53.633], [-57.3318, 53.469], [-56.8408, 53.7394], [-56.465, 53.7651], [-56.3541, 53.6246], [-56.1102, 53.5875], [-55.8594, 53.3438], [-55.7979, 53.212], [-55.8925, 53.0005], [-55.8299, 52.8784], [-55.8403, 52.5075], [-55.706, 52.4283], [-55.8336, 52.3104], [-55.6951, 52.1378], [-56.0174, 51.9293], [-56.976, 51.4577], [-57.2991, 51.4784], [-57.7697, 51.426], [-58.0227, 51.3221], [-58.5103, 51.2951], [-58.6377, 51.1717], [-59.1655, 50.7799], [-59.3781, 50.6754], [-59.6118, 50.492], [-59.8153, 50.4184], [-59.8863, 50.3165], [-60.0801, 50.2545], [-60.9564, 50.2055], [-61.2897, 50.202], [-61.725, 50.1041], [-61.9196, 50.2328], [-62.7155, 50.3016], [-63.1357, 50.2939], [-63.2387, 50.2426], [-63.5866, 50.2581], [-63.7336, 50.3047], [-64.1704, 50.2694], [-64.509, 50.3089], [-64.868, 50.2754], [-65.2686, 50.3201], [-65.7624, 50.2592], [-65.9555, 50.2941], [-66.1255, 50.2011], [-66.4955, 50.2119], [-66.9411, 49.9937], [-67.2343, 49.6018], [-67.2619, 49.4511], [-67.3719, 49.3486], [-68.0562, 49.2567], [-68.2819, 49.1972], [-68.9291, 48.829], [-69.2308, 48.5736], [-69.375, 48.3862], [-69.775, 48.0981], [-69.9055, 47.8322], [-70.3001, 47.5029], [-70.4481, 47.4234], [-70.7058, 47.1398], [-71.1157, 46.925], [-71.2678, 46.7958], [-71.7574, 46.6737], [-71.8797, 46.687], [-72.2046, 46.5587], [-72.2568, 46.485], [-72.6802, 46.2875], [-72.981, 46.2098], [-73.4766, 45.7384], [-73.7118, 45.7113], [-74.0379, 45.5018], [-73.974, 45.3451], [-74.3583, 45.2062], [-74.7088, 45.0038]]], [[[-96.7822, 72.9365], [-97.0927, 72.9969], [-97.0692, 73.1301], [-96.5985, 73.0737], [-96.7822, 72.9365]]], [[[-114.5215, 72.593], [-113.5001, 72.6944], [-113.4499, 72.8633], [-113.208, 72.981], [-112.7537, 72.986], [-112.0481, 72.8882], [-111.2698, 72.7137], [-111.3554, 72.5721], [-111.1399, 72.3652], [-110.7815, 72.5339], [-110.2051, 72.6613], [-110.1971, 72.7588], [-110.5535, 72.8615], [-110.6607, 73.0083], [-110.0084, 72.9836], [-109.122, 72.7264], [-108.7549, 72.551], [-108.2105, 71.7511], [-107.9252, 71.6386], [-107.3469, 71.8193], [-107.306, 71.8947], [-107.6958, 72.1493], [-107.9326, 72.5204], [-108.2382, 73.1059], [-107.7199, 73.3289], [-107.1134, 73.1922], [-106.9509, 73.2761], [-106.4822, 73.1962], [-105.8128, 73.0107], [-105.415, 72.7883], [-105.2341, 72.415], [-104.767, 71.8677], [-104.3859, 71.5769], [-104.3495, 71.434], [-104.5696, 71.104], [-104.1668, 70.9273], [-103.9535, 70.7626], [-103.105, 70.5102], [-102.7504, 70.5218], [-101.9898, 70.285], [-101.6411, 70.2657], [-101.5625, 70.1349], [-101.1486, 70.1476], [-100.9732, 70.0295], [-100.9351, 69.7152], [-101.6477, 69.6986], [-102.2343, 69.8422], [-102.5959, 69.7179], [-102.5408, 69.5921], [-102.9197, 69.5648], [-103.4648, 69.6444], [-102.8842, 69.3413], [-102.4467, 69.4764], [-101.9756, 69.407], [-102.0641, 69.2811], [-101.8226, 69.2172], [-101.857, 69.0239], [-102.8951, 68.8237], [-103.4681, 68.8085], [-104.3528, 68.9282], [-104.5715, 68.8721], [-105.1059, 68.9205], [-105.0195, 69.0814], [-106.1408, 69.1622], [-106.3412, 69.2243], [-106.3614, 69.381], [-106.659, 69.4396], [-107.0335, 69.1808], [-107.4398, 69.0021], [-108.3649, 68.9349], [-108.946, 68.7597], [-109.9585, 68.6304], [-111.3108, 68.542], [-113.1277, 68.4941], [-113.6169, 68.8385], [-113.6941, 69.195], [-114.3231, 69.2691], [-115.1592, 69.2647], [-116.1015, 69.3372], [-116.5134, 69.4247], [-117.1041, 69.8042], [-117.1354, 70.1001], [-116.5539, 70.1751], [-114.5923, 70.3125], [-112.6378, 70.2252], [-111.7838, 70.273], [-111.7259, 70.352], [-112.1143, 70.4468], [-113.7573, 70.6907], [-114.8406, 70.6214], [-115.991, 70.5864], [-116.3272, 70.6237], [-116.9926, 70.6037], [-117.587, 70.6296], [-118.2642, 70.8882], [-118.269, 71.0347], [-117.814, 71.1585], [-116.2283, 71.3592], [-115.9804, 71.4693], [-117.3371, 71.4347], [-117.7233, 71.3907], [-118.1883, 71.436], [-117.7424, 71.6593], [-118.3716, 71.6399], [-118.8683, 71.6868], [-118.9877, 71.7643], [-118.9447, 71.9855], [-118.5898, 72.1675], [-118.2135, 72.2629], [-118.4813, 72.4277], [-118.3745, 72.5339], [-117.5517, 72.8311], [-116.5731, 73.0548], [-114.6382, 73.3727], [-114.164, 73.2699], [-114.0516, 73.0711], [-114.1091, 72.8611], [-114.5215, 72.593]]], [[[-105.289, 72.9199], [-106.0711, 73.1965], [-106.1801, 73.3041], [-106.9216, 73.4799], [-106.614, 73.6956], [-105.5122, 73.7658], [-105.1146, 73.7444], [-104.6489, 73.6144], [-104.583, 73.3538], [-104.7909, 73.1676], [-105.289, 72.9199]]], [[[-79.5373, 73.6545], [-78.2866, 73.6659], [-77.2066, 73.4996], [-76.2895, 73.081], [-76.09, 72.881], [-76.4005, 72.8207], [-77.8361, 72.8968], [-78.3141, 72.882], [-79.1342, 72.7717], [-79.5007, 72.7559], [-79.9368, 72.8635], [-80.1833, 73.2246], [-80.6179, 73.2708], [-80.8241, 73.3807], [-80.849, 73.7212], [-80.4124, 73.7655], [-79.5373, 73.6545]]], [[[-86.5894, 71.0107], [-86.1271, 71.0489], [-85.6439, 71.1525], [-85.0948, 71.1519], [-84.7896, 71.0933], [-84.658, 71.5145], [-84.6995, 71.6315], [-85.2506, 71.6752], [-85.9116, 71.9866], [-85.406, 72.2148], [-84.6429, 72.1895], [-84.8495, 72.4063], [-85.3412, 72.4217], [-85.6379, 72.6331], [-85.6446, 72.7745], [-85.2621, 72.9541], [-85.4548, 73.1055], [-85.0184, 73.3356], [-84.4161, 73.4566], [-84.089, 73.4595], [-83.7298, 73.5757], [-82.6596, 73.7296], [-81.9462, 73.7298], [-81.4061, 73.6346], [-81.1517, 73.3141], [-80.6811, 73.1658], [-80.592, 72.9277], [-80.2748, 72.7455], [-80.6752, 72.5585], [-80.6046, 72.4259], [-80.9413, 72.2102], [-80.8023, 71.9291], [-80.3862, 72.1489], [-80.1161, 72.2141], [-80.0418, 72.3944], [-79.6538, 72.3322], [-79.3233, 72.3908], [-79.0001, 72.272], [-78.4531, 72.4352], [-78.3503, 72.6003], [-77.7533, 72.7248], [-76.6979, 72.6951], [-76.1888, 72.5721], [-75.7042, 72.5714], [-75.2943, 72.4809], [-74.9032, 72.1005], [-74.3774, 72.0665], [-74.2126, 71.9387], [-74.7008, 71.6754], [-73.7136, 71.7198], [-73.7129, 71.5875], [-73.4817, 71.4793], [-72.9019, 71.6777], [-72.5806, 71.6069], [-72.1165, 71.5929], [-71.6407, 71.5163], [-71.256, 71.3618], [-71.2194, 71.2389], [-71.7425, 71.0469], [-71.1863, 70.9781], [-70.7926, 71.1033], [-70.6552, 70.8709], [-71.0218, 70.6741], [-71.5858, 70.566], [-71.2757, 70.5003], [-70.5609, 70.7382], [-69.9499, 70.8449], [-69.1686, 70.7642], [-68.4956, 70.6103], [-68.3636, 70.4812], [-68.7938, 70.3245], [-69.2987, 70.2767], [-70.0615, 70.0708], [-69.7958, 70.047], [-69.4831, 70.16], [-68.9184, 70.2071], [-68.7234, 70.1456], [-69.0083, 69.9789], [-68.744, 69.9414], [-68.305, 70.0874], [-68.2036, 70.2814], [-67.8553, 70.2818], [-67.3637, 70.0344], [-67.1726, 69.7996], [-67.2594, 69.7212], [-67.8063, 69.7774], [-68.1139, 69.7543], [-68.513, 69.5774], [-68.0582, 69.476], [-67.3608, 69.4724], [-66.6853, 69.2857], [-66.8029, 69.1528], [-67.4838, 69.167], [-67.9386, 69.248], [-68.3039, 69.1663], [-67.7517, 69.0387], [-67.8831, 68.7839], [-68.3243, 68.8441], [-68.038, 68.5507], [-66.7625, 68.4246], [-67.033, 68.3261], [-66.729, 68.129], [-66.5308, 68.2504], [-66.2125, 68.2804], [-66.2251, 67.9588], [-65.8642, 67.9228], [-65.7018, 67.9867], [-65.3003, 67.9394], [-64.9769, 68.0433], [-65.0211, 67.7876], [-64.5275, 67.8127], [-64.1562, 67.623], [-64.0079, 67.3473], [-63.5915, 67.3775], [-63.0402, 67.235], [-63.2584, 67.0246], [-62.9623, 66.9494], [-62.3797, 66.9054], [-61.9685, 67.019], [-61.2997, 66.6488], [-61.6526, 66.5032], [-61.5707, 66.3729], [-61.8626, 66.3128], [-62.4057, 66.3159], [-62.5335, 66.2271], [-61.9915, 66.0354], [-62.4973, 65.9741], [-62.3819, 65.8334], [-62.6589, 65.6399], [-62.969, 65.6223], [-63.4208, 65.7086], [-63.3642, 65.5433], [-63.4018, 65.1185], [-63.6066, 64.9281], [-63.8956, 65.1092], [-64.152, 65.0661], [-64.4698, 65.2528], [-64.6653, 65.1689], [-65.1086, 65.4638], [-65.4015, 65.7639], [-65.3054, 66.0085], [-65.8256, 65.997], [-65.8572, 66.0864], [-66.4771, 66.2798], [-66.7873, 66.5556], [-67.3178, 66.5203], [-67.1917, 66.4326], [-67.3113, 66.3037], [-67.8833, 66.4675], [-67.7044, 66.2686], [-67.1833, 66.0345], [-67.5509, 65.9215], [-67.828, 65.9652], [-68.1472, 66.1299], [-68.2569, 65.9386], [-67.8665, 65.7737], [-67.9059, 65.5635], [-67.5697, 65.6437], [-67.3034, 65.4829], [-67.326, 65.3567], [-66.8606, 65.0917], [-66.2238, 64.8542], [-65.7679, 64.8535], [-65.2748, 64.6316], [-65.0746, 64.4367], [-65.2131, 64.3033], [-65.5074, 64.3184], [-65.0107, 64.0088], [-64.6784, 64.0281], [-64.4109, 63.7063], [-64.5616, 63.6796], [-64.5144, 63.2639], [-64.6955, 63.2688], [-64.8864, 63.5487], [-65.0688, 63.2635], [-64.6724, 62.9219], [-65.1627, 62.9325], [-65.0466, 62.7015], [-65.2659, 62.715], [-65.7404, 62.9319], [-65.9788, 63.0007], [-66.6364, 63.0802], [-66.9747, 63.2555], [-67.1797, 63.305], [-67.7093, 63.6339], [-67.8378, 63.4493], [-68.4936, 63.7254], [-68.9111, 63.7032], [-68.6705, 63.5136], [-68.1412, 63.1722], [-67.676, 63.0935], [-67.4683, 62.9484], [-66.9795, 62.7009], [-66.6448, 62.6021], [-66.2813, 62.3027], [-65.9801, 62.2088], [-66.1333, 62.1025], [-66.0589, 61.9138], [-66.2566, 61.8684], [-67.4401, 62.1513], [-68.3787, 62.2352], [-69.0823, 62.4052], [-69.3661, 62.5719], [-69.5452, 62.7446], [-69.7996, 62.7905], [-70.2362, 62.7634], [-71.2538, 63.0425], [-71.6171, 63.1871], [-71.9731, 63.4299], [-71.6966, 63.4302], [-71.4557, 63.5123], [-71.7252, 63.706], [-72.223, 63.7089], [-72.5861, 63.9007], [-73.4437, 64.4236], [-73.2782, 64.5603], [-73.627, 64.6025], [-73.9103, 64.5781], [-74.5124, 64.6702], [-74.6343, 64.824], [-74.9194, 64.7654], [-74.64, 64.5572], [-75.0675, 64.4567], [-75.4879, 64.5408], [-75.7151, 64.5244], [-75.7666, 64.3919], [-76.1182, 64.3763], [-76.7238, 64.242], [-77.2825, 64.2804], [-77.7912, 64.367], [-78.1745, 64.6178], [-78.0957, 64.9392], [-77.8762, 65.073], [-77.4474, 65.1616], [-77.4614, 65.3283], [-77.3266, 65.4532], [-76.4817, 65.3697], [-75.8283, 65.2271], [-75.7087, 65.3158], [-75.1662, 65.2838], [-74.9818, 65.3815], [-74.3908, 65.3975], [-74.2369, 65.4838], [-73.5607, 65.5429], [-73.746, 65.7666], [-74.0332, 65.8771], [-74.4341, 66.139], [-73.3574, 66.6364], [-73.0334, 66.7283], [-72.7887, 67.0306], [-72.3648, 67.1334], [-72.2201, 67.2543], [-72.3529, 67.3419], [-72.5763, 67.6587], [-73.0635, 68.107], [-73.3283, 68.2668], [-73.6446, 68.2946], [-73.8794, 68.4295], [-73.7824, 68.578], [-74.27, 68.5411], [-74.648, 68.7076], [-74.9172, 68.9828], [-75.2133, 68.9093], [-75.623, 68.8878], [-76.4034, 68.6923], [-76.6195, 68.7214], [-76.5572, 69.0094], [-75.9537, 69.0307], [-75.6681, 69.1588], [-75.7873, 69.3186], [-76.408, 69.4411], [-76.5203, 69.5166], [-77.1289, 69.6527], [-76.9623, 69.8249], [-77.4942, 69.8362], [-77.6354, 69.9003], [-77.722, 70.1707], [-77.8424, 70.247], [-78.2828, 70.2293], [-78.6215, 70.3533], [-78.9797, 70.5812], [-79.3466, 70.4818], [-79.3475, 70.3722], [-78.8627, 70.2419], [-78.7778, 70.0477], [-79.3033, 69.8948], [-79.6158, 69.8948], [-80.162, 69.996], [-81.0982, 70.0912], [-81.1968, 69.9829], [-82.1387, 69.8413], [-82.4878, 69.8659], [-83.091, 70.004], [-83.8592, 69.9627], [-84.522, 70.0053], [-84.909, 70.0781], [-85.4324, 70.1114], [-85.7799, 70.0366], [-86.3219, 70.1454], [-86.6244, 70.4012], [-87.1225, 70.4119], [-87.9006, 70.2519], [-88.4022, 70.4426], [-88.8483, 70.5229], [-89.2083, 70.7597], [-89.3654, 71.0671], [-88.6957, 71.0455], [-87.8449, 70.9444], [-87.1815, 70.9877], [-87.8724, 71.2085], [-89.0794, 71.2879], [-89.8458, 71.4924], [-90.0251, 71.9489], [-89.6637, 72.158], [-89.8229, 72.2077], [-89.8615, 72.4119], [-89.3577, 72.8041], [-89.2631, 73.0691], [-88.7052, 73.4033], [-87.7197, 73.7229], [-86.7687, 73.8341], [-85.9508, 73.8501], [-85.1105, 73.8081], [-84.9745, 73.6947], [-85.6818, 73.4615], [-86.0864, 73.2602], [-86.6293, 72.8709], [-86.5947, 72.6611], [-86.3226, 72.4609], [-86.3415, 72.1231], [-86.036, 71.7709], [-85.0233, 71.3532], [-85.4053, 71.2267], [-85.9455, 71.1627], [-86.5894, 71.0107]]], [[[-100.002, 73.9459], [-99.158, 73.7316], [-97.5819, 73.8876], [-97.2248, 73.8439], [-97.0017, 73.6666], [-97.3948, 73.5643], [-97.2725, 73.3869], [-97.7958, 73.2852], [-98.437, 73.0002], [-97.7248, 73.0367], [-97.3287, 72.9379], [-97.0519, 72.6367], [-96.5421, 72.6986], [-96.4402, 72.4874], [-96.796, 72.3137], [-96.5929, 72.2046], [-96.7662, 72.0459], [-96.6134, 71.8339], [-97.2222, 71.6734], [-97.5823, 71.6297], [-98.1814, 71.6624], [-98.1987, 71.4409], [-98.663, 71.3021], [-99.1671, 71.3672], [-99.7348, 71.7571], [-100.5944, 72.1524], [-100.9837, 72.2102], [-101.2085, 72.3169], [-101.7239, 72.3149], [-101.9738, 72.486], [-102.4021, 72.5948], [-102.7137, 72.783], [-102.5038, 73.006], [-101.9225, 73.0568], [-101.3506, 72.7463], [-101.0875, 72.7133], [-100.4848, 72.773], [-100.2827, 73.1203], [-100.4388, 73.2546], [-100.8894, 73.2753], [-101.4509, 73.4311], [-101.3232, 73.572], [-100.9759, 73.5998], [-100.9151, 73.8052], [-100.002, 73.9459]]], [[[-98.2704, 73.8685], [-98.9739, 73.8121], [-99.3852, 73.8794], [-98.9045, 74.007], [-98.0611, 74.1047], [-97.8611, 73.9684], [-98.2704, 73.8685]]], [[[-93.4102, 74.1788], [-92.7781, 74.1137], [-92.2228, 73.9724], [-91.6304, 74.0278], [-91.088, 74.0092], [-90.3547, 73.8687], [-90.5656, 73.6863], [-90.9338, 73.5278], [-91.6211, 73.0258], [-92.1181, 72.7539], [-92.3919, 72.7184], [-93.3407, 72.8018], [-94.2114, 72.757], [-93.7706, 72.6682], [-93.5551, 72.4212], [-93.8705, 72.2527], [-94.0376, 72.0288], [-95.1929, 72.0275], [-95.2511, 72.502], [-95.5475, 72.7816], [-95.633, 73.6954], [-95.0595, 73.805], [-95.1525, 73.9329], [-94.9736, 74.0414], [-94.4827, 74.1131], [-93.7846, 74.1184], [-93.4102, 74.1788]]], [[[-119.7363, 74.1126], [-119.2059, 74.1981], [-119.0256, 74.0447], [-118.5441, 74.2447], [-117.5149, 74.2318], [-116.7223, 74.0272], [-115.9577, 73.748], [-115.5107, 73.6188], [-115.4468, 73.4388], [-116.4826, 73.2532], [-117.0655, 73.1072], [-118.9615, 72.6842], [-119.4079, 72.3604], [-119.7674, 72.2438], [-120.18, 72.2126], [-120.4432, 71.6308], [-120.6192, 71.5057], [-121.4722, 71.3889], [-121.7494, 71.4449], [-122.1567, 71.266], [-122.9366, 71.088], [-123.2107, 71.1235], [-124.0077, 71.6775], [-125.2968, 71.9731], [-125.7668, 71.9609], [-125.7626, 72.1376], [-125.3829, 72.4238], [-124.9872, 72.5881], [-125.0005, 72.8134], [-124.5825, 72.9259], [-124.8364, 73.0762], [-124.4243, 73.4186], [-124.1142, 73.5274], [-123.7973, 73.7682], [-124.2607, 73.9533], [-124.6962, 74.3481], [-123.4683, 74.436], [-122.6232, 74.4642], [-121.7479, 74.5405], [-121.3153, 74.5299], [-120.5544, 74.353], [-119.5625, 74.2327], [-119.7363, 74.1126]]], [[[-104.12, 75.0364], [-104.6343, 75.0613], [-104.8875, 75.1478], [-104.6489, 75.3498], [-104.3462, 75.4299], [-103.8042, 75.3456], [-103.6422, 75.1629], [-104.12, 75.0364]]], [[[-93.5427, 75.0279], [-93.5472, 74.691], [-93.9846, 74.6442], [-94.6973, 74.6422], [-95.2861, 74.794], [-95.8654, 74.8304], [-96.2702, 74.9203], [-96.5658, 75.0988], [-96.1803, 75.2402], [-96.1248, 75.3582], [-95.6707, 75.5287], [-95.0495, 75.6219], [-94.4272, 75.5935], [-93.7509, 75.3491], [-93.4976, 75.1369], [-93.5427, 75.0279]]], [[[-94.5266, 75.7493], [-94.9013, 75.9309], [-94.5379, 75.9965], [-94.2962, 75.7881], [-94.5266, 75.7493]]], [[[-118.3281, 75.5797], [-118.8171, 75.5222], [-119.3946, 75.6172], [-118.6262, 75.9062], [-118.1368, 75.9945], [-117.6263, 75.9659], [-118.3281, 75.5797]]], [[[-102.2275, 76.0149], [-102.0475, 75.9277], [-102.5797, 75.7802], [-103.3148, 75.7642], [-103.0416, 75.9188], [-103.7698, 75.8924], [-103.8008, 76.0369], [-104.2425, 76.0469], [-104.3506, 76.1823], [-103.0982, 76.3115], [-102.5841, 76.2817], [-102.49, 76.095], [-102.2275, 76.0149]]], [[[-104.0228, 76.5831], [-103.0513, 76.45], [-103.4721, 76.329], [-104.2707, 76.3264], [-104.5856, 76.6064], [-104.0228, 76.5831]]], [[[-97.7009, 76.4664], [-97.5307, 76.1816], [-97.6017, 75.8512], [-97.8629, 75.738], [-97.4074, 75.6725], [-97.4097, 75.5522], [-97.8782, 75.4162], [-97.7994, 75.1168], [-98.5687, 75.0093], [-99.4205, 75.0437], [-99.6269, 74.9838], [-100.2344, 75.0078], [-100.712, 75.4064], [-100.2797, 75.461], [-99.5912, 75.6554], [-99.9152, 75.6814], [-101.2069, 75.5904], [-101.4613, 75.6079], [-102.5413, 75.5135], [-102.7974, 75.5997], [-102.2521, 75.7777], [-101.5996, 75.8327], [-101.4314, 75.9919], [-101.8722, 76.0831], [-101.529, 76.2174], [-102.1378, 76.2848], [-101.8586, 76.4391], [-101.3397, 76.4104], [-101.0558, 76.2456], [-99.9783, 76.0294], [-100.8297, 76.5239], [-100.388, 76.6135], [-99.0237, 76.6146], [-98.7107, 76.6939], [-97.7009, 76.4664]]], [[[-108.3869, 76.0667], [-107.8522, 76.0578], [-107.7553, 75.9403], [-107.1356, 75.8787], [-106.3967, 76.0602], [-105.6043, 75.9299], [-105.4809, 75.7457], [-105.8625, 75.1915], [-106.0927, 75.0894], [-107.1533, 74.9272], [-107.8201, 75], [-108.3545, 74.9425], [-108.8312, 75.0648], [-109.5031, 74.8828], [-110.1758, 74.84], [-110.9408, 74.6386], [-111.7287, 74.5019], [-112.5193, 74.4169], [-113.5141, 74.43], [-114.2682, 74.6043], [-114.1324, 74.7661], [-112.836, 74.9755], [-111.671, 75.0195], [-111.0334, 75.2268], [-112.2554, 75.1338], [-112.597, 75.2117], [-112.9515, 75.1078], [-113.7118, 75.0686], [-114.1686, 75.2394], [-114.4518, 75.0879], [-115.0202, 74.9762], [-115.4781, 75.1041], [-115.7289, 74.9683], [-116.4762, 75.1718], [-117.0049, 75.156], [-117.6001, 75.2717], [-117.1542, 75.4729], [-116.0771, 75.4929], [-116.4256, 75.5853], [-117.0253, 75.6014], [-116.9726, 75.7457], [-116.3896, 75.8081], [-116.6544, 75.9293], [-116.6098, 76.0738], [-115.7968, 76.2527], [-115.5806, 76.4375], [-114.9984, 76.4975], [-114.1939, 76.4515], [-113.8235, 76.2067], [-113.1712, 76.2577], [-112.6975, 76.2016], [-111.5132, 75.8107], [-111.0527, 75.5484], [-110.4594, 75.5553], [-109.0865, 75.5065], [-108.9449, 75.6989], [-109.796, 75.8631], [-109.4547, 76.0211], [-109.7101, 76.2125], [-110.2008, 76.2895], [-110.2701, 76.4169], [-109.8649, 76.5223], [-109.3386, 76.76], [-108.8317, 76.8211], [-108.467, 76.7376], [-108.612, 76.6298], [-108.5125, 76.4389], [-108.1232, 76.2333], [-108.3869, 76.0667]]], [[[-89.7265, 76.5074], [-90.0544, 76.4952], [-90.5562, 76.7345], [-89.9487, 76.8361], [-89.6955, 76.7411], [-89.7265, 76.5074]]], [[[-113.5607, 76.7434], [-114.7514, 76.7589], [-114.4198, 76.8754], [-113.8916, 76.895], [-113.5607, 76.7434]]], [[[-94.2949, 76.9125], [-93.8111, 76.9141], [-92.7162, 76.6029], [-91.3051, 76.6808], [-90.7384, 76.5814], [-90.8547, 76.4373], [-89.2845, 76.3017], [-89.4065, 76.1892], [-90.3121, 76.1578], [-90.2515, 76.0535], [-89.205, 75.7619], [-89.2805, 75.5642], [-88.5691, 75.6452], [-88.2014, 75.512], [-87.257, 75.6177], [-86.8144, 75.4914], [-86.2362, 75.4064], [-86.0687, 75.5022], [-84.9867, 75.645], [-84.6049, 75.6534], [-83.932, 75.8189], [-83.2371, 75.7509], [-82.1538, 75.831], [-81.1508, 75.7355], [-81.0008, 75.6432], [-80.3221, 75.629], [-79.6602, 75.4494], [-79.6345, 75.1993], [-80.3576, 75.0515], [-79.5249, 74.9898], [-79.508, 74.8802], [-80.2126, 74.7494], [-80.2777, 74.5816], [-81.2262, 74.5666], [-81.8089, 74.4767], [-82.931, 74.5656], [-83.3414, 74.7645], [-83.5318, 74.5856], [-84.2452, 74.5152], [-84.6671, 74.5194], [-85.0116, 74.6043], [-85.8079, 74.4991], [-86.11, 74.5397], [-86.6661, 74.4891], [-87.5926, 74.4704], [-88.4231, 74.4942], [-88.7777, 74.7152], [-89.8444, 74.5486], [-90.5533, 74.6127], [-90.7842, 74.6959], [-91.5083, 74.6506], [-91.9615, 74.7931], [-92.4281, 75.3828], [-92.069, 75.6578], [-92.1851, 75.8465], [-93.0917, 76.3541], [-93.6652, 76.273], [-94.7368, 76.2933], [-95.2739, 76.2644], [-95.7888, 76.5372], [-96.6397, 76.703], [-96.4331, 76.8106], [-96.7583, 76.9718], [-95.6383, 77.0639], [-94.2949, 76.9125]]], [[[-115.5513, 77.3632], [-115.6239, 77.2659], [-116.2857, 77.1016], [-115.857, 76.9693], [-116.234, 76.8743], [-115.9446, 76.7363], [-116.2205, 76.6111], [-116.9993, 76.5316], [-117.154, 76.2979], [-117.4925, 76.2726], [-118.0202, 76.4466], [-117.7805, 76.7842], [-118.3006, 76.7367], [-118.4681, 76.5474], [-118.8208, 76.4859], [-118.6435, 76.3348], [-118.9939, 76.1448], [-119.3679, 76.2218], [-119.9128, 75.8589], [-120.4088, 75.8256], [-120.7715, 76.1663], [-121.0194, 76.0203], [-121.428, 75.9812], [-121.9083, 76.0347], [-122.4006, 75.9444], [-122.7741, 76.2278], [-122.3653, 76.4011], [-121.6138, 76.4416], [-119.0903, 77.3051], [-118.0052, 77.3812], [-117.4185, 77.3173], [-116.8353, 77.5288], [-116.3625, 77.5428], [-115.5513, 77.3632]]], [[[-89.8333, 77.2676], [-90.2284, 77.2124], [-91.1473, 77.3873], [-91.1495, 77.608], [-90.8425, 77.6549], [-90.172, 77.5947], [-89.7195, 77.442], [-89.8333, 77.2676]]], [[[-104.5581, 77.1418], [-105.215, 77.1822], [-105.5564, 77.3526], [-106.0662, 77.7255], [-105.5879, 77.7359], [-104.5424, 77.3377], [-104.5581, 77.1418]]], [[[-95.4843, 77.7921], [-93.5829, 77.7708], [-93.301, 77.7399], [-93.5196, 77.4744], [-95.987, 77.484], [-96.2638, 77.5946], [-96.143, 77.7144], [-95.4843, 77.7921]]], [[[-101.6937, 77.6966], [-102.4583, 77.7701], [-102.4477, 77.8806], [-101.6395, 77.8922], [-101.0021, 77.735], [-101.6937, 77.6966]]], [[[-113.8325, 77.7545], [-114.6083, 77.7694], [-115.0293, 77.9676], [-114.2798, 78.0043], [-113.768, 77.9035], [-113.8325, 77.7545]]], [[[-110.4581, 78.1032], [-109.6569, 78.0793], [-109.7719, 77.9574], [-110.7511, 77.8571], [-110.1527, 77.763], [-110.1984, 77.5246], [-110.683, 77.4459], [-111.952, 77.3442], [-112.3726, 77.3642], [-113.1643, 77.5302], [-113.1871, 77.9124], [-111.2065, 78.0882], [-110.4581, 78.1032]]], [[[-109.816, 78.6503], [-109.3621, 78.493], [-109.3906, 78.3367], [-110.4184, 78.295], [-111.1692, 78.3862], [-111.4351, 78.2874], [-112.1312, 78.366], [-113.1725, 78.2839], [-113.1499, 78.4084], [-112.6407, 78.4998], [-111.7088, 78.5747], [-111.0715, 78.7085], [-110.4077, 78.7567], [-109.816, 78.6503]]], [[[-96.2045, 78.5314], [-95.5611, 78.5165], [-94.8873, 78.3452], [-95.3292, 78.2251], [-94.9361, 78.1063], [-95.087, 77.9927], [-96.9895, 77.806], [-97.0934, 77.9335], [-97.6583, 78.0906], [-98.2549, 78.4293], [-98.0604, 78.5584], [-98.212, 78.8046], [-97.3824, 78.7828], [-96.5871, 78.6872], [-96.2045, 78.5314]]], [[[-103.4259, 79.3157], [-102.9144, 79.2311], [-102.6523, 79.0951], [-101.8726, 79.0885], [-100.4354, 78.8203], [-99.6094, 78.5831], [-99.8477, 78.4381], [-99.7514, 78.303], [-99.1315, 78.1175], [-99.1664, 77.8569], [-99.9558, 77.7938], [-100.586, 77.8918], [-101.0742, 78.1938], [-101.8295, 78.2642], [-102.607, 78.2488], [-102.7313, 78.3711], [-104.3242, 78.2694], [-104.7636, 78.3516], [-104.9956, 78.5185], [-104.727, 78.5793], [-103.7644, 78.5196], [-103.4825, 78.5939], [-103.5183, 78.7691], [-103.8757, 78.9027], [-105.5358, 79.0325], [-105.3878, 79.3235], [-103.7063, 79.3521], [-103.4259, 79.3157]]], [[[-98.7915, 79.9811], [-98.8406, 79.737], [-99.5157, 79.8872], [-100.0923, 79.9185], [-100.0533, 80.0934], [-98.8947, 80.0819], [-98.7915, 79.9811]]], [[[-91.8857, 81.1328], [-90.643, 80.5937], [-88.6437, 80.3868], [-87.6749, 80.3722], [-87.6254, 80.1871], [-86.9771, 79.8941], [-87.1442, 79.6626], [-85.5014, 79.5304], [-85.0637, 79.3282], [-85.2899, 79.2083], [-86.0916, 79.1], [-87.0164, 78.8987], [-87.9827, 78.5372], [-88.6064, 78.392], [-88.7911, 78.1925], [-90.3267, 78.1847], [-90.6144, 78.1499], [-91.8992, 78.2369], [-92.6782, 78.3891], [-92.7255, 78.4868], [-93.2666, 78.6082], [-94.1629, 78.9941], [-93.2939, 79.1395], [-92.6835, 79.1859], [-92.5473, 79.2827], [-92.8218, 79.45], [-93.9331, 79.2906], [-94.405, 79.3905], [-95.1032, 79.29], [-95.7331, 79.4182], [-95.297, 79.6531], [-95.8576, 79.6737], [-96.4627, 79.8475], [-96.7733, 80.1358], [-95.7819, 80.0663], [-95.405, 80.135], [-96.3685, 80.2932], [-95.6146, 80.3962], [-96.1519, 80.5535], [-96.1328, 80.6914], [-94.7885, 80.7512], [-95.5147, 80.8381], [-95.2697, 81.0007], [-93.2358, 81.1288], [-94.1943, 81.2409], [-94.0596, 81.3492], [-93.3328, 81.3643], [-92.4125, 81.2782], [-91.8857, 81.1328]]], [[[-69.4889, 83.0169], [-66.5916, 82.9441], [-66.8364, 82.818], [-64.7767, 82.8764], [-63.641, 82.8127], [-63.0853, 82.5652], [-61.477, 82.4673], [-61.2735, 82.2798], [-62.1766, 82.0435], [-64.5741, 81.7336], [-66.6258, 81.6164], [-66.9141, 81.485], [-64.7801, 81.4928], [-65.4839, 81.2848], [-66.727, 81.0409], [-68.6304, 80.6787], [-69.4001, 80.4228], [-70.1434, 80.3977], [-70.5684, 80.0936], [-71.3559, 79.9112], [-71.3878, 79.7618], [-73.2293, 79.644], [-73.4661, 79.4951], [-75.2595, 79.4209], [-76.1164, 79.3261], [-75.0936, 79.2039], [-74.4811, 79.2294], [-74.5324, 79.0527], [-75.233, 79.0356], [-75.9118, 79.1178], [-76.2558, 79.0068], [-75.795, 78.8898], [-75.0986, 78.8583], [-74.4332, 78.724], [-74.8786, 78.5449], [-76.3734, 78.5212], [-75.1935, 78.3276], [-75.866, 78.0098], [-76.974, 77.9273], [-78.0127, 77.9461], [-78.0762, 77.5191], [-78.7085, 77.3422], [-79.9064, 77.2996], [-80.5731, 77.3149], [-80.2743, 77.1509], [-79.3408, 77.1584], [-79.2207, 76.936], [-78.7917, 76.8836], [-78.2888, 76.978], [-77.9834, 76.7549], [-78.2844, 76.5712], [-79.5111, 76.3106], [-80.6903, 76.1765], [-80.9966, 76.2149], [-80.8348, 76.3692], [-81.1707, 76.5128], [-82.2332, 76.4659], [-83.8856, 76.453], [-84.2753, 76.3565], [-85.1412, 76.3046], [-85.6805, 76.349], [-86.2962, 76.4919], [-86.6801, 76.3768], [-88.396, 76.4053], [-89.5701, 76.4919], [-89.4997, 76.8268], [-88.3982, 77.104], [-87.3618, 77.1362], [-86.8737, 77.2003], [-87.7801, 77.4929], [-88.0946, 77.7193], [-87.4966, 77.8719], [-87.0179, 77.8922], [-86.173, 77.7461], [-85.5886, 77.4611], [-84.7388, 77.3611], [-83.9735, 77.3905], [-83.7793, 77.5326], [-85.2894, 77.5591], [-85.2921, 77.7639], [-85.5475, 77.9277], [-84.6154, 78.1958], [-84.9103, 78.2397], [-85.586, 78.1095], [-86.2178, 78.0812], [-87.5517, 78.1767], [-87.4914, 78.4173], [-86.808, 78.7744], [-85.2297, 78.902], [-83.9078, 78.8392], [-83.2715, 78.7704], [-82.4388, 78.9038], [-84.3162, 78.9753], [-84.5304, 79.1014], [-84.1975, 79.2252], [-85.0899, 79.6122], [-86.0314, 79.7219], [-86.4207, 79.8453], [-86.6145, 80.1236], [-86.3073, 80.3193], [-83.7236, 80.2291], [-82.3771, 79.9083], [-81.6884, 79.6857], [-81.0101, 79.693], [-82.3324, 80.0663], [-82.9612, 80.2779], [-82.5362, 80.3755], [-80.9797, 80.4452], [-80.0511, 80.5286], [-79.6294, 80.6478], [-78.3863, 80.7843], [-76.8504, 80.8782], [-78.5509, 80.9215], [-78.6292, 81.0436], [-79.1984, 81.1175], [-79.6067, 80.8818], [-81.007, 80.6549], [-82.3682, 80.5613], [-82.3369, 80.7286], [-83.4014, 80.714], [-84.0763, 80.5562], [-85.3074, 80.526], [-86.2505, 80.5657], [-86.6031, 80.6641], [-86.2522, 80.7894], [-85.2464, 80.9878], [-85.7808, 81.0351], [-87.33, 80.6698], [-87.7117, 80.6563], [-88.9214, 80.8056], [-89.2631, 80.9142], [-88.4131, 80.9999], [-87.3886, 80.9883], [-86.4768, 81.0358], [-85.0832, 81.2469], [-85.4024, 81.2853], [-86.6227, 81.1226], [-87.2752, 81.0809], [-89.6231, 81.0325], [-89.9474, 81.1725], [-88.9784, 81.5414], [-90.3036, 81.4012], [-90.5538, 81.4642], [-89.8453, 81.6118], [-91.6475, 81.6839], [-90.4903, 81.8772], [-89.381, 81.9167], [-88.5669, 82.0612], [-86.6269, 82.051], [-85.6457, 81.9534], [-85.3105, 82.0439], [-86.5807, 82.1873], [-84.8968, 82.4494], [-82.5369, 82.2472], [-80.55, 82.0046], [-80.1298, 82.0284], [-81.9975, 82.2783], [-82.4514, 82.4272], [-81.6812, 82.5187], [-82.1225, 82.6019], [-80.6572, 82.7692], [-79.2072, 82.7328], [-79.8864, 82.9385], [-77.4796, 82.8831], [-77.1249, 83.0085], [-75.7449, 83.0471], [-73.3312, 82.9987], [-72.8116, 83.0813], [-69.97, 83.1161], [-69.4889, 83.0169]]]] }, \"properties\": { \"name\": \"Canada\", \"id\": \"CA\" }, \"id\": \"CA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[22.86, 10.9195], [22.9643, 10.7517], [23.256, 10.4579], [23.4566, 10.1742], [23.6461, 9.8231], [23.6226, 9.3406], [23.4682, 9.1146], [23.552, 8.9433], [23.5373, 8.8159], [23.6794, 8.7324], [24.1473, 8.6654], [24.221, 8.6082], [24.1801, 8.4612], [24.2915, 8.2912], [24.7367, 8.1913], [24.8535, 8.1377], [25.0071, 7.965], [25.2002, 7.8078], [25.2472, 7.7244], [25.19, 7.5193], [25.3808, 7.3333], [25.889, 7.0647], [26.0365, 6.9551], [26.1692, 6.7816], [26.3619, 6.6355], [26.3086, 6.4553], [26.5141, 6.0691], [26.7262, 5.998], [27.0837, 5.777], [27.2133, 5.619], [27.2567, 5.2896], [27.4032, 5.1094], [27.1152, 5.1977], [27.0206, 5.1844], [26.8222, 5.0624], [26.1737, 5.1711], [25.5251, 5.3123], [25.3999, 5.2559], [25.2494, 5.0246], [24.7656, 4.9301], [24.4371, 5.01], [24.3199, 4.994], [23.4171, 4.6633], [23.1157, 4.737], [22.8644, 4.7236], [22.7557, 4.6469], [22.6172, 4.4453], [22.5057, 4.2078], [22.4223, 4.1351], [21.9083, 4.254], [21.6868, 4.2815], [21.5376, 4.2447], [21.3504, 4.3113], [21.2296, 4.3024], [20.9557, 4.4129], [20.558, 4.4627], [20.3938, 4.6864], [20.2264, 4.8297], [20.0023, 4.9447], [19.8064, 5.0894], [19.501, 5.1276], [19.3235, 5.0708], [19.0687, 4.8914], [18.8317, 4.5235], [18.5675, 4.2576], [18.6337, 3.9544], [18.5968, 3.6787], [18.6102, 3.4785], [18.4744, 3.6228], [18.161, 3.4998], [18.1112, 3.5509], [17.8805, 3.554], [17.4378, 3.6845], [17.2985, 3.617], [17.0024, 3.5567], [16.6734, 3.5354], [16.5705, 3.463], [16.4964, 3.2086], [16.4683, 2.8318], [16.1835, 2.2703], [16.1066, 2.4736], [16.0636, 2.9086], [15.9047, 3.0959], [15.7751, 3.127], [15.4585, 3.4568], [15.1288, 3.827], [15.035, 4.0165], [15.1367, 4.0689], [15.0226, 4.3584], [14.7705, 4.5581], [14.7088, 4.6655], [14.6405, 5.1791], [14.5632, 5.2799], [14.6169, 5.4956], [14.6169, 5.8649], [14.5033, 5.9168], [14.4309, 6.0389], [14.5121, 6.1619], [14.7395, 6.2799], [14.8619, 6.5556], [15.0347, 6.7842], [15.246, 7.2636], [15.3791, 7.3582], [15.4803, 7.5237], [15.8451, 7.4754], [16.0308, 7.5721], [16.3787, 7.6836], [16.5234, 7.8597], [16.5892, 7.7434], [16.7849, 7.5508], [16.8906, 7.6338], [17.1178, 7.7017], [17.2469, 7.8132], [17.6496, 7.9836], [17.761, 7.9738], [18.4553, 8.032], [18.5915, 8.0608], [18.6337, 8.1678], [18.9062, 8.4053], [19.1087, 8.6561], [18.8858, 8.8359], [18.8885, 8.8896], [19.1455, 9.0161], [19.6684, 9.021], [19.9534, 9.0752], [20.0728, 9.1333], [20.3422, 9.1271], [20.7732, 9.4059], [20.984, 9.6362], [21.0094, 9.7135], [21.2638, 9.9745], [21.3961, 10.0015], [21.5279, 10.2079], [21.6327, 10.2381], [21.7258, 10.3664], [21.7063, 10.5746], [21.9647, 10.7366], [22.0432, 10.8227], [22.4938, 10.9963], [22.86, 10.9195]]] }, \"properties\": { \"name\": \"Central African Republic\", \"id\": \"CF\" }, \"id\": \"CF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[5.6938, 50.7748], [5.7973, 50.7546], [5.9939, 50.7504], [6.2358, 50.5968], [6.3646, 50.3162], [6.1749, 50.2326], [6.1164, 50.121], [5.9761, 50.1671], [5.7439, 49.9196], [5.7248, 49.8082], [5.8802, 49.6449], [5.7896, 49.5384], [5.5073, 49.5108], [5.2788, 49.6779], [4.8677, 49.788], [4.656, 50.0024], [4.3687, 49.9449], [4.1761, 49.9602], [4.1743, 50.2466], [4.0444, 50.3213], [3.7482, 50.3436], [3.6266, 50.4574], [3.2733, 50.5315], [3.1069, 50.7795], [2.8396, 50.7118], [2.5967, 50.876], [2.5249, 51.0971], [2.9604, 51.2655], [3.35, 51.3776], [3.9022, 51.2076], [4.1726, 51.307], [4.2262, 51.3865], [4.5033, 51.4746], [4.8481, 51.4033], [5.0594, 51.4531], [5.0999, 51.3466], [5.3107, 51.2597], [5.5087, 51.2751], [5.827, 51.1257], [5.6938, 50.7748]]] }, \"properties\": { \"name\": \"Belgium\", \"id\": \"BE\" }, \"id\": \"BE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[25.2588, -17.7936], [25.2241, -17.9152], [25.3844, -18.1421], [25.4892, -18.3512], [25.7613, -18.6495], [25.8119, -18.7968], [25.9393, -18.9384], [25.9508, -19.0818], [26.1683, -19.5382], [26.2411, -19.5692], [26.6783, -19.8928], [27.0916, -20.0544], [27.2217, -20.1458], [27.2808, -20.4787], [27.6247, -20.4836], [27.6997, -20.5307], [27.7042, -20.7664], [27.6696, -21.0643], [27.844, -21.2613], [28.0455, -21.5729], [28.5321, -21.6511], [29.0372, -21.8114], [29.0158, -21.94], [29.1069, -22.0657], [29.2373, -22.0794], [29.3648, -22.194], [29.13, -22.2134], [29.0136, -22.2782], [28.8397, -22.4807], [28.3816, -22.5935], [28.2102, -22.6938], [28.0277, -22.8736], [27.8906, -23.0737], [27.7166, -23.2198], [27.5927, -23.2527], [27.1462, -23.5243], [26.9869, -23.7045], [26.835, -24.2408], [26.6175, -24.3957], [26.3974, -24.6137], [25.9122, -24.7476], [25.8522, -24.9355], [25.5837, -25.6061], [25.4435, -25.7144], [25.2135, -25.7562], [24.9991, -25.754], [24.7483, -25.8174], [24.3306, -25.7429], [24.193, -25.6327], [23.8938, -25.6009], [23.5214, -25.3442], [23.2662, -25.2665], [23.0221, -25.3243], [22.8786, -25.4579], [22.6403, -26.0714], [22.5489, -26.1784], [22.2177, -26.3887], [22.0908, -26.5801], [21.8333, -26.6782], [21.6464, -26.8544], [21.455, -26.8326], [21.0711, -26.8517], [20.871, -26.8087], [20.7399, -26.849], [20.6414, -26.742], [20.6267, -26.4438], [20.8149, -26.165], [20.7933, -25.9155], [20.6095, -25.4912], [20.3454, -25.0299], [19.9805, -24.7769], [19.9795, -23.9625], [19.9787, -23.1027], [19.9774, -21.9999], [20.9708, -21.9999], [20.9797, -21.9618], [20.978, -20.9683], [20.977, -20.1525], [20.9748, -18.9287], [20.9739, -18.3188], [21.2327, -18.3068], [22.0113, -18.1985], [23.1001, -18.0093], [23.2985, -18.0276], [23.4598, -18.2309], [23.5805, -18.4529], [23.7002, -18.4244], [23.8983, -18.2291], [24.1291, -18.0773], [24.359, -17.9783], [24.5304, -18.0529], [24.7923, -17.8647], [24.909, -17.8216], [25.2588, -17.7936]]] }, \"properties\": { \"name\": \"Botswana\", \"id\": \"BW\" }, \"id\": \"BW\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[91.6317, 27.7599], [91.5949, 27.5575], [91.7431, 27.4425], [91.9909, 27.45], [92.0836, 27.2907], [91.9922, 27.0998], [92.0734, 26.9147], [91.9984, 26.8548], [91.6717, 26.802], [91.4266, 26.8672], [91.2865, 26.79], [91.1337, 26.8033], [90.7395, 26.7718], [90.5598, 26.7967], [90.3458, 26.8903], [90.1229, 26.7545], [89.7638, 26.7017], [89.3319, 26.8486], [89.1481, 26.8162], [88.8579, 26.9613], [88.7389, 27.1757], [88.8912, 27.316], [88.9475, 27.4638], [89.1024, 27.5925], [89.1606, 27.7115], [89.537, 28.1075], [89.9809, 28.3112], [90.348, 28.2437], [90.3529, 28.0804], [90.7155, 28.072], [91.0778, 27.9743], [91.226, 28.0711], [91.6056, 27.9517], [91.6317, 27.7599]]] }, \"properties\": { \"name\": \"Bhutan\", \"id\": \"BT\" }, \"id\": \"BT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[115.0267, 4.8999], [114.7465, 4.7179], [114.7901, 4.464], [114.8402, 4.3934], [114.7762, 4.1688], [114.6084, 4.0241], [114.4167, 4.2558], [114.3231, 4.2629], [114.224, 4.4778], [114.0638, 4.5927], [114.2995, 4.6074], [114.5445, 4.7246], [114.7407, 4.8808], [114.9956, 5.0224], [115.0267, 4.8999], [115.1399, 4.8999], [115.2668, 4.634], [115.2469, 4.3472], [115.1069, 4.3903], [115.0267, 4.6912], [115.0267, 4.8999]]] }, \"properties\": { \"name\": \"Brunei\", \"id\": \"BN\" }, \"id\": \"BN\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-59.4933, 13.0821], [-59.6114, 13.1021], [-59.5916, 13.3179], [-59.4276, 13.1527], [-59.4933, 13.0821]]] }, \"properties\": { \"name\": \"Barbados\", \"id\": \"BB\" }, \"id\": \"BB\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-45.2603, -23.8892], [-45.4514, -23.8958], [-45.3023, -23.7276], [-45.2603, -23.8892]]], [[[-51.8326, -1.4335], [-51.802, -1.2023], [-51.6802, -1.0861], [-51.6783, -0.8552], [-51.5461, -0.6496], [-51.4245, -0.5657], [-51.254, -0.5414], [-51.1608, -0.6665], [-51.2764, -1.0216], [-51.6377, -1.3421], [-51.8326, -1.4335]]], [[[-49.6287, -0.2293], [-49.403, -0.2146], [-49.3142, -0.168], [-49.1169, -0.1636], [-48.588, -0.2315], [-48.3798, -0.3527], [-48.5396, -0.8011], [-48.7045, -1.1069], [-48.8397, -1.2267], [-48.8042, -1.327], [-48.9289, -1.4824], [-49.0869, -1.505], [-49.1726, -1.4127], [-49.2341, -1.5996], [-49.3449, -1.5951], [-49.5066, -1.5117], [-49.5878, -1.7123], [-49.8052, -1.7905], [-50.01, -1.7083], [-50.1092, -1.7478], [-50.5076, -1.7878], [-50.6022, -1.6977], [-50.7597, -1.2405], [-50.7096, -1.0776], [-50.7833, -1.0106], [-50.7713, -0.6452], [-50.72, -0.5836], [-50.6454, -0.2728], [-50.4617, -0.1573], [-50.2481, -0.1166], [-49.6287, -0.2293]]], [[[-50.653, -0.1317], [-50.9264, -0.3274], [-51.038, -0.2258], [-50.995, -0.1054], [-50.8423, -0.0504], [-50.667, -0.058], [-50.653, -0.1317]]], [[[-49.4438, -0.1125], [-49.7088, -0.1436], [-49.7124, 0.0153], [-49.5035, 0.0837], [-49.4005, 0.057], [-49.4438, -0.1125]]], [[[-49.7383, 0.2683], [-49.6972, 0.216], [-49.8389, 0.0068], [-50.0025, -0.0291], [-50.1132, 0.033], [-50.3394, 0.0433], [-50.2726, 0.2319], [-50.1281, 0.2266], [-49.8791, 0.3047], [-49.7383, 0.2683]]], [[[-50.4261, 0.1391], [-50.4439, -0.0078], [-50.6239, 0.0544], [-50.6104, 0.2048], [-50.4517, 0.3269], [-50.4246, 0.5582], [-50.3509, 0.5817], [-50.3323, 0.259], [-50.4261, 0.1391]]], [[[-50.1529, 0.393], [-50.2613, 0.3593], [-50.2512, 0.5853], [-50.1128, 0.6048], [-50.04, 0.5227], [-50.1529, 0.393]]], [[[-50.299, 1.9387], [-50.4561, 1.9103], [-50.4909, 2.1287], [-50.342, 2.1415], [-50.299, 1.9387]]], [[[-56.4828, 1.9422], [-56.0199, 1.8423], [-55.9295, 1.8876], [-55.9153, 2.0395], [-56.1295, 2.2996], [-55.9359, 2.5166], [-55.7306, 2.4061], [-55.3853, 2.4407], [-55.1878, 2.5477], [-55.0058, 2.593], [-54.8762, 2.4505], [-54.7221, 2.4416], [-54.6162, 2.3266], [-54.515, 2.2454], [-54.13, 2.1211], [-53.7677, 2.355], [-53.509, 2.253], [-53.3345, 2.34], [-53.2297, 2.205], [-52.9648, 2.1837], [-52.7006, 2.3635], [-52.5595, 2.573], [-52.5546, 2.6476], [-52.3566, 3.0515], [-52.3277, 3.1816], [-52.1626, 3.3645], [-51.9907, 3.7018], [-51.8275, 3.8696], [-51.7671, 3.9926], [-51.6526, 4.0614], [-51.5578, 4.2336], [-51.4615, 4.3139], [-51.2199, 4.0938], [-51.0762, 3.6716], [-51.0525, 3.2819], [-50.9941, 3.0777], [-50.8272, 2.652], [-50.7897, 2.4776], [-50.659, 2.1309], [-50.459, 1.8295], [-50.1875, 1.786], [-49.9572, 1.6599], [-49.8815, 1.4198], [-49.8988, 1.1628], [-50.2945, 0.8356], [-50.463, 0.6372], [-50.5815, 0.4206], [-50.8163, 0.1724], [-50.967, 0.1302], [-51.102, -0.0313], [-51.2828, -0.085], [-51.404, -0.3927], [-51.555, -0.5493], [-51.7025, -0.7624], [-51.7205, -1.0186], [-51.9216, -1.181], [-51.9345, -1.3204], [-52.0204, -1.3989], [-52.2292, -1.3625], [-52.5535, -1.5139], [-52.3102, -1.5596], [-52.1966, -1.64], [-51.9476, -1.5867], [-51.6464, -1.3945], [-51.2973, -1.2236], [-50.8949, -0.9377], [-50.8381, -1.0389], [-50.9177, -1.1154], [-50.8445, -1.2263], [-50.7861, -1.49], [-50.6789, -1.644], [-50.69, -1.7616], [-50.4033, -2.0155], [-50.2606, -1.9228], [-49.9991, -1.8317], [-49.7194, -1.9263], [-49.3137, -1.7319], [-49.5534, -2.5197], [-49.4576, -2.5047], [-49.4076, -2.3444], [-49.211, -1.9166], [-48.9912, -1.83], [-48.71, -1.4878], [-48.4459, -1.5206], [-48.4777, -1.3239], [-48.4497, -1.1455], [-48.3066, -1.0399], [-48.3176, -0.9604], [-48.115, -0.7375], [-47.961, -0.7695], [-47.8076, -0.6634], [-47.6511, -0.7189], [-47.3981, -0.6266], [-47.2685, -0.6452], [-47.1269, -0.7455], [-46.8113, -0.7797], [-46.6173, -0.9706], [-46.4218, -1.03], [-46.2192, -1.0314], [-46.0447, -1.1028], [-45.9723, -1.1877], [-45.7788, -1.2507], [-45.6448, -1.3479], [-45.4586, -1.3563], [-45.2821, -1.6968], [-45.182, -1.5072], [-45.0764, -1.4664], [-44.7898, -1.7247], [-44.6513, -1.7456], [-44.5468, -1.9462], [-44.5377, -2.0529], [-44.6586, -2.2277], [-44.4354, -2.1682], [-44.3819, -2.3653], [-44.5201, -2.4057], [-44.589, -2.5735], [-44.7215, -3.1421], [-44.6227, -3.1377], [-44.4376, -2.9445], [-44.3082, -2.5353], [-44.2287, -2.4713], [-44.1056, -2.4936], [-44.1127, -2.5984], [-44.2252, -2.755], [-44.1926, -2.8096], [-43.9329, -2.5832], [-43.7287, -2.518], [-43.455, -2.502], [-43.38, -2.3759], [-43.2298, -2.3861], [-42.9368, -2.4652], [-42.6758, -2.5895], [-42.5937, -2.6609], [-42.2496, -2.7918], [-42, -2.8061], [-41.8761, -2.7466], [-41.6402, -2.8784], [-41.3182, -2.9361], [-41.1945, -2.8859], [-40.8756, -2.8695], [-40.4745, -2.7955], [-39.9647, -2.8616], [-39.0143, -3.3902], [-38.6863, -3.6535], [-38.4757, -3.7174], [-38.0489, -4.2164], [-37.7956, -4.4046], [-37.6263, -4.5923], [-37.3016, -4.713], [-37.1746, -4.9123], [-36.8612, -4.9665], [-36.5907, -5.0975], [-36.1617, -5.0939], [-35.9799, -5.0544], [-35.5493, -5.1294], [-35.3926, -5.251], [-35.2355, -5.5666], [-35.1418, -5.9173], [-35.0954, -6.1855], [-34.9882, -6.3936], [-34.9296, -6.7851], [-34.8338, -7.0244], [-34.8056, -7.2886], [-34.8786, -7.7475], [-34.8346, -7.9716], [-34.8906, -8.0923], [-34.9667, -8.4076], [-35.1578, -8.9305], [-35.3409, -9.2306], [-35.597, -9.5408], [-35.7639, -9.7024], [-36.0549, -10.0757], [-36.2236, -10.2253], [-36.3983, -10.4841], [-36.7682, -10.6719], [-36.9378, -10.8206], [-37.4119, -11.497], [-37.4694, -11.6538], [-37.6887, -12.0998], [-38.0194, -12.5913], [-38.2398, -12.8443], [-38.4018, -12.9663], [-38.499, -12.9566], [-38.5249, -12.7621], [-38.691, -12.6241], [-38.788, -12.7825], [-38.7638, -12.9073], [-38.8352, -13.147], [-39.031, -13.3654], [-39.0894, -13.5882], [-38.9886, -13.6148], [-39.0412, -13.7582], [-39.035, -13.9909], [-38.9422, -14.0308], [-39.0596, -14.6548], [-39.0135, -14.9359], [-38.9961, -15.2537], [-38.8805, -15.8645], [-39.1251, -16.7634], [-39.2152, -17.3156], [-39.1539, -17.7039], [-39.2784, -17.8496], [-39.4869, -17.9903], [-39.6509, -18.2521], [-39.7399, -18.6397], [-39.7419, -18.8462], [-39.6999, -19.278], [-39.7314, -19.4538], [-39.8446, -19.6491], [-40.0013, -19.742], [-40.1416, -19.9682], [-40.2029, -20.2062], [-40.299, -20.2927], [-40.3959, -20.5693], [-40.5966, -20.7837], [-40.7892, -20.9062], [-40.9546, -21.2378], [-41.0472, -21.506], [-40.9879, -21.9201], [-41.1226, -22.0843], [-41.5829, -22.2437], [-41.7054, -22.3098], [-41.9804, -22.5806], [-41.9409, -22.7884], [-42.0423, -22.9473], [-42.581, -22.9411], [-42.9583, -22.9672], [-43.0811, -22.9024], [-43.0864, -22.7236], [-43.2288, -22.7479], [-43.2242, -22.9912], [-43.5327, -23.0462], [-43.8661, -22.9103], [-44.1479, -23.0111], [-44.3679, -23.0049], [-44.6373, -23.0555], [-44.6673, -23.3352], [-44.9516, -23.3813], [-45.2155, -23.5757], [-45.4232, -23.6854], [-45.4643, -23.8026], [-45.6647, -23.7649], [-45.9721, -23.7955], [-46.6309, -24.1102], [-46.8672, -24.2363], [-47.1371, -24.4933], [-47.5921, -24.781], [-47.8766, -24.9976], [-47.9295, -25.1681], [-48.186, -25.3096], [-48.4024, -25.2719], [-48.4761, -25.4428], [-48.4011, -25.5972], [-48.5452, -25.8161], [-48.6195, -26.1796], [-48.7483, -26.2688], [-48.6517, -26.4065], [-48.6776, -26.703], [-48.5542, -27.1961], [-48.6425, -27.5579], [-48.6058, -27.8252], [-48.6208, -28.0755], [-48.6932, -28.3103], [-48.7973, -28.4427], [-48.7997, -28.5753], [-49.2714, -28.871], [-49.5, -29.0756], [-49.7461, -29.3633], [-50.0333, -29.801], [-50.2994, -30.4259], [-50.7482, -31.0682], [-51.1517, -31.4806], [-51.4604, -31.7026], [-51.7982, -31.9005], [-52.0392, -32.115], [-52.0632, -31.8304], [-51.8932, -31.8677], [-51.6806, -31.7745], [-51.4462, -31.5574], [-51.2722, -31.4771], [-51.1743, -31.3399], [-51.1614, -31.1189], [-50.9801, -31.0945], [-50.9408, -30.9036], [-50.7701, -30.8135], [-50.6893, -30.7043], [-50.7162, -30.4259], [-50.5819, -30.4388], [-50.5464, -30.3167], [-50.6463, -30.2368], [-50.9319, -30.3745], [-51.0405, -30.2608], [-51.1572, -30.3642], [-51.3592, -30.6745], [-51.3765, -30.8468], [-51.4591, -30.9128], [-51.4637, -31.0527], [-51.717, -31.2436], [-51.9724, -31.3838], [-52.027, -31.5991], [-52.1198, -31.6951], [-52.1935, -31.8855], [-52.1274, -32.1678], [-52.3417, -32.4399], [-52.5084, -32.8754], [-52.6522, -33.1377], [-52.9208, -33.4018], [-53.3707, -33.7422], [-53.5376, -33.6228], [-53.5314, -33.1709], [-53.1254, -32.7369], [-53.6017, -32.403], [-53.7618, -32.0568], [-53.9207, -31.9524], [-54.2206, -31.8553], [-54.3699, -31.7452], [-54.5876, -31.4851], [-54.8959, -31.3914], [-55.2546, -31.2259], [-55.366, -31.0461], [-55.5573, -30.8761], [-55.8736, -31.0695], [-56.0047, -31.0794], [-55.999, -30.837], [-56.1761, -30.6283], [-56.8328, -30.1072], [-57.1205, -30.1445], [-57.2143, -30.2834], [-57.5524, -30.2613], [-57.609, -30.188], [-57.4052, -30.0339], [-57.2245, -29.7823], [-56.9387, -29.595], [-56.7724, -29.4179], [-56.5707, -29.1382], [-56.3932, -28.9971], [-56.3224, -28.8523], [-56.1028, -28.6517], [-55.859, -28.3543], [-55.672, -28.3449], [-55.7255, -28.2043], [-55.4767, -28.0893], [-55.3465, -27.9561], [-55.1015, -27.8669], [-54.9101, -27.7085], [-54.8291, -27.5509], [-54.555, -27.4541], [-54.3271, -27.4235], [-54.2052, -27.2894], [-54.0401, -27.2437], [-53.8381, -27.1211], [-53.7174, -26.8828], [-53.7533, -26.7487], [-53.7109, -26.3519], [-53.6712, -26.225], [-53.8232, -25.9595], [-53.8911, -25.6687], [-54.1546, -25.5232], [-54.444, -25.6248], [-54.6158, -25.576], [-54.6105, -25.4326], [-54.4731, -25.2205], [-54.413, -24.8675], [-54.3128, -24.5284], [-54.2809, -24.3059], [-54.3182, -24.128], [-54.2418, -24.0472], [-54.4403, -23.9016], [-54.6253, -23.8123], [-54.9827, -23.9744], [-55.1944, -24.0174], [-55.3662, -23.9913], [-55.4424, -23.8652], [-55.459, -23.6867], [-55.5382, -23.5811], [-55.5185, -23.4155], [-55.6541, -22.8105], [-55.6177, -22.6716], [-55.7466, -22.5126], [-55.8492, -22.3075], [-56.1898, -22.2814], [-56.5239, -22.1025], [-56.6331, -22.2348], [-56.9374, -22.2712], [-57.2383, -22.1953], [-57.569, -22.182], [-57.7211, -22.0994], [-57.8203, -22.1424], [-57.9856, -22.0461], [-57.9162, -21.699], [-57.9459, -21.4939], [-57.8733, -21.355], [-57.8303, -20.9981], [-57.979, -20.6572], [-58.0023, -20.4655], [-58.1245, -20.2937], [-58.1599, -20.1645], [-57.8606, -19.9798], [-58.1315, -19.7445], [-57.8005, -19.0809], [-57.783, -18.9145], [-57.5741, -18.2792], [-57.5865, -18.1222], [-57.8325, -17.5122], [-57.9909, -17.5132], [-58.396, -17.2344], [-58.4597, -16.9107], [-58.4706, -16.6502], [-58.3503, -16.4908], [-58.3456, -16.2845], [-58.538, -16.3284], [-59.4343, -16.2959], [-60.1756, -16.2693], [-60.2424, -15.4796], [-60.5305, -15.1432], [-60.2734, -15.0886], [-60.299, -14.6185], [-60.4747, -14.1848], [-60.4051, -14.0192], [-60.5065, -13.7898], [-61.0769, -13.4896], [-61.5114, -13.5412], [-61.79, -13.5256], [-61.9447, -13.4062], [-62.1759, -13.1336], [-62.3528, -13.1323], [-62.6871, -12.9943], [-62.7655, -12.9973], [-63.0151, -12.8056], [-63.0675, -12.6693], [-63.2497, -12.708], [-63.3467, -12.68], [-63.5858, -12.5189], [-63.7882, -12.4696], [-63.9387, -12.5295], [-64.4205, -12.4399], [-64.5135, -12.2507], [-64.83, -12.0302], [-64.9924, -11.9751], [-65.0903, -11.7412], [-65.3221, -11.4393], [-65.39, -11.2462], [-65.3238, -11.0247], [-65.334, -10.8929], [-65.4399, -10.5862], [-65.4368, -10.449], [-65.3132, -10.2533], [-65.3094, -9.8729], [-65.3962, -9.7126], [-65.5586, -9.7974], [-65.7067, -9.7685], [-66.2636, -9.8262], [-66.5754, -9.9], [-66.7301, -9.9754], [-67.1116, -10.2687], [-67.2805, -10.3171], [-67.5823, -10.5058], [-67.7217, -10.6829], [-67.8352, -10.663], [-68.0718, -10.7029], [-68.2666, -10.9333], [-68.398, -11.0185], [-68.7276, -11.1223], [-68.8483, -11.011], [-69.2285, -10.9555], [-69.5786, -10.952], [-69.9603, -10.9298], [-70.2202, -11.0478], [-70.3922, -11.0585], [-70.5333, -10.947], [-70.6423, -11.0101], [-70.637, -9.8236], [-70.5673, -9.7046], [-70.637, -9.4782], [-70.9708, -9.7659], [-71.2381, -9.9661], [-71.608, -10.006], [-72.1815, -10.0038], [-72.1729, -9.8439], [-72.2601, -9.7743], [-72.318, -9.5568], [-72.3791, -9.5102], [-72.8143, -9.4104], [-73.2093, -9.4116], [-72.9703, -9.12], [-72.9741, -8.993], [-73.2031, -8.7192], [-73.3023, -8.6539], [-73.3605, -8.4794], [-73.5492, -8.3458], [-73.6102, -8.1457], [-73.7755, -7.9366], [-73.7205, -7.7825], [-73.8222, -7.739], [-74.0022, -7.5562], [-73.9644, -7.379], [-73.7496, -7.3355], [-73.7234, -7.2628], [-73.8046, -7.0798], [-73.758, -6.9058], [-73.4999, -6.6795], [-73.1374, -6.466], [-73.1354, -6.3444], [-73.2355, -6.0984], [-73.163, -5.9333], [-72.9799, -5.635], [-72.8871, -5.1228], [-72.6987, -5.0673], [-72.2568, -4.749], [-71.8449, -4.5044], [-71.5215, -4.4698], [-70.9737, -4.3504], [-70.7995, -4.1732], [-70.4046, -4.1502], [-70.239, -4.3011], [-70.0533, -4.3331], [-69.9658, -4.2358], [-69.8497, -3.6597], [-69.6691, -2.6676], [-69.4003, -1.1948], [-69.4487, -0.9985], [-69.5435, -0.9173], [-69.6207, -0.7211], [-69.592, -0.6395], [-69.6675, -0.4823], [-69.9227, -0.3177], [-70.0706, -0.1387], [-70.0539, 0.5786], [-69.8071, 0.6074], [-69.4722, 0.7299], [-69.3586, 0.6514], [-69.1741, 0.6354], [-69.1633, 0.864], [-69.2587, 1.0154], [-69.3615, 1.0642], [-69.8522, 1.0594], [-69.8486, 1.7088], [-69.5812, 1.7709], [-69.3198, 1.7212], [-68.1765, 1.7198], [-68.256, 1.8454], [-68.1304, 1.9555], [-67.9899, 1.7527], [-67.8152, 1.79], [-67.6092, 2.035], [-67.4995, 2.1078], [-67.352, 2.086], [-67.1191, 1.7034], [-67.0901, 1.6155], [-67.0936, 1.2098], [-66.8761, 1.2231], [-66.4293, 0.8219], [-66.3017, 0.7521], [-66.06, 0.7854], [-65.6814, 0.9834], [-65.5659, 0.9262], [-65.4734, 0.6913], [-65.3609, 0.8685], [-65.1036, 1.1082], [-64.818, 1.2573], [-64.7317, 1.2533], [-64.486, 1.4526], [-64.3042, 1.4553], [-64.1149, 1.6191], [-64.0354, 1.9045], [-63.8446, 1.9769], [-63.394, 2.2223], [-63.3894, 2.4119], [-63.9243, 2.4522], [-64.0487, 2.5251], [-64.009, 2.672], [-64.0379, 2.8016], [-64.2188, 3.2046], [-64.2212, 3.5873], [-64.2754, 3.6627], [-64.5679, 3.8998], [-64.8178, 4.2323], [-64.7224, 4.2745], [-64.5763, 4.1399], [-64.2556, 4.1404], [-64.1218, 4.0671], [-64.0215, 3.9291], [-63.653, 3.9406], [-63.5267, 3.8936], [-63.2948, 3.9224], [-62.9685, 3.5939], [-62.7646, 3.673], [-62.7122, 4.0179], [-62.4106, 4.1568], [-62.1531, 4.0982], [-61.5543, 4.2878], [-61.4793, 4.4023], [-61.2802, 4.5168], [-61.0028, 4.5354], [-60.9062, 4.6868], [-60.7417, 4.7743], [-60.6277, 4.8923], [-60.6046, 4.9945], [-60.6721, 5.1644], [-60.7422, 5.2022], [-60.3352, 5.1991], [-60.142, 5.239], [-59.9907, 5.0828], [-60.0318, 4.7405], [-60.1245, 4.5976], [-60.1112, 4.5111], [-59.8333, 4.476], [-59.7033, 4.381], [-59.7386, 4.2269], [-59.5512, 3.9336], [-59.6791, 3.6996], [-59.8544, 3.5873], [-59.8311, 3.3494], [-59.9722, 2.9903], [-59.9942, 2.6902], [-59.8897, 2.3631], [-59.7552, 2.2742], [-59.7563, 1.9005], [-59.6666, 1.7465], [-59.5357, 1.6998], [-59.2312, 1.3758], [-58.9684, 1.3043], [-58.8625, 1.2036], [-58.6845, 1.2813], [-58.5118, 1.2848], [-58.5061, 1.4384], [-58.3958, 1.4819], [-58.3408, 1.5876], [-58.0347, 1.5201], [-57.9827, 1.6484], [-57.7957, 1.6998], [-57.5943, 1.7043], [-57.4128, 1.909], [-57.119, 2.0141], [-57.0377, 1.9364], [-56.8368, 1.8814], [-56.4828, 1.9422]]]] }, \"properties\": { \"name\": \"Brazil\", \"id\": \"BR\" }, \"id\": \"BR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-58.1599, -20.1645], [-58.1399, -19.9989], [-58.1803, -19.8178], [-59.0905, -19.286], [-60.0073, -19.2976], [-61.5119, -19.6065], [-61.7569, -19.6452], [-61.917, -20.0553], [-62.2763, -20.5626], [-62.2767, -21.0661], [-62.6509, -22.2339], [-62.8433, -21.9973], [-63.8186, -22.0053], [-63.9762, -22.0728], [-64.2665, -22.6032], [-64.3739, -22.7613], [-64.5237, -22.3715], [-64.6056, -22.229], [-65.0579, -22.1029], [-65.771, -22.0994], [-66.0986, -21.8353], [-66.2476, -21.8305], [-66.3652, -22.1136], [-66.7117, -22.2161], [-66.8002, -22.4097], [-66.9911, -22.51], [-67.1949, -22.8216], [-67.5799, -22.8917], [-67.7945, -22.8793], [-67.8795, -22.8229], [-67.8817, -22.4936], [-67.9504, -22.3338], [-67.9883, -22.0572], [-68.0769, -21.9827], [-68.1121, -21.7531], [-68.1865, -21.6187], [-68.1969, -21.3004], [-68.4355, -20.9484], [-68.5583, -20.9018], [-68.5631, -20.7202], [-68.4999, -20.612], [-68.7451, -20.4588], [-68.6885, -20.3101], [-68.7276, -20.0695], [-68.6002, -20.0451], [-68.5783, -19.8564], [-68.6983, -19.7211], [-68.4628, -19.4329], [-68.8579, -19.0933], [-68.9684, -18.9682], [-69.0922, -18.2824], [-69.1455, -18.1439], [-69.094, -18.0507], [-69.3133, -17.9432], [-69.3579, -17.7719], [-69.4951, -17.6197], [-69.5108, -17.506], [-69.522, -17.3888], [-69.6249, -17.2002], [-69.4212, -17.04], [-69.1999, -16.7682], [-69.0208, -16.6422], [-69.0061, -16.4335], [-68.8579, -16.355], [-68.9133, -16.2618], [-69.1342, -16.2219], [-69.2176, -16.149], [-69.3919, -15.7367], [-69.4185, -15.6035], [-69.1726, -15.2368], [-69.3748, -14.9629], [-69.3595, -14.7951], [-69.276, -14.7459], [-69.235, -14.5972], [-69.0133, -14.3775], [-69.0046, -14.2652], [-68.8803, -14.199], [-69.0741, -13.6828], [-68.9835, -13.4963], [-68.9786, -12.8802], [-68.7591, -12.6871], [-68.6852, -12.502], [-69.0461, -11.8756], [-69.5786, -10.952], [-69.2285, -10.9555], [-68.8483, -11.011], [-68.7276, -11.1223], [-68.398, -11.0185], [-68.2666, -10.9333], [-68.0718, -10.7029], [-67.8352, -10.663], [-67.7217, -10.6829], [-67.5823, -10.5058], [-67.2805, -10.3171], [-67.1116, -10.2687], [-66.7301, -9.9754], [-66.5754, -9.9], [-66.2636, -9.8262], [-65.7067, -9.7685], [-65.5586, -9.7974], [-65.3962, -9.7126], [-65.3094, -9.8729], [-65.3132, -10.2533], [-65.4368, -10.449], [-65.4399, -10.5862], [-65.334, -10.8929], [-65.3238, -11.0247], [-65.39, -11.2462], [-65.3221, -11.4393], [-65.0903, -11.7412], [-64.9924, -11.9751], [-64.83, -12.0302], [-64.5135, -12.2507], [-64.4205, -12.4399], [-63.9387, -12.5295], [-63.7882, -12.4696], [-63.5858, -12.5189], [-63.3467, -12.68], [-63.2497, -12.708], [-63.0675, -12.6693], [-63.0151, -12.8056], [-62.7655, -12.9973], [-62.6871, -12.9943], [-62.3528, -13.1323], [-62.1759, -13.1336], [-61.9447, -13.4062], [-61.79, -13.5256], [-61.5114, -13.5412], [-61.0769, -13.4896], [-60.5065, -13.7898], [-60.4051, -14.0192], [-60.4747, -14.1848], [-60.299, -14.6185], [-60.2734, -15.0886], [-60.5305, -15.1432], [-60.2424, -15.4796], [-60.1756, -16.2693], [-59.4343, -16.2959], [-58.538, -16.3284], [-58.3456, -16.2845], [-58.3503, -16.4908], [-58.4706, -16.6502], [-58.4597, -16.9107], [-58.396, -17.2344], [-57.9909, -17.5132], [-57.8325, -17.5122], [-57.5865, -18.1222], [-57.5741, -18.2792], [-57.783, -18.9145], [-57.8005, -19.0809], [-58.1315, -19.7445], [-57.8606, -19.9798], [-58.1599, -20.1645]]] }, \"properties\": { \"name\": \"Bolivia\", \"id\": \"BO\" }, \"id\": \"BO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-64.7303, 32.2933], [-64.8202, 32.2596], [-64.6946, 32.387], [-64.7303, 32.2933]]] }, \"properties\": { \"name\": \"Bermuda\", \"id\": \"BM\" }, \"id\": \"BM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-88.894, 15.8907], [-89.2374, 15.8942], [-89.2126, 16.5272], [-89.1615, 17.8149], [-89.1335, 17.9707], [-89.0506, 17.9996], [-88.8978, 17.9144], [-88.8064, 17.9654], [-88.5862, 18.2903], [-88.523, 18.4457], [-88.2957, 18.4723], [-88.3492, 18.3587], [-88.1303, 18.3507], [-88.0972, 18.1217], [-88.2717, 17.6099], [-88.2033, 17.5166], [-88.2673, 17.3928], [-88.2939, 17.1921], [-88.2617, 16.9631], [-88.3134, 16.6328], [-88.5622, 16.2906], [-88.6952, 16.2476], [-88.8792, 16.0167], [-88.894, 15.8907]]] }, \"properties\": { \"name\": \"Belize\", \"id\": \"BZ\" }, \"id\": \"BZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.1481, 56.143], [28.2844, 56.056], [28.564, 56.0919], [28.7948, 55.9426], [29.0873, 56.0212], [29.375, 55.9386], [29.3532, 55.7843], [29.4824, 55.6845], [29.9369, 55.8454], [30.2334, 55.8452], [30.4563, 55.7868], [30.6254, 55.6663], [30.9069, 55.5699], [30.8146, 55.2788], [30.9779, 55.0506], [30.83, 54.915], [30.799, 54.7834], [31.1212, 54.6484], [31.1847, 54.4529], [31.4035, 54.1959], [31.792, 54.0558], [31.7543, 53.8105], [32.2004, 53.7812], [32.4503, 53.6929], [32.4698, 53.5469], [32.6856, 53.4481], [32.7042, 53.3363], [32.1422, 53.0912], [31.8497, 53.1061], [31.6681, 53.2009], [31.4178, 53.196], [31.2588, 53.0167], [31.535, 52.7983], [31.5771, 52.3122], [31.7635, 52.1011], [31.3459, 52.1053], [30.9806, 52.0461], [30.6671, 51.8142], [30.5331, 51.5965], [30.6326, 51.3554], [30.5447, 51.2651], [30.3334, 51.3255], [30.1606, 51.4779], [29.553, 51.4346], [29.3465, 51.3825], [29.1357, 51.6173], [28.6479, 51.4566], [28.5991, 51.5427], [28.1836, 51.6078], [27.8586, 51.5924], [27.2701, 51.6135], [27.1422, 51.752], [26.4533, 51.8135], [25.925, 51.9136], [25.2672, 51.9378], [24.3616, 51.8675], [24.1269, 51.6646], [23.9511, 51.5852], [23.7069, 51.6413], [23.6053, 51.5179], [23.5449, 51.7103], [23.6257, 51.8093], [23.6523, 52.0403], [23.4583, 52.1695], [23.1969, 52.257], [23.204, 52.338], [23.4797, 52.5515], [23.8446, 52.6642], [23.9156, 52.7703], [23.8871, 53.0276], [23.5991, 53.5993], [23.4846, 53.9397], [23.7336, 53.9123], [24.1912, 53.9504], [24.3178, 53.8929], [24.7683, 53.9746], [24.8256, 54.1191], [25.0461, 54.133], [25.4612, 54.2929], [25.5731, 54.14], [25.7492, 54.1571], [25.7027, 54.2931], [25.5473, 54.3317], [25.7249, 54.5643], [25.7226, 54.7179], [25.8594, 54.9192], [26.175, 55.0033], [26.2917, 55.1396], [26.6011, 55.1303], [26.7756, 55.2732], [26.4578, 55.3424], [26.5936, 55.6676], [26.8226, 55.7091], [27.0526, 55.8305], [27.5768, 55.7987], [27.6425, 55.9117], [27.8964, 56.0762], [28.1481, 56.143]]] }, \"properties\": { \"name\": \"Belarus\", \"id\": \"BY\" }, \"id\": \"BY\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-62.832, 17.8766], [-62.8655, 17.9184], [-62.7996, 17.9086], [-62.832, 17.8766]]] }, \"properties\": { \"name\": \"Saint Barthelemy\", \"id\": \"BL\" }, \"id\": \"BL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-73.0269, 21.1925], [-73.1645, 20.979], [-73.661, 20.9373], [-73.6803, 21.1033], [-73.5232, 21.1907], [-73.2353, 21.1543], [-73.0269, 21.1925]]], [[[-77.6578, 24.2496], [-77.5615, 24.1369], [-77.5187, 23.8696], [-77.5737, 23.7391], [-77.7713, 23.7524], [-77.8522, 24.0405], [-77.9998, 24.2198], [-77.7015, 24.2877], [-77.6578, 24.2496]]], [[[-77.744, 24.7073], [-77.7452, 24.4635], [-78.0449, 24.2873], [-78.1916, 24.4662], [-78.3665, 24.5443], [-78.2426, 24.6539], [-78.2988, 24.7538], [-78.1594, 25.0224], [-78.2114, 25.1911], [-78.0333, 25.1431], [-77.8403, 24.7942], [-77.744, 24.7073]]], [[[-78.493, 26.7292], [-78.3718, 26.6981], [-77.9439, 26.7443], [-77.9261, 26.6635], [-78.234, 26.6373], [-78.671, 26.5063], [-78.5971, 26.798], [-78.493, 26.7292]]], [[[-77.2257, 25.904], [-77.4032, 26.0247], [-77.2468, 26.1565], [-77.2062, 26.489], [-77.0663, 26.5303], [-77.0384, 26.3332], [-77.1673, 26.2404], [-77.2257, 25.904]]]] }, \"properties\": { \"name\": \"Bahamas\", \"id\": \"BS\" }, \"id\": \"BS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[50.6073, 25.8831], [50.4661, 25.9657], [50.4524, 26.1907], [50.6099, 26.1246], [50.6073, 25.8831]]] }, \"properties\": { \"name\": \"Bahrain\", \"id\": \"BH\" }, \"id\": \"BH\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.007, 44.8693], [19.2369, 44.9141], [19.3568, 44.8586], [19.292, 44.6966], [19.1512, 44.5275], [19.1517, 44.3024], [19.3391, 44.2256], [19.5837, 44.0436], [19.5494, 43.9872], [19.245, 43.965], [19.4881, 43.7036], [19.4514, 43.562], [19.1944, 43.5331], [18.9404, 43.4968], [19.0367, 43.3574], [18.8512, 43.3463], [18.674, 43.2309], [18.6234, 43.0275], [18.4437, 42.9685], [18.4659, 42.7772], [18.5431, 42.6742], [18.4362, 42.5597], [18.3039, 42.5996], [17.8413, 42.8451], [17.6678, 42.897], [17.5853, 42.9384], [17.6248, 43.0427], [17.2931, 43.3054], [17.2737, 43.4457], [17.0845, 43.5167], [16.7134, 43.7786], [16.5905, 43.9131], [16.214, 44.215], [16.1301, 44.4737], [15.7369, 44.7658], [15.788, 45.1791], [16.0285, 45.1898], [16.2935, 45.0086], [16.5306, 45.2168], [16.7906, 45.1969], [16.9185, 45.2768], [17.1253, 45.1715], [17.5461, 45.1227], [17.69, 45.1582], [17.813, 45.0779], [17.9962, 45.1418], [18.2848, 45.1343], [18.6626, 45.0774], [18.8366, 44.8834], [19.007, 44.8693]]] }, \"properties\": { \"name\": \"Bosnia and Herzegovina\", \"id\": \"BA\" }, \"id\": \"BA\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[28.5853, 43.7422], [28.5617, 43.5012], [28.4654, 43.3893], [28.1339, 43.3955], [27.9288, 43.186], [27.8889, 42.7497], [27.7539, 42.7066], [27.4849, 42.4683], [27.7081, 42.3502], [27.9825, 42.0474], [28.0145, 41.9689], [27.8791, 41.9866], [27.5346, 41.9209], [27.2949, 42.0794], [27.0117, 42.0585], [26.8848, 41.992], [26.6154, 41.9649], [26.5114, 41.8264], [26.321, 41.7167], [26.0658, 41.6733], [26.1435, 41.5214], [26.1355, 41.3856], [25.9233, 41.3119], [25.7847, 41.3305], [25.2512, 41.2435], [25.1332, 41.3159], [24.596, 41.4429], [24.5184, 41.5525], [24.0559, 41.5272], [23.6351, 41.3869], [23.2399, 41.3852], [23.1561, 41.3221], [22.9159, 41.3363], [23.0055, 41.7172], [22.8369, 41.9937], [22.5826, 42.1047], [22.3441, 42.3137], [22.5235, 42.4412], [22.4361, 42.6289], [22.4667, 42.8424], [22.7065, 42.8837], [22.9421, 43.0973], [22.9767, 43.1878], [22.7676, 43.3543], [22.5546, 43.4546], [22.3948, 43.7067], [22.3655, 43.8621], [22.421, 44.0077], [22.5973, 44.0751], [22.7051, 44.2376], [23.0287, 44.0778], [22.8684, 43.9478], [22.919, 43.8345], [23.2244, 43.874], [23.5348, 43.8536], [24.2267, 43.7635], [24.4305, 43.7946], [25.1598, 43.6863], [25.4972, 43.6708], [25.819, 43.7666], [25.9335, 43.8705], [26.2158, 44.0072], [26.4893, 44.084], [27.0867, 44.1675], [27.4254, 44.0205], [27.8844, 43.9872], [28.05, 43.8225], [28.4233, 43.7404], [28.5853, 43.7422]]] }, \"properties\": { \"name\": \"Bulgaria\", \"id\": \"BG\" }, \"id\": \"BG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[91.1505, 22.1753], [91.0449, 22.1051], [91.0795, 22.5197], [91.1781, 22.2831], [91.1505, 22.1753]]], [[[90.7776, 22.0892], [90.5149, 22.0652], [90.6805, 22.3275], [90.649, 22.5406], [90.5651, 22.6178], [90.5029, 22.8353], [90.672, 22.8132], [90.7369, 22.6387], [90.8682, 22.4847], [90.8301, 22.1597], [90.7776, 22.0892]]], [[[92.5751, 21.9782], [92.5937, 21.4673], [92.5391, 21.3199], [92.3304, 21.4397], [92.1794, 21.2932], [92.2643, 21.0616], [92.3243, 20.7917], [92.0562, 21.1748], [92.0081, 21.6848], [91.9132, 21.8832], [91.8501, 22.1575], [91.693, 22.5047], [91.5296, 22.7075], [91.4094, 22.7972], [91.1515, 22.6138], [90.9454, 22.597], [90.8265, 22.7213], [90.6335, 23.0941], [90.656, 23.273], [90.6157, 23.4422], [90.4079, 23.4319], [90.5908, 23.2664], [90.5953, 23.1341], [90.4662, 23.0537], [90.435, 22.7519], [90.4874, 22.5885], [90.5958, 22.4358], [90.5894, 22.2583], [90.3555, 22.0483], [90.288, 21.8992], [90.1589, 21.8171], [90.071, 21.8872], [90.0879, 22.0172], [89.8118, 21.9835], [89.5685, 21.7673], [89.4518, 21.8211], [89.3537, 21.7212], [89.2343, 21.7225], [89.094, 21.873], [89.0515, 22.0932], [89.0501, 22.2747], [88.9209, 22.632], [88.8507, 23.0404], [88.9279, 23.1865], [88.7243, 23.2548], [88.7407, 23.4368], [88.5671, 23.6743], [88.6999, 24.0023], [88.7335, 24.231], [88.6421, 24.3259], [88.3971, 24.3894], [88.287, 24.48], [88.1454, 24.4857], [88.0234, 24.6278], [88.1498, 24.9145], [88.3132, 24.8817], [88.4562, 25.1884], [88.7477, 25.1689], [88.8902, 25.1942], [88.944, 25.291], [88.8201, 25.3655], [88.769, 25.4903], [88.5933, 25.4951], [88.4522, 25.5746], [88.2528, 25.7899], [88.0847, 25.8885], [88.1508, 26.0873], [88.4402, 26.3696], [88.346, 26.505], [88.5183, 26.5179], [88.683, 26.2915], [89.1082, 26.2023], [89.2894, 26.0376], [89.5499, 26.0052], [89.6191, 26.2156], [89.7097, 26.1712], [89.8229, 25.9412], [89.814, 25.3052], [90.2503, 25.1849], [90.4394, 25.1578], [91.293, 25.1778], [91.4799, 25.1423], [92.0498, 25.1693], [92.2047, 25.1107], [92.4684, 24.9443], [92.4431, 24.8493], [92.2514, 24.895], [92.1982, 24.6859], [92.0641, 24.3743], [91.9519, 24.3566], [91.8767, 24.1954], [91.6686, 24.1901], [91.5266, 24.0907], [91.3672, 24.0933], [91.2319, 23.9206], [91.1604, 23.6605], [91.3153, 23.1044], [91.4365, 23.1998], [91.5115, 23.0338], [91.6197, 22.9796], [91.7737, 23.1061], [91.7543, 23.2872], [91.938, 23.5047], [91.9296, 23.6859], [92.1272, 23.7209], [92.2461, 23.6836], [92.3344, 23.3236], [92.3615, 22.929], [92.4916, 22.6853], [92.5751, 21.9782]]]] }, \"properties\": { \"name\": \"Bangladesh\", \"id\": \"BD\" }, \"id\": \"BD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[0.2175, 14.9114], [0.1638, 14.4973], [0.3824, 14.2461], [0.3548, 14.1391], [0.4292, 13.9721], [0.6184, 13.7036], [0.748, 13.6743], [0.9779, 13.5518], [1.0179, 13.4679], [0.973, 13.1705], [0.9872, 13.0418], [1.0969, 13.0009], [1.5651, 12.6356], [1.7898, 12.6134], [1.9562, 12.7075], [2.0739, 12.7142], [2.2114, 12.5384], [2.2039, 12.4128], [2.0686, 12.379], [2.0912, 12.2778], [2.389, 11.897], [2.2874, 11.6914], [1.9802, 11.4184], [1.8576, 11.4433], [1.6002, 11.4007], [1.4266, 11.4473], [1.3174, 11.2955], [1.1457, 11.252], [1.0622, 11.058], [0.9007, 10.9932], [0.4843, 10.9919], [-0.0686, 11.1157], [-0.2994, 11.1668], [-0.4918, 11.0074], [-0.6485, 10.9266], [-0.7014, 10.9888], [-1.2327, 10.9972], [-1.5368, 11.0225], [-1.5996, 10.9976], [-2.7517, 10.9865], [-2.8298, 10.9985], [-2.9073, 10.7282], [-2.9148, 10.5924], [-2.7866, 10.402], [-2.7832, 10.0832], [-2.7508, 9.9096], [-2.7659, 9.658], [-2.6958, 9.4813], [-2.8167, 9.4258], [-2.9883, 9.6873], [-3.2235, 9.8955], [-3.5811, 9.9243], [-3.8776, 9.895], [-4.2672, 9.7432], [-4.3322, 9.6455], [-4.5266, 9.7237], [-4.6258, 9.7135], [-4.9698, 9.93], [-5.0999, 10.2417], [-5.2623, 10.3198], [-5.3822, 10.3141], [-5.5236, 10.4259], [-5.457, 10.7713], [-5.4905, 11.0424], [-5.2998, 11.2058], [-5.2293, 11.5223], [-5.2906, 11.6835], [-5.2881, 11.8277], [-5.1059, 11.9675], [-4.798, 12.0319], [-4.587, 12.1548], [-4.4287, 12.3377], [-4.4218, 12.5814], [-4.4807, 12.6725], [-4.2272, 12.7936], [-4.2252, 12.8793], [-4.3286, 13.119], [-4.0512, 13.3822], [-3.8534, 13.3734], [-3.5758, 13.194], [-3.3017, 13.2805], [-3.2701, 13.5775], [-3.1985, 13.6729], [-3.0387, 13.6393], [-2.917, 13.6796], [-2.874, 13.9509], [-2.7788, 14.0738], [-2.5868, 14.2274], [-2.4572, 14.274], [-2.1131, 14.1684], [-2.0572, 14.1946], [-1.9731, 14.4564], [-1.7678, 14.4862], [-1.4937, 14.626], [-1.0496, 14.8196], [-0.7604, 15.0477], [-0.5364, 15.0779], [-0.4055, 15.0126], [-0.2359, 15.0592], [0.2175, 14.9114]]] }, \"properties\": { \"name\": \"Burkina Faso\", \"id\": \"BF\" }, \"id\": \"BF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[3.5955, 11.6963], [3.4908, 11.4992], [3.4877, 11.3954], [3.7162, 11.0798], [3.7567, 10.7686], [3.8344, 10.6074], [3.7837, 10.4361], [3.6803, 10.4277], [3.5764, 10.2683], [3.6462, 10.16], [3.5573, 9.9074], [3.3252, 9.7783], [3.3296, 9.6668], [3.1362, 9.4516], [3.1481, 9.3206], [3.0451, 9.084], [2.7748, 9.0485], [2.733, 8.7826], [2.6859, 7.874], [2.7193, 7.6161], [2.7849, 7.4767], [2.7504, 7.395], [2.7566, 7.0679], [2.7215, 6.9804], [2.7748, 6.7118], [2.7064, 6.3692], [2.2869, 6.3279], [1.6224, 6.2169], [1.7777, 6.2946], [1.7432, 6.4264], [1.5776, 6.6875], [1.6247, 6.9973], [1.6247, 8.2708], [1.6002, 9.0498], [1.4244, 9.2851], [1.3472, 9.5674], [1.3299, 9.9971], [0.7799, 10.3598], [0.7875, 10.7104], [0.9007, 10.9932], [1.0622, 11.058], [1.1457, 11.252], [1.3174, 11.2955], [1.4266, 11.4473], [1.6002, 11.4007], [1.8576, 11.4433], [1.9802, 11.4184], [2.2874, 11.6914], [2.389, 11.897], [2.4125, 11.9995], [2.366, 12.2219], [2.8782, 12.3679], [3.1494, 12.118], [3.3598, 11.8805], [3.45, 11.8521], [3.5955, 11.6963]]] }, \"properties\": { \"name\": \"Benin\", \"id\": \"BJ\" }, \"id\": \"BJ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[30.5536, -2.4], [30.4243, -2.6414], [30.424, -2.8243], [30.5149, -2.9175], [30.7803, -2.985], [30.7901, -3.2744], [30.6818, -3.3095], [30.6321, -3.4187], [30.4253, -3.5891], [30.3791, -3.7307], [30.2686, -3.8505], [30.1469, -4.0854], [29.9471, -4.3073], [29.7177, -4.456], [29.4034, -4.4493], [29.3315, -4.0955], [29.2231, -3.911], [29.2099, -3.3631], [29.2246, -3.0533], [29.0168, -2.7995], [29.0146, -2.7205], [29.0634, -2.6023], [29.2969, -2.6729], [29.3901, -2.8087], [29.6981, -2.7945], [29.8681, -2.7164], [29.9303, -2.3396], [30.1425, -2.4141], [30.2339, -2.3471], [30.4084, -2.3129], [30.5536, -2.4]]] }, \"properties\": { \"name\": \"Burundi\", \"id\": \"BI\" }, \"id\": \"BI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[48.5729, 41.8446], [48.8242, 41.6297], [49.1065, 41.3017], [49.2262, 41.026], [49.5561, 40.7162], [49.7758, 40.5839], [49.9906, 40.5768], [50.3067, 40.4121], [50.1433, 40.3234], [49.9188, 40.3163], [49.5512, 40.1942], [49.4775, 40.0872], [49.3244, 39.6082], [49.363, 39.3495], [49.2694, 39.2851], [49.1996, 39.0725], [49.0137, 39.1342], [48.8508, 38.8155], [48.8686, 38.4355], [48.5928, 38.4111], [48.4175, 38.5864], [48.0233, 38.819], [48.05, 38.9349], [48.2422, 38.9788], [48.2742, 39.0991], [48.1254, 39.1715], [48.1362, 39.3122], [48.3221, 39.3992], [47.9958, 39.6842], [47.773, 39.6487], [47.1883, 39.3411], [46.9891, 39.1803], [46.8528, 39.1484], [46.5549, 38.9042], [46.4906, 38.9065], [46.55, 39.2012], [46.3783, 39.3823], [46.4812, 39.555], [46.2021, 39.5945], [45.7897, 39.8812], [45.9646, 40.2337], [45.5695, 40.417], [45.3759, 40.6381], [45.5877, 40.8467], [45.1899, 41.1263], [45.0014, 41.2911], [45.281, 41.4495], [45.7155, 41.3377], [45.7928, 41.2245], [46.0311, 41.1672], [46.1706, 41.1978], [46.4578, 41.07], [46.6264, 41.1597], [46.6188, 41.3439], [46.3055, 41.5077], [46.1821, 41.6573], [46.4298, 41.8908], [46.5522, 41.8122], [46.7494, 41.8127], [47.2052, 41.4557], [47.2612, 41.315], [47.5205, 41.2289], [47.8609, 41.2129], [48.0562, 41.4589], [48.3914, 41.6018], [48.5729, 41.8446]]], [[[46.1147, 38.8776], [45.4799, 39.0064], [45.1412, 39.2545], [44.8172, 39.6504], [44.7683, 39.7037], [45.0315, 39.7649], [45.1487, 39.6566], [45.4568, 39.4946], [45.7506, 39.563], [45.7662, 39.3783], [45.9774, 39.2438], [45.9517, 39.1781], [46.1147, 38.8776]]]] }, \"properties\": { \"name\": \"Azerbaijan\", \"id\": \"AZ\" }, \"id\": \"AZ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[16.9531, 48.5989], [16.8626, 48.4412], [16.9726, 48.198], [17.1476, 48.0058], [17.0299, 47.8371], [17.0667, 47.7075], [16.7476, 47.6862], [16.6397, 47.609], [16.6229, 47.4474], [16.4342, 47.3675], [16.4533, 47.0066], [16.2527, 46.9719], [16.0929, 46.8632], [15.9574, 46.6777], [15.7671, 46.7114], [15.4394, 46.6298], [15.0009, 46.6262], [14.7567, 46.4992], [14.5037, 46.4171], [13.6998, 46.5201], [13.1689, 46.5725], [12.3881, 46.7025], [12.1542, 46.9352], [12.1693, 47.082], [11.7756, 46.9862], [11.2442, 46.9755], [11.025, 46.7971], [10.7599, 46.7935], [10.4528, 46.865], [10.3493, 46.9848], [10.1798, 46.8623], [9.9969, 46.8854], [9.8455, 47.0075], [9.5801, 47.0572], [9.5277, 47.2707], [9.6258, 47.4669], [9.5242, 47.5242], [9.7488, 47.5757], [10.0342, 47.4736], [10.0963, 47.3795], [10.313, 47.3133], [10.4306, 47.541], [10.8731, 47.5202], [10.981, 47.3981], [11.2979, 47.4248], [11.717, 47.5837], [12.1857, 47.6196], [12.1969, 47.7093], [12.4827, 47.6373], [12.686, 47.6693], [12.7828, 47.5641], [13.0145, 47.478], [13.0336, 47.6986], [12.8978, 47.7217], [12.9537, 47.8908], [12.7601, 48.076], [12.8143, 48.1607], [13.4095, 48.3942], [13.4867, 48.582], [13.6749, 48.5229], [13.7855, 48.5873], [13.8148, 48.7669], [14.0491, 48.6024], [14.3674, 48.5762], [14.6915, 48.5993], [14.822, 48.7739], [14.9228, 48.7713], [14.9721, 48.9839], [15.3108, 48.9739], [15.7009, 48.8605], [15.8252, 48.8645], [16.0574, 48.7548], [16.3672, 48.7389], [16.4777, 48.8001], [16.8839, 48.7036], [16.9531, 48.5989]]] }, \"properties\": { \"name\": \"Austria\", \"id\": \"AT\" }, \"id\": \"AT\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[145.0431, -40.7868], [145.2832, -40.77], [145.8217, -41.0247], [146.3175, -41.1637], [146.5745, -41.1424], [146.9899, -40.9924], [147.3206, -40.9564], [147.4547, -41.0016], [147.6217, -40.8445], [147.8729, -40.8725], [147.9688, -40.7797], [148.2151, -40.8547], [148.2928, -40.947], [148.3124, -41.3497], [148.2901, -41.4651], [148.3017, -42.0399], [148.1831, -42.0648], [148.0229, -42.2596], [148.0095, -42.4359], [147.9243, -42.5727], [147.915, -42.8163], [147.9807, -43.1572], [147.7858, -43.2202], [147.6478, -43.0204], [147.8001, -42.9282], [147.5737, -42.8456], [147.4081, -42.894], [147.2599, -43.0711], [147.2451, -43.2158], [147.0774, -43.2758], [146.8741, -43.6126], [146.6993, -43.602], [146.5483, -43.5087], [146.1869, -43.5127], [146.0431, -43.5474], [145.9753, -43.2771], [145.8026, -43.2443], [145.6099, -42.9983], [145.4873, -42.9268], [145.2681, -42.5442], [145.1988, -42.2308], [145.2384, -42.0195], [145.0555, -41.8269], [144.7781, -41.4189], [144.6461, -40.9808], [144.7097, -40.7828], [144.8184, -40.7216], [145.0431, -40.7868]]], [[[148.3261, -40.3069], [148.4743, -40.4326], [148.1024, -40.4517], [148.3261, -40.3069]]], [[[148.0003, -39.7575], [148.1778, -39.9385], [148.2972, -39.9856], [148.3234, -40.1445], [148.1055, -40.2622], [147.8906, -40.0144], [147.8392, -39.8315], [148.0003, -39.7575]]], [[[143.928, -40.1161], [143.8387, -39.9039], [143.8618, -39.7379], [144.0008, -39.5803], [144.0914, -39.638], [144.1411, -39.9536], [143.928, -40.1161]]], [[[137.5964, -35.7384], [138.0464, -35.7553], [138.0118, -35.9075], [137.8356, -35.8677], [137.6709, -35.8978], [137.5901, -36.0269], [137.4485, -36.075], [137.2097, -35.9826], [137.1476, -36.039], [136.7552, -36.0331], [136.5408, -35.8903], [136.6388, -35.7491], [137.0917, -35.6639], [137.334, -35.5924], [137.5306, -35.6053], [137.5964, -35.7384]]], [[[113.1832, -26.0532], [112.9643, -25.7833], [112.9084, -25.5698], [112.9826, -25.52], [113.1832, -26.0532]]], [[[153.0776, -25.7509], [153.0069, -25.7291], [152.9768, -25.5515], [153.0607, -25.302], [153.0379, -25.1933], [153.1893, -25.0703], [153.2422, -24.9226], [153.1809, -24.765], [153.2822, -24.7384], [153.35, -25.0633], [153.1414, -25.513], [153.0776, -25.7509]]], [[[151.1465, -23.491], [151.2957, -23.7205], [151.1843, -23.7409], [151.0333, -23.53], [151.1465, -23.491]]], [[[146.2783, -18.2313], [146.3419, -18.4], [146.2358, -18.4507], [146.1164, -18.2926], [146.2783, -18.2313]]], [[[139.5077, -16.573], [139.4305, -16.6609], [139.1597, -16.7416], [139.1628, -16.6258], [139.2929, -16.4673], [139.5881, -16.3954], [139.6977, -16.5148], [139.5077, -16.573]]], [[[136.7148, -13.8039], [136.8044, -13.8426], [136.7454, -14.0725], [136.8856, -14.1972], [136.8945, -14.2931], [136.6495, -14.2802], [136.3632, -14.2287], [136.4276, -14.1262], [136.4249, -13.8648], [136.6557, -13.6761], [136.7148, -13.8039]]], [[[130.4594, -11.6795], [130.5024, -11.8358], [130.3174, -11.7718], [130.1314, -11.8246], [130.0719, -11.6809], [130.1975, -11.6581], [130.1526, -11.4775], [130.3392, -11.3373], [130.4594, -11.6795]]], [[[130.6188, -11.3763], [130.7524, -11.3843], [130.9126, -11.3093], [131.0231, -11.3341], [131.2683, -11.1898], [131.5385, -11.4366], [131.2922, -11.711], [130.9508, -11.9262], [130.6449, -11.7425], [130.5118, -11.6178], [130.4226, -11.4455], [130.3685, -11.2152], [130.4266, -11.1832], [130.6188, -11.3763]]], [[[132.5932, -11.3026], [132.4938, -11.1637], [132.484, -11.0371], [132.5932, -10.9977], [132.6292, -11.169], [132.5932, -11.3026]]], [[[143.1787, -11.9547], [143.1045, -12.1695], [143.1103, -12.3036], [143.2542, -12.3977], [143.4015, -12.64], [143.512, -13.0946], [143.5294, -13.3037], [143.5867, -13.4435], [143.5485, -13.7409], [143.6435, -13.9638], [143.7562, -14.3491], [143.9618, -14.4627], [144.2099, -14.302], [144.4731, -14.2319], [144.648, -14.4924], [145.2876, -14.943], [145.2517, -15.0975], [145.293, -15.3274], [145.2717, -15.4766], [145.3755, -15.881], [145.458, -16.0563], [145.4261, -16.4061], [145.55, -16.6249], [145.7546, -16.8796], [145.9122, -16.9126], [145.9019, -17.0701], [146.0498, -17.3809], [146.1258, -17.6352], [146.0325, -18.273], [146.2229, -18.5096], [146.3334, -18.5536], [146.2971, -18.8412], [146.4813, -19.0787], [146.8289, -19.2358], [147.0028, -19.2559], [147.1387, -19.393], [147.4183, -19.3783], [147.5861, -19.6229], [147.7424, -19.7703], [147.9154, -19.8693], [148.081, -19.8986], [148.3668, -20.0877], [148.6004, -20.1454], [148.7593, -20.2897], [148.8849, -20.4809], [148.73, -20.4677], [148.6838, -20.5804], [148.7894, -20.7358], [149.0607, -20.9613], [149.205, -21.1251], [149.3293, -21.4762], [149.454, -21.5787], [149.4602, -21.7655], [149.5957, -22.2574], [149.704, -22.4408], [149.9418, -22.308], [150.0764, -22.1647], [150.2348, -22.3728], [150.5415, -22.5593], [150.5686, -22.3839], [150.6725, -22.4182], [150.7639, -22.5761], [150.783, -23.1767], [150.8429, -23.4582], [151.1537, -23.784], [151.5008, -24.0126], [151.6908, -24.0383], [151.9025, -24.2008], [152.1297, -24.5976], [152.4565, -24.8022], [152.5022, -24.9638], [152.6545, -25.2017], [152.789, -25.2741], [152.9137, -25.4321], [152.9203, -25.6887], [153.0282, -25.8703], [153.165, -25.9644], [153.0841, -26.304], [153.1623, -26.9826], [153.117, -27.1944], [153.1978, -27.4048], [153.3855, -27.7684], [153.4548, -28.0484], [153.5756, -28.2406], [153.5693, -28.5336], [153.6168, -28.673], [153.6044, -28.8546], [153.4624, -29.0503], [153.3483, -29.2905], [153.347, -29.4964], [153.2723, -29.8924], [153.0304, -30.5635], [153.0478, -30.9071], [152.9438, -31.4349], [152.7859, -31.7865], [152.5595, -32.0457], [152.5453, -32.2433], [152.4703, -32.439], [152.2474, -32.6086], [152.1644, -32.7573], [151.8129, -32.9011], [151.4839, -33.3477], [151.432, -33.5217], [151.2922, -33.5811], [151.3228, -33.6992], [151.2314, -34.0295], [150.9601, -34.2971], [150.8714, -34.4991], [150.7813, -34.8924], [150.6974, -35.042], [150.6902, -35.1778], [150.5673, -35.2142], [150.3742, -35.5839], [150.1953, -35.8334], [150.063, -36.5503], [149.9605, -36.8455], [149.9863, -37.2583], [149.9325, -37.5287], [149.8095, -37.5478], [149.5654, -37.7298], [149.2986, -37.8021], [148.944, -37.7884], [148.2626, -37.8309], [147.8769, -37.9344], [147.6314, -38.0555], [147.3957, -38.2189], [146.8568, -38.6633], [146.4356, -38.7117], [146.2162, -38.7827], [146.3366, -38.894], [146.4667, -38.8403], [146.4839, -39.065], [146.4, -39.1453], [146.1586, -38.8657], [145.9352, -38.9016], [145.7911, -38.6668], [145.6064, -38.6571], [145.3973, -38.5354], [145.5419, -38.3937], [145.4758, -38.2437], [145.293, -38.2375], [145.1913, -38.3836], [144.9596, -38.5007], [144.9112, -38.3441], [145.1198, -38.0915], [144.8913, -37.8997], [144.5383, -38.0773], [144.6654, -38.21], [144.1016, -38.4622], [143.8117, -38.6988], [143.5392, -38.8208], [143.2262, -38.7431], [143.0824, -38.6459], [142.8401, -38.5807], [142.6122, -38.4515], [142.3446, -38.3721], [142.1879, -38.3996], [141.9247, -38.2837], [141.7249, -38.2713], [141.594, -38.3875], [141.4244, -38.3636], [141.2141, -38.1718], [141.0112, -38.0769], [140.6272, -38.0285], [140.3906, -37.8966], [140.2122, -37.6423], [139.7843, -37.2459], [139.7386, -37.0594], [139.8575, -36.6622], [139.7287, -36.3714], [139.5485, -36.0966], [139.245, -35.8272], [139.0377, -35.6892], [139.1779, -35.5231], [139.3252, -35.4268], [139.1929, -35.3473], [138.9151, -35.489], [138.5218, -35.6425], [138.1844, -35.6128], [138.3998, -35.3257], [138.5111, -35.0243], [138.4898, -34.7636], [138.0895, -34.1697], [137.919, -34.456], [137.8742, -34.7273], [137.6918, -35.1432], [137.4596, -35.1312], [137.1445, -35.2364], [136.8834, -35.24], [137.0144, -34.9159], [137.3908, -34.9133], [137.4929, -34.5976], [137.4592, -34.3788], [137.4937, -34.1613], [137.6505, -33.8589], [137.9319, -33.5789], [137.8524, -33.2007], [137.9927, -33.0942], [137.9133, -32.7706], [137.7907, -32.8234], [137.6802, -32.9778], [137.4423, -33.1936], [137.3544, -33.4302], [137.2372, -33.6295], [136.6353, -33.8967], [136.4306, -34.0299], [136.1212, -34.4289], [135.8908, -34.6611], [135.9988, -34.9439], [135.7924, -34.8631], [135.6477, -34.9394], [135.4807, -34.7584], [135.2308, -34.5799], [135.4501, -34.5812], [135.1856, -33.907], [134.8886, -33.6264], [134.7909, -33.3286], [134.6076, -33.19], [134.3013, -33.1652], [134.1735, -32.9792], [134.1002, -32.7488], [134.2272, -32.7307], [134.2343, -32.5487], [133.9302, -32.4119], [133.7869, -32.2689], [133.5511, -32.1828], [133.2119, -32.1837], [132.7575, -31.9561], [132.6487, -31.9494], [132.3238, -32.0199], [132.2145, -32.007], [131.7214, -31.6964], [131.3929, -31.5486], [131.1435, -31.4957], [130.783, -31.604], [130.1297, -31.5792], [129.1877, -31.6599], [128.9462, -31.7026], [128.5462, -31.8876], [128.0677, -32.0666], [127.678, -32.1513], [127.3197, -32.2641], [126.7792, -32.3111], [126.1364, -32.257], [125.917, -32.297], [125.4638, -32.5566], [125.2667, -32.6143], [124.759, -32.8829], [124.3732, -32.9584], [124.1259, -33.1292], [123.8686, -33.5962], [123.6506, -33.8363], [123.5067, -33.9162], [123.3656, -33.9051], [123.2075, -33.9882], [123.0677, -33.9008], [122.7774, -33.8909], [122.1511, -33.9917], [122.061, -33.8745], [121.4053, -33.8266], [120.8145, -33.8715], [120.4186, -33.9629], [120.2095, -33.9353], [119.854, -33.9748], [119.6351, -34.1009], [119.4505, -34.3681], [119.2476, -34.4565], [118.8951, -34.48], [118.1356, -34.9865], [117.5817, -35.0978], [117.144, -35.0335], [116.5172, -34.9878], [115.9868, -34.7952], [115.7261, -34.5262], [115.2779, -34.3038], [115.1278, -34.342], [115.0088, -34.2559], [114.9733, -34.0512], [114.9937, -33.5155], [115.1816, -33.6433], [115.3586, -33.6397], [115.5153, -33.5314], [115.6831, -33.1927], [115.6188, -32.6671], [115.708, -32.5681], [115.7382, -31.8881], [115.6983, -31.6946], [115.4545, -31.3026], [115.2943, -30.9617], [115.1767, -30.8081], [115.0781, -30.5605], [114.9947, -30.2164], [114.9423, -29.7215], [114.9592, -29.4334], [114.8571, -29.1431], [114.6285, -28.8719], [114.5374, -28.543], [114.165, -28.0809], [114.1336, -27.9765], [114.0984, -27.5442], [114.0283, -27.3471], [113.7091, -26.8477], [113.3332, -26.4172], [113.2311, -26.2414], [113.3891, -26.1056], [113.5817, -26.5583], [113.7336, -26.5952], [113.8366, -26.5006], [113.853, -26.3319], [113.5889, -26.0984], [113.5134, -25.8983], [113.3953, -25.7131], [113.5395, -25.6252], [113.7131, -25.8308], [113.6918, -26.0918], [113.766, -26.1597], [113.8801, -26.0279], [113.9422, -26.2586], [114.0904, -26.3936], [114.2156, -26.2893], [114.2143, -25.8516], [113.9928, -25.5448], [113.6709, -24.9772], [113.5693, -24.6931], [113.4176, -24.4357], [113.4215, -24.1324], [113.5529, -23.7329], [113.7572, -23.4182], [113.7949, -23.0236], [113.7677, -22.8127], [113.683, -22.6379], [113.9586, -21.9392], [114.1424, -21.9099], [114.0927, -22.1816], [114.1637, -22.3231], [114.1415, -22.483], [114.3777, -22.3413], [114.6027, -21.9423], [114.8588, -21.7359], [115.1615, -21.6307], [115.4564, -21.4917], [116.0107, -21.0305], [116.7068, -20.6537], [117.1391, -20.6408], [117.4064, -20.7212], [117.6838, -20.6425], [118.1992, -20.3753], [118.7513, -20.2617], [119.1047, -19.9953], [119.5858, -20.0384], [119.7678, -19.9585], [120.1961, -19.9093], [120.4337, -19.8418], [120.8784, -19.6651], [121.1798, -19.4778], [121.3374, -19.3197], [121.4936, -19.1067], [121.6309, -18.8169], [121.8337, -18.4773], [122.0063, -18.3938], [122.3611, -18.0369], [122.2372, -17.9686], [122.1476, -17.549], [122.1604, -17.3138], [122.2612, -17.1358], [122.4321, -16.9702], [122.7201, -16.7878], [122.9168, -16.4327], [122.9706, -16.4367], [123.1419, -16.8632], [123.2658, -17.0368], [123.3833, -17.293], [123.5254, -17.4856], [123.6079, -17.2197], [123.5861, -17.0825], [123.6638, -17.0231], [123.7988, -17.1274], [123.8743, -16.9188], [123.778, -16.8677], [123.4903, -16.4908], [123.5813, -16.4709], [123.6466, -16.343], [123.607, -16.2241], [123.7286, -16.1926], [123.8592, -16.3825], [123.9613, -16.287], [124.1299, -16.2786], [124.3004, -16.3883], [124.4545, -16.3354], [124.3883, -16.2032], [124.4345, -16.1037], [124.577, -16.1135], [124.3816, -15.7579], [124.4397, -15.4934], [124.5614, -15.496], [124.7505, -15.2852], [125.0631, -15.4423], [125.0728, -15.3065], [124.909, -15.31], [124.8389, -15.161], [125.0239, -15.0247], [125.1887, -15.0455], [125.3556, -15.1196], [125.3839, -15.0158], [125.2432, -14.9448], [125.1788, -14.7148], [125.2845, -14.5838], [125.4358, -14.5568], [125.6813, -14.3881], [125.8194, -14.4693], [125.85, -14.5972], [126.021, -14.4946], [126.0165, -14.3712], [126.1115, -14.1143], [126.2585, -14.1635], [126.4031, -14.0187], [126.5696, -14.1608], [126.7809, -13.9554], [126.7755, -13.7884], [126.9034, -13.7441], [127.0992, -13.8675], [127.2931, -13.9348], [127.6727, -14.195], [127.8875, -14.4853], [128.1996, -14.7516], [128.1752, -15.0433], [128.4774, -14.7881], [128.6355, -14.7809], [129.0581, -14.8844], [129.2379, -15.0801], [129.2676, -14.8715], [129.4589, -14.9332], [129.5672, -15.0473], [129.6369, -14.8511], [129.7536, -14.7894], [129.6049, -14.6473], [129.6081, -14.5595], [129.3785, -14.3926], [129.4594, -14.2136], [129.7097, -13.9802], [129.8388, -13.5731], [129.9378, -13.5017], [130.1358, -13.4484], [130.2597, -13.3024], [130.1349, -13.1457], [130.1682, -12.9575], [130.3179, -12.8829], [130.3999, -12.688], [130.6174, -12.6467], [130.6228, -12.431], [130.8979, -12.5238], [130.8736, -12.3671], [131.0236, -12.3426], [131.0458, -12.1896], [131.2197, -12.178], [131.4382, -12.277], [131.7262, -12.2783], [131.8878, -12.2321], [132.0641, -12.281], [132.2532, -12.1859], [132.3722, -12.2393], [132.5839, -12.11], [132.6304, -12.035], [132.6301, -11.8358], [132.674, -11.6489], [132.4752, -11.4917], [132.2781, -11.4677], [132.1333, -11.5006], [131.812, -11.2715], [131.9615, -11.1809], [132.1977, -11.3048], [132.2625, -11.204], [132.5573, -11.367], [132.6829, -11.5054], [132.8573, -11.3909], [133.0247, -11.4527], [133.1853, -11.7057], [133.3563, -11.7283], [133.5334, -11.8162], [133.904, -11.8321], [134.237, -12.0079], [134.5379, -12.0608], [134.7301, -11.9845], [134.8549, -12.1025], [135.0297, -12.1939], [135.2179, -12.2214], [135.3525, -12.1291], [135.5486, -12.0608], [135.7884, -11.9071], [135.8895, -11.9928], [135.7026, -12.1518], [135.744, -12.242], [135.9379, -12.1522], [136.0085, -12.1913], [136.0817, -12.4225], [136.2607, -12.4337], [136.3285, -12.3058], [136.2699, -12.1318], [136.4435, -11.9516], [136.5403, -11.9578], [136.6095, -12.1336], [136.7196, -12.2264], [136.8972, -12.2437], [136.9474, -12.3498], [136.5372, -12.7843], [136.5944, -13.0037], [136.4613, -13.2252], [136.294, -13.1381], [135.9273, -13.3041], [135.929, -13.6215], [135.9894, -13.8102], [135.8833, -14.1533], [135.7444, -14.2864], [135.4052, -14.7583], [135.4533, -14.923], [135.5308, -15.0002], [135.8327, -15.16], [136.2051, -15.4033], [136.2913, -15.5702], [136.5838, -15.7065], [136.7051, -15.6852], [136.6983, -15.8348], [136.7845, -15.8942], [137.002, -15.8783], [137.2993, -16.0665], [137.7037, -16.2329], [137.9128, -16.4766], [138.2449, -16.718], [138.5059, -16.7895], [138.6258, -16.778], [139.0097, -16.8992], [139.1104, -17.0142], [139.2485, -17.3285], [139.4407, -17.3804], [139.6897, -17.5406], [139.8943, -17.6112], [140.036, -17.7027], [140.2095, -17.7044], [140.5113, -17.6245], [140.8305, -17.4146], [140.9659, -17.0146], [141.2189, -16.6462], [141.412, -16.0695], [141.3929, -15.9049], [141.4515, -15.6052], [141.6255, -15.0566], [141.523, -14.4703], [141.5945, -14.1528], [141.4808, -13.9269], [141.4724, -13.7977], [141.5341, -13.554], [141.6454, -13.2593], [141.6136, -12.9432], [141.7822, -12.7786], [141.9296, -12.74], [141.8524, -12.5787], [141.6779, -12.4913], [141.6886, -12.3511], [141.8058, -12.0799], [141.9513, -11.8961], [142.139, -11.2733], [142.1683, -10.9466], [142.3264, -10.884], [142.4565, -10.7074], [142.6052, -10.7482], [142.5528, -10.8743], [142.7233, -11.0105], [142.8369, -11.307], [142.8724, -11.8215], [142.9886, -11.9192], [143.1787, -11.9547]]]] }, \"properties\": { \"name\": \"Australia\", \"id\": \"AU\" }, \"id\": \"AU\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[69.2822, -49.0587], [69.15, -48.9189], [69.3688, -48.8905], [69.2822, -49.0587]]], [[[69.185, -49.1094], [69.3142, -49.1062], [69.5348, -48.9744], [69.5423, -49.2559], [69.8544, -49.2216], [70.32, -49.0587], [70.4843, -49.0841], [70.5553, -49.2012], [70.4852, -49.3277], [70.2978, -49.425], [70.1655, -49.3428], [69.9157, -49.3486], [69.7492, -49.4476], [69.8557, -49.5439], [69.6129, -49.6509], [69.153, -49.5297], [68.9928, -49.705], [68.7828, -49.6514], [68.872, -49.4445], [68.7696, -49.0659], [68.8322, -48.8487], [69.0572, -48.6566], [69.1362, -48.8612], [69.0328, -49.0175], [69.185, -49.1094]]]] }, \"properties\": { \"name\": \"French Southern and Antarctic Lands\", \"id\": \"TF\" }, \"id\": \"TF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-161.9937, -83.1186], [-163.0467, -83.0968], [-163.796, -82.8425], [-162.7985, -82.8646], [-161.6351, -83.0272], [-161.9937, -83.1186]]], [[[-160.4672, -81.5894], [-163.766, -81.4447], [-163.869, -81.324], [-162.4565, -81.3133], [-160.9379, -81.4633], [-160.4672, -81.5894]]], [[[-153.9305, -80.0335], [-154.9416, -79.9665], [-155.7511, -79.8298], [-155.6743, -79.7654], [-153.9305, -80.0335]]], [[[-59.7339, -80.3443], [-59.8256, -80.7331], [-60.5828, -80.9484], [-62.0233, -80.8889], [-62.9404, -80.7659], [-63.1441, -80.5946], [-64.065, -80.6505], [-64.2683, -80.7486], [-66.1839, -80.4419], [-65.9801, -80.3846], [-62.5188, -80.3736], [-61.3128, -80.3066], [-61.6943, -80.1343], [-61.3432, -79.8866], [-60.5789, -79.741], [-59.8733, -79.777], [-59.7063, -79.8755], [-59.7339, -80.3443]]], [[[-31.1188, -79.7983], [-30.6601, -79.733], [-29.6145, -79.9096], [-30.4221, -80.0109], [-31.8242, -79.8498], [-31.1188, -79.7983]]], [[[-66.1737, -80.0779], [-66.9041, -79.9088], [-67.0772, -79.7619], [-67.8087, -79.5457], [-66.0141, -79.6243], [-65.5793, -79.7708], [-65.5045, -79.9545], [-66.1737, -80.0779]]], [[[-67.2619, -79.4525], [-67.4343, -79.5014], [-68.549, -79.4374], [-68.0327, -79.227], [-67.0685, -79.2687], [-67.2619, -79.4525]]], [[[-33.9342, -79.3202], [-34.0501, -79.357], [-36.4813, -79.2941], [-35.5347, -79.0898], [-34.3914, -79.223], [-33.9342, -79.3202]]], [[[-159.053, -79.8076], [-160.3021, -79.8445], [-161.8655, -79.7037], [-163.7125, -79.4418], [-164.2259, -79.3207], [-164.1255, -78.9952], [-163.2562, -78.7223], [-162.3901, -78.76], [-161.6431, -78.9011], [-159.6842, -79.4023], [-158.9966, -79.7353], [-159.053, -79.8076]]], [[[-70.3341, -79.6797], [-71.5259, -79.6238], [-71.7836, -79.4445], [-71.6675, -79.2457], [-71.2545, -79.0597], [-70.544, -78.8839], [-67.4785, -78.3628], [-66.7281, -78.3836], [-67.4809, -78.6823], [-69.251, -79.2102], [-69.6864, -79.4431], [-69.7317, -79.6186], [-70.3341, -79.6797]]], [[[167.6429, -78.1412], [167.377, -78.2491], [166.1217, -78.2749], [166.111, -78.0897], [166.8635, -78.1962], [167.6429, -78.1412]]], [[[-45.2226, -78.8107], [-43.722, -78.8186], [-43.5442, -78.9021], [-42.9654, -79.4769], [-42.9901, -79.8014], [-43.2673, -79.9784], [-43.7582, -80.0206], [-43.5278, -80.1916], [-49.1875, -80.643], [-49.7729, -80.7841], [-54.1626, -80.8702], [-54.3472, -80.5693], [-53.4823, -80.1889], [-52.2972, -80.1414], [-51.7115, -79.99], [-50.3391, -79.4796], [-50.7331, -79.2829], [-50.2197, -78.6051], [-49.0812, -78.0475], [-47.692, -77.8402], [-46.8257, -77.7853], [-45.5302, -77.8816], [-44.34, -78.0929], [-43.8086, -78.2864], [-43.9473, -78.5975], [-45.0679, -78.6615], [-45.2226, -78.8107]]], [[[-150.3971, -77.3693], [-151.3446, -77.2965], [-151.0216, -77.2202], [-150.3971, -77.3693]]], [[[167.084, -77.3218], [167.4609, -77.3941], [168.4508, -77.3861], [169.2756, -77.4546], [169.3528, -77.5246], [168.3225, -77.6827], [167.3921, -77.6485], [166.729, -77.8509], [166.2367, -77.5473], [166.6264, -77.3769], [166.4129, -77.2521], [166.9872, -77.1864], [167.084, -77.3218]]], [[[-149.2307, -77.1207], [-150.4619, -77.0759], [-150.7886, -76.9818], [-149.8706, -76.8752], [-149.2307, -77.1207]]], [[[-145.2381, -75.7114], [-146.0427, -75.6119], [-145.7609, -75.5138], [-145.2381, -75.7114]]], [[[-131.0667, -74.5838], [-131.8408, -74.5426], [-132.1627, -74.4259], [-131.7627, -74.3238], [-130.9812, -74.4143], [-131.0667, -74.5838]]], [[[-127.3657, -74.6225], [-127.8172, -74.5746], [-128.0961, -74.4663], [-127.8529, -74.3318], [-127.1451, -74.48], [-127.3657, -74.6225]]], [[[-116.7385, -74.1649], [-117.2303, -74.1928], [-117.3764, -74.0827], [-116.3814, -73.8657], [-116.155, -73.9105], [-116.7385, -74.1649]]], [[[-119.549, -74.1103], [-119.8025, -73.8146], [-118.9593, -73.8097], [-119.0585, -73.9979], [-119.549, -74.1103]]], [[[-120.5562, -73.756], [-120.2726, -73.9891], [-120.9894, -74.1573], [-121.0625, -74.3375], [-122.2867, -74.4032], [-122.8591, -74.3429], [-122.8806, -74.0991], [-122.6248, -73.9655], [-123.0347, -73.8377], [-123.1122, -73.6823], [-122.4356, -73.6815], [-120.5562, -73.756]]], [[[-20.6074, -73.8866], [-20.6543, -74.1049], [-20.4233, -74.3176], [-20.8456, -74.4378], [-21.2884, -73.9894], [-21.0245, -73.8803], [-20.6074, -73.8866]]], [[[-126.3299, -73.2863], [-125.7357, -73.4057], [-125.2761, -73.6903], [-125.8286, -73.7183], [-125.6745, -73.8221], [-124.9934, -73.8297], [-124.5399, -73.7396], [-124.1284, -73.8342], [-124.1517, -73.9442], [-123.8004, -74.0761], [-123.8368, -74.2257], [-124.8731, -74.2084], [-126.244, -73.891], [-126.4962, -73.7001], [-127.4143, -73.5164], [-127.2676, -73.3041], [-126.3299, -73.2863]]], [[[-73.8785, -73.357], [-74.1466, -73.3156], [-73.8321, -73.1132], [-73.5425, -73.1239], [-73.8785, -73.357]]], [[[-74.3544, -73.0986], [-74.6678, -73.2753], [-74.3661, -73.4643], [-74.5747, -73.6113], [-75.9009, -73.3325], [-76.0177, -73.0852], [-75.4395, -72.9943], [-75.7311, -72.8793], [-75.3769, -72.8203], [-74.4738, -72.894], [-74.2239, -72.997], [-74.3544, -73.0986]]], [[[-91.1608, -73.182], [-91.5108, -73.1954], [-91.357, -72.9094], [-91.6699, -72.6236], [-91.3035, -72.5473], [-90.8072, -72.6107], [-90.7755, -72.993], [-91.1608, -73.182]]], [[[-95.0271, -72.6649], [-95.2157, -72.5997], [-94.514, -72.4918], [-94.4261, -72.6125], [-95.0271, -72.6649]]], [[[-98.091, -71.9125], [-97.4734, -72.0004], [-96.8695, -71.8508], [-96.3834, -71.8361], [-96.125, -71.8957], [-96.2982, -72.0453], [-96.715, -72.1318], [-96.7986, -72.2596], [-95.6095, -72.0683], [-95.5755, -72.4101], [-96.0782, -72.4536], [-96.0518, -72.5775], [-97.2503, -72.5206], [-98.4077, -72.5477], [-99.1488, -72.4719], [-100.1951, -72.2725], [-100.3573, -72.2783], [-102.2647, -72.1353], [-102.128, -71.9853], [-100.0846, -71.8371], [-99.8331, -72.0461], [-99.563, -71.9449], [-99.2541, -71.9719], [-98.6155, -71.7638], [-98.1891, -71.8202], [-98.091, -71.9125]]], [[[-2.5328, -70.7677], [-2.0923, -70.8211], [-2.2931, -70.9981], [-2.6067, -71.1411], [-3.0069, -70.8516], [-3.5371, -70.6834], [-2.7499, -70.694], [-2.5328, -70.7677]]], [[[-73.7067, -70.635], [-73.5503, -70.7233], [-74.205, -70.9239], [-74.8058, -71.0123], [-76.1763, -71.1327], [-76.5004, -70.9413], [-76.0345, -70.8361], [-75.2099, -70.7727], [-75.0076, -70.6088], [-74.4687, -70.7269], [-74.4563, -70.5867], [-74.0383, -70.5529], [-73.7067, -70.635]]], [[[-60.7406, -70.7104], [-60.9755, -70.5991], [-60.5538, -70.509], [-60.4876, -70.6466], [-60.7406, -70.7104]]], [[[-5.894, -70.5525], [-6.1561, -70.6115], [-6.438, -70.4526], [-6.0682, -70.4047], [-5.894, -70.5525]]], [[[3.0371, -70.5972], [2.698, -70.6235], [2.6314, -70.5005], [3.0722, -70.3816], [3.2599, -70.4485], [3.0371, -70.5972]]], [[[-3.2802, -70.5338], [-3.4968, -70.4885], [-3.2875, -70.3442], [-2.7135, -70.3203], [-2.7379, -70.5071], [-3.2802, -70.5338]]], [[[72.0023, -70.6327], [71.6592, -70.4974], [72.0002, -70.4569], [72.0023, -70.6327]]], [[[4.5259, -70.4787], [4.1296, -70.4171], [4.0696, -70.2901], [4.4948, -70.2515], [4.5259, -70.4787]]], [[[26.8572, -70.3811], [26.4702, -70.4482], [26.0054, -70.3732], [25.9823, -70.2], [26.3011, -70.0726], [26.6864, -70.1143], [26.8572, -70.3811]]], [[[1.2992, -70.255], [0.9903, -70.2244], [1.0268, -70.05], [1.4124, -70.0406], [1.2992, -70.255]]], [[[-74.9871, -69.7277], [-74.8102, -69.7525], [-74.438, -69.9496], [-74.8488, -70.1791], [-75.7267, -70.0961], [-75.6814, -69.8817], [-74.9871, -69.7277]]], [[[16.2225, -70.0078], [15.6139, -69.939], [15.6991, -69.7734], [16.2469, -69.7051], [16.2225, -70.0078]]], [[[-71.9853, -69.6984], [-72.2022, -69.7401], [-72.7768, -69.6451], [-72.9572, -69.5293], [-72.7262, -69.4129], [-72.3311, -69.492], [-71.9853, -69.6984]]], [[[-61.9975, -69.7219], [-62.4962, -69.2882], [-62.1178, -69.2145], [-61.8159, -69.3761], [-61.8071, -69.5146], [-61.9975, -69.7219]]], [[[-70.0511, -69.1892], [-69.7075, -69.3211], [-69.417, -69.5834], [-69.0914, -70.0904], [-68.7305, -70.4082], [-68.3361, -70.8561], [-68.2779, -71.0971], [-68.2411, -71.8219], [-68.6399, -72.21], [-69.1493, -72.4265], [-69.2092, -72.5344], [-70.5433, -72.6645], [-70.7313, -72.6228], [-71.8461, -72.6392], [-72.3675, -72.6698], [-72.8878, -72.5469], [-73.0864, -72.4079], [-72.6183, -72.2752], [-72.1349, -72.3316], [-70.8727, -72.3666], [-70.4277, -72.3227], [-70.206, -72.2277], [-70.6415, -72.1695], [-71.4125, -72.2845], [-71.8976, -72.1207], [-71.1066, -72.0471], [-70.821, -71.9063], [-71.8162, -71.8219], [-72.4121, -71.6622], [-72.9277, -71.9218], [-73.6328, -71.8348], [-73.5372, -72.0222], [-73.8994, -72.1522], [-74.4294, -72.0555], [-74.7858, -72.0635], [-75.3531, -71.8783], [-75.2925, -71.6151], [-74.8631, -71.5432], [-74.3919, -71.6382], [-74.4254, -71.4571], [-74.1873, -71.383], [-73.5454, -71.5729], [-73.6044, -71.351], [-73.3974, -71.3212], [-72.6216, -71.3882], [-72.4301, -71.2752], [-72.9055, -71.2231], [-73.0604, -71.1268], [-72.3564, -71.0749], [-71.7185, -71.1451], [-71.1941, -70.9848], [-70.2677, -70.9648], [-70.2987, -70.8361], [-71.0494, -70.762], [-71.1901, -70.6594], [-71.0611, -70.5369], [-70.328, -70.3611], [-69.9754, -70.3603], [-70.3276, -70.1596], [-70.7196, -70.1396], [-71.1204, -70.1964], [-71.6961, -70.0677], [-71.8537, -69.9692], [-71.743, -69.4228], [-72.0808, -69.2669], [-72.1378, -69.1147], [-71.869, -68.9411], [-71.3916, -68.8736], [-70.417, -68.7889], [-70.1054, -68.9593], [-70.0511, -69.1892]]], [[[-67.3488, -67.7661], [-67.6933, -67.7635], [-67.5568, -67.6046], [-67.1493, -67.6503], [-67.3488, -67.7661]]], [[[85.8225, -66.9534], [85.3587, -66.8544], [85.3405, -66.7235], [85.8061, -66.7744], [85.8225, -66.9534]]], [[[-67.9885, -67.4745], [-68.3814, -67.5553], [-68.5804, -67.7328], [-68.9014, -67.7444], [-69.0976, -67.6027], [-69.0825, -67.403], [-68.8199, -67.2335], [-68.3358, -66.802], [-67.8305, -66.6244], [-67.6811, -66.7088], [-67.9324, -66.8446], [-67.9683, -67.0324], [-67.6877, -67.1473], [-68.1752, -67.344], [-67.9885, -67.4745]]], [[[96.6126, -66.0358], [96.9319, -66.0584], [96.934, -66.2009], [96.3947, -66.225], [96.3987, -66.0802], [96.6126, -66.0358]]], [[[-65.8452, -65.8423], [-66.1752, -65.8667], [-65.9684, -65.5711], [-65.8139, -65.6865], [-65.8452, -65.8423]]], [[[100.9814, -65.6776], [100.5469, -65.7011], [100.2703, -65.6035], [100.4093, -65.4655], [100.8833, -65.378], [101.2207, -65.4721], [101.2385, -65.5644], [100.9814, -65.6776]]], [[[-57.2405, -64.5665], [-57.4458, -64.46], [-57.0226, -64.3522], [-56.9911, -64.468], [-57.2405, -64.5665]]], [[[-63.1805, -64.4694], [-63.0256, -64.6109], [-63.6468, -64.8031], [-64.272, -64.6975], [-64.1711, -64.5821], [-63.6743, -64.4214], [-63.6832, -64.3428], [-63.3336, -64.2661], [-63.1805, -64.4694]]], [[[-62.3258, -64.4245], [-62.7468, -64.4716], [-62.4798, -64.2105], [-62.5451, -64.0459], [-62.0585, -64.1382], [-62.1857, -64.3691], [-62.3258, -64.4245]]], [[[-57.846, -64.0538], [-57.593, -63.9673], [-57.2494, -64.0969], [-57.3275, -64.2376], [-57.7033, -64.2931], [-58.3043, -64.3144], [-58.1472, -64.0974], [-58.4248, -64.0677], [-58.2748, -63.9162], [-57.9257, -63.8062], [-57.7794, -63.8683], [-57.846, -64.0538]]], [[[-57.0206, -63.373], [-56.8348, -63.6312], [-57.1191, -63.6379], [-57.1522, -63.479], [-57.4607, -63.5136], [-58.2631, -63.7636], [-58.5318, -63.9153], [-58.839, -64.1871], [-58.8954, -64.389], [-59.2294, -64.4436], [-59.5468, -64.3589], [-59.5732, -64.5305], [-59.9632, -64.4312], [-60.6598, -64.7291], [-61.0598, -64.9811], [-61.7361, -65.0335], [-61.5774, -65.1857], [-61.9478, -65.1924], [-62.1454, -65.3319], [-61.9915, -65.5893], [-62.3051, -65.8406], [-62.1691, -66.0314], [-61.839, -66.1197], [-61.3592, -66.0589], [-61.266, -65.9799], [-60.6183, -65.9333], [-60.5653, -65.9794], [-60.9026, -66.1912], [-61.5261, -66.2258], [-61.8755, -66.296], [-62.2412, -66.1969], [-62.682, -66.2374], [-62.6154, -66.4358], [-62.7049, -66.6799], [-63.2575, -66.264], [-63.7525, -66.2778], [-63.7558, -66.4092], [-64.0778, -66.6542], [-63.8088, -66.7612], [-63.7547, -66.873], [-64.0425, -66.9271], [-64.6862, -66.8064], [-64.8782, -67.0244], [-64.8193, -67.3075], [-65.4433, -67.3263], [-65.5233, -67.4448], [-65.4182, -67.6596], [-65.6002, -67.8758], [-65.4694, -68.0094], [-65.6394, -68.1305], [-64.8959, -68.1683], [-65.3651, -68.2872], [-64.9965, -68.4076], [-65.2417, -68.5834], [-64.8983, -68.6735], [-64.0785, -68.7711], [-64.1692, -68.5824], [-63.7964, -68.4697], [-63.7469, -68.7045], [-63.3436, -68.8106], [-63.4559, -69.0419], [-62.994, -69.329], [-62.4505, -69.5844], [-62.4072, -69.8271], [-62.2024, -70.0278], [-61.9611, -70.12], [-62.3777, -70.3647], [-62.0009, -70.4969], [-61.5046, -70.4907], [-61.6965, -70.6759], [-61.9942, -70.7287], [-61.9611, -70.9005], [-61.3128, -70.8676], [-61.0172, -71.1668], [-61.003, -71.3194], [-61.5159, -71.4793], [-61.7896, -71.6161], [-61.5627, -71.6755], [-61.2136, -71.564], [-60.9491, -71.7474], [-61.035, -71.8202], [-61.9389, -71.9036], [-62.2567, -72.0178], [-61.3104, -72.1127], [-60.7193, -72.0727], [-60.7302, -72.4262], [-61.2798, -72.4682], [-61.2862, -72.601], [-60.939, -72.6996], [-60.5322, -72.6733], [-60.3846, -73.0072], [-59.9569, -73.0307], [-60.1223, -73.2753], [-60.5606, -73.2113], [-61.0813, -73.328], [-61.4285, -73.1914], [-61.7876, -73.2548], [-61.6369, -73.5003], [-61.4054, -73.467], [-60.8789, -73.6122], [-60.9026, -73.8705], [-61.2034, -73.9566], [-61.0416, -74.1218], [-61.5707, -74.1945], [-61.3317, -74.3286], [-60.7042, -74.3074], [-61.0108, -74.4782], [-62.2257, -74.5058], [-61.8943, -74.7131], [-61.928, -74.8626], [-62.3724, -74.9523], [-62.7086, -74.737], [-63.9247, -75.0046], [-63.337, -75.0349], [-63.2311, -75.1538], [-63.8574, -75.2062], [-64.2796, -75.2928], [-63.3039, -75.3522], [-63.3633, -75.4517], [-65.0444, -75.7872], [-66.3706, -76.0132], [-67.5182, -76.1095], [-69.3045, -76.3505], [-69.9152, -76.5219], [-70.0955, -76.6546], [-70.8949, -76.7394], [-71.7987, -76.7527], [-72.7224, -76.6889], [-73.8799, -76.6968], [-75.2684, -76.5814], [-76.2442, -76.5854], [-77.1899, -76.6298], [-77.168, -76.8339], [-76.2487, -77.2748], [-75.3868, -77.474], [-74.5805, -77.478], [-72.852, -77.5904], [-73.2515, -77.8944], [-74.0421, -78.1093], [-74.812, -78.1776], [-75.3984, -78.158], [-76.4378, -78.044], [-77.7421, -77.9402], [-79.6791, -77.8425], [-80.6015, -77.7519], [-81.4411, -77.8856], [-77.8582, -78.3507], [-77.4325, -78.4346], [-77.5451, -78.6597], [-77.8691, -78.7454], [-78.7116, -78.7521], [-80.2923, -78.8226], [-83.246, -78.3569], [-83.7626, -78.4613], [-83.26, -78.7742], [-81.6608, -79.1], [-80.892, -79.5017], [-80.1512, -79.2683], [-79.4556, -79.3043], [-76.499, -79.3256], [-76.2176, -79.3872], [-76.0316, -79.6269], [-76.5578, -79.9034], [-77.702, -80.0096], [-79.6604, -79.9967], [-78.1761, -80.1668], [-76.4074, -80.0948], [-75.7091, -80.3828], [-75.2366, -80.8028], [-74.8067, -80.8866], [-73.9378, -80.8161], [-73.0296, -80.9173], [-72.1735, -80.7637], [-71.0176, -80.619], [-70.56, -80.6465], [-70.239, -80.8565], [-69.1817, -81.0048], [-68.5897, -80.968], [-67.9654, -81.1482], [-65.5737, -81.4606], [-64.7501, -81.5219], [-62.4902, -81.5569], [-62.5419, -81.6781], [-64.6962, -81.6525], [-65.4867, -81.7749], [-64.1901, -81.7948], [-64.1371, -81.8695], [-65.9162, -81.9023], [-65.9133, -82.1833], [-64.9197, -82.3706], [-62.6454, -82.2632], [-60.8172, -82.2757], [-62.7357, -82.5273], [-61.917, -82.9766], [-61.2185, -82.9917], [-61.5898, -83.3414], [-60.9832, -83.4275], [-59.5159, -83.4585], [-57.3535, -82.8403], [-55.8008, -82.4785], [-55.2948, -82.4647], [-53.9862, -82.2007], [-52.415, -82.1349], [-50.653, -81.9755], [-48.3607, -81.8921], [-47.3602, -82.004], [-46.258, -81.9472], [-46.0465, -82.1585], [-46.5168, -82.4545], [-45.0437, -82.4381], [-43.6692, -82.2699], [-43.1805, -82.0173], [-42.0464, -81.5978], [-41.4338, -81.2977], [-38.7717, -80.8823], [-37.2093, -81.0638], [-35.9657, -80.8907], [-35.3269, -80.6505], [-32.2556, -80.461], [-31.3122, -80.4499], [-31.0154, -80.3083], [-29.3291, -80.172], [-24.2402, -80.062], [-23.5744, -79.9647], [-23.4069, -79.8591], [-24.2998, -79.7708], [-25.2586, -79.7623], [-29.9494, -79.599], [-30.2113, -79.4853], [-30.3161, -79.163], [-31.4129, -79.1453], [-32.9943, -79.2288], [-34.1974, -79.1102], [-35.516, -78.9331], [-36.2391, -78.7742], [-36.1809, -78.4684], [-35.5091, -78.0413], [-35.0877, -77.8372], [-34.5515, -77.7284], [-34.0758, -77.4253], [-32.6141, -77.1407], [-32.0634, -77.1597], [-31.6757, -77.0333], [-30.4892, -76.7625], [-30.222, -76.6604], [-28.9335, -76.3701], [-27.1344, -76.1574], [-26.0593, -75.9573], [-24.2695, -75.7668], [-22.4654, -75.6612], [-21.4338, -75.6829], [-20.7832, -75.5942], [-20.4876, -75.492], [-19.4931, -75.54], [-18.5169, -75.39], [-18.7493, -75.2422], [-18.5169, -75.0522], [-18.2211, -74.9745], [-17.9228, -74.6993], [-17.2989, -74.334], [-16.4296, -74.3238], [-15.6725, -74.4072], [-15.2899, -74.2807], [-14.5739, -73.9375], [-14.6114, -73.8519], [-15.7488, -73.9455], [-16.0975, -73.7089], [-16.5188, -73.6441], [-16.4351, -73.4258], [-15.5959, -73.0968], [-15.0071, -73.0476], [-14.3211, -73.123], [-14.0002, -73.0005], [-14.2978, -72.7328], [-13.2087, -72.7852], [-12.7468, -72.629], [-11.497, -72.4128], [-10.9582, -71.9019], [-11.333, -71.7856], [-12.1483, -71.6138], [-12.3513, -71.3896], [-12.0737, -71.2968], [-11.663, -71.3315], [-10.8254, -71.5535], [-10.5201, -71.2955], [-9.8879, -71.0274], [-9.2308, -71.1739], [-8.6466, -71.6728], [-7.9157, -71.6355], [-7.7138, -71.5463], [-7.6181, -71.1215], [-7.8735, -70.9403], [-7.7528, -70.8427], [-7.3882, -70.7868], [-6.8381, -70.8445], [-5.9364, -70.7127], [-5.5879, -70.8569], [-6.0802, -71.1539], [-5.9499, -71.3417], [-4.4502, -71.3274], [-3.7132, -71.3745], [-2.812, -71.3209], [-2.2614, -71.3572], [-2.0146, -71.4336], [-0.8958, -71.3492], [-0.76, -71.6302], [-0.5431, -71.7127], [0.1542, -71.3981], [0.8349, -71.2023], [1.9087, -71.0034], [2.6096, -70.9], [3.5067, -70.8445], [5.1132, -70.6558], [6.5079, -70.5867], [7.401, -70.4943], [7.6767, -70.3563], [8.5231, -70.4738], [8.8174, -70.3909], [9.1415, -70.1836], [9.6133, -70.2692], [10.2176, -70.508], [11.2033, -70.7287], [11.7014, -70.7664], [12.0681, -70.6163], [12.4618, -70.37], [12.9293, -70.2133], [12.5949, -70.1175], [13.0655, -70.0535], [13.2981, -70.2297], [13.8228, -70.3434], [14.4917, -70.2999], [15.8069, -70.3238], [16.0254, -70.1933], [16.5847, -70.2039], [16.7089, -70.3971], [18.1246, -70.5405], [18.4326, -70.2901], [18.8774, -70.2014], [19.1966, -70.2932], [19.0265, -70.6741], [19.2649, -70.9023], [20.1283, -70.9177], [21.0706, -70.8437], [21.3375, -70.4952], [21.705, -70.2586], [21.9624, -70.3003], [22.3659, -70.4752], [22.2336, -70.6426], [22.4454, -70.7397], [22.9789, -70.8104], [23.4069, -70.7233], [23.8037, -70.4047], [24.2356, -70.4485], [24.3856, -70.7042], [24.7568, -70.8921], [25.1873, -70.9711], [25.9744, -71.0371], [26.499, -71.0194], [27.2071, -70.9111], [27.698, -70.7727], [28.9115, -70.583], [29.4637, -70.4064], [30.0035, -70.2999], [31.0626, -70.2248], [31.3787, -70.2257], [32.6212, -70.0007], [32.8098, -69.9092], [32.9892, -69.6242], [32.9031, -69.3788], [32.5674, -69.0743], [32.6416, -68.8687], [33.1214, -68.6889], [33.4655, -68.6708], [34.193, -68.7023], [34.2192, -68.7907], [33.7722, -69.0201], [33.8135, -69.0991], [34.5961, -69.0946], [35.1314, -69.4871], [35.2246, -69.6371], [36.7187, -69.6522], [37.1147, -69.8107], [37.56, -69.7183], [38.1445, -69.8245], [38.4992, -70.0562], [38.8592, -70.006], [39.4869, -69.6078], [39.7052, -69.4258], [39.8637, -68.9669], [40.4838, -68.7387], [40.8172, -68.7236], [41.1328, -68.5749], [41.8248, -68.4329], [42.409, -68.352], [42.8196, -68.123], [44.7, -67.9041], [44.9893, -67.7693], [45.5695, -67.7364], [45.8878, -67.6596], [46.3992, -67.6174], [46.3174, -67.4021], [46.5599, -67.268], [46.8839, -67.2747], [47.4028, -67.4093], [47.1173, -67.5726], [47.4897, -67.728], [47.9585, -67.66], [48.2097, -67.6995], [48.3217, -67.9175], [48.6479, -67.7941], [48.6301, -67.5207], [49.0528, -67.3524], [49.2192, -67.2268], [48.7137, -67.2171], [48.4655, -67.0435], [48.8304, -66.9383], [49.2471, -66.9413], [50.0062, -67.1753], [50.6059, -67.15], [50.5207, -66.8202], [50.3059, -66.7531], [50.2441, -66.6036], [50.3325, -66.4447], [50.9371, -66.3155], [51.8843, -66.0199], [52.9554, -65.9452], [53.6719, -65.8587], [54.948, -65.9164], [55.2903, -65.9541], [55.7102, -66.0798], [56.3614, -66.3727], [56.8595, -66.4234], [57.1853, -66.6133], [56.8235, -66.7128], [56.2944, -66.6036], [56.4533, -66.7798], [56.3915, -66.9738], [55.8026, -67.1993], [56.1551, -67.2645], [56.5621, -67.1158], [56.8918, -67.0564], [57.6274, -67.0142], [58.7375, -67.2295], [59.2507, -67.4852], [59.8677, -67.403], [60.4821, -67.3852], [61.3091, -67.5402], [62.1737, -67.5753], [62.6878, -67.6476], [63.2378, -67.5269], [63.6989, -67.5083], [64.5738, -67.6205], [66.4884, -67.7657], [67.1751, -67.768], [68.3278, -67.8895], [68.8996, -67.8621], [69.4162, -67.743], [69.656, -67.8646], [69.6031, -68.0409], [69.9822, -68.4644], [69.5344, -68.7369], [69.6458, -68.9322], [69.5308, -69.0241], [69.6293, -69.2314], [69.3719, -69.3312], [68.9062, -69.3726], [68.8796, -69.4698], [69.1885, -69.6549], [69.0825, -69.8667], [68.7438, -69.9212], [68.1783, -69.8374], [67.5754, -70.0877], [67.2678, -70.2732], [67.9408, -70.4228], [68.5596, -70.4127], [69.0208, -70.3251], [69.2503, -70.4313], [69.1885, -70.7047], [68.8725, -71.0354], [68.6239, -71.1814], [68.0375, -71.3909], [67.432, -72.0031], [67.1134, -72.641], [66.8919, -72.9486], [66.4977, -73.1257], [66.5692, -73.2091], [67.322, -73.3002], [67.9714, -73.0857], [67.9714, -72.7505], [68.4197, -72.5149], [69.5547, -72.3746], [69.9623, -72.1327], [70.2943, -72.0555], [70.6161, -71.842], [71.0787, -71.7368], [71.2767, -71.624], [71.4649, -71.1543], [71.9047, -70.7069], [72.2625, -70.6568], [72.7601, -70.3958], [72.8223, -70.0961], [73.3248, -69.8489], [73.9422, -69.7433], [74.5712, -69.8794], [75.1479, -69.8555], [75.424, -69.8933], [75.8208, -69.7255], [75.8913, -69.5755], [76.3596, -69.4902], [77.192, -69.2061], [77.5408, -69.1746], [77.8174, -69.069], [78.015, -68.8918], [78.489, -68.6259], [78.5635, -68.3937], [78.7264, -68.278], [79.288, -68.1195], [80.3631, -67.9468], [82.0171, -67.6903], [82.607, -67.613], [83.3044, -67.6032], [83.4935, -67.4412], [84.4851, -67.1145], [84.7483, -67.1021], [85.7107, -67.1611], [86.1186, -67.055], [86.7503, -67.0373], [87.0849, -66.94], [87.9803, -66.7883], [88.3141, -66.8176], [88.7894, -66.7918], [89.6986, -66.8228], [90.5472, -66.7341], [91.0219, -66.6027], [92.0734, -66.5077], [92.7308, -66.6244], [93.3581, -66.5854], [93.9644, -66.6897], [94.3133, -66.6471], [94.8397, -66.5015], [95.5411, -66.6311], [96.4235, -66.5996], [97.1005, -66.4993], [97.7197, -66.6071], [98.2577, -66.4673], [98.7203, -66.553], [98.8588, -66.6706], [99.3701, -66.6484], [100.2117, -66.474], [100.889, -66.3581], [101.3272, -66.1006], [101.4746, -65.9511], [102.1741, -65.9541], [102.674, -65.8654], [103.6386, -65.999], [103.951, -65.9879], [104.667, -66.1366], [105.0004, -66.1641], [106.3868, -66.4105], [107.1706, -66.4705], [107.6674, -66.5805], [107.7849, -66.6639], [108.1578, -66.6391], [108.3763, -66.7655], [108.9103, -66.8619], [109.4629, -66.9085], [109.8238, -66.8335], [110.6224, -66.5241], [110.5868, -66.3124], [110.9069, -66.0767], [111.4533, -65.9608], [113.0993, -65.8002], [113.7096, -65.9298], [113.9546, -66.0603], [114.3368, -66.3603], [114.6187, -66.4682], [115.0826, -66.4931], [115.3103, -66.5609], [115.6352, -66.7714], [115.2738, -67.0279], [114.5707, -67.1087], [113.9911, -67.2117], [114.0266, -67.4412], [114.6578, -67.3879], [115.3844, -67.2384], [115.8851, -67.2019], [116.7135, -67.047], [117.132, -67.1145], [117.7446, -67.1287], [118.1388, -67.0825], [118.5192, -67.1611], [118.9649, -67.1446], [119.7678, -66.9915], [119.9538, -67.0759], [119.2804, -67.1993], [119.133, -67.3706], [120.4004, -67.2362], [120.9787, -67.1359], [121.4874, -67.0905], [122.1826, -66.8593], [123.2217, -66.7452], [123.9692, -66.608], [124.1961, -66.6009], [124.5978, -66.7084], [125.0951, -66.6413], [125.3981, -66.4243], [125.8656, -66.3643], [126.6645, -66.4975], [126.8737, -66.7593], [127.5412, -67.051], [127.9678, -67.0279], [128.4304, -67.1193], [129.2369, -67.0418], [129.7412, -66.4686], [130.1203, -66.2915], [130.5784, -66.2086], [130.9517, -66.1912], [131.831, -66.2356], [132.3202, -66.1654], [132.8742, -66.1778], [133.4447, -66.0815], [133.8427, -66.1535], [134.1787, -66.2773], [134.2894, -66.4767], [134.9716, -66.3302], [135.352, -66.1273], [136.1941, -66.2925], [136.5532, -66.4389], [136.8892, -66.3394], [137.3362, -66.3466], [137.7539, -66.4065], [138.1401, -66.5441], [139.2418, -66.5738], [139.9001, -66.715], [140.9015, -66.7518], [141.2859, -66.8318], [141.9726, -66.8069], [142.3269, -66.9485], [142.8883, -66.9999], [143.4481, -66.877], [143.8627, -66.9387], [143.9111, -67.0905], [144.3479, -67.0177], [144.6213, -67.1416], [143.9422, -67.7941], [144.189, -67.8997], [144.4043, -67.7941], [144.8792, -67.7209], [145.1278, -67.6258], [145.5567, -67.5908], [145.9753, -67.6241], [146.8279, -67.9646], [146.8967, -68.1203], [146.7977, -68.2735], [147.0938, -68.3684], [147.5688, -68.3751], [148.4561, -68.467], [148.8805, -68.4311], [149.7168, -68.4178], [150.3422, -68.4359], [150.9357, -68.3582], [151.068, -68.385], [151.139, -68.7641], [151.5621, -68.6939], [152.5453, -68.7298], [153.082, -68.8568], [153.7052, -68.7289], [153.7847, -68.3498], [154.1996, -68.4178], [154.9876, -68.8413], [155.5202, -69.0246], [156.0112, -69.0779], [156.4888, -69.183], [157.0463, -69.1763], [157.4813, -69.3086], [157.7756, -69.2048], [158.1579, -69.2088], [159.3861, -69.4685], [159.7838, -69.5217], [160.1257, -69.7344], [160.2095, -69.975], [160.6516, -70.0805], [161.0369, -70.3171], [161.4245, -70.8268], [161.6251, -70.916], [162.2865, -70.9688], [162.0397, -70.6252], [162.0219, -70.4397], [162.2158, -70.334], [162.6749, -70.3047], [163.3487, -70.6208], [163.9986, -70.6364], [164.4034, -70.5103], [165.854, -70.6453], [166.6269, -70.6643], [167.5692, -70.8104], [168.1725, -71.1832], [168.7979, -71.2747], [170.1624, -71.6307], [170.4358, -71.4189], [170.8589, -71.8686], [170.6756, -71.9684], [170.2242, -71.948], [170.0301, -72.1154], [169.9534, -72.4031], [170.2858, -72.4771], [170.0479, -72.6005], [169.4402, -72.4869], [169.0722, -72.4687], [168.8202, -72.5526], [169.8287, -72.7289], [169.545, -73.0502], [169.0336, -73.2003], [168.7358, -73.0911], [168.2045, -73.1296], [167.1555, -73.1475], [166.8829, -73.0112], [166.467, -72.9973], [166.8342, -73.2242], [167.6158, -73.3369], [166.9961, -73.5443], [166.1594, -73.5336], [166.1062, -73.7352], [165.7338, -73.8665], [165.3471, -73.8794], [165.1296, -73.3827], [164.8132, -73.3969], [164.7497, -73.5589], [164.9801, -73.9261], [164.7758, -74.0286], [165.2632, -74.4263], [165.3028, -74.5937], [164.1739, -74.523], [163.7353, -74.5639], [163.2657, -74.4263], [163.1672, -74.6021], [162.6038, -74.8231], [162.5338, -75.1672], [162.0876, -75.2616], [161.6797, -75.2177], [160.9108, -75.3345], [161.9034, -75.4041], [162.1897, -75.4667], [162.239, -75.6216], [162.8156, -75.8463], [162.4365, -76.1548], [162.7277, -76.2254], [162.8245, -76.4637], [162.7627, -76.7456], [162.4502, -76.9556], [163.0868, -77.0323], [163.6076, -77.3879], [163.619, -77.5824], [164.0363, -77.8531], [164.4207, -77.8834], [164.4296, -78.0423], [163.9777, -78.2238], [164.628, -78.3157], [165.0506, -78.226], [165.6631, -78.3055], [166.2086, -78.4515], [167.0579, -78.5185], [167.049, -78.6859], [166.5248, -78.6948], [166.1168, -78.5709], [164.6347, -78.6034], [162.6393, -78.8976], [161.9744, -78.6943], [161.5017, -78.6774], [161.9513, -79.0299], [161.1904, -78.9788], [160.483, -79.2017], [160.6463, -79.4267], [160.2091, -79.5546], [160.5588, -80.0104], [158.7672, -80.2932], [158.5738, -80.4233], [160.5419, -80.425], [160.5211, -80.5835], [160.8304, -80.73], [160.2601, -80.7868], [160.7169, -80.9076], [160.7169, -81.1996], [160.4696, -81.3407], [160.9078, -81.3901], [161.5821, -81.6098], [162.8213, -81.8663], [163.6799, -82.1873], [161.1665, -82.408], [161.2833, -82.49], [163.2684, -82.4634], [164.747, -82.3542], [166.4457, -82.7221], [166.9567, -82.7648], [167.2327, -82.9521], [168.6075, -83.0653], [168.1099, -83.3619], [169.8379, -83.3991], [171.2208, -83.4751], [171.9172, -83.6442], [172.8738, -83.673], [173.8223, -83.8101], [175.0111, -83.8391], [175.3227, -83.9402], [179.403, -84.2061], [180, -84.3518], [180, -89.9989], [-180, -89.9989], [-180, -89.583], [-180, -89.2931], [-180, -88.5869], [-180, -87.8811], [-180, -87.1753], [-180, -86.4696], [-180, -85.7633], [-180, -85.0575], [-180, -84.3518], [-178.3896, -84.3375], [-171.7037, -84.5425], [-168.6679, -84.6837], [-166.9112, -84.8191], [-162.9335, -84.9012], [-160.821, -84.9864], [-157.1276, -85.1858], [-156.9864, -84.8111], [-158.3034, -84.7778], [-163.5684, -84.5288], [-165.1252, -84.3748], [-163.7651, -84.3242], [-164.6851, -84.1546], [-164.083, -83.946], [-164.951, -83.8058], [-167.5528, -83.811], [-169.1677, -83.4498], [-174.066, -82.9002], [-173.0711, -82.9157], [-171.8213, -82.8474], [-169.4407, -83.096], [-168.4178, -83.2286], [-166.2169, -83.2007], [-164.9157, -83.2899], [-164.4456, -83.4675], [-163.111, -83.3289], [-162.1973, -83.519], [-160.5948, -83.4897], [-159.4445, -83.5434], [-157.4285, -83.3463], [-157.0277, -83.2345], [-157.6795, -83.1293], [-155.4594, -82.9805], [-155.1503, -82.8584], [-153.8224, -82.6694], [-153.0098, -82.4497], [-154.7174, -81.941], [-153.9567, -81.7004], [-154.9079, -81.5103], [-157.0326, -81.3191], [-156.5283, -81.1624], [-155.9211, -81.1335], [-152.0348, -81.0291], [-148.1228, -80.9009], [-148.0233, -80.8357], [-149.1471, -80.7189], [-149.2141, -80.6043], [-150.1327, -80.5102], [-150.5755, -80.3536], [-150.2206, -80.1499], [-148.3172, -80.0708], [-148.4335, -79.9297], [-148.1765, -79.7761], [-149.0514, -79.6571], [-150.4905, -79.5457], [-152.0914, -79.2417], [-152.2434, -79.1027], [-153.5176, -79.1173], [-155.21, -78.9646], [-156.4693, -78.6352], [-155.9197, -78.5105], [-154.7164, -78.3983], [-154.2931, -78.2588], [-155.3416, -78.1918], [-157.2667, -78.1998], [-158.2859, -77.9507], [-158.5003, -77.7786], [-158.23, -77.4976], [-158.2136, -77.1571], [-157.842, -77.079], [-157.4654, -77.2312], [-156.6677, -77.213], [-156.2112, -77.1056], [-154.8149, -77.1269], [-153.91, -77.2268], [-153.4606, -77.4159], [-153.0771, -77.4425], [-151.719, -77.4261], [-150.3056, -77.7315], [-149.7177, -77.7977], [-149.126, -77.6428], [-148.3401, -77.5512], [-148.2599, -77.4128], [-148.7445, -77.3431], [-148.5724, -77.1052], [-147.7301, -77.3098], [-146.9276, -77.2597], [-146.3907, -77.4723], [-145.6006, -77.4554], [-145.8079, -77.2734], [-145.5158, -77.1993], [-145.9671, -77.0688], [-145.6292, -76.9538], [-145.7504, -76.7492], [-146.7767, -76.5068], [-147.3404, -76.4384], [-148.6011, -76.4935], [-149.6542, -76.3652], [-148.8949, -76.272], [-148.3203, -76.1047], [-147.8602, -76.1308], [-146.8173, -76.3182], [-145.8858, -76.4243], [-145.6423, -76.3257], [-146.383, -76.0998], [-145.9877, -75.8889], [-145.1054, -75.8791], [-144.2205, -75.7313], [-143.5742, -75.5635], [-142.3298, -75.4907], [-141.5057, -75.6905], [-141.2234, -75.5458], [-140.7094, -75.4979], [-139.6911, -75.2129], [-139.1489, -75.16], [-137.6181, -75.0757], [-137.0901, -75.1525], [-136.5494, -75.1396], [-136.2278, -74.836], [-135.362, -74.6903], [-134.8405, -74.694], [-134.1171, -74.8298], [-133.4748, -74.8519], [-132.0495, -74.7658], [-129.7907, -74.8914], [-127.8633, -74.7193], [-127.0202, -74.698], [-126.3841, -74.7427], [-125.3534, -74.7148], [-123.8894, -74.773], [-121.5439, -74.7499], [-119.6771, -74.6545], [-118.8028, -74.4223], [-118.3421, -74.3814], [-117.0683, -74.4733], [-116.4329, -74.4472], [-115.2226, -74.4875], [-115.1052, -74.4552], [-114.7909, -73.9886], [-114.3459, -73.9251], [-113.5085, -74.0889], [-113.7533, -74.3668], [-113.333, -74.4542], [-113.9036, -74.6443], [-113.9318, -74.982], [-113.0915, -74.8919], [-111.6963, -74.7921], [-111.6959, -74.504], [-111.8064, -74.2696], [-111.63, -74.1813], [-111.1801, -74.188], [-110.307, -74.3668], [-110.3005, -74.7109], [-110.532, -74.8365], [-111.4631, -75.1334], [-111.1042, -75.1906], [-109.2723, -75.1849], [-108.2544, -75.2524], [-107.8048, -75.3216], [-106.9321, -75.3092], [-106.6189, -75.3438], [-104.9019, -75.1152], [-103.9014, -75.1525], [-103.4249, -75.1014], [-101.7081, -75.1272], [-101.3037, -75.3661], [-101.0394, -75.4219], [-100.4634, -75.3536], [-99.5313, -75.3087], [-98.7524, -75.3172], [-98.5578, -75.1898], [-99.2081, -75.0784], [-99.652, -74.9487], [-100.164, -74.9381], [-100.2648, -74.8231], [-100.0127, -74.662], [-100.1186, -74.515], [-100.8818, -74.5413], [-101.2518, -74.4857], [-101.7154, -74.0237], [-102.7664, -73.8839], [-102.7994, -73.6455], [-102.4108, -73.6167], [-101.3108, -73.6952], [-100.9855, -73.7573], [-99.7812, -73.72], [-99.2003, -73.5709], [-100.0209, -73.4027], [-101.1894, -73.3178], [-102.6751, -73.321], [-103.0762, -73.1847], [-103.3749, -72.819], [-103.1101, -72.7212], [-102.4847, -72.7355], [-102.2721, -72.8349], [-102.4092, -72.9876], [-101.6813, -73.0298], [-100.8205, -72.9809], [-100.2588, -73.0414], [-99.8107, -73], [-98.0125, -73.0333], [-96.6759, -73.2686], [-96.1521, -73.3094], [-95.2366, -73.2202], [-94.5865, -73.2495], [-94.2463, -73.313], [-93.7061, -73.215], [-92.8283, -73.1648], [-92.241, -73.1785], [-90.9209, -73.3193], [-90.431, -73.2433], [-90.2954, -72.9779], [-89.8175, -72.8625], [-89.3413, -72.8895], [-89.1271, -72.6934], [-88.527, -72.7023], [-88.1945, -72.8585], [-88.5607, -73.1209], [-88.4193, -73.2291], [-87.9363, -73.2411], [-87.401, -73.1919], [-87.0379, -73.3538], [-86.6022, -73.3538], [-85.9808, -73.2087], [-85.5822, -73.2589], [-84.9812, -73.5021], [-84.2141, -73.5727], [-83.5649, -73.7059], [-83.042, -73.7071], [-82.1835, -73.8568], [-81.3088, -73.7382], [-81.1632, -73.6326], [-81.2624, -73.3148], [-81.0243, -73.2358], [-80.3365, -73.4142], [-80.6141, -73.0835], [-80.4421, -72.9446], [-79.5217, -73.0897], [-78.9638, -73.3126], [-78.7862, -73.507], [-78.4078, -73.5559], [-76.8506, -73.4603], [-76.7645, -73.5665], [-77.1349, -73.8177], [-76.2913, -73.8052], [-75.293, -73.6388], [-74.5941, -73.7152], [-73.9962, -73.6996], [-72.9292, -73.4479], [-72.3808, -73.4387], [-71.4526, -73.3548], [-71.0172, -73.2629], [-70.3227, -73.2739], [-68.8211, -73.1053], [-67.6671, -72.8344], [-67.3067, -72.6112], [-66.8277, -72.0905], [-66.9516, -71.8974], [-67.4603, -71.5268], [-67.5047, -71.058], [-67.6922, -70.6861], [-67.8884, -70.4214], [-68.4033, -70.0197], [-68.4699, -69.6438], [-68.7079, -69.432], [-68.141, -69.3478], [-67.3717, -69.4126], [-66.9749, -69.1609], [-67.0213, -69.0286], [-67.3906, -68.8612], [-67.1336, -68.7706], [-67.1169, -68.5749], [-66.7933, -68.2402], [-67.1498, -68.0245], [-66.9154, -67.6925], [-66.705, -67.5273], [-67.1242, -67.4852], [-67.4869, -67.5468], [-67.5859, -67.435], [-67.4933, -67.1128], [-67.1602, -66.9516], [-66.9551, -66.9849], [-66.9021, -67.2561], [-66.61, -67.2086], [-66.4647, -66.8752], [-66.5268, -66.7407], [-66.371, -66.6089], [-65.7664, -66.6249], [-65.6785, -66.403], [-65.7757, -66.3426], [-65.6172, -66.1353], [-65.172, -66.117], [-65.2675, -65.9941], [-64.9987, -65.9462], [-64.6136, -66.0189], [-64.6531, -65.8672], [-64.0658, -65.5538], [-64.0381, -65.1792], [-63.7602, -65.0335], [-63.4821, -65.0851], [-63.0327, -65.0797], [-63.1199, -64.9426], [-62.5761, -64.7557], [-62.1396, -64.7268], [-61.8826, -64.6251], [-61.6317, -64.6047], [-61.3961, -64.4272], [-61.0822, -64.3149], [-60.8643, -64.0734], [-60.2772, -63.9237], [-59.5102, -63.8209], [-59.0363, -63.6704], [-58.8721, -63.5518], [-58.2155, -63.451], [-57.868, -63.3188], [-57.3897, -63.2265], [-57.0768, -63.2625], [-57.0206, -63.373]]], [[[-55.528, -63.1736], [-55.1562, -63.2047], [-55.1567, -63.3529], [-55.7502, -63.2966], [-56.3785, -63.4373], [-56.5052, -63.3343], [-56.3852, -63.234], [-56.0422, -63.1572], [-55.528, -63.1736]]], [[[-56.06, -63.0786], [-56.3541, -63.1687], [-56.6142, -63.0448], [-56.4886, -62.9823], [-56.0618, -63.013], [-56.06, -63.0786]]], [[[-60.625, -62.5602], [-60.1398, -62.5487], [-60.0026, -62.6183], [-60.2211, -62.7453], [-60.378, -62.6165], [-61.0634, -62.6791], [-60.7317, -62.4909], [-60.625, -62.5602]]], [[[-57.9783, -61.9121], [-57.6766, -61.9422], [-57.9628, -62.0777], [-58.4666, -62.1371], [-58.594, -62.2476], [-58.9553, -62.1642], [-58.6836, -62.0084], [-58.3996, -61.9382], [-57.9783, -61.9121]]]] }, \"properties\": { \"name\": \"Antarctica\", \"id\": \"AQ\" }, \"id\": \"AQ\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-170.7262, -14.3513], [-170.8205, -14.3122], [-170.6892, -14.2576], [-170.7262, -14.3513]]] }, \"properties\": { \"name\": \"American Samoa\", \"id\": \"AS\" }, \"id\": \"AS\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[46.4906, 38.9065], [46.1147, 38.8776], [45.9517, 39.1781], [45.9774, 39.2438], [45.7662, 39.3783], [45.7506, 39.563], [45.4568, 39.4946], [45.1487, 39.6566], [45.0315, 39.7649], [44.7683, 39.7037], [44.5605, 39.8875], [44.2894, 40.0406], [44.0053, 40.0139], [43.7918, 40.0703], [43.71, 40.1666], [43.5694, 40.4823], [43.7225, 40.7193], [43.6315, 40.9288], [43.4393, 41.1073], [43.7931, 41.1313], [44.2271, 41.2134], [44.4731, 41.1912], [44.8415, 41.2111], [45.0014, 41.2911], [45.1899, 41.1263], [45.5877, 40.8467], [45.3759, 40.6381], [45.5695, 40.417], [45.9646, 40.2337], [45.7897, 39.8812], [46.2021, 39.5945], [46.4812, 39.555], [46.3783, 39.3823], [46.55, 39.2012], [46.4906, 38.9065]]] }, \"properties\": { \"name\": \"Armenia\", \"id\": \"AM\" }, \"id\": \"AM\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[-62.6509, -22.2339], [-62.6261, -22.2903], [-62.3726, -22.439], [-62.2141, -22.6126], [-62.0666, -22.8696], [-61.7984, -23.1821], [-61.5055, -23.392], [-61.2083, -23.5571], [-61.033, -23.7556], [-60.8398, -23.858], [-60.5054, -23.9637], [-60.1103, -24.009], [-59.8924, -24.0934], [-59.6085, -24.2669], [-59.373, -24.4538], [-58.724, -24.7868], [-58.5196, -24.8431], [-58.3654, -24.9594], [-58.1366, -24.9772], [-57.8216, -25.1366], [-57.5872, -25.405], [-57.5717, -25.5343], [-57.7548, -25.6972], [-57.8906, -26.0066], [-58.0824, -26.1384], [-58.2031, -26.3817], [-58.1913, -26.6302], [-58.6186, -27.1323], [-58.6048, -27.3143], [-58.1683, -27.2734], [-57.8123, -27.3165], [-57.3912, -27.4305], [-57.1118, -27.47], [-56.8717, -27.4407], [-56.6033, -27.4679], [-56.3705, -27.5375], [-56.2418, -27.3666], [-56.0673, -27.3076], [-55.7147, -27.415], [-55.5973, -27.2077], [-55.4266, -27.0093], [-55.1358, -26.9312], [-54.7552, -26.533], [-54.6777, -26.3088], [-54.632, -26.0056], [-54.6158, -25.576], [-54.444, -25.6248], [-54.1546, -25.5232], [-53.8911, -25.6687], [-53.8232, -25.9595], [-53.6712, -26.225], [-53.7109, -26.3519], [-53.7533, -26.7487], [-53.7174, -26.8828], [-53.8381, -27.1211], [-54.0401, -27.2437], [-54.2052, -27.2894], [-54.3271, -27.4235], [-54.555, -27.4541], [-54.8291, -27.5509], [-54.9101, -27.7085], [-55.1015, -27.8669], [-55.3465, -27.9561], [-55.4767, -28.0893], [-55.7255, -28.2043], [-55.672, -28.3449], [-55.859, -28.3543], [-56.1028, -28.6517], [-56.3224, -28.8523], [-56.3932, -28.9971], [-56.5707, -29.1382], [-56.7724, -29.4179], [-56.9387, -29.595], [-57.2245, -29.7823], [-57.4052, -30.0339], [-57.609, -30.188], [-57.7126, -30.3847], [-57.8724, -30.5911], [-57.8105, -30.8587], [-57.8984, -30.9751], [-57.8684, -31.1042], [-58.0538, -31.4948], [-57.9881, -31.576], [-58.0425, -31.7691], [-58.1889, -31.9241], [-58.123, -32.3218], [-58.2011, -32.4718], [-58.22, -32.5641], [-58.1709, -32.9592], [-58.2504, -33.0782], [-58.4244, -33.1115], [-58.5471, -33.6637], [-58.4566, -33.8986], [-58.3924, -34.1928], [-58.5256, -34.2962], [-58.4661, -34.4574], [-58.2834, -34.6837], [-57.7634, -34.8946], [-57.3036, -35.1884], [-57.1706, -35.3625], [-57.1589, -35.5058], [-57.354, -35.7202], [-57.3755, -35.9005], [-57.265, -36.1441], [-57.0761, -36.2968], [-56.9371, -36.3528], [-56.7493, -36.3466], [-56.6981, -36.4265], [-56.6721, -36.8513], [-56.7272, -36.9578], [-57.0876, -37.4465], [-57.3957, -37.7449], [-57.5073, -37.9095], [-57.547, -38.0858], [-57.6456, -38.1697], [-58.1791, -38.4359], [-59.0073, -38.6735], [-59.8282, -38.8381], [-61.1122, -38.993], [-61.6024, -38.9988], [-62.067, -38.9189], [-62.1893, -38.8133], [-62.3744, -38.8528], [-62.3036, -38.9881], [-62.3382, -39.1507], [-62.0537, -39.3739], [-62.1316, -39.8253], [-62.2869, -39.8955], [-62.4019, -40.1964], [-62.3937, -40.4588], [-62.2463, -40.6746], [-62.395, -40.8907], [-62.959, -41.1096], [-63.2129, -41.1526], [-63.7731, -41.1499], [-64.1231, -41.0078], [-64.6216, -40.8547], [-64.8531, -40.8139], [-64.917, -40.7313], [-65.1334, -40.8805], [-65.1549, -41.1056], [-65.0182, -41.5667], [-65.0071, -41.7452], [-65.0591, -41.9698], [-64.8982, -42.162], [-64.5241, -42.2991], [-64.4205, -42.4337], [-64.1009, -42.395], [-64.0612, -42.2663], [-63.7955, -42.1141], [-63.6847, -42.1886], [-63.596, -42.4066], [-63.6173, -42.6961], [-63.6925, -42.8052], [-64.0348, -42.8811], [-64.1306, -42.8615], [-64.3244, -42.5722], [-64.4878, -42.5136], [-64.6504, -42.5313], [-64.9707, -42.6663], [-65.0269, -42.759], [-64.6291, -42.9091], [-64.3191, -42.969], [-64.4323, -43.0591], [-64.7153, -43.1355], [-64.9856, -43.2935], [-65.2836, -43.6299], [-65.3047, -43.7875], [-65.2386, -44.0485], [-65.3085, -44.1582], [-65.2655, -44.2798], [-65.3613, -44.4773], [-65.6476, -44.6615], [-65.6983, -44.7961], [-65.5991, -44.8755], [-65.6388, -45.0078], [-66.1901, -44.9647], [-66.5851, -45.1831], [-66.9414, -45.2573], [-67.2577, -45.5773], [-67.5566, -45.9702], [-67.609, -46.1668], [-67.5633, -46.3453], [-67.3866, -46.5539], [-66.7769, -47.0057], [-66.6504, -47.0452], [-65.9985, -47.0936], [-65.8536, -47.1567], [-65.7382, -47.3449], [-65.7755, -47.5681], [-65.9341, -47.827], [-65.8101, -47.941], [-66.3934, -48.3423], [-67.033, -48.6277], [-67.4663, -48.9518], [-67.6849, -49.2465], [-67.662, -49.3423], [-67.7834, -49.8591], [-67.9139, -49.9848], [-68.1457, -50.0913], [-68.4046, -50.0429], [-68.422, -50.1578], [-68.9395, -50.3824], [-69.0902, -50.5831], [-69.155, -50.8645], [-69.2352, -50.9506], [-69.1435, -51.0971], [-69.0297, -51.4464], [-69.0325, -51.6364], [-68.9169, -51.7146], [-68.6908, -52.0133], [-68.3938, -52.3072], [-68.4433, -52.3569], [-68.7152, -52.2556], [-69.2063, -52.1362], [-69.4884, -52.1362], [-69.9603, -52.0084], [-71.9187, -51.9897], [-71.9536, -51.8806], [-72.269, -51.691], [-72.4077, -51.541], [-72.3032, -51.299], [-72.3768, -51.0953], [-72.2763, -50.9102], [-72.3402, -50.682], [-72.5098, -50.6075], [-72.8036, -50.6376], [-73.153, -50.7384], [-73.3867, -50.2311], [-73.5012, -50.1254], [-73.529, -49.9111], [-73.4704, -49.7947], [-73.5762, -49.5829], [-73.4615, -49.314], [-73.1352, -49.3006], [-73.149, -49.1879], [-72.9819, -48.9766], [-72.7284, -48.8963], [-72.6143, -48.7928], [-72.6083, -48.5194], [-72.3549, -48.3658], [-72.3283, -48.1101], [-72.5091, -47.9735], [-72.518, -47.8762], [-72.3416, -47.5721], [-72.346, -47.4927], [-71.905, -47.2016], [-71.9629, -47.0159], [-71.9402, -46.8312], [-71.7328, -46.7056], [-71.6952, -46.5782], [-71.7776, -46.28], [-71.8757, -46.1606], [-71.6315, -45.9537], [-71.7508, -45.8391], [-71.7463, -45.5791], [-71.5081, -45.5129], [-71.3494, -45.3318], [-71.3537, -45.2306], [-71.5962, -44.9793], [-72.0417, -44.9043], [-71.9571, -44.7916], [-71.4551, -44.7499], [-71.2611, -44.7632], [-71.1508, -44.4942], [-71.2127, -44.4413], [-71.8199, -44.3832], [-71.8124, -44.1063], [-71.6801, -43.9296], [-71.7947, -43.7533], [-71.7508, -43.59], [-71.905, -43.44], [-71.7638, -43.2948], [-71.7816, -43.1669], [-72.0548, -43.1018], [-72.1464, -42.9898], [-72.1136, -42.7768], [-72.1438, -42.577], [-72.0534, -42.4732], [-72.1247, -42.2983], [-71.75, -42.0466], [-71.9114, -41.6506], [-71.873, -40.8929], [-71.932, -40.6918], [-71.8047, -40.4393], [-71.6952, -40.3354], [-71.8184, -40.1765], [-71.6597, -40.0207], [-71.638, -39.8871], [-71.7199, -39.6353], [-71.5394, -39.6025], [-71.42, -39.2873], [-71.4256, -38.9855], [-71.2858, -38.8453], [-70.9517, -38.7383], [-70.8476, -38.5416], [-70.9679, -38.4458], [-71.0281, -38.0414], [-71.1677, -37.7621], [-71.1348, -37.4452], [-71.2005, -37.3], [-71.1184, -37.1145], [-71.1923, -36.8437], [-71.0665, -36.644], [-71.0556, -36.5237], [-70.9051, -36.4198], [-70.7493, -36.3928], [-70.722, -36.2831], [-70.4049, -36.0616], [-70.3802, -35.7717], [-70.4703, -35.326], [-70.5551, -35.247], [-70.3933, -35.1467], [-70.2899, -34.733], [-70.0519, -34.3006], [-69.8524, -34.2243], [-69.8944, -33.7312], [-69.7978, -33.3986], [-69.8196, -33.2837], [-70.0198, -33.2717], [-70.0848, -33.2016], [-70.093, -33.0267], [-70.022, -32.8846], [-70.1161, -32.8074], [-70.1769, -32.6259], [-70.1696, -32.4718], [-70.3201, -32.2667], [-70.3638, -32.0834], [-70.2544, -31.9578], [-70.4501, -31.8419], [-70.5853, -31.5695], [-70.5196, -31.1486], [-70.3884, -31.1211], [-70.3089, -31.0225], [-70.3483, -30.9022], [-70.1613, -30.4401], [-69.9563, -30.358], [-69.8635, -30.1205], [-69.9601, -30.0784], [-69.9277, -29.7695], [-70.0269, -29.3241], [-69.8278, -29.1031], [-69.6569, -28.4138], [-69.2511, -27.9739], [-69.1744, -27.9246], [-68.9995, -27.4491], [-68.942, -27.4052], [-68.8463, -27.1536], [-68.6521, -27.1482], [-68.346, -27.028], [-68.3186, -26.8775], [-68.5811, -26.5183], [-68.5299, -26.2769], [-68.4144, -26.1539], [-68.5108, -25.7411], [-68.6002, -25.4859], [-68.5409, -25.2369], [-68.3842, -25.0921], [-68.562, -24.8377], [-68.5072, -24.6301], [-68.2502, -24.3921], [-67.3562, -24.0338], [-67.0088, -23.0014], [-67.1949, -22.8216], [-66.9911, -22.51], [-66.8002, -22.4097], [-66.7117, -22.2161], [-66.3652, -22.1136], [-66.2476, -21.8305], [-66.0986, -21.8353], [-65.771, -22.0994], [-65.0579, -22.1029], [-64.6056, -22.229], [-64.5237, -22.3715], [-64.3739, -22.7613], [-64.2665, -22.6032], [-63.9762, -22.0728], [-63.8186, -22.0053], [-62.8433, -21.9973], [-62.6509, -22.2339]]], [[[-68.6533, -54.8538], [-68.6399, -54.3242], [-68.6335, -53.242], [-68.6299, -52.6525], [-68.2781, -52.9841], [-68.5207, -53.1772], [-68.3931, -53.2948], [-68.1612, -53.3063], [-68.0085, -53.5638], [-67.2943, -54.0499], [-66.6701, -54.3136], [-66.2356, -54.5333], [-65.7471, -54.6535], [-65.3693, -54.6323], [-65.1789, -54.678], [-65.346, -54.8777], [-65.6033, -54.9283], [-65.842, -54.9102], [-66.5112, -55.0321], [-66.9305, -54.9248], [-67.7932, -54.8689], [-68.22, -54.8178], [-68.6533, -54.8538]]], [[[-64.5492, -54.7161], [-64.1053, -54.7215], [-64.6374, -54.9025], [-64.7574, -54.8267], [-64.5492, -54.7161]]]] }, \"properties\": { \"name\": \"Argentina\", \"id\": \"AR\" }, \"id\": \"AR\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[56.2979, 25.6505], [56.3637, 25.5693], [56.388, 24.9794], [56.064, 24.7387], [55.9158, 24.9718], [55.7959, 24.8679], [55.8038, 24.6362], [55.7683, 24.4906], [55.8056, 24.3499], [55.7608, 24.2425], [55.9287, 24.215], [55.985, 24.0636], [55.5478, 23.9912], [55.4683, 23.9411], [55.5087, 23.7245], [55.1997, 23.0346], [55.186, 22.7039], [55.1044, 22.6214], [54.0545, 22.7496], [52.5551, 22.933], [51.5927, 24.0787], [51.5682, 24.286], [51.7676, 24.2545], [51.7916, 24.0747], [51.9061, 23.9854], [52.251, 23.9952], [52.6482, 24.1546], [53.0264, 24.1475], [53.3297, 24.0982], [53.8933, 24.0769], [54.3972, 24.278], [54.5348, 24.531], [54.7469, 24.8102], [55.0981, 25.0415], [55.3036, 25.2368], [55.523, 25.4983], [55.9411, 25.7939], [56.0804, 26.0624], [56.1675, 26.0474], [56.1447, 25.6905], [56.2979, 25.6505]]] }, \"properties\": { \"name\": \"United Arab Emirates\", \"id\": \"AE\" }, \"id\": \"AE\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[1.7059, 42.5033], [1.4862, 42.4345], [1.4285, 42.5961], [1.7099, 42.6045], [1.7059, 42.5033]]] }, \"properties\": { \"name\": \"Andorra\", \"id\": \"AD\" }, \"id\": \"AD\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[19.9894, 60.3511], [20.2588, 60.2612], [19.7461, 60.0989], [19.687, 60.2677], [19.9894, 60.3511]]] }, \"properties\": { \"name\": \"Aland Islands\", \"id\": \"AX\" }, \"id\": \"AX\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[20.0639, 42.5472], [20.2406, 42.3391], [20.4856, 42.2232], [20.5753, 42.0133], [20.5659, 41.8739], [20.4487, 41.5214], [20.4892, 41.2724], [20.7409, 40.9053], [20.9641, 40.8498], [21.0312, 40.6585], [20.9504, 40.4943], [20.8062, 40.4454], [20.6574, 40.1174], [20.3112, 39.9794], [20.3817, 39.8417], [20.2069, 39.6535], [20.0013, 39.7095], [19.965, 39.8724], [19.8518, 40.0437], [19.4846, 40.2098], [19.398, 40.2848], [19.4394, 40.4703], [19.3373, 40.6639], [19.4611, 40.9333], [19.4802, 41.2364], [19.4407, 41.4246], [19.5757, 41.6404], [19.5774, 41.7873], [19.3426, 41.869], [19.3612, 42.0692], [19.2808, 42.1727], [19.6547, 42.6285], [19.7883, 42.4762], [20.0639, 42.5472]]] }, \"properties\": { \"name\": \"Albania\", \"id\": \"AL\" }, \"id\": \"AL\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-63.0012, 18.222], [-63.1534, 18.2002], [-63.026, 18.2699], [-63.0012, 18.222]]] }, \"properties\": { \"name\": \"Anguilla\", \"id\": \"AI\" }, \"id\": \"AI\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"MultiPolygon\", \"coordinates\": [[[[12.2137, -5.7589], [12.1555, -5.6328], [12.2066, -5.468], [12.1773, -5.3247], [12.0184, -5.0042], [12.2044, -4.7787], [12.3078, -4.7654], [12.3846, -4.6189], [12.6416, -4.531], [12.7983, -4.4307], [12.8809, -4.4454], [13.0726, -4.635], [12.8298, -4.7366], [12.5737, -4.9967], [12.5222, -5.1489], [12.5035, -5.6959], [12.2137, -5.7589]]], [[[23.9666, -10.8716], [24.0465, -11.4051], [23.971, -11.636], [23.9591, -12.1176], [23.9914, -12.4221], [23.8823, -12.7989], [23.968, -12.957], [23.8432, -13.001], [23.0415, -13.001], [21.9789, -13.001], [21.9793, -13.7987], [21.9798, -15.0823], [21.9798, -15.9555], [22.0401, -16.2627], [22.1506, -16.5973], [22.3051, -16.6897], [22.9558, -17.2858], [23.3806, -17.6405], [22.6243, -17.7816], [21.4169, -18.0005], [21.1133, -17.9557], [20.9082, -18.0063], [20.625, -17.9966], [20.3928, -17.8873], [20.1944, -17.8638], [19.6396, -17.8687], [18.8259, -17.7662], [18.718, -17.7031], [18.4868, -17.443], [18.3962, -17.3995], [17.8356, -17.3928], [16.9137, -17.3915], [16.1483, -17.3901], [15.0005, -17.3884], [14.4145, -17.3875], [14.0177, -17.4087], [13.9383, -17.3888], [13.5617, -17.1411], [13.4038, -17.008], [13.1011, -16.9675], [12.548, -17.2126], [12.2133, -17.2099], [12.0139, -17.1686], [11.7431, -17.2495], [11.78, -16.8712], [11.819, -16.7043], [11.7969, -15.9866], [11.7507, -15.8321], [11.9678, -15.6341], [12.073, -15.2484], [12.2803, -14.6376], [12.3789, -14.0393], [12.5035, -13.7555], [12.5506, -13.4377], [12.8978, -13.0276], [12.9834, -12.7759], [13.417, -12.5202], [13.5982, -12.2862], [13.6856, -12.1238], [13.7855, -11.8127], [13.7842, -11.4882], [13.8477, -11.0545], [13.8335, -10.9298], [13.7389, -10.7571], [13.7216, -10.6337], [13.5396, -10.4206], [13.4956, -10.2573], [13.3323, -9.9989], [13.2094, -9.7033], [13.1557, -9.3898], [12.9984, -9.0481], [13.3589, -8.6872], [13.3785, -8.3698], [13.0908, -7.7804], [12.8623, -7.2317], [12.8236, -6.9547], [12.5214, -6.5902], [12.3024, -6.0927], [12.7908, -6.0038], [13.0681, -5.865], [13.9786, -5.8573], [14.3986, -5.8925], [15.7271, -5.8637], [16.3153, -5.8658], [16.5373, -5.9657], [16.7178, -6.2414], [16.7094, -6.4718], [16.8129, -6.7727], [16.9656, -7.0621], [16.9847, -7.2574], [17.1551, -7.4612], [17.5359, -8.0759], [17.5795, -8.099], [17.9133, -8.0675], [18.0087, -8.1075], [18.1916, -8.0236], [18.6532, -7.9361], [18.8982, -7.9982], [19.1428, -8.0014], [19.3408, -7.9667], [19.3714, -7.6551], [19.4797, -7.4723], [19.5276, -7.1446], [19.6604, -7.0373], [19.8752, -6.9862], [20.482, -6.9161], [20.5989, -6.9351], [20.5371, -7.1216], [20.6076, -7.2779], [21.1905, -7.2849], [21.7512, -7.3053], [21.8417, -7.4207], [21.78, -7.8656], [21.8008, -8.1119], [21.8959, -8.341], [21.9056, -8.6934], [21.8293, -9.1684], [21.8133, -9.4689], [21.9487, -9.7255], [22.0889, -9.8626], [22.1976, -10.0406], [22.2745, -10.259], [22.3069, -10.6913], [22.1777, -10.8924], [22.279, -11.1943], [22.5613, -11.0558], [22.8148, -11.0803], [23.1569, -11.0749], [23.4002, -10.9763], [23.8339, -11.0136], [23.9666, -10.8716]]]] }, \"properties\": { \"name\": \"Angola\", \"id\": \"AO\" }, \"id\": \"AO\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[74.8912, 37.2317], [74.7266, 37.2907], [74.3723, 37.1575], [74.5414, 37.0221], [74.0017, 36.8233], [73.769, 36.8886], [73.1165, 36.8686], [72.6229, 36.8295], [72.1569, 36.7008], [71.8222, 36.4859], [71.6206, 36.4367], [71.2331, 36.1219], [71.1852, 36.042], [71.4275, 35.8339], [71.6006, 35.4077], [71.5456, 35.2887], [71.6206, 35.1831], [71.4551, 34.9669], [71.2939, 34.8679], [70.9654, 34.5306], [71.0955, 34.3694], [71.0516, 34.0498], [70.8483, 33.982], [70.416, 33.9504], [69.9947, 34.0516], [69.8681, 33.8976], [70.0568, 33.72], [70.2841, 33.3689], [70.261, 33.289], [69.9201, 33.1123], [69.7035, 33.0946], [69.5015, 33.02], [69.4052, 32.6826], [69.2414, 32.4336], [69.2791, 31.9369], [69.0829, 31.7385], [68.869, 31.6342], [68.7824, 31.6466], [68.5978, 31.8028], [68.4432, 31.7545], [68.2138, 31.8073], [68.0171, 31.6781], [67.5781, 31.5064], [67.7379, 31.3439], [67.4529, 31.2347], [67.2874, 31.2178], [66.9242, 31.3057], [66.7312, 31.1947], [66.5669, 30.9967], [66.3974, 30.9124], [66.2869, 30.6079], [66.3055, 30.3211], [66.2474, 30.0437], [66.3135, 29.9687], [66.1772, 29.8355], [65.0954, 29.5594], [64.5211, 29.5643], [64.2662, 29.507], [64.0988, 29.3921], [63.5675, 29.4982], [62.4765, 29.4085], [62.3735, 29.4253], [60.8434, 29.8586], [61.104, 30.1285], [61.7844, 30.8321], [61.8142, 31.0727], [61.7551, 31.2853], [61.6602, 31.3825], [60.854, 31.4833], [60.7915, 31.6608], [60.7901, 31.9871], [60.8292, 32.2494], [60.5767, 32.9947], [60.5606, 33.1376], [60.9171, 33.5052], [60.6547, 33.5602], [60.5109, 33.6388], [60.5269, 33.8421], [60.4856, 34.0947], [60.6428, 34.3073], [60.8896, 34.3193], [60.7262, 34.5181], [60.9513, 34.654], [61.08, 34.8555], [61.1497, 35.0939], [61.0999, 35.2723], [61.1892, 35.3118], [61.2784, 35.5138], [61.262, 35.6194], [61.3446, 35.6297], [61.543, 35.4579], [61.7196, 35.4193], [61.9837, 35.4436], [62.2528, 35.2502], [62.6106, 35.2333], [63.0567, 35.4459], [63.1698, 35.678], [63.1086, 35.8187], [63.8622, 36.0123], [64.0097, 36.0123], [64.0923, 36.1126], [64.3582, 36.2262], [64.5108, 36.3408], [64.8163, 37.1322], [65.0897, 37.2379], [65.5549, 37.2512], [65.6414, 37.4678], [65.7648, 37.569], [66.1084, 37.415], [66.5222, 37.3484], [66.8276, 37.3715], [67.069, 37.3346], [67.3197, 37.2095], [67.5173, 37.2667], [67.7592, 37.1721], [67.9581, 36.972], [68.0678, 36.9498], [68.3869, 37.1376], [68.6693, 37.2583], [68.9604, 37.3248], [69.2649, 37.1083], [69.4145, 37.2077], [69.3994, 37.3994], [69.4922, 37.553], [69.6258, 37.5939], [69.9405, 37.6001], [70.0448, 37.5473], [70.2513, 37.664], [70.2149, 37.9246], [70.4177, 38.0755], [70.6156, 38.3343], [70.879, 38.4563], [71.0521, 38.4177], [71.2557, 38.3068], [71.3326, 38.1705], [71.2783, 37.9183], [71.5519, 37.933], [71.5802, 37.8642], [71.5047, 37.6028], [71.4329, 37.1273], [71.5976, 36.7327], [71.8022, 36.6941], [72.1533, 36.9005], [72.3588, 36.9831], [72.6576, 37.0292], [72.8955, 37.2676], [73.2111, 37.4083], [73.4815, 37.4718], [73.7208, 37.4185], [73.7496, 37.2317], [74.1672, 37.3293], [74.2596, 37.4154], [74.6596, 37.3946], [74.8912, 37.2317]]] }, \"properties\": { \"name\": \"Afghanistan\", \"id\": \"AF\" }, \"id\": \"AF\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-61.7161, 17.0368], [-61.8597, 17.0133], [-61.8173, 17.1691], [-61.7161, 17.0368]]] }, \"properties\": { \"name\": \"Antigua and Barbuda\", \"id\": \"AG\" }, \"id\": \"AG\" },\r\n        { \"type\": \"Feature\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[-69.8992, 12.4518], [-69.9421, 12.4385], [-70.0662, 12.5468], [-69.9731, 12.5677], [-69.8992, 12.4518]]] }, \"properties\": { \"name\": \"Aruba\", \"id\": \"AW\" }, \"id\": \"AW\" }\r\n    ] };\r\nexport default map;\r\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import { Theme } from \"../../core/Theme\";\r\nimport { p50, p100 } from \"../../core/util/Percent\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4,\r\n\t\t\tcenterMapOnZoomOut: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPolygonSeries\").setAll({\r\n\t\t\taffectsBounds: true\r\n\t\t})\r\n\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\taffectsBounds: false,\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true,\r\n\t\t\tautoScale: false\r\n\t\t})\r\n\r\n\t\tr(\"MapLineSeries\").setAll({\r\n\t\t\taffectsBounds: false\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"plus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t\tdisplay.moveTo(0, -4);\r\n\t\t\t\tdisplay.lineTo(0, 4);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"map\", \"button\", \"minus\", \"icon\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50,\r\n\t\t\tdraw: (display) => {\r\n\t\t\t\tdisplay.moveTo(-4, 0);\r\n\t\t\t\tdisplay.lineTo(4, 0);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ZoomControl\").setAll({\r\n\t\t\tx: p100,\r\n\t\t\tcenterX: p100,\r\n\t\t\ty: p100,\r\n\t\t\tcenterY: p100,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingBottom: 10\r\n\t\t})\r\n\r\n\t}\r\n}\r\n","import { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IChartSettings extends IContainerSettings {\n}\n\nexport interface IChartPrivate extends IContainerPrivate {\n}\n\nexport interface IChartEvents extends IContainerEvents {\n}\n\n/**\n * A base class for all charts.\n */\nexport abstract class Chart extends Container {\n\tpublic static className: string = \"Chart\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Chart.className]);\n\n\tdeclare public _settings: IChartSettings;\n\tdeclare public _privateSettings: IChartPrivate;\n\tdeclare public _events: IChartEvents;\n\n\t/**\n\t * A [[Container]] chart places its elements in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly chartContainer: Container = this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }));\n\n\t/**\n\t * A [[Container]] chart places its bullets in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 });\n\n}","import type { Series } from \"./Series\";\n\nimport { Chart, IChartSettings, IChartPrivate, IChartEvents } from \"./Chart\";\nimport { Container } from \"../../core/render/Container\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\n\nexport interface ISerialChartSettings extends IChartSettings {\n\t/**\n\t * A [[ColorSet]] to use when asigning colors for series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tcolors?: ColorSet;\n}\n\nexport interface ISerialChartPrivate extends IChartPrivate {\n}\n\nexport interface ISerialChartEvents extends IChartEvents {\n}\n\n/**\n * A base class for all series-based charts.\n */\nexport abstract class SerialChart extends Chart {\n\tpublic static className: string = \"SerialChart\";\n\tpublic static classNames: Array<string> = Chart.classNames.concat([SerialChart.className]);\n\n\tdeclare public _settings: ISerialChartSettings;\n\tdeclare public _privateSettings: ISerialChartPrivate;\n\tdeclare public _seriesType: Series;\n\tdeclare public _events: ISerialChartEvents;\n\n\t/**\n\t * A [[Container]] where chart will store all series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly seriesContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A list of chart's series.\n\t */\n\tpublic readonly series: ListAutoDispose<this[\"_seriesType\"]> = new ListAutoDispose();\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.series);\n\n\t\tconst children = this.seriesContainer.children;\n\n\t\tthis._disposers.push(this.series.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (series) => {\n\t\t\t\t\tthis._removeSeries(series);\n\t\t\t\t})\n\t\t\t\tconst colors = this.get(\"colors\");\n\t\t\t\tif (colors) {\n\t\t\t\t\tcolors.reset();\n\t\t\t\t}\n\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tchildren.moveValue(change.newValue);\n\t\t\t\tthis._processSeries(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tchildren.setIndex(change.index, change.newValue);\n\t\t\t\tthis._processSeries(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tchildren.insertIndex(change.index, change.newValue);\n\t\t\t\tthis._processSeries(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeSeries(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tchildren.moveValue(change.value, change.newIndex);\n\t\t\t\tthis._processSeries(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tseries.chart = this;\n\t\tseries._placeBulletsContainer(this);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tif (!series.isDisposed()) {\n\t\t\tthis.seriesContainer.children.removeValue(series);\n\t\t\tseries._removeBulletsContainer();\n\t\t}\n\t}\n}\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import type { MapSeries } from \"./MapSeries\";\nimport type { MapPointSeries } from \"./MapPointSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IMapPolygonSeriesDataItem } from \"./MapPolygonSeries\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * current x position of a map\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * current y position of a map\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when mouse wheel is turned horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n\t/**\n\t * Setting `true` means that the map will automatically center itself (or go\n\t * to `homeGeoPoint` if set) when fully zoomed out.\n\t *\n\t * `false` would mean that zoom out will be centered around the mouse\n\t * cursor (when zooming using wheel), or current map position.\n\t * \n\t * @default true\n\t * @since 5.2.1\n\t */\n\tcenterMapOnZoomOut?: boolean;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is\n\t * initialized.\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tpublic _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted: boolean = false;\n\n\tprotected _centerX: number = 0;\n\tprotected _centerY: number = 0;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns a geoPoint of the current zoom position.\n\t * \n\t * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\n\t *\n\t * @since 5.2.19\n\t */\n\tpublic geoPoint() {\n\t\treturn this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t\t\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t// some page element is over the chart.\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst chartContainer = this.chartContainer;\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tvar previousGeometries = this._geometryColection.geometries;\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\t\t\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\n\t\t\t\t\t\tthis._centerX = translate[0];\n\t\t\t\t\t\tthis._centerY = translate[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\n\t\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (series.isType<MapPointSeries>(\"MapPointSeries\")) {\n\t\t\t\t\tif (series.get(\"autoScale\")) {\n\t\t\t\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\t\t\t\tconst bullets = dataItem.bullets;\n\t\t\t\t\t\t\tif (bullets) {\n\t\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\t\t\tsprite.set(\"scale\", this.get(\"zoomLevel\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tthis._centerX = translate[0];\n\t\t\tthis._centerY = translate[1];\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns geographical coordinates for calculated or manual center of the\n\t * map.\n\t */\n\tpublic homeGeoPoint(): IGeoPoint {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\t\treturn homeGeoPoint;\n\t}\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tthis.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration);\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.chartContainer._display.cancelTouch) {\n\t\t\tthis.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\n\t\tthis._setUpTouch();\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tlet count = $object.keys(this.chartContainer._downPoints).length;\n\t\tif(count == 1){\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n\t\t\tconst downPoint = this.chartContainer._downPoints[1];\n\n\t\t\tif(downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)){\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts screen coordinates (X and Y) within chart to latitude and\n\t * longitude.\n\t * \n\t * @param  point  Screen coordinates\n\t * @return        Geographical coordinates\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * Converts latitude/longitude to screen coordinates (X and Y).\n\t * \n\t * @param  point  Geographical coordinates\n\t * @return        Screen coordinates\n\t */\n\tpublic convert(point: IGeoPoint): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tconst xy = projection([point.longitude, point.latitude]);\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\t\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\t\t\t\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\t\t\t\tconst maxPanOut = this.get(\"maxPanOut\", 0.4);\n\t\t\t\t\t\t\tconst bounds = this._mapBounds;\n\n\t\t\t\t\t\t\tconst w = this.width();\n\t\t\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\t\t\tconst ww = bounds[1][0] - bounds[0][0];\n\t\t\t\t\t\t\tconst hh = bounds[1][1] - bounds[0][1];\n\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\n\t\t\t\t\t\t\t\tconst cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\n\t\t\t\t\t\t\t\tx = Math.min(x, cx + ww * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\tx = Math.max(x, cx - ww * maxPanOut * zoomLevel);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t\tconst cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\n\t\t\t\t\t\t\t\ty = Math.min(y, cy + hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\ty = Math.max(y, cy - hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top });\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom });\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tif (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\n\t\t\tpoint = this.convert(this.homeGeoPoint());\n\t\t\tcenter = true;\n\t\t}\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tlet xy = this.convert(geoPoint);\n\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n\n\t/**\n\t * Returns area of a mapPolygon in square pixels.\n\t */\n\tpublic getArea(dataItem: DataItem<IMapPolygonSeriesDataItem>): number {\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (geometry) {\n\t\t\treturn geoPath.area(geometry);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { DataItem } from \"../../core/render/Component\";\n\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath && dataItem) {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tif (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\n\n\t\t\t\t\t\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tlet coordinates = geometry.coordinates;\n\t\t\t\t\t\t\t\t\tif (coordinates) {\n\n\t\t\t\t\t\t\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\t\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\t\t\t\t\t\t\t\tif (segment.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp0 = segment[0];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(p0.x, p0.y);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let p = 0; p < segment.length; p++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp = segment[p];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pn = chart.convert({ longitude: gp[0], latitude: gp[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(pn.x, pn.y);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\t\tif (projection) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tconst series = this.getPrivate(\"series\");\n\t\tconst chart = series.chart;\n\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\n\t\tif (geometry && series && chart && dataItem) {\n\t\t\tconst lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];\n\t\t\t\t\t\tpointB = segment[0] as [number, number];\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location: number[];\n\n\t\t\t\t\tif (lineType == \"straight\") {\n\t\t\t\t\t\tlet p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\n\t\t\t\t\t\tlet p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\n\n\t\t\t\t\t\tlet x = p0.x + (p1.x - p0.x) * positionAB;\n\t\t\t\t\t\tlet y = p0.y + (p1.y - p0.y) * positionAB;\n\n\t\t\t\t\t\treturn chart.invert({ x: x, y: y });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlocation = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points. Note, fixed points can not be used here.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.32\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t * \n\t * @default \"curved\"\n\t * @since 5.2.24\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n\n\t/**\n\t * @ignore\n\t */\n\tlineTypeField?: string;\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"lineType\");\n\t\tthis._setRawDefault(\"lineTypeField\", \"lineType\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t);\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tthis._handlePointsToConnect(dataItem);\n\t\tdataItem.on(\"pointsToConnect\", () => {\n\t\t\tthis._handlePointsToConnect(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tprotected _handlePointsToConnect(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n\n\t/**\n\t * @todo review\n\t * Specifies if a point is fixed or moves together with a map. Fixed points can not be used for MapLines pointsToConnect setting.\n\t * @default false\n\t */\n\tfixed?: boolean;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n\t/**\n\t * A field in data that holds information if this point is fixed or moves with a map.\n\t */\n\tfixedField?: string;\n\n\t/**\n\t * If set to `true`, bullets will resize when zooming the [[MapChart]].\n\t * \n\t * @since 5.2.8\n\t * @default false\n\t */\n\tautoScale?: boolean\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tlet geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tgeometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\n\t\t\tdataItem.set(\"geometry\", geometry);\t\t\t\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._addGeometry(geometry, this);\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction));\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _setBulletParent(bullet?: Bullet) {\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (sprite && chart) {\n\t\t\t\tconst dataItem = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.get(\"fixed\")) {\n\t\t\t\t\t\tif (sprite.parent != chart.bulletsContainer) {\n\t\t\t\t\t\t\tchart.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sprite.parent != this.bulletsContainer) {\n\t\t\t\t\t\t\tthis.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem && dataItem.get(\"fixed\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst fixed = dataItem.get(\"fixed\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fixed && coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tsprite.setAll({ x: xy[0], y: xy[1] });\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.zoomToGeoPoint({ longitude: dataItem.get(\"longitude\", 0), latitude: dataItem.get(\"latitude\", 0) }, zoomLevel, true);\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.each((series) => {\n\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t$array.each(series.dataItems, (di) => {\n\t\t\t\t\t\tconst pointsToConnect = di.get(\"pointsToConnect\");\n\t\t\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\t\t\tif (point == dataItem) {\n\t\t\t\t\t\t\t\t\t$array.remove(pointsToConnect, point);\n\t\t\t\t\t\t\t\t\tseries.markDirtyValues(di);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.disposeDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\treturn { longitude: center[0], latitude: center[1] };\n\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t);\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tconst geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\t\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>): Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (geometry && chart) {\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry));\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { ICounterRef } from \"./Counter\";\nimport { List } from \"./List\";\nimport type { DataProcessor } from \"./DataProcessor\";\n\n/**\n * Defines interface for a [[List]] with a data processor.\n */\nexport interface IDataWithProcessor {\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tprocessor?: DataProcessor;\n\n}\n\n/**\n * A [[List]] that holds components data.\n * \n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n */\nexport class ListData<T> extends List<T> implements ICounterRef, IDataWithProcessor {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic incrementRef(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic decrementRef(): void { }\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tpublic processor?: DataProcessor;\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t\t//console.log(newValue)\n\t\t}\n\t\tsuper._onPush(newValue);\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onInsertIndex(index, newValue);\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n}\n\n/**\n * @deprecated\n * @todo remove\n */\nexport class JsonData<T> implements ICounterRef, IDataWithProcessor {\n\tpublic incrementRef(): void { }\n\tpublic decrementRef(): void { }\n\n\tpublic processor?: DataProcessor;\n\tprotected _value: T;\n\n\tconstructor(value: T) {\n\t\tthis._value = value;\n\t}\n\n\t// TODO: how do we go about calling processor here?\n\n}\n","import { Settings } from \"../util/Entity\";\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"./Container\";\nimport { ListData } from \"../util/Data\";\nimport * as $array from \"../util/Array\";\nimport * as $object from \"../util/Object\";\nimport type * as $ease from \"../util/Ease\";\nimport type { Bullet } from \"./Bullet\";\n\n/**\n * A base element that holds data bit (data item) for any [[Component]].\n */\nexport class DataItem<P extends IComponentDataItem> extends Settings {\n\tdeclare public _settings: P;\n\n\t/**\n\t * A data item's owener [[Component]].\n\t */\n\tpublic component: Component;\n\n\t/**\n\t * A reference to actual item in source data this item is based on.\n\t */\n\tpublic dataContext: unknown;\n\n\t/**\n\t * @todo requires description\n\t */\n\tpublic bullets: Array<Bullet> | undefined;\n\n\t/**\n\t * A set of \"open\" values.\n\t */\n\tpublic open: { [index: string]: any } | undefined;\n\n\t/**\n\t * A set of \"close\" values.\n\t */\n\tpublic close: { [index: string]: any } | undefined;\n\n\tconstructor(component: Component, dataContext: unknown, settings: P) {\n\t\tsuper(settings);\n\n\t\tthis.dataContext = dataContext;\n\t\tthis.component = component;\n\t\tthis._settings.visible = true;\n\t\tthis._checkDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tthis.component.markDirtyValues(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis.component._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this.component._root.animationTime;\n\t}\n\n\tprotected _dispose() {\n\t\tif (this.component) {\n\t\t\tthis.component.disposeDataItem(this);\n\t\t}\n\t\tsuper._dispose();\n\t}\n\n\t/**\n\t * Shows a data item that's currently hidden.\n\t */\n\tpublic show(duration?: number) {\n\t\tthis.setRaw(\"visible\", true);\n\t\tif (this.component) {\n\t\t\tthis.component.showDataItem(this, duration);\n\t\t}\n\t}\n\n\t/**\n\t * Hides a data item that's currently visible.\n\t */\n\tpublic hide(duration?: number) {\n\t\tthis.setRaw(\"visible\", false);\n\t\tif (this.component) {\n\t\t\tthis.component.hideDataItem(this, duration);\n\t\t}\n\t}\n\n\tpublic isHidden() {\n\t\treturn !this.get(\"visible\");\n\t}\n}\n\n\nexport interface IComponentDataItem {\n\tvisible?: boolean;\n}\n\nexport interface IComponentSettings extends IContainerSettings {\n\n\t/**\n\t * A duration of the animation from one setting value to another, in\n\t * milliseconds.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_data_values} for more info\n\t */\n\tinterpolationDuration?: number;\n\n\t/**\n\t * Easing function to use for cross setting value animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tinterpolationEasing?: $ease.Easing;\n\n}\n\nexport interface IComponentPrivate extends IContainerPrivate {\n}\n\nexport interface IComponentEvents extends IContainerEvents {\n\tdatavalidated: {}\n}\n\n/**\n * A base class for elements that make use of data.\n */\nexport abstract class Component extends Container {\n\tpublic static className: string = \"Component\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Component.className]);\n\n\tdeclare public _settings: IComponentSettings;\n\tdeclare public _privateSettings: IComponentPrivate;\n\tdeclare public _dataItemSettings: IComponentDataItem;\n\tdeclare public _events: IComponentEvents;\n\n\tprotected _data: ListData<unknown> = new ListData();\n\n\tprotected _dataItems: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\tpublic _mainDataItems = this._dataItems;\n\n\tprotected valueFields: Array<string> = [];\n\tprotected fields: Array<string> = [\"id\"];\n\n\tprotected _valueFields!: Array<string>;\n\tprotected _valueFieldsF!: { [index: string]: { fieldKey: string, workingKey: string } };\n\n\tprotected _fields!: Array<string>;\n\tprotected _fieldsF!: { [index: string]: string };\n\n\tpublic _valuesDirty: boolean = false;\n\n\tprotected _dataChanged: boolean = false;\n\n\tprotected _dataGrouped = false;\n\n\t/**\n\t * Indicates if the component has already been initialized.\n\t */\n\tpublic inited: boolean = false;\n\n\t/**\n\t * Component's data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n\t */\n\tpublic set data(data: ListData<unknown>) {\n\t\tdata.incrementRef();\n\t\tthis._data.decrementRef();\n\t\tthis._data = data;\n\t}\n\n\t/**\n\t * @return  Data\n\t */\n\tpublic get data(): ListData<unknown> {\n\t\treturn this._data;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._data.decrementRef();\n\t}\n\n\tprotected _onDataClear() {\n\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._data.incrementRef();\n\t\tthis._updateFields();\n\n\t\tthis._disposers.push(this.data.events.onAll((change) => {\n\t\t\tconst dataItems = this._mainDataItems;\n\t\t\tthis.markDirtyValues();\n\t\t\tthis._markDirtyGroup();\n\t\t\tthis._dataChanged = true;\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\n\t\t\t\tdataItems.length = 0;\n\t\t\t\tthis._onDataClear();\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tconst dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n\t\t\t\tdataItems.push(dataItem);\n\t\t\t\tthis.processDataItem(dataItem);\n\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.index];\n\t\t\t\tconst properties = this._makeDataItem(change.newValue);\n\n\t\t\t\t$object.keys(properties).forEach((key) => {\n\t\t\t\t\tdataItem.animate({\n\t\t\t\t\t\tkey: key,\n\t\t\t\t\t\tto: properties[key],\n\t\t\t\t\t\tduration: this.get(\"interpolationDuration\", 0),\n\t\t\t\t\t\teasing: this.get(\"interpolationEasing\"),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tdataItem.dataContext = change.newValue;\n\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tconst dataItem = new DataItem(this, change.newValue, this._makeDataItem(change.newValue));\n\t\t\t\tdataItems.splice(change.index, 0, dataItem);\n\t\t\t\tthis.processDataItem(dataItem);\n\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.index];\n\t\t\t\tdataItem.dispose();\n\t\t\t\tdataItems.splice(change.index, 1);\n\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tconst dataItem = dataItems[change.oldIndex];\n\t\t\t\tdataItems.splice(change.oldIndex, 1);\n\t\t\t\tdataItems.splice(change.newIndex, 0, dataItem);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\n\t\t\tthis._afterDataChange();\n\t\t}));\n\t}\n\n\tprotected _updateFields() {\n\t\tif (this.valueFields) {\n\t\t\tthis._valueFields = [];\n\t\t\tthis._valueFieldsF = {};\n\n\t\t\t$array.each(this.valueFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueFields.push(<any>key);\n\t\t\t\t\tthis._valueFieldsF[key as string] = { fieldKey: key + \"Field\", workingKey: key + \"Working\" };\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.fields) {\n\t\t\tthis._fields = [];\n\t\t\tthis._fieldsF = {};\n\n\t\t\t$array.each(this.fields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._fields.push(<any>key);\n\t\t\t\t\tthis._fieldsF[key as string] = key + \"Field\";\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A list of component's data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get dataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._dataItems;\n\t}\n\n\tprotected processDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) { }\n\n\n\tpublic _makeDataItem(data: unknown): this[\"_dataItemSettings\"] {\n\t\t//const output: this[\"_dataItemSettings\"] = {};\n\t\tconst output: any = {}; // temporary to solve error\n\t\tif (this._valueFields) {\n\t\t\t$array.each(this._valueFields, (key) => {\n\t\t\t\tconst field = this.get(<any>(this._valueFieldsF[key].fieldKey));\n\t\t\t\toutput[key] = (data as any)[field];\n\n\t\t\t\toutput[this._valueFieldsF[key].workingKey] = output[key];\n\t\t\t});\n\t\t}\n\t\tif (this._fields) {\n\t\t\t$array.each(this._fields, (key) => {\n\t\t\t\tconst field = this.get(<any>(this._fieldsF[key]));\n\t\t\t\toutput[key] = (data as any)[field];\n\t\t\t});\n\t\t}\n\n\t\treturn output;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeDataItem(data: this[\"_dataItemSettings\"]): DataItem<this[\"_dataItemSettings\"]> {\n\t\tlet dataItem = new DataItem(this, undefined, data);\n\t\tthis.processDataItem(dataItem);\n\t\treturn dataItem;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic pushDataItem(data: this[\"_dataItemSettings\"]): DataItem<this[\"_dataItemSettings\"]> {\n\t\tconst dataItem = this.makeDataItem(data);\n\t\tthis._mainDataItems.push(dataItem);\n\t\treturn dataItem;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t\n\t}\n\n\t/**\n\t * Shows component's data item.\n\t *\n\t * @param   dataItem   Data item\n\t * @param   _duration  Animation duration in milliseconds\n\t * @return             Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, _duration?: number): Promise<void> {\n\t\tdataItem.set(\"visible\", true);\n\t}\n\n\t/**\n\t * Hides component's data item.\n\t *\n\t * @param   dataItem   Data item\n\t * @param   _duration  Animation duration in milliseconds\n\t * @return             Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, _duration?: number): Promise<void> {\n\t\tdataItem.set(\"visible\", false);\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._valuesDirty = false;\n\t}\n\n\tprotected _afterDataChange() {\n\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dataChanged) {\n\t\t\tconst type = \"datavalidated\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t\tthis._dataChanged = false;\n\t\t}\n\n\t\tthis.inited = true;\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.markDirty();\n\t\tthis._valuesDirty = true;\n\t}\n\n\tpublic _markDirtyGroup() {\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize() {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n}\n","import { Component, IComponentSettings, IComponentPrivate, DataItem, IComponentEvents, IComponentDataItem } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport type { Root } from \"../../core/Root\";\nimport { p100 } from \"../../core/util/Percent\";\nimport type { Chart } from \"./Chart\";\nimport type { Bullet } from \"./Bullet\";\nimport { Container } from \"../../core/render/Container\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { ILegendDataItem } from \"./Legend\";\nimport type { Template } from \"../../core/util/Template\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\n\n/**\n * Defines interface for a heat rule.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n */\nexport interface IHeatRule {\n\n\t/**\n\t * Target template.\n\t */\n\ttarget: Template<any>;\n\n\t/**\n\t * The setting value to use for items if the lowest value.\n\t */\n\tmin: any;\n\n\t/**\n\t * The setting value to use for items if the highest value.\n\t */\n\tmax: any;\n\n\t/**\n\t * The setting value to use for items which do not have value at all.\n\t */\n\tneutral?: any;\t\n\n\t/**\n\t * Which data field to use when determining item's value.\n\t */\n\tdataField: string;\n\n\t/**\n\t * A setting key to set.\n\t */\n\tkey?: string;\n\n\t/**\n\t * Custom lowest value.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Custom highest value.\n\t */\n\tmaxValue?: number;\n\n\t/**\n\t * Use logarithmic scale when calculating intermediate setting values.\n\t *\n\t * @default false\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * A custom function that will set target element's settings.\n\t *\n\t * Can be used to do custom manipulation on complex objects requiring more\n\t * than modifying a setting.\n\t */\n\tcustomFunction?: (target: Sprite, minValue: number, maxValue: number, value?: any) => void;\n\n}\n\n\nexport interface ISeriesDataItem extends IComponentDataItem {\n\tid?: string;\n\tvalue?: number;\n\tvalueWorking?:number;\n\tvalueChange?: number;\n\tvalueChangePercent?: number;\n\tvalueChangeSelection?: number;\n\tvalueChangeSelectionPercent?: number;\n\tvalueChangePrevious?: number;\n\tvalueChangePreviousPercent?: number;\n\tvalueWorkingOpen?: number;\n\tvalueWorkingClose?: number;\n}\n\nexport interface ISeriesSettings extends IComponentSettings {\n\n\t/**\n\t * Name of the series.\n\t */\n\tname?: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric value of the data item.\n\t *\n\t * Some series use it to display its elements. It can also be used in heat\n\t * rules.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A text template to be used for label in legend.\n\t */\n\tlegendLabelText?: string;\n\n\t/**\n\t * A text template to be used for value label in legend.\n\t */\n\tlegendValueText?: string;\n\n\t/**\n\t * If set to `true` the series initial animation will be played item by item\n\t * rather than all at once.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedInterpolation?:boolean;\n\n\t/**\n\t * A delay in milliseconds to wait before starting animation of next data\n\t * item.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedDelay?:number;\n\n\t/**\n\t * A list of heat rules to apply on series elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n\t */\n\theatRules?:IHeatRule[];\n\n\t/**\n\t * If set to `true`, series will calculate aggregate values, e.g. change\n\t * percent, high, low, etc.\n\t *\n\t * Do not enable unless you are using such aggregate values in tooltips,\n\t * display data fields, heat rules, or similar.\n\t */\n\tcalculateAggregates?: boolean;\n\n\t/**\n\t * Series stroke color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Series fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * A data item representing series in a [[Legend]].\n\t *\n\t * @readonly\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface ISeriesPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: Chart;\n\tstartIndex?: number;\n\tendIndex?: number;\n\n\tvalueAverage?: number;\n\tvalueCount?: number;\n\tvalueSum?: number;\n\tvalueAbsoluteSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n\tvalueOpen?: number;\n\tvalueClose?: number;\n\n\tbaseValueSeries?: Series;\n}\n\nexport interface ISeriesEvents extends IComponentEvents {\n\n}\n\n/**\n * A base class for all series.\n */\nexport abstract class Series extends Component {\n\tpublic static className: string = \"Series\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Series.className]);\n\n\tdeclare public _settings: ISeriesSettings;\n\tdeclare public _privateSettings: ISeriesPrivate;\n\tdeclare public _dataItemSettings: ISeriesDataItem;\n\tdeclare public _events: ISeriesEvents;\n\n\tprotected _aggregatesCalculated: boolean = false;\n\tprotected _selectionAggregatesCalculated: boolean = false;\n\tprotected _dataProcessed: boolean = false;\n\n\tprotected _psi: number | undefined;\n\tprotected _pei: number | undefined;\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tpublic chart:Chart | undefined;\n\n\t/**\n\t * List of bullets to use for the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n\t */\n\tpublic bullets: List<<D extends DataItem<this[\"_dataItemSettings\"]>>(root: Root, series:Series, dataItem: D) => Bullet | undefined> = new List();\n\n\t/**\n\t * A [[Container]] series' bullets are stored in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, {width:p100, height:p100, position:\"absolute\"});\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"value\");\n\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"customData\", {});\n\n\t\tthis._disposers.push(this.bullets.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _dispose(){\n\t\tthis.bulletsContainer.dispose(); // can be in a different parent\n\t\tsuper._dispose();\n\t}\n\n\tpublic startIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"startIndex\", 0), len);\n\t}\n\n\tpublic endIndex():number {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(this.getPrivate(\"endIndex\", len), len)\n\t}\n\n\tprotected _handleBullets(dataItems:Array<DataItem<this[\"_dataItemSettings\"]>>){\n\t\t$array.each(dataItems, (dataItem)=>{\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif(bullets){\n\t\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\t\t})\n\n\t\tthis.markDirtyValues();\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t *\n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn $array.find(this.dataItems, (dataItem: any) => {\n\t\t\treturn dataItem.get(\"id\") == id;\n\t\t})\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(this._shouldMakeBullet(dataItem)){\n\t\t\tdataItem.bullets = [];\n\n\t\t\tthis.bullets.each((bulletFunction) => {\n\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _shouldMakeBullet(_dataItem: DataItem<this[\"_dataItemSettings\"]>):boolean{\n\t\treturn true;\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction:(root: Root, series:Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?:number):Bullet | undefined{\n\t\tconst bullet = bulletFunction(this._root, this, dataItem);\n\t\tif(bullet){\n\t\t\tlet sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tsprite.setRaw(\"position\", \"absolute\");\n\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t}\n\t\t\tbullet._index = index;\n\t\t\tbullet.series = this;\n\t\t\tdataItem.bullets!.push(bullet);\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._aggregatesCalculated = false;\n\t\tthis._selectionAggregatesCalculated = false;\n\t}\n\n\tpublic _prepareChildren(){\n\t\tsuper._prepareChildren();\n\n\t\tlet startIndex = this.startIndex();\n\t\tlet endIndex = this.endIndex();\n\n\n\t\tif(this.isDirty(\"heatRules\")){\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif(this.isPrivateDirty(\"baseValueSeries\")){\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\t\t\tif(baseValueSeries){\n\t\t\t\tthis._disposers.push(baseValueSeries.onPrivate(\"startIndex\", ()=>{\n\t\t\t\t\tthis.markDirtyValues();\n\t\t\t\t}))\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tconst calculateAggregates = this.get(\"calculateAggregates\");\n\t\tif(calculateAggregates){\n\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\t\tif (!this._aggregatesCalculated) {\n\t\t\t\t\tthis._calculateAggregates(0, this.dataItems.length);\n\t\t\t\t\tthis._aggregatesCalculated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\n\t\t\t\tif (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n\t\t\t\t\t// void\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._calculateAggregates(startIndex, endIndex);\n\t\t\t\t}\n\n\t\t\t\tthis._selectionAggregatesCalculated = true;\n\t\t\t}\n\t\t}\n\n\t\tif(this.isDirty(\"tooltip\")){\n\t\t\tlet tooltip = this.get(\"tooltip\");\n\t\t\tif(tooltip){\n\t\t\t\ttooltip.hide(0);\n\t\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n\n\t\t\tlet markerRectangle: Graphics | undefined;\n\t\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tmarkerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tif(this.isVisible()){\n\t\t\t\t\t\tif (this.isDirty(\"stroke\")) {\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet stroke = this.get(\"stroke\");\n\t\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", stroke);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.isDirty(\"fill\")) {\n\t\t\t\t\t\t\tlet fill = this.get(\"fill\");\t\t\t\t\t\t\n\t\t\t\t\t\t\tmarkerRectangle.set(\"fill\", fill);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateLegendMarker(undefined);\n\t\t}\n\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < this.dataItems.length){\n\t\t\t\tendIndex++;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (!dataItem.bullets) {\n\t\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _calculateAggregates(startIndex: number, endIndex: number) {\n\t\tlet fields = this._valueFields;\n\n\t\tif (!fields) {\n\t\t\tthrow new Error(\"No value fields are set for the series.\");\n\t\t}\n\n\t\tconst sum: { [index: string]: number } = {};\n\t\tconst absSum: { [index: string]: number } = {};\n\t\tconst count: { [index: string]: number } = {};\n\t\tconst low: { [index: string]: number } = {};\n\t\tconst high: { [index: string]: number } = {};\n\t\tconst open: { [index: string]: number } = {};\n\t\tconst close: { [index: string]: number } = {};\n\t\tconst average: { [index: string]: number } = {};\n\t\tconst previous: { [index: string]: number } = {};\n\n\t\t$array.each(fields, (key) => {\n\t\t\tsum[key] = 0;\n\t\t\tabsSum[key] = 0;\n\t\t\tcount[key] = 0;\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tlet change = key + \"Change\";\n\t\t\tlet changePercent = key + \"ChangePercent\";\n\t\t\tlet changePrevious = key + \"ChangePrevious\";\n\t\t\tlet changePreviousPercent = key + \"ChangePreviousPercent\";\n\t\t\tlet changeSelection = key + \"ChangeSelection\";\n\t\t\tlet changeSelectionPercent = key + \"ChangeSelectionPercent\";\n\n\t\t\tlet openKey = \"valueY\";\n\n\t\t\tif(key == \"valueX\" || key == \"openValueX\" || key == \"lowValueX\" || key == \"highValueX\"){\n\t\t\t\topenKey = \"valueX\";\n\t\t\t}\n\n\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\n\t\t\t\tlet value = dataItem.get(<any>key)\n\n\t\t\t\tif (value != null) {\n\t\t\t\t\tcount[key]++;\n\t\t\t\t\tsum[key] += value;\n\n\t\t\t\t\tabsSum[key] += Math.abs(value);\n\n\t\t\t\t\taverage[key] = sum[key] / count[key];\n\n\t\t\t\t\tif (low[key] > value || low[key] == null) {\n\t\t\t\t\t\tlow[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\tif (high[key] < value || high[key] == null) {\n\t\t\t\t\t\thigh[key] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tclose[key] = value;\n\n\t\t\t\t\tif (open[key] == null) {\n\t\t\t\t\t\topen[key] = value;\n\t\t\t\t\t\tprevious[key] = value;\n\n\t\t\t\t\t\tif(baseValueSeries){\n\t\t\t\t\t\t\topen[openKey] = baseValueSeries._getBase(openKey);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startIndex === 0) {\n\t\t\t\t\t\tdataItem.setRaw(<any>(change), value - open[openKey]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePercent), (value - open[openKey]) / open[openKey] * 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[openKey]) / previous[openKey] * 100);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[openKey]);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelectionPercent), (value - open[openKey]) / open[openKey] * 100);\n\n\t\t\t\t\tprevious[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tthis.setPrivate(<any>(key + \"AverageSelection\"), average[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CountSelection\"), count[key]);\n\t\t\tthis.setPrivate(<any>(key + \"SumSelection\"), sum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSumSelection\"), absSum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"LowSelection\"), low[key]);\n\t\t\tthis.setPrivate(<any>(key + \"HighSelection\"), high[key]);\n\t\t\tthis.setPrivate(<any>(key + \"OpenSelection\"), open[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CloseSelection\"), close[key]);\n\t\t})\n\n\t\tif (startIndex === 0 && endIndex === this.dataItems.length) {\n\t\t\t$array.each(fields, (key) => {\n\t\t\t\tthis.setPrivate(<any>(key + \"Average\"), average[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Count\"), count[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Sum\"), sum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSum\"), absSum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Low\"), low[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"High\"), high[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Open\"), open[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Close\"), close[key]);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tthis._psi = this.startIndex();\n\t\tthis._pei = this.endIndex();\n\n\t\tif(this.isDirty(\"visible\")){\n\t\t\tthis.bulletsContainer.set(\"visible\", this.get(\"visible\"));\n\t\t}\n\n\n\t\t// Apply heat rules\n\t\tconst rules = this.get(\"heatRules\");\n\n\t\tif (this._valuesDirty && rules && rules.length > 0) {\t\t\t\n\t\t\t$array.each(rules, (rule) => {\n\t\t\t\tconst minValue = rule.minValue || this.getPrivate(<any>(rule.dataField + \"Low\")) || 0;\n\t\t\t\tconst maxValue = rule.maxValue || this.getPrivate(<any>(rule.dataField + \"High\")) || 0;\n\t\t\t\t\n\n\t\t\t\t$array.each(rule.target._entities, (target) => {\n\t\t\t\t\tconst value = target.dataItem.get(rule.dataField);\n\n\t\t\t\t\tif (!$type.isNumber(value)) {\n\t\t\t\t\t\tif(rule.neutral){\n\t\t\t\t\t\t\ttarget.set(rule.key, rule.neutral);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet percent: number;\n\t\t\t\t\tif (rule.logarithmic) {\n\t\t\t\t\t\tpercent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpercent = (value - minValue) / (maxValue - minValue);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n\t\t\t\t\t\tpercent = 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\t// fixes problems if all values are the same\n\t\t\t\t\tlet propertyValue;\n\t\t\t\t\tif ($type.isNumber(rule.min)) {\n\t\t\t\t\t\tpropertyValue = rule.min + (rule.max - rule.min) * percent;\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Color) {\n\t\t\t\t\t\tpropertyValue = Color.interpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Percent) {\n\t\t\t\t\t\tpropertyValue = percentInterpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rule.customFunction) {\n\t\t\t\t\t\trule.customFunction.call(this, target, minValue, maxValue, value);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttarget.set(rule.key, propertyValue);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet count = this.dataItems.length;\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tif(endIndex < count){\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis._positionBullets(this.dataItems[i]);\n\t\t\t}\n\n\t\t\tfor (let i = endIndex; i < count; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tif(dataItem.bullets){\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif(bullet.get(\"dynamic\")){\n\n\t\t\t\t\tif(sprite){\n\t\t\t\t\t\tsprite._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\tsprite.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\tif(sprite instanceof Container){\n\t\t\t\t\t\tsprite.walkChildren((child)=>{\n\t\t\t\t\t\t\tchild._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\t\tchild.markDirtySize();\n\n\t\t\t\t\t\t\tif(child instanceof Label){\n\t\t\t\t\t\t\t\tchild.text.markDirtyText();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(sprite instanceof Label && sprite.get(\"populateText\" as any)){\n\t\t\t\t\tsprite.text.markDirtyText();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _hideBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (dataItem.bullets) {\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _positionBullet(_bullet: Bullet) {\n\t}\n\n\tpublic _placeBulletsContainer(chart:Chart){\n\t\tchart.bulletsContainer.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer(){\n\t\tconst bulletsContainer = this.bulletsContainer;\n\t\tif(bulletsContainer.parent){\n\t\t\tbulletsContainer.parent.children.removeValue(bulletsContainer)\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\t//super.disposeDataItem(dataItem); // does nothing\n\t\t\n\t\tconst bullets = dataItem.bullets;\n\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tbullet.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").show(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").hide(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\n\tprotected async _sequencedShowHide(show: boolean, duration?: number): Promise<void> {\n\t\tif (this.get(\"sequencedInterpolation\")) {\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tconst startIndex = this.startIndex();\n\t\t\t\tconst endIndex = this.endIndex();\n\n\t\t\t\tawait Promise.all($array.map(this.dataItems, async (dataItem, i) => {\n\t\t\t\t\tlet realDuration = duration || 0;\n\n\t\t\t\t\tif (i < startIndex - 10 || i > endIndex + 10) {\n\t\t\t\t\t\trealDuration = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t//let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n\t\t\t\t\tlet delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n\n\t\t\t\t\tawait $time.sleep(delay * (i - startIndex));\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tawait this.showDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait this.hideDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait Promise.all($array.map(this.dataItems, (dataItem) => {\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\treturn this.showDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn this.hideDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst legendDataItem = dataItem.get(\"legendDataItem\" as any) as DataItem<ILegendDataItem>;\n\n\t\tif (legendDataItem) {\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tconst text = valueLabel.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tconst text = label.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _onHide(){\n\t\tsuper._onHide();\n\n\t\tconst tooltip = this.getTooltip();\n\t\tif(tooltip){\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic unhoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _getBase(key: any): number {\n\t\tconst dataItem = this.dataItems[this.startIndex()];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(key);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport type { Timezone } from \"./Timezone\";\n\nexport type TimeUnit = \"millisecond\" | \"second\" | \"minute\" | \"hour\" | \"day\" | \"week\" | \"month\" | \"year\";\n\nexport interface ITimeInterval {\n\ttimeUnit: TimeUnit;\n\tcount: number;\n}\n\n\n/**\n * Returns a `Promise` which can be used to execute code after number of\n * milliseconds.\n *\n * @param   ms  Sleep duration in ms\n * @return      Promise\n */\nexport function sleep(ms: number): Promise<void> {\n\treturn new Promise((resolve, _reject) => {\n\t\tsetTimeout(resolve, ms);\n\t});\n}\n\n\n/**\n * Maps time period names to their numeric representations in milliseconds.\n *\n * @ignore Exclude from docs\n */\nexport let timeUnitDurations: { [Key in TimeUnit]: number } = {\n\tmillisecond: 1,\n\tsecond: 1000,\n\tminute: 60000,\n\thour: 3600000,\n\tday: 86400000,\n\tweek: 604800000,\n\tmonth: 365.242 / 12 * 86400000,\n\tyear: 31536000000\n};\n\n/**\n * Returns the next time unit that goes after source `unit`.\n *\n * E.g. \"hour\" is the next unit after \"minute\", etc.\n *\n * @ignore Exclude from docs\n * @param unit  Source time unit\n * @return Next time unit\n */\nexport function getNextUnit(unit: TimeUnit): TimeUnit | undefined {\n\tswitch (unit) {\n\t\tcase \"year\":\n\t\t\treturn;\n\t\tcase \"month\":\n\t\t\treturn \"year\";\n\n\t\tcase \"week\":\n\t\t\treturn \"month\";\n\n\t\tcase \"day\":\n\t\t\treturn \"month\"; // not a mistake\n\n\t\tcase \"hour\":\n\t\t\treturn \"day\";\n\n\t\tcase \"minute\":\n\t\t\treturn \"hour\";\n\n\t\tcase \"second\":\n\t\t\treturn \"minute\"\n\n\t\tcase \"millisecond\":\n\t\t\treturn \"second\";\n\t}\n}\n\n/**\n * Returns number of milliseconds in the `count` of time `unit`.\n *\n * Available units: \"millisecond\", \"second\", \"minute\", \"hour\", \"day\", \"week\",\n * \"month\", and \"year\".\n *\n * @param unit   Time unit\n * @param count  Number of units\n * @return Milliseconds\n */\nexport function getDuration(unit: TimeUnit, count?: number): number {\n\tif (count == null) {\n\t\tcount = 1;\n\t}\n\treturn timeUnitDurations[unit] * count;\n}\n\n/**\n * @ignore\n */\nexport function getIntervalDuration(interval: ITimeInterval | undefined) {\n\tif (interval) {\n\t\treturn timeUnitDurations[interval.timeUnit] * interval.count;\n\t}\n\treturn 0;\n}\n\n\nexport function getDateIntervalDuration(interval: ITimeInterval, date: Date, firstDateOfWeek?: number, utc?: boolean, timezone?: Timezone) {\n\tconst unit = interval.timeUnit;\n\tconst count = interval.count;\n\tif (unit == \"hour\" || unit == \"minute\" || unit == \"second\" || unit == \"millisecond\") {\n\t\treturn timeUnitDurations[interval.timeUnit] * interval.count;\n\t}\n\telse {\n\t\tconst firstTime = round(new Date(date.getTime()), unit, count, firstDateOfWeek, utc, undefined, timezone).getTime();\n\t\tlet lastTime = firstTime + count * getDuration(unit) * 1.05;\n\t\tlastTime = round(new Date(lastTime), unit, 1, firstDateOfWeek, utc, undefined, timezone).getTime();\n\t\treturn lastTime - firstTime;\n\t}\n}\n\n/**\n * Returns current `Date` object.\n *\n * @return Current date\n */\nexport function now(): Date {\n\treturn new Date();\n}\n\n/**\n * Returns current timestamp.\n *\n * @return Current timestamp\n */\nexport function getTime(): number {\n\treturn now().getTime();\n}\n\n/**\n * Returns a copy of the `Date` object.\n *\n * @param date  Source date\n * @return Copy\n */\nexport function copy(date: Date): Date {\n\treturn new Date(date.getTime()); // todo: check if this is ok. new Date(date) used to strip milliseconds on FF in v3\n}\n\n/**\n * Checks if the `unit` part of two `Date` objects do not match. Two dates\n * represent a \"range\" of time, rather the same time date.\n *\n * @param timeOne  timestamp\n * @param timeTwo  timestamp\n * @param unit     Time unit to check\n * @return Range?\n */\nexport function checkChange(timeOne: number, timeTwo: number, unit: TimeUnit, utc?: boolean, timezone?: Timezone): boolean {\n\t// quick\n\tif ((timeTwo - timeOne) > getDuration(unit, 1.2)) {\n\t\treturn true;\n\t}\n\n\tlet dateOne = new Date(timeOne);\n\tlet dateTwo = new Date(timeTwo);\n\n\tif (timezone) {\n\t\tdateOne = timezone.convertLocal(dateOne);\n\t\tdateTwo = timezone.convertLocal(dateTwo);\n\t}\n\n\tlet timeZoneOffset1 = 0;\n\tlet timeZoneOffset2 = 0;\n\n\tif (!utc && unit != \"millisecond\") {\n\t\ttimeZoneOffset1 = dateOne.getTimezoneOffset();\n\t\tdateOne.setUTCMinutes(dateOne.getUTCMinutes() - timeZoneOffset1);\n\n\t\ttimeZoneOffset2 = dateTwo.getTimezoneOffset();\n\t\tdateTwo.setUTCMinutes(dateTwo.getUTCMinutes() - timeZoneOffset2);\n\t}\n\n\tlet changed = false;\n\tswitch (unit) {\n\t\tcase \"year\":\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"month\":\n\t\t\tif (dateOne.getUTCFullYear() != dateTwo.getUTCFullYear()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\telse if (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"day\":\n\t\t\tif (dateOne.getUTCMonth() != dateTwo.getUTCMonth()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\telse if (dateOne.getUTCDate() != dateTwo.getUTCDate()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"hour\":\n\t\t\tif (dateOne.getUTCHours() != dateTwo.getUTCHours()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"minute\":\n\t\t\tif (dateOne.getUTCMinutes() != dateTwo.getUTCMinutes()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase \"second\":\n\t\t\tif (dateOne.getUTCSeconds() != dateTwo.getUTCSeconds()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase \"millisecond\":\n\t\t\tif (dateOne.getTime() != dateTwo.getTime()) {\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\tif (changed) {\n\t\treturn changed;\n\t}\n\n\tlet nextUnit = getNextUnit(unit);\n\tif (nextUnit) {\n\t\treturn checkChange(timeOne, timeTwo, nextUnit, utc, timezone);\n\t}\n\telse {\n\t\treturn false;\n\t}\n}\n\n/**\n * Adds `count` of time `unit` to the source date. Returns a modified `Date` object.\n *\n * @param date   Source date\n * @param unit   Time unit\n * @param count  Number of units to add\n * @return Modified date\n */\nexport function add(date: Date, unit: TimeUnit, count: number, utc?: boolean, timezone?: Timezone): Date {\n\tlet timeZoneOffset = 0;\n\n\tif (!utc && unit != \"millisecond\") {\n\t\ttimeZoneOffset = date.getTimezoneOffset();\n\n\t\tif (timezone) {\n\t\t\ttimeZoneOffset -= timezone.offsetUTC(date);\n\t\t}\n\n\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n\t}\n\n\n\tswitch (unit) {\n\t\tcase \"day\":\n\t\t\tlet day: number = date.getUTCDate();\n\t\t\tdate.setUTCDate(day + count);\n\t\t\tbreak;\n\n\t\tcase \"second\":\n\t\t\tlet seconds: number = date.getUTCSeconds();\n\t\t\tdate.setUTCSeconds(seconds + count);\n\t\t\tbreak;\n\n\t\tcase \"millisecond\":\n\t\t\tlet milliseconds: number = date.getUTCMilliseconds();\n\t\t\tdate.setUTCMilliseconds(milliseconds + count);\n\t\t\tbreak;\n\n\t\tcase \"hour\":\n\t\t\tlet hours: number = date.getUTCHours();\n\t\t\tdate.setUTCHours(hours + count);\n\t\t\tbreak;\n\n\t\tcase \"minute\":\n\t\t\tlet minutes: number = date.getUTCMinutes();\n\t\t\tdate.setUTCMinutes(minutes + count);\n\t\t\tbreak;\n\n\t\tcase \"year\":\n\t\t\tlet year: number = date.getUTCFullYear();\n\t\t\tdate.setUTCFullYear(year + count);\n\t\t\tbreak;\n\n\t\tcase \"month\":\n\t\t\tlet month: number = date.getUTCMonth();\n\t\t\tdate.setUTCMonth(month + count);\n\t\t\tbreak;\n\n\t\tcase \"week\":\n\t\t\tlet wday: number = date.getUTCDate();\n\t\t\tdate.setUTCDate(wday + count * 7);\n\t\t\tbreak;\n\t}\n\n\n\tif (!utc && unit != \"millisecond\") {\n\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n\n\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\n\t\t\tif (timezone) {\n\t\t\t\tnewTimeZoneOffset += timezone.offsetUTC(date);\n\t\t\t}\n\n\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\n\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\n\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\n\n\t\t\t\t// solves issues if new time falls back to old time zone\n\t\t\t\tif (date.getTimezoneOffset() != newTimeZoneOffset) {\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - diff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn date;\n}\n\n\n/**\n * \"Rounds\" the date to specific time unit.\n *\n * @param date             Source date\n * @param unit             Time unit\n * @param count            Number of units to round to\n * @param firstDateOfWeek  First day of week\n * @param utc              Use UTC timezone\n * @param firstDate        First date to round to\n * @param roundMinutes     Minutes to round to (some timezones use non-whole hour)\n * @param timezone         Use specific named timezone when rounding\n * @return New date\n */\nexport function round(date: Date, unit: TimeUnit, count: number, firstDateOfWeek?: number, utc?: boolean, firstDate?: Date, timezone?: Timezone): Date {\n\tif (!timezone || utc) {\n\n\t\tlet timeZoneOffset = 0;\n\n\t\tif (!utc && unit != \"millisecond\") {\n\t\t\ttimeZoneOffset = date.getTimezoneOffset();\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() - timeZoneOffset);\n\t\t}\n\n\t\tswitch (unit) {\n\n\t\t\tcase \"day\":\n\t\t\t\tlet day = date.getUTCDate();\n\n\t\t\t\tif (count > 1) {\n\t\t\t\t\t//\tday = Math.floor(day / count) * count;\n\t\t\t\t\tif (firstDate) {\n\t\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1);\n\n\t\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\n\t\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\n\t\t\t\t\t\tdate.setTime(firstDate.getTime() + duration - timeZoneOffset * getDuration(\"minute\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdate.setUTCDate(day);\n\t\t\t\t}\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"second\":\n\t\t\t\tlet seconds = date.getUTCSeconds();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tseconds = Math.floor(seconds / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCSeconds(seconds, 0);\n\t\t\t\tbreak;\n\n\t\t\tcase \"millisecond\":\n\t\t\t\tif (count == 1) {\n\t\t\t\t\treturn date; // much better for perf!\n\t\t\t\t}\n\n\t\t\t\tlet milliseconds = date.getUTCMilliseconds();\n\t\t\t\tmilliseconds = Math.floor(milliseconds / count) * count;\n\t\t\t\tdate.setUTCMilliseconds(milliseconds);\n\t\t\t\tbreak;\n\n\t\t\tcase \"hour\":\n\n\t\t\t\tlet hours = date.getUTCHours();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\thours = Math.floor(hours / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCHours(hours, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"minute\":\n\n\t\t\t\tlet minutes = date.getUTCMinutes();\n\t\t\t\tmilliseconds = date.getUTCMilliseconds();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tminutes = Math.floor(minutes / count) * count;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCMinutes(minutes, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"month\":\n\n\t\t\t\tlet month = date.getUTCMonth();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmonth = Math.floor(month / count) * count;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCMonth(month, 1);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"year\":\n\n\t\t\t\tlet year = date.getUTCFullYear();\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tyear = Math.floor(year / count) * count;\n\t\t\t\t}\n\t\t\t\tdate.setUTCFullYear(year, 0, 1);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\t\t\t\tbreak;\n\n\t\t\tcase \"week\":\n\n\t\t\t\tlet wday = date.getUTCDate();\n\t\t\t\tlet weekDay = date.getUTCDay();\n\n\t\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\n\t\t\t\t\tfirstDateOfWeek = 1;\n\t\t\t\t}\n\n\t\t\t\tif (weekDay >= firstDateOfWeek) {\n\t\t\t\t\twday = wday - weekDay + firstDateOfWeek;\n\t\t\t\t} else {\n\t\t\t\t\twday = wday - (7 + weekDay) + firstDateOfWeek;\n\t\t\t\t}\n\n\t\t\t\tdate.setUTCDate(wday);\n\t\t\t\tdate.setUTCHours(0, 0, 0, 0);\n\n\t\t\t\tbreak;\n\t\t}\n\t\tif (!utc && unit != \"millisecond\") {\n\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + timeZoneOffset);\n\n\t\t\tif (unit == \"day\" || unit == \"week\" || unit == \"month\" || unit == \"year\") {\n\t\t\t\tlet newTimeZoneOffset = date.getTimezoneOffset();\n\t\t\t\tif (newTimeZoneOffset != timeZoneOffset) {\n\t\t\t\t\tlet diff = newTimeZoneOffset - timeZoneOffset;\n\n\t\t\t\t\tdate.setUTCMinutes(date.getUTCMinutes() + diff);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn date;\n\t}\n\telse {\n\t\tif (isNaN(date.getTime())) {\n\t\t\treturn date;\n\t\t}\n\t\tlet tzoffset = timezone.offsetUTC(date);\n\t\tlet timeZoneOffset = date.getTimezoneOffset();\n\t\tlet parsedDate = timezone.parseDate(date);\n\t\t//console.log(parsedDate)\n\t\tlet year = parsedDate.year;\n\t\tlet month = parsedDate.month;\n\t\tlet day = parsedDate.day;\n\t\tlet hour = parsedDate.hour;\n\t\tlet minute = parsedDate.minute;\n\t\tlet second = parsedDate.second;\n\t\tlet millisecond = parsedDate.millisecond;\n\t\tlet weekday = parsedDate.weekday;\n\n\t\tswitch (unit) {\n\n\t\t\tcase \"day\":\n\t\t\t\tif (count > 1 && firstDate) {\n\t\t\t\t\tfirstDate = round(firstDate, \"day\", 1, firstDateOfWeek, utc, undefined, timezone);\n\t\t\t\t\tlet difference = date.getTime() - firstDate.getTime();\n\t\t\t\t\tlet unitCount = Math.floor(difference / getDuration(\"day\") / count);\n\t\t\t\t\tlet duration = getDuration(\"day\", unitCount * count);\n\t\t\t\t\tdate.setTime(firstDate.getTime() + duration);\n\n\t\t\t\t\tparsedDate = timezone.parseDate(date);\n\n\t\t\t\t\tyear = parsedDate.year;\n\t\t\t\t\tmonth = parsedDate.month;\n\t\t\t\t\tday = parsedDate.day;\n\t\t\t\t}\n\n\t\t\t\thour = 0;\n\t\t\t\tminute = tzoffset - timeZoneOffset;\n\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"second\":\n\t\t\t\tminute += tzoffset - timeZoneOffset;\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tsecond = Math.floor(second / count) * count;\n\t\t\t\t}\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"millisecond\":\n\t\t\t\tminute += tzoffset - timeZoneOffset;\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmillisecond = Math.floor(millisecond / count) * count;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"hour\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\thour = Math.floor(hour / count) * count;\n\t\t\t\t}\n\t\t\t\tminute = tzoffset - timeZoneOffset;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"minute\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tminute = Math.floor(minute / count) * count;\n\t\t\t\t}\n\t\t\t\tminute += tzoffset - timeZoneOffset;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"month\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tmonth = Math.floor(month / count) * count;\n\t\t\t\t}\n\t\t\t\tday = 1;\n\t\t\t\thour = 0;\n\t\t\t\tminute = tzoffset - timeZoneOffset;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\n\t\t\t\tbreak;\n\n\t\t\tcase \"year\":\n\t\t\t\tif (count > 1) {\n\t\t\t\t\tyear = Math.floor(year / count) * count;\n\t\t\t\t}\n\t\t\t\tmonth = 0;\n\t\t\t\tday = 1;\n\t\t\t\thour = 0;\n\t\t\t\tminute = tzoffset - timeZoneOffset;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"week\":\n\t\t\t\tif (!$type.isNumber(firstDateOfWeek)) {\n\t\t\t\t\tfirstDateOfWeek = 1;\n\t\t\t\t}\n\n\t\t\t\tif (weekday >= firstDateOfWeek) {\n\t\t\t\t\tday = day - weekday + firstDateOfWeek;\n\t\t\t\t} else {\n\t\t\t\t\tday = day - (7 + weekday) + firstDateOfWeek;\n\t\t\t\t}\n\n\t\t\t\thour = 0;\n\t\t\t\tminute = tzoffset - timeZoneOffset;\n\t\t\t\tsecond = 0;\n\t\t\t\tmillisecond = 0;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tdate = new Date(year, month, day, hour, minute, second, millisecond);\n\n\t\tlet newOffset = date.getTimezoneOffset();\n\t\tif (newOffset != timeZoneOffset) {\n\t\t\tdate.setTime(date.getTime() + (timeZoneOffset - newOffset) * 60000);\n\t\t}\n\n\t\treturn date;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function chooseInterval(index: number, duration: number, gridCount: number, intervals: Array<ITimeInterval>): ITimeInterval {\n\tlet gridInterval: ITimeInterval = intervals[index];\n\tlet intervalDuration = getIntervalDuration(gridInterval);\n\n\tlet lastIndex = intervals.length - 1;\n\tif (index >= lastIndex) {\n\t\treturn { ...intervals[lastIndex] };\n\t}\n\n\tlet count = Math.ceil(duration / intervalDuration);\n\n\tif (duration < intervalDuration && index > 0) {\n\t\treturn { ...intervals[index - 1] };\n\t}\n\tif (count <= gridCount) {\n\t\treturn { ...intervals[index] };\n\t} else {\n\t\tif (index + 1 < intervals.length) {\n\t\t\treturn chooseInterval(index + 1, duration, gridCount, intervals);\n\t\t} else {\n\t\t\treturn { ...intervals[index] };\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getUnitValue(date: Date, unit: TimeUnit) {\n\tswitch (unit) {\n\t\tcase \"day\":\n\t\t\treturn date.getDate();\n\t\tcase \"second\":\n\t\t\treturn date.getSeconds();\n\t\tcase \"millisecond\":\n\t\t\treturn date.getMilliseconds();\n\t\tcase \"hour\":\n\t\t\treturn date.getHours();\n\t\tcase \"minute\":\n\t\t\treturn date.getMinutes();\n\t\tcase \"month\":\n\t\t\treturn date.getMonth();\n\t\tcase \"year\":\n\t\t\treturn date.getFullYear();\n\t\tcase \"week\":\n\t\t\treturn $utils.getWeek(date);\n\t}\n}\n","import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * @todo review\n\t * You can tell MapPointSeries or MapLineSeries to affect map bounds. Or, if you have a Background series\n\t * you can simply create a background spanning through all the globe and set affectsBounds to false, so that background would not influence the chart when fitting it to the screen.\n\t */\n\taffectsBounds?: boolean;\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n\n\t/**\n\t * Names of geodata items, such as countries, to replace by from loaded\n\t * geodata.\n\t *\n\t * Can be used to override built-in English names for countries.\n\t *\n\t * ```TypeScript\n\t * import am5geodata_lang_ES from '@amcharts5-geodata/lang/es';\n\t * // ...\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t * ```JavaScript\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t *\n\t * @since 5.1.13\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-translations/} for more info\n\t */\n\tgeodataNames?: { [index: string]: string };\n\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _excluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\tprotected _notIncluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tthis.on(\"geoJSON\", (geoJSON) => {\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\t\t})\n\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty || this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\")) {\n\t\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\t\tthis._geoJSONparsed = false;\n\t\t\t}\n\n\t\t\tif (!this._geoJSONparsed) {\n\t\t\t\tthis._parseGeoJSON();\n\t\t\t\tthis._geoJSONparsed = true;\n\t\t\t}\n\n\t\t\tconst chart = this.chart;\n\t\t\tconst exclude = this.get(\"exclude\");\n\n\t\t\tif (exclude) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(exclude, (id) => {\n\t\t\t\t\tconst dataItem = this.getDataItemById(id);\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tthis._excludeDataItem(dataItem)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!exclude || exclude.length == 0) {\n\t\t\t\t$array.each(this._excluded, (dataItem) => {\n\t\t\t\t\tthis._unexcludeDataItem(dataItem)\n\t\t\t\t})\n\t\t\t\tthis._excluded = [];\n\t\t\t}\n\n\t\t\tconst include = this.get(\"include\");\n\t\t\tif (include) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst id = dataItem.get(\"id\");\n\t\t\t\t\tif (id && include.indexOf(id) == -1) {\n\t\t\t\t\t\tthis._notIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!include) {\n\t\t\t\t$array.each(this._notIncluded, (dataItem) => {\n\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t\tthis._notIncluded = [];\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._excluded, dataItem);\n\t}\n\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._notIncluded, dataItem);\n\t}\n\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tconst geodataNames = this.get(\"geodataNames\");\n\t\t\tif (features) {\n\n\t\t\t\tconst idField = this.get(\"idField\", \"id\");\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature[idField];\n\n\t\t\t\t\t\tif (geodataNames && geodataNames[id]) {\n\t\t\t\t\t\t\tfeature.properties.name = geodataNames[id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\t//if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t//\tcontinue;\n\t\t\t\t\t\t\t//}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tdataObject[idField] = id;\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any, series: MapSeries) {\n\t\tif (geometry && series.get(\"affectsBounds\", true)) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tthis._geoJSONparsed = false;\n\t}\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * @ignore\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * @ignore\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif(geoBounds.right < geoBounds.left){\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south <= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north >= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import * as $type from \"../util/Type\";\nimport * as $math from \"../util/Math\";\nimport * as $utils from \"../util/Utils\";\nimport { Rectangle, IRectangleSettings, IRectanglePrivate } from \"./Rectangle\";\n\n\nexport interface IRoundedRectangleSettings extends IRectangleSettings {\n\n\t/**\n\t * Radius of the top-left corner in pixels.\n\t */\n\tcornerRadiusTL?: number;\n\n\t/**\n\t * Radius of the top-right corner in pixels.\n\t */\n\tcornerRadiusTR?: number;\n\n\t/**\n\t * Radius of the botttom-right corner in pixels.\n\t */\n\tcornerRadiusBR?: number;\n\n\t/**\n\t * Radius of the bottom-left corner in pixels.\n\t */\n\tcornerRadiusBL?: number;\n\n}\n\nexport interface IRoundedRectanglePrivate extends IRectanglePrivate {\n}\n\n/**\n * Draws a rectangle with rounded corners.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class RoundedRectangle extends Rectangle {\n\n\tdeclare public _settings: IRoundedRectangleSettings;\n\tdeclare public _privateSettings: IRoundedRectanglePrivate;\n\n\tpublic static className: string = \"RoundedRectangle\";\n\tpublic static classNames: Array<string> = Rectangle.classNames.concat([RoundedRectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"cornerRadiusTL\") || this.isDirty(\"cornerRadiusTR\") || this.isDirty(\"cornerRadiusBR\") || this.isDirty(\"cornerRadiusBL\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tlet width = this.width();\n\t\tlet height = this.height();\n\n\t\tlet w = width;\n\t\tlet h = height;\n\n\t\tlet wSign = w / Math.abs(width);\n\t\tlet hSign = h / Math.abs(height);\n\n\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\n\t\t\tlet minSide = Math.min(w, h) / 2;\n\n\t\t\tlet crtl = $utils.relativeToValue(this.get(\"cornerRadiusTL\", 8), minSide);\n\t\t\tlet crtr = $utils.relativeToValue(this.get(\"cornerRadiusTR\", 8), minSide);\n\t\t\tlet crbr = $utils.relativeToValue(this.get(\"cornerRadiusBR\", 8), minSide);\n\t\t\tlet crbl = $utils.relativeToValue(this.get(\"cornerRadiusBL\", 8), minSide);\n\n\t\t\tlet maxcr = Math.min(Math.abs(w / 2), Math.abs(h / 2));\n\n\t\t\tcrtl = $math.fitToRange(crtl, 0, maxcr);\n\t\t\tcrtr = $math.fitToRange(crtr, 0, maxcr);\n\t\t\tcrbr = $math.fitToRange(crbr, 0, maxcr);\n\t\t\tcrbl = $math.fitToRange(crbl, 0, maxcr);\n\n\t\t\tconst display = this._display;\n\t\t\tdisplay.moveTo(crtl * wSign, 0);\n\t\t\tdisplay.lineTo(w - crtr * wSign, 0);\n\t\t\tif (crtr > 0) {\n\t\t\t\tdisplay.arcTo(w, 0, w, crtr * hSign, crtr);\n\t\t\t}\n\t\t\tdisplay.lineTo(w, h - crbr * hSign);\n\t\t\tif (crbr > 0) {\n\t\t\t\tdisplay.arcTo(w, h, w - crbr * wSign, h, crbr);\n\t\t\t}\n\t\t\tdisplay.lineTo(crbl * wSign, h);\n\t\t\tif (crbl > 0) {\n\t\t\t\tdisplay.arcTo(0, h, 0, h - crbl * hSign, crbl);\n\t\t\t}\n\t\t\tdisplay.lineTo(0, crtl * hSign);\n\t\t\tif (crtl > 0) {\n\t\t\t\tdisplay.arcTo(0, 0, crtl * wSign, 0, crtl);\n\t\t\t}\n\t\t\tdisplay.closePath();\n\t\t}\n\t}\n}\n","import type { Label } from \"../render/Label\";\nimport type { Graphics } from \"../render/Graphics\";\n\nimport { RoundedRectangle } from \"../render/RoundedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IButtonSettings extends IContainerSettings {\n\n\t/**\n\t * A [[Label]] element for the button to show as a label.\n\t */\n\tlabel?: Label;\n\n\t/**\n\t * A [[Graphics]] element for the button to show as icon.\n\t */\n\ticon?: Graphics;\n\n}\n\nexport interface IButtonPrivate extends IContainerPrivate {\n}\n\n/**\n * Draws an interactive button.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/buttons/} for more info\n * @important\n */\nexport class Button extends Container {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"button\"]);\n\n\t\tsuper._afterNew();\n\n\t\tif (!this._settings.background) {\n\t\t\tthis.set(\"background\", RoundedRectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this._settings.themeTags, [\"background\"])\n\t\t\t}));\n\t\t}\n\t}\n\n\tdeclare public _settings: IButtonSettings;\n\tdeclare public _privateSettings: IButtonPrivate;\n\n\tpublic static className: string = \"Button\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Button.className]);\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"icon\")) {\n\t\t\tconst previous = this._prevSettings.icon;\n\t\t\tconst icon = this.get(\"icon\")!;\n\t\t\tif (icon !== previous) {\n\t\t\t\tthis._disposeProperty(\"icon\");\n\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (icon) {\n\t\t\t\t\tthis.children.push(icon);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.icon = icon;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"label\")) {\n\t\t\tconst previous = this._prevSettings.label;\n\t\t\tconst label = this.get(\"label\")!;\n\t\t\tif (label !== previous) {\n\t\t\t\tthis._disposeProperty(\"label\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (label) {\n\t\t\t\t\tthis.children.push(label);\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.label = label;\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { MapChart } from \"./MapChart\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { MultiDisposer } from \"../../core/util/Disposer\";\n\nexport interface IZoomControlSettings extends IContainerSettings {\n\n}\n\nexport interface IZoomControlPrivate extends IContainerPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends Container {\n\n\t/**\n\t * A [[Button]] for zoom in.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly plusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"plus\"] }));\n\n\t/**\n\t * A [[Button]] for zoom out.\n\t *\n\t * @default Button.new()\n\t */\n\tpublic readonly minusButton: Button = this.children.push(Button.new(this._root, { width: 36, height: 36, themeTags: [\"minus\"] }));\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([ZoomControl.className]);\n\n\tprotected _disposer: MultiDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"position\", \"absolute\");\n\n\t\tthis.set(\"layout\", this._root.verticalLayout);\n\n\t\tthis.plusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t\tthis.minusButton.setAll({\n\t\t\ticon: Graphics.new(this._root, { themeTags: [\"icon\"] }),\n\t\t\tlayout: undefined\n\t\t});\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tconst chart = this.getPrivate(\"chart\");\n\t\t\tconst previous = this._prevPrivateSettings.chart;\n\t\t\tif (chart) {\n\t\t\t\tthis._disposer = new MultiDisposer([\n\t\t\t\t\tthis.plusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomIn()\n\t\t\t\t\t}),\n\t\t\t\t\tthis.minusButton.events.on(\"click\", () => {\n\t\t\t\t\t\tchart.zoomOut()\n\t\t\t\t\t})])\n\t\t\t}\n\n\t\t\tif (previous && this._disposer) {\n\t\t\t\tthis._disposer.dispose();\n\t\t\t}\n\t\t}\n\t}\n}\n","\r\n/**\r\n * @ignore\r\n */\r\nexport class Registry {\r\n\t/**\r\n\t * Currently running version of amCharts.\r\n\t */\r\n\treadonly version: string = \"5.2.41\";\r\n\r\n\t/**\r\n\t * List of applied licenses.\r\n\t * @ignore\r\n\t */\r\n\tlicenses: String[] = [];\r\n\r\n\t/**\r\n\t * Entities that have their `id` setting set.\r\n\t */\r\n\tentitiesById: { [index: string]: any } = {};\r\n\r\n\t/**\r\n\t * All created [[Root]] elements.\r\n\t */\r\n\trootElements: any[] = [];\r\n\r\n}\r\n\r\n/**\r\n\t* @ignore\r\n */\r\nexport const registry = new Registry();\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am5.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\tregistry.licenses.push(license);\r\n}\r\n\r\n\r\n/**\r\n * Disposes all [[Root]] elements.\r\n */\r\nexport function disposeAllRootElements(): void {\r\n\tlet root;\r\n\twhile(root = registry.rootElements.pop()) {\r\n\t\troot.dispose();\r\n\t}\r\n}\r\n","/** @ignore *//** */\n\nimport type { IDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $utils from \"./Utils\";\n\n/**\n * @ignore\n */\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n/**\n * @ignore\n */\ndeclare const ResizeObserver: any;\n\n/**\n * @ignore\n */\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"border-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ClientBounds {\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttop: number,\n\tbottom: number,\n\tx: number,\n\ty: number\n}\n\n\n/**\n * @ignore\n */\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | null = null;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect | ClientBounds }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._timer === null) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (this._targets.length === 0) {\n\t\t\t\t\tthis._timer = null;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\t// We start off with fake bounds so that sensor always kicks in\n\t\tlet size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tif (this._timer !== null) {\n\t\t\t\tcancelAnimationFrame(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * @ignore\n */\nlet observer: Sensor | null = null;\n\n/**\n * @ignore\n */\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\n/**\n * @ignore\n */\nexport class ResizeSensor implements IDisposer {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _listener: IDisposer;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\n\t\t// This is needed because we need to know when the window is zoomed\n\t\tthis._listener = $utils.onZoom(callback);\n\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t\tthis._listener.dispose();\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n}\n","import type { Color } from \"./Color\"\n\nimport { Entity, IEntitySettings } from \"./Entity\"\n\n\nexport interface IInterfaceColorsSettings extends IEntitySettings {\n\n\t/**\n\t * Used for generic outlines.\n\t */\n\tstroke?: Color,\n\n\t/**\n\t * Used for generic fills.\n\t */\n\tfill?: Color,\n\n\t/**\n\t * Primary button fill color.\n\t */\n\tprimaryButton?: Color,\n\n\t/**\n\t * Primary button fill color on hover.\n\t */\n\tprimaryButtonHover?: Color,\n\n\t/**\n\t * Primary button fill color when pressing down on it.\n\t */\n\tprimaryButtonDown?: Color,\n\n\t/**\n\t * Primary button fill color when it is set as active.\n\t */\n\tprimaryButtonActive?: Color,\n\n\t/**\n\t * Primary button text color.\n\t */\n\tprimaryButtonText?: Color,\n\n\t/**\n\t * Primary button stroke (outline) color.\n\t */\n\tprimaryButtonStroke?: Color,\n\n\t/**\n\t * Secondary button fill color.\n\t */\n\tsecondaryButton?: Color,\n\n\t/**\n\t * Secondary button fill color on hover.\n\t */\n\tsecondaryButtonHover?: Color,\n\n\t/**\n\t * Secondary button fill color when pressing down on it.\n\t */\n\tsecondaryButtonDown?: Color,\n\n\t/**\n\t * Secondary button fill color when it is set as active.\n\t */\n\tsecondaryButtonActive?: Color,\n\n\t/**\n\t * Secondary button text color.\n\t */\n\tsecondaryButtonText?: Color,\n\n\t/**\n\t * Secondary button stroke (outline) color.\n\t */\n\tsecondaryButtonStroke?: Color,\n\n\t/**\n\t * Grid color.\n\t */\n\tgrid?: Color,\n\n\t/**\n\t * Chart background color.\n\t */\n\tbackground?: Color,\n\n\t/**\n\t * Alternative background, for elements that need to contrast with primary\n\t * background.\n\t */\n\talternativeBackground?: Color,\n\n\t/**\n\t * Label text color.\n\t */\n\ttext?: Color,\n\n\t/**\n\t * Alternative text color, used for inverted (dark) backgrounds.\n\t * @type {[type]}\n\t */\n\talternativeText?: Color,\n\n\t/**\n\t * Color for disabled elements.\n\t */\n\tdisabled?: Color,\n\n\t/**\n\t * Color to indicate positive value.\n\t */\n\tpositive?: Color,\n\n\t/**\n\t * Color to indicate negative value.\n\t */\n\tnegative?: Color\n\n}\n\n\n/**\n * Presets for common UI elements.\n */\nexport class InterfaceColors extends Entity {\n\tpublic static className: string = \"InterfaceColors\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([InterfaceColors.className]);\n\n\tdeclare public _settings: IInterfaceColorsSettings;\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\nimport * as $math from \"../util/Math\";\n\nexport interface IPointedRectangleSettings extends IGraphicsSettings {\n\n\t/**\n\t * A width of the pinter's (stem's) thick end (base) in pixels.\n\t */\n\tpointerBaseWidth?: number;\n\n\t/**\n\t * A length of the pinter (stem) in pixels.\n\t */\n\tpointerLength?: number;\n\n\t/**\n\t * X coordinate the shape is pointing to.\n\t */\n\tpointerX?: number;\n\n\t/**\n\t * Y coordinate the shape is pointing to.\n\t */\n\tpointerY?: number;\n\n\t/**\n\t * Corner radius in pixels.\n\t */\n\tcornerRadius?: number;\n}\n\nexport interface IPointedRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle with a pointer.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class PointedRectangle extends Graphics {\n\n\tdeclare public _settings: IPointedRectangleSettings;\n\tdeclare public _privateSettings: IPointedRectanglePrivate;\n\n\tpublic static className: string = \"PointedRectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([PointedRectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pointerBaseWidth\") || this.isDirty(\"cornerRadius\") || this.isDirty(\"pointerLength\") || this.isDirty(\"pointerX\") || this.isDirty(\"pointerY\") || this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet cr = this.get(\"cornerRadius\", 8);\n\t\t\t\tcr = $math.fitToRange(cr, 0, Math.min(w / 2, h / 2));\n\n\t\t\t\tlet x = this.get(\"pointerX\", 0);\n\t\t\t\tlet y = this.get(\"pointerY\", 0);\n\t\t\t\tlet bwh = this.get(\"pointerBaseWidth\", 15) / 2;\n\n\t\t\t\t// corner coordinates\n\t\t\t\t// top left\n\t\t\t\tlet xtl = 0;\n\t\t\t\tlet ytl = 0;\n\t\t\t\t// top right\n\t\t\t\tlet xtr = w;\n\t\t\t\tlet ytr = 0;\n\t\t\t\t// bottom right\n\t\t\t\tlet xbr = w;\n\t\t\t\tlet ybr = h;\n\t\t\t\t// bottom left\n\t\t\t\tlet xbl = 0;\n\t\t\t\tlet ybl = h;\n\n\t\t\t\t// find stem base side: http://$math.stackexchange.com/questions/274712/calculate-on-which-side-of-straign-line-is-dot-located\n\t\t\t\t// d=(x−x1)(y2−y1)−(y−y1)(x2−x1)\n\t\t\t\tlet d1 = (x - xtl) * (ybr - ytl) - (y - ytl) * (xbr - xtl);\n\t\t\t\tlet d2 = (x - xbl) * (ytr - ybl) - (y - ybl) * (xtr - xbl);\n\n\t\t\t\tconst display = this._display;\n\t\t\t\t// top\n\t\t\t\tdisplay.moveTo(cr, 0);\n\n\t\t\t\tif (d1 > 0 && d2 > 0) {\n\t\t\t\t\tlet stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n\t\t\t\t\ty = $math.fitToRange(y, -Infinity, 0);\n\n\t\t\t\t\tdisplay.lineTo(stemX - bwh, 0);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(stemX + bwh, 0);\n\t\t\t\t}\n\n\t\t\t\tdisplay.lineTo(w - cr, 0);\n\t\t\t\tdisplay.arcTo(w, 0, w, cr, cr);\n\n\t\t\t\t// right\n\t\t\t\tif (d1 > 0 && d2 < 0) {\n\t\t\t\t\tlet stemY = Math.round($math.fitToRange(y, cr + bwh, h - bwh - cr));\n\t\t\t\t\tx = $math.fitToRange(x, w, Infinity);\n\t\t\t\t\tdisplay.lineTo(w, cr);\n\t\t\t\t\tdisplay.lineTo(w, Math.max(stemY - bwh, cr));\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(w, stemY + bwh);\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(w, h - cr);\n\t\t\t\tdisplay.arcTo(w, h, w - cr, h, cr);\n\n\t\t\t\t// bottom\n\t\t\t\tif (d1 < 0 && d2 < 0) {\n\t\t\t\t\tlet stemX = Math.round($math.fitToRange(x, cr + bwh, w - bwh - cr));\n\t\t\t\t\ty = $math.fitToRange(y, h, Infinity);\n\n\t\t\t\t\tdisplay.lineTo(w - cr, h);\n\t\t\t\t\tdisplay.lineTo(stemX + bwh, h);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(stemX - bwh, h);\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(cr, h)\n\t\t\t\tdisplay.arcTo(0, h, 0, h - cr, cr);\n\n\n\t\t\t\t// left\n\t\t\t\tif (d1 < 0 && d2 > 0) {\n\t\t\t\t\tlet stemY = Math.round($math.fitToRange(y, cr + bwh, h - cr - bwh));\n\t\t\t\t\tx = $math.fitToRange(x, -Infinity, 0);\n\t\t\t\t\tdisplay.lineTo(0, h - cr);\n\t\t\t\t\tdisplay.lineTo(0, stemY + bwh);\n\t\t\t\t\tdisplay.lineTo(x, y);\n\t\t\t\t\tdisplay.lineTo(0, Math.max(stemY - bwh, cr));\n\t\t\t\t}\n\t\t\t\tdisplay.lineTo(0, cr);\n\t\t\t\tdisplay.arcTo(0, 0, cr, 0, cr);\n\t\t\t\tdisplay.closePath();\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { IBounds } from \"../util/IBounds\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Time } from \"../util/Animation\";\nimport type { Sprite } from \"../render/Sprite\";\n\nimport { MultiDisposer, IDisposer } from \"../util/Disposer\";\nimport { Label } from \"../render/Label\";\nimport { PointedRectangle } from \"../render/PointedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\nimport { Percent } from \"../util/Percent\";\nimport { Color } from \"../util/Color\";\n\nimport * as $math from \"../util/Math\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\n//import * as $utils from \"../util/Utils\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport type { Root } from \"../Root\";\nimport type { Template } from \"../util/Template\";\nimport type { Entity } from \"../util/Entity\";\n\n\nexport interface ITooltipSettings extends IContainerSettings {\n\n\t/**\n\t * Text to use for tooltip's label.\n\t */\n\tlabelText?: string\n\n\t/**\n\t * HTML content to use for tooltip's label.\n\t *\n\t * @since 5.2.11\n\t */\n\tlabelHTML?: string\n\n\t/**\n\t * A direction of the tooltip pointer.\n\t *\n\t * https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Orientation\n\t */\n\tpointerOrientation?: \"left\" | \"right\" | \"up\" | \"down\" | \"vertical\" | \"horizontal\";\n\n\t/**\n\t * If set to `true` will use the same `fill` color for its background as\n\t * its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `fill` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetLabelFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `stroke` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetStrokeFromSprite?: boolean;\n\n\t/**\n\t * Scree bounds to constring tooltip within.\n\t */\n\tbounds?: IBounds;\n\n\t/**\n\t * If set to `true` tooltip will adjust its text color for better visibility\n\t * on its background.\n\t *\n\t * @default true\n\t */\n\tautoTextColor?: boolean;\n\n\t/**\n\t * Screen coordinates the tooltip show point to.\n\t */\n\tpointTo?: IPoint;\n\n\t/**\n\t * Duration in milliseconds for tooltip position change, e.g. when tooltip\n\t * is jumping from one target to another.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function for tooltip animation.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\t/**\n\t * A target element tooltip is shown fow.\n\t */\n\ttooltipTarget?: Sprite;\n\n\t/**\n\t * If set to `true`, tooltip's target element will considered to be hovered\n\t * when mouse pointer is over tooltip itself.\n\t *\n\t * @since 5.2.14\n\t */\n\tkeepTargetHover?: boolean;\n\n}\n\nexport interface ITooltipPrivate extends IContainerPrivate {\n}\n\n/**\n * Creates a tooltip.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\n * @important\n */\nexport class Tooltip extends Container {\n\n\tprotected _arrangeDisposer: MultiDisposer | undefined;\n\n\tpublic _fx: number = 0;\n\tpublic _fy: number = 0;\n\n\tdeclare public _settings: ITooltipSettings;\n\tdeclare public _privateSettings: ITooltipPrivate;\n\n\tprotected _label!: Label;\n\tpublic static className: string = \"Tooltip\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Tooltip.className]);\n\n\tprotected _fillDp: IDisposer | undefined;\n\tprotected _strokeDp: IDisposer | undefined;\n\tprotected _labelDp: IDisposer | undefined;\n\n\tprotected _w: number = 0;\n\tprotected _h: number = 0;\n\n\tprotected _keepHoverDp: MultiDisposer | undefined;\n\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(root, settings, isReal, templates);\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"background\", PointedRectangle.new(this._root, {\n\t\t\tthemeTags: [\"tooltip\", \"background\"]\n\t\t}));\n\n\t\tthis._label = this.children.push(Label.new(this._root, {}));\n\n\t\tthis._disposers.push(this._label.events.on(\"boundschanged\", () => {\n\t\t\tthis._updateBackground();\n\t\t}))\n\n\t\tthis.on(\"bounds\", () => {\n\t\t\tthis._updateBackground();\n\t\t})\n\n\t\tthis._updateTextColor();\n\n\t\tthis._root.tooltipContainer.children.push(this);\n\t\tthis.hide(0);\n\n\t\tthis._root._tooltips.push(this);\n\t}\n\n\t/**\n\t * A [[Label]] element for the tooltip.\n\t *\n\t * @readonly\n\t * @return Label\n\t */\n\tpublic get label(): Label {\n\t\treturn this._label;\n\t}\n\n\t/**\n\t * Permanently disposes the tooltip.\n\t */\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\t$array.remove(this._root._tooltips, this);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tconst labelText = this.get(\"labelText\");\n\t\tif (labelText != null) {\n\t\t\tthis.label.set(\"text\", this.get(\"labelText\"));\n\t\t}\n\t\tconst labelHTML = this.get(\"labelHTML\");\n\t\tif (labelHTML != null) {\n\t\t\tthis.label.set(\"html\", this.get(\"labelHTML\"));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pointTo\")) {\n\t\t\t// can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n\t\t\tthis._updateBackground();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipTarget\")) {\n\t\t\tthis.updateBackgroundColor();\n\t\t}\n\n\t\tif (this.isDirty(\"keepTargetHover\")) {\n\t\t\tconst keephover = this.get(\"keepTargetHover\");\n\t\t\tif (keephover) {\n\t\t\t\tconst bg = this.get(\"background\")!;\n\t\t\t\tthis._keepHoverDp = new MultiDisposer([\n\t\t\t\t\tbg.events.on(\"pointerover\", (_ev) => {\n\t\t\t\t\t\tlet target = this.get(\"tooltipTarget\");\n\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\tif (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n\t\t\t\t\t\t\t\ttarget = target.parent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.hover();\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\t\t\t\t\tbg.events.on(\"pointerout\", (_ev) => {\n\t\t\t\t\t\tlet target = this.get(\"tooltipTarget\");\n\t\t\t\t\t\tif (target) {\n\t\t\t\t\t\t\tif (target.parent && target.parent.getPrivate(\"tooltipTarget\") == target) {\n\t\t\t\t\t\t\t\ttarget = target.parent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget.unhover();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._keepHoverDp) {\n\t\t\t\t\tthis._keepHoverDp.dispose();\n\t\t\t\t\tthis._keepHoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _onShow() {\n\t\tsuper._onShow();\n\t\tthis.updateBackgroundColor();\n\t}\n\n\n\tpublic updateBackgroundColor() {\n\t\tlet tooltipTarget = this.get(\"tooltipTarget\");\n\t\tconst background = this.get(\"background\");\n\t\tlet fill: Color | undefined;\n\t\tlet stroke: Color | undefined;\n\n\n\t\tif (tooltipTarget && background) {\n\n\t\t\tfill = tooltipTarget.get(\"fill\" as any);\n\t\t\tstroke = tooltipTarget.get(\"stroke\" as any);\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = stroke;\n\t\t\t}\n\n\t\t\tif (this.get(\"getFillFromSprite\")) {\n\n\t\t\t\tif (this._fillDp) {\n\t\t\t\t\tthis._fillDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._fillDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t\t\tthis._updateTextColor(fill);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (this.get(\"getStrokeFromSprite\")) {\n\n\t\t\t\tif (this._strokeDp) {\n\t\t\t\t\tthis._strokeDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._strokeDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (this.get(\"getLabelFillFromSprite\")) {\n\n\t\t\t\tif (this._labelDp) {\n\t\t\t\t\tthis._labelDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._labelDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tthis._updateTextColor(fill);\n\t}\n\n\n\tprotected _updateTextColor(fill?: Color | Pattern) {\n\t\tif (this.get(\"autoTextColor\")) {\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this.get(\"background\")!.get(\"fill\") as Color;\n\t\t\t}\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this._root.interfaceColors.get(\"background\");\n\t\t\t}\n\n\t\t\tif (fill instanceof Color) {\n\t\t\t\tthis.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis.label._setDataItem(dataItem);\n\t}\n\n\n\tprotected _updateBackground() {\n\t\tsuper.updateBackground();\n\t\tconst parent = this._root.container;\n\n\t\tif (parent) {\n\n\t\t\tlet cw = 0.5;\n\t\t\tlet ch = 0.5;\n\n\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\tif (centerX instanceof Percent) {\n\t\t\t\tcw = centerX.value;\n\t\t\t}\n\n\t\t\tlet centerY = this.get(\"centerY\");\n\t\t\tif (centerY instanceof Percent) {\n\t\t\t\tch = centerY.value;\n\t\t\t}\n\n\t\t\tlet parentW = parent.width();\n\t\t\tlet parentH = parent.height();\n\n\t\t\tlet tooltipContainer = this.parent;\n\t\t\tlet xx = 0;\n\t\t\tlet yy = 0;\n\t\t\tif (tooltipContainer) {\n\t\t\t\txx = tooltipContainer.x();\n\t\t\t\tyy = tooltipContainer.y();\n\n\t\t\t\tconst layerMargin = tooltipContainer.get(\"layerMargin\");\n\t\t\t\tif (layerMargin) {\n\t\t\t\t\txx += layerMargin.left || 0;\n\t\t\t\t\tyy += layerMargin.top || 0;\n\t\t\t\t\tparentW += (layerMargin.left || 0) + (layerMargin.right || 0);\n\t\t\t\t\tparentH += (layerMargin.top || 0) + (layerMargin.bottom || 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bounds = this.get(\"bounds\", { left: -xx, top: -yy, right: parentW - xx, bottom: parentH - yy });\n\n\t\t\tthis._updateBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\t// use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n\t\t\tif (w === 0) {\n\t\t\t\tw = this._w;\n\t\t\t}\n\n\t\t\tif (h === 0) {\n\t\t\t\th = this._h;\n\t\t\t}\n\n\t\t\tlet pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\n\t\t\tlet x = pointTo.x;\n\t\t\tlet y = pointTo.y;\n\n\t\t\tlet pointerOrientation = this.get(\"pointerOrientation\");\n\n\t\t\tlet background = this.get(\"background\");\n\t\t\tlet pointerLength = 0;\n\t\t\tlet bgStrokeSizeY = 0;\n\t\t\tlet bgStrokeSizeX = 0;\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tpointerLength = background.get(\"pointerLength\", 0);\n\t\t\t\tbgStrokeSizeY = background.get(\"strokeWidth\", 0) / 2;\n\t\t\t\tbgStrokeSizeX = bgStrokeSizeY;\n\t\t\t}\n\n\t\t\tlet pointerX = 0;\n\t\t\tlet pointerY = 0;\n\n\t\t\tlet boundsW = bounds.right - bounds.left;\n\t\t\tlet boundsH = bounds.bottom - bounds.top;\n\n\n\n\t\t\t// horizontal\n\t\t\tif (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n\t\t\t\tbgStrokeSizeY = 0;\n\t\t\t\tif (pointerOrientation == \"horizontal\") {\n\t\t\t\t\tif (x > bounds.left + boundsW / 2) {\n\t\t\t\t\t\tx -= (w * (1 - cw) + pointerLength);\n\t\t\t\t\t\tbgStrokeSizeX *= -1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tx += (w * cw + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"left\") {\n\t\t\t\t\tx += (w * (1 - cw) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx -= (w * cw + pointerLength);\n\t\t\t\t\tbgStrokeSizeX *= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// vertical pointer\n\t\t\telse {\n\t\t\t\tbgStrokeSizeX = 0;\n\t\t\t\tif (pointerOrientation == \"vertical\") {\n\t\t\t\t\tif (y > bounds.top + h / 2 + pointerLength) {\n\t\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\t\tbgStrokeSizeY *= -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"down\") {\n\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\tbgStrokeSizeY *= -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw)) + bgStrokeSizeX;\n\t\t\ty = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch)) - bgStrokeSizeY;\n\n\t\t\tpointerX = pointTo.x - x + w * cw + bgStrokeSizeX;\n\t\t\tpointerY = pointTo.y - y + h * ch - bgStrokeSizeY;\n\n\t\t\tthis._fx = x;\n\t\t\tthis._fy = y;\n\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\n\n\t\t\tif (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n\t\t\t\tconst animationEasing = this.get(\"animationEasing\");\n\t\t\t\tthis.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\n\t\t\t\tthis.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"x\", x);\n\t\t\t\tthis.set(\"y\", y);\n\t\t\t}\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tbackground.set(\"pointerX\", pointerX);\n\t\t\t\tbackground.set(\"pointerY\", pointerY);\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\tthis._w = w;\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\tthis._h = h;\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Language } from \"./Language\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport { TextFormatter } from \"./TextFormatter\";\n\nimport * as $object from \"./Object\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nexport interface INumberSuffix {\n\tnumber: number;\n\tsuffix: string;\n}\n\nexport interface INumberFormatterSettings extends IEntitySettings {\n\n\t/**\n\t * Number format to be used when formatting numbers.\n\t *\n\t * @default \"#,###.#####\"\n\t */\n\tnumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * A threshold value for negative numbers.\n\t *\n\t * @default 0\n\t */\n\tnegativeBase?: number;\n\n\t/**\n\t * Prefixes and thresholds to group big numbers into, e.g. 1M.\n\t *\n\t * Used in conjunction with `a` modifier of the number format.\n\t */\n\tbigNumberPrefixes?: INumberSuffix[];\n\n\t/**\n\t * Prefixes and thresholds to group small numbers into, e.g. 1m.\n\t *\n\t * Used in conjunction with `a` modifier of the number format.\n\t */\n\tsmallNumberPrefixes?: INumberSuffix[];\n\n\t/**\n\t * All numbers below this value are considered small.\n\t *\n\t * @default 1\n\t */\n\tsmallNumberThreshold?: number;\n\n\t/**\n\t * Prefixes to and thresholds to use when grouping data size numbers, e.g. 1MB.\n\t *\n\t * Used in conjunction with `b` modifier of the number format.\n\t */\n\tbytePrefixes?: INumberSuffix[];\n\n\t/**\n\t * Indicates which fields in data should be considered numeric.\n\t *\n\t * It is used when formatting data placeholder values.\n\t */\n\tnumericFields?: string[];\n\n\t/**\n\t * Locales if you are using date formats in `Intl.NumberFormatOptions` syntax.\n\t *\n\t * @see (@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat) about using Intl for number formatting\n\t * @param value Locales\n\t */\n\tintlLocales?: string;\n\n}\n\nexport interface INumberFormatterPrivate extends IEntityPrivate {\n}\n\n/**\n * Number formatter\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\n * @important\n */\nexport class NumberFormatter extends Entity {\n\tdeclare public _settings: INumberFormatterSettings;\n\tdeclare public _privateSettings: INumberFormatterPrivate;\n\n\tprotected _setDefaults() {\n\t\t// Defaults\n\t\tthis._setDefault(\"negativeBase\", 0);\n\t\tthis._setDefault(\"numberFormat\", \"#,###.#####\");\n\t\tthis._setDefault(\"smallNumberThreshold\", 1.00);\n\n\t\tconst bns = \"_big_number_suffix_\";\n\t\tconst sns = \"_small_number_suffix_\";\n\t\tconst bs = \"_byte_suffix_\";\n\n\t\tthis._setDefault(\"bigNumberPrefixes\", [\n\t\t\t{ \"number\": 1e+3, \"suffix\": this._t(bns + \"3\") },\n\t\t\t{ \"number\": 1e+6, \"suffix\": this._t(bns + \"6\") },\n\t\t\t{ \"number\": 1e+9, \"suffix\": this._t(bns + \"9\") },\n\t\t\t{ \"number\": 1e+12, \"suffix\": this._t(bns + \"12\") },\n\t\t\t{ \"number\": 1e+15, \"suffix\": this._t(bns + \"15\") },\n\t\t\t{ \"number\": 1e+18, \"suffix\": this._t(bns + \"18\") },\n\t\t\t{ \"number\": 1e+21, \"suffix\": this._t(bns + \"21\") },\n\t\t\t{ \"number\": 1e+24, \"suffix\": this._t(bns + \"24\") }\n\t\t]);\n\n\t\tthis._setDefault(\"smallNumberPrefixes\", [\n\t\t\t{ \"number\": 1e-24, \"suffix\": this._t(sns + \"24\") },\n\t\t\t{ \"number\": 1e-21, \"suffix\": this._t(sns + \"21\") },\n\t\t\t{ \"number\": 1e-18, \"suffix\": this._t(sns + \"18\") },\n\t\t\t{ \"number\": 1e-15, \"suffix\": this._t(sns + \"15\") },\n\t\t\t{ \"number\": 1e-12, \"suffix\": this._t(sns + \"12\") },\n\t\t\t{ \"number\": 1e-9, \"suffix\": this._t(sns + \"9\") },\n\t\t\t{ \"number\": 1e-6, \"suffix\": this._t(sns + \"6\") },\n\t\t\t{ \"number\": 1e-3, \"suffix\": this._t(sns + \"3\") }\n\t\t]);\n\n\t\tthis._setDefault(\"bytePrefixes\", [\n\t\t\t{ \"number\": 1, suffix: this._t(bs + \"B\") },\n\t\t\t{ \"number\": 1024, suffix: this._t(bs + \"KB\") },\n\t\t\t{ \"number\": 1048576, suffix: this._t(bs + \"MB\") },\n\t\t\t{ \"number\": 1073741824, suffix: this._t(bs + \"GB\") },\n\t\t\t{ \"number\": 1099511627776, suffix: this._t(bs + \"TB\") },\n\t\t\t{ \"number\": 1125899906842624, suffix: this._t(bs + \"PB\") }\n\t\t]);\n\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t}\n\n\t/**\n\t * Formats the number according to specific format.\n\t *\n\t * @param value   Value to format\n\t * @param format  Format to apply\n\t * @return Formatted number\n\t */\n\tpublic format(value: number | string, format?: string | Intl.NumberFormatOptions, precision?: number): string {\n\n\t\t// no format passed in or \"Number\"\n\t\tif (format == null || ($type.isString(format) && format.toLowerCase() === \"number\")) {\n\t\t\tformat = this.get(\"numberFormat\", \"\");\n\t\t}\n\n\t\t// Init return value\n\t\tlet formatted;\n\n\t\t// Cast to number just in case\n\t\t// TODO: maybe use better casting\n\t\tlet source: number = Number(value);\n\n\t\t// Is it a built-in format or Intl.NumberFormatOptions\n\t\tif ($type.isObject(format)) {\n\t\t\ttry {\n\t\t\t\tif (this.get(\"intlLocales\")) {\n\t\t\t\t\treturn new Intl.NumberFormat(this.get(\"intlLocales\"), <Intl.NumberFormatOptions>format).format(source);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Intl.NumberFormat(undefined, <Intl.NumberFormatOptions>format).format(source);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn \"Invalid\";\n\t\t\t}\n\n\t\t}\n\t\telse {\n\n\t\t\t// Clean format\n\t\t\tformat = $utils.cleanFormat(format!);\n\n\t\t\t// Get format info (it will also deal with parser caching)\n\t\t\tlet info = this.parseFormat(format, this._root.language);\n\n\n\t\t\t// format and replace the number\n\t\t\tlet details;\n\t\t\tif (source > this.get(\"negativeBase\")) {\n\t\t\t\tdetails = info.positive;\n\t\t\t}\n\t\t\telse if (source < this.get(\"negativeBase\")) {\n\t\t\t\tdetails = info.negative;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdetails = info.zero;\n\t\t\t}\n\n\t\t\t// Adjust precision\n\t\t\tif (precision != null && !details.mod) {\n\t\t\t\tdetails = $object.copy(details);\n\t\t\t\tdetails.decimals.active = source == 0 ? 0 : precision;\n\t\t\t}\n\n\t\t\t// Format\n\t\t\tformatted = details.template.split($type.PLACEHOLDER).join(this.applyFormat(source, details));\n\n\t\t}\n\n\t\treturn formatted;\n\t}\n\n\t/**\n\t * Parses supplied format into structured object which can be used to format\n\t * the number.\n\t *\n\t * @param format Format string, i.e. \"#,###.00\"\n\t * @param language Language\n\t * @ignore\n\t */\n\tprotected parseFormat(format: string, language: Language): any {\n\n\t\t// Check cache\n\t\t// TODO\n\t\t// let cached = this.getCache(format);\n\t\t// if (cached != null) {\n\t\t// \treturn cached;\n\t\t// }\n\n\t\tconst thousandSeparator = language.translateEmpty(\"_thousandSeparator\");\n\t\tconst decimalSeparator = language.translateEmpty(\"_decimalSeparator\")\n\n\t\t// init format parse info holder\n\t\tlet info: any = {\n\t\t\t\"positive\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t},\n\t\t\t\"negative\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t},\n\t\t\t\"zero\": {\n\t\t\t\t\"thousands\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"interval\": -1,\n\t\t\t\t\t\"separator\": thousandSeparator\n\t\t\t\t},\n\t\t\t\t\"decimals\": {\n\t\t\t\t\t\"active\": -1,\n\t\t\t\t\t\"passive\": -1,\n\t\t\t\t\t\"separator\": decimalSeparator\n\t\t\t\t},\n\t\t\t\t\"template\": \"\",\n\t\t\t\t\"source\": \"\",\n\t\t\t\t\"parsed\": false\n\t\t\t}\n\t\t};\n\n\t\t// Escape double vertical bars (that mean display one vertical bar)\n\t\tformat = format.replace(\"||\", $type.PLACEHOLDER2);\n\n\t\t// Split it up and deal with different formats\n\t\tlet parts = format.split(\"|\");\n\t\tinfo.positive.source = parts[0];\n\n\t\tif (typeof parts[2] === \"undefined\") {\n\t\t\tinfo.zero = info.positive;\n\t\t}\n\t\telse {\n\t\t\tinfo.zero.source = parts[2];\n\t\t}\n\n\t\tif (typeof parts[1] === \"undefined\") {\n\t\t\tinfo.negative = info.positive;\n\t\t}\n\t\telse {\n\t\t\tinfo.negative.source = parts[1];\n\t\t}\n\n\t\t// Parse each\n\t\t$object.each(info, (_part, item) => {\n\t\t\t// Already parsed\n\t\t\tif (item.parsed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Check cached\n\t\t\t// TODO\n\t\t\t// if (typeof this.getCache(item.source) !== \"undefined\") {\n\t\t\t// \tinfo[part] = this.getCache(item.source);\n\t\t\t// \treturn;\n\t\t\t// }\n\n\t\t\t// Begin parsing\n\t\t\tlet partFormat = item.source;\n\n\t\t\t// Just \"Number\"?\n\t\t\tif (partFormat.toLowerCase() === \"number\") {\n\t\t\t\tpartFormat = this.get(\"numberFormat\", \"#,###.#####\");\n\t\t\t}\n\n\t\t\t// Let TextFormatter split into chunks\n\t\t\tlet chunks = TextFormatter.chunk(partFormat, true);\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\t\tlet chunk = chunks[i];\n\n\t\t\t\t// replace back double vertical bar\n\t\t\t\tchunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\n\n\t\t\t\tif (chunk.type === \"value\") {\n\t\t\t\t\t// Parse format\n\n\t\t\t\t\t// Look for codes\n\t\t\t\t\tlet matches: string[] | null = chunk.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);\n\n\t\t\t\t\tif (matches) {\n\t\t\t\t\t\tif (matches === null || matches[0] === \"\") {\n\t\t\t\t\t\t\t// no codes here - assume string\n\t\t\t\t\t\t\t// nothing to do here\n\t\t\t\t\t\t\titem.template += chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t// look for the format modifiers at the end\n\t\t\t\t\t\t\tlet mods: string[] | null = matches[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);\n\n\t\t\t\t\t\t\tif (mods) {\n\t\t\t\t\t\t\t\titem.mod = mods[0].toLowerCase();\n\t\t\t\t\t\t\t\titem.modSpacing = matches[0].match(/[ ]{1}[abespABESP%‰!]{1}$/) ? true : false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// break the format up\n\t\t\t\t\t\t\tlet a = matches[0].split(\".\");\n\n\t\t\t\t\t\t\t// Deal with thousands\n\t\t\t\t\t\t\tif (a[0] === \"\") {\n\t\t\t\t\t\t\t\t// No directives for thousands\n\t\t\t\t\t\t\t\t// Leave default settings (no formatting)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Counts\n\t\t\t\t\t\t\t\titem.thousands.active = (a[0].match(/0/g) || []).length;\n\t\t\t\t\t\t\t\titem.thousands.passive = (a[0].match(/\\#/g) || []).length + item.thousands.active;\n\n\t\t\t\t\t\t\t\t// Separator interval\n\t\t\t\t\t\t\t\tlet b = a[0].split(\",\");\n\t\t\t\t\t\t\t\tif (b.length === 1) {\n\t\t\t\t\t\t\t\t\t// No thousands separators\n\t\t\t\t\t\t\t\t\t// Do nothing\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// Use length fo the last chunk as thousands length\n\t\t\t\t\t\t\t\t\titem.thousands.interval = (b.pop() || \"\").length;\n\n\t\t\t\t\t\t\t\t\tif (item.thousands.interval === 0) {\n\t\t\t\t\t\t\t\t\t\titem.thousands.interval = -1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Deal with decimals\n\t\t\t\t\t\t\tif (typeof (a[1]) === \"undefined\") {\n\t\t\t\t\t\t\t\t// No directives for decimals\n\t\t\t\t\t\t\t\t// Leave at defaults (no formatting)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// Counts\n\t\t\t\t\t\t\t\titem.decimals.active = (a[1].match(/0/g) || []).length;\n\t\t\t\t\t\t\t\titem.decimals.passive = (a[1].match(/\\#/g) || []).length + item.decimals.active;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Add special code to template\n\t\t\t\t\t\t\titem.template += chunk.text.split(matches[0]).join($type.PLACEHOLDER);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Quoted string - take it as it is\n\t\t\t\t\titem.template += chunk.text;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply style formatting\n\t\t\t//item.template = getTextFormatter().format(item.template, this.outputFormat);\n\n\t\t\t// Save cache\n\t\t\t// TODO\n\t\t\t//this.setCache(item.source, item);\n\n\t\t\t// Mark this as parsed\n\t\t\titem.parsed = true;\n\n\t\t});\n\n\t\t// Save cache (the whole thing)\n\t\t// TODO\n\t\t//this.setCache(format, info);\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Applies parsed format to a numeric value.\n\t *\n\t * @param value    Value\n\t * @param details  Parsed format as returned by parseFormat()\n\t * @return Formatted number\n\t * @ignore\n\t */\n\tprotected applyFormat(value: number, details: any): string {\n\n\t\t// Use absolute values\n\t\tlet negative: boolean = value < 0;\n\t\tvalue = Math.abs(value);\n\n\t\t// Recalculate according to modifier\n\t\tlet prefix: string = \"\", suffix: string = \"\";\n\t\tlet mods: string[] = details.mod ? details.mod.split(\"\") : [];\n\t\tif (mods.indexOf(\"b\") !== -1) {\n\t\t\tlet a = this.applyPrefix(value, this.get(\"bytePrefixes\")!, mods.indexOf(\"!\") !== -1);\n\t\t\tvalue = a[0];\n\t\t\tprefix = a[1];\n\t\t\tsuffix = a[2];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"a\") !== -1) {\n\t\t\tlet a = this.applyPrefix(value, value < this.get(\"smallNumberThreshold\")! ? this.get(\"smallNumberPrefixes\")! : this.get(\"bigNumberPrefixes\")!, mods.indexOf(\"!\") !== -1);\n\t\t\tvalue = a[0];\n\t\t\tprefix = a[1];\n\t\t\tsuffix = a[2];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"p\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\n\t\t\t//value *= 100;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tprefix = this._root.language.translate(\"_percentPrefix\");\n\t\t\tsuffix = this._root.language.translate(\"_percentSuffix\");\n\t\t\tif (prefix == \"\" && suffix == \"\") {\n\t\t\t\tsuffix = \"%\";\n\t\t\t}\n\t\t}\n\t\telse if (mods.indexOf(\"%\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 2, 21);\n\t\t\tvalue *= 100;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tsuffix = \"%\";\n\t\t}\n\t\telse if (mods.indexOf(\"‰\") !== -1) {\n\t\t\tlet ol = Math.min(value.toString().length + 3, 21);\n\t\t\tvalue *= 1000;\n\t\t\tvalue = parseFloat(value.toPrecision(ol));\n\t\t\tsuffix = \"‰\";\n\t\t}\n\n\t\t// Round to passive\n\t\tif (mods.indexOf(\"e\") !== -1) {\n\t\t\t// convert the value to exponential\n\t\t\tlet exp: string[];\n\t\t\tif (details.decimals.passive >= 0) {\n\t\t\t\texp = value.toExponential(details.decimals.passive).split(\"e\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\texp = value.toExponential().split(\"e\");\n\t\t\t}\n\t\t\tvalue = Number(exp[0]);\n\t\t\tsuffix = \"e\" + exp[1];\n\t\t\tif (details.modSpacing) {\n\t\t\t\tsuffix = \" \" + suffix;\n\t\t\t}\n\t\t}\n\t\telse if (details.decimals.passive === 0) {\n\t\t\tvalue = Math.round(value);\n\t\t}\n\t\telse if (details.decimals.passive > 0) {\n\t\t\tlet d: number = Math.pow(10, details.decimals.passive);\n\t\t\tvalue = Math.round(value * d) / d;\n\t\t}\n\n\t\t// Init return value\n\t\tlet res: string = \"\";\n\n\t\t// Calc integer and decimal parts\n\t\tlet a = $type.numberToString(value).split(\".\");\n\n\t\t// Format integers\n\t\tlet ints = a[0];\n\n\t\t// Pad integers to active length\n\t\tif (ints.length < details.thousands.active) {\n\t\t\tints = Array(details.thousands.active - ints.length + 1).join(\"0\") + ints;\n\t\t}\n\n\t\t// Insert thousands separators\n\t\tif (details.thousands.interval > 0) {\n\t\t\tlet ip: string[] = [];\n\t\t\tlet intsr: string = ints.split(\"\").reverse().join(\"\");\n\t\t\tfor (let i = 0, len = ints.length; i <= len; i += details.thousands.interval) {\n\t\t\t\tlet c: string = intsr.substr(i, details.thousands.interval).split(\"\").reverse().join(\"\");\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tip.unshift(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tints = ip.join(details.thousands.separator);\n\t\t}\n\n\t\t// Add integers\n\t\tres += ints;\n\n\t\t// Add decimals\n\t\tif (a.length === 1) {\n\t\t\ta.push(\"\");\n\t\t}\n\t\tlet decs: string = a[1];\n\n\t\t// Fill zeros?\n\t\tif (decs.length < details.decimals.active) {\n\t\t\tdecs += Array(details.decimals.active - decs.length + 1).join(\"0\");\n\t\t}\n\n\t\tif (decs !== \"\") {\n\t\t\tres += details.decimals.separator + decs;\n\t\t}\n\n\t\t// Can't have empty return value\n\t\tif (res === \"\") {\n\t\t\tres = \"0\";\n\t\t}\n\n\t\t// Add minus sign back\n\t\tif (value !== 0 && negative && (mods.indexOf(\"s\") === -1)) {\n\t\t\tres = \"-\" + res;\n\t\t}\n\n\t\t// Add suffixes/prefixes\n\t\tif (prefix) {\n\t\t\tres = prefix + res;\n\t\t}\n\t\tif (suffix) {\n\t\t\tres += suffix;\n\t\t}\n\n\t\treturn res;\n\t}\n\n\n\tprotected applyPrefix(value: number, prefixes: any[], force: boolean = false): any[] {\n\t\tlet newvalue = value;\n\t\tlet prefix = \"\";\n\t\tlet suffix = \"\";\n\t\tlet applied = false;\n\t\tlet k = 1;\n\n\t\tfor (let i = 0, len = prefixes.length; i < len; i++) {\n\t\t\tif (prefixes[i].number <= value) {\n\t\t\t\tif (prefixes[i].number === 0) {\n\t\t\t\t\tnewvalue = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewvalue = value / prefixes[i].number;\n\t\t\t\t\tk = prefixes[i].number;\n\t\t\t\t}\n\t\t\t\tprefix = prefixes[i].prefix;\n\t\t\t\tsuffix = prefixes[i].suffix;\n\t\t\t\tapplied = true;\n\t\t\t}\n\t\t}\n\n\n\t\tif (!applied && force && prefixes.length && value != 0) {\n\t\t\t// Prefix was not applied. Use the first prefix.\n\t\t\tnewvalue = value / prefixes[0].number;\n\t\t\tprefix = prefixes[0].prefix;\n\t\t\tsuffix = prefixes[0].suffix;\n\t\t\tapplied = true;\n\t\t}\n\n\t\tif (applied) {\n\t\t\tnewvalue = parseFloat(\n\t\t\t\tnewvalue.toPrecision(\n\t\t\t\t\tMath.min(k.toString().length + Math.floor(newvalue).toString().replace(/[^0-9]*/g, \"\").length, 21)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn [newvalue, prefix, suffix];\n\t}\n\n\t/**\n\t * Replaces brackets with temporary placeholders.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Escaped text\n\t */\n\tpublic escape(text: string): string {\n\t\treturn text.replace(\"||\", $type.PLACEHOLDER2);\n\t}\n\n\t/**\n\t * Replaces placeholders back to brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Escaped text\n\t * @return Unescaped text\n\t */\n\tpublic unescape(text: string): string {\n\t\treturn text.replace($type.PLACEHOLDER2, \"|\");\n\t}\n\n}\n","interface ParsedDate {\n\tyear: number,\n\tmonth: number,\n\tday: number,\n\thour: number,\n\tminute: number,\n\tsecond: number,\n\tmillisecond: number,\n\tweekday: number\n}\n\nfunction parseDate(timezone: Intl.DateTimeFormat, date: Date): ParsedDate {\n\tlet year = 0;\n\tlet month = 0;\n\tlet day = 1;\n\tlet hour = 0;\n\tlet minute = 0;\n\tlet second = 0;\n\tlet millisecond = 0;\n\tlet weekday = 0;\n\n\ttimezone.formatToParts(date).forEach((x) => {\n\t\tswitch (x.type) {\n\t\t\tcase \"year\":\n\t\t\t\tyear = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"month\":\n\t\t\t\tmonth = (+x.value) - 1;\n\t\t\t\tbreak;\n\t\t\tcase \"day\":\n\t\t\t\tday = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"hour\":\n\t\t\t\thour = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"minute\":\n\t\t\t\tminute = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"second\":\n\t\t\t\tsecond = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"fractionalSecond\" as any:\n\t\t\t\tmillisecond = +x.value;\n\t\t\t\tbreak;\n\t\t\tcase \"weekday\":\n\t\t\t\tswitch (x.value) {\n\t\t\t\t\tcase \"Sun\":\n\t\t\t\t\t\tweekday = 0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Mon\":\n\t\t\t\t\t\tweekday = 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Tue\":\n\t\t\t\t\t\tweekday = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Wed\":\n\t\t\t\t\t\tweekday = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Thu\":\n\t\t\t\t\t\tweekday = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Fri\":\n\t\t\t\t\t\tweekday = 5;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Sat\":\n\t\t\t\t\t\tweekday = 6;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t}\n\t});\n\n\tif (hour === 24) {\n\t\thour = 0;\n\t}\n\n\treturn { year, month, day, hour, minute, second, millisecond, weekday };\n}\n\n\nfunction toUTCDate(timezone: Intl.DateTimeFormat, date: Date): number {\n\tconst { year, month, day, hour, minute, second, millisecond } = parseDate(timezone, date);\n\treturn Date.UTC(year, month, day, hour, minute, second, millisecond);\n}\n\n\nexport class Timezone {\n\tprivate _utc: Intl.DateTimeFormat;\n\tprivate _dtf: Intl.DateTimeFormat;\n\n\tpublic readonly name: string | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   timezone  IANA timezone\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Timezone, T extends InstanceType<C>>(this: C, timezone: string | undefined): T {\n\t\treturn (new this(timezone, true)) as T;\n\t}\n\n\tconstructor(timezone: string | undefined, isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis.name = timezone;\n\n\t\tthis._utc = new Intl.DateTimeFormat(\"UTC\", {\n\t\t\thour12: false,\n\t\t\ttimeZone: \"UTC\",\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t\tweekday: \"short\",\n\t\t\tfractionalSecondDigits: 3,\n\t\t} as any);\n\n\t\tthis._dtf = new Intl.DateTimeFormat(\"UTC\", {\n\t\t\thour12: false,\n\t\t\ttimeZone: timezone,\n\t\t\tyear: \"numeric\",\n\t\t\tmonth: \"2-digit\",\n\t\t\tday: \"2-digit\",\n\t\t\thour: \"2-digit\",\n\t\t\tminute: \"2-digit\",\n\t\t\tsecond: \"2-digit\",\n\t\t\tweekday: \"short\",\n\t\t\tfractionalSecondDigits: 3,\n\t\t} as any);\n\t}\n\n\tconvertLocal(date: Date): Date {\n\t\tconst offset = this.offsetUTC(date);\n\t\tconst userOffset = date.getTimezoneOffset();\n\t\tconst output = new Date(date);\n\t\toutput.setUTCMinutes(output.getUTCMinutes() - (offset - userOffset));\n\n\t\tconst newUserOffset = output.getTimezoneOffset();\n\n\t\tif (userOffset != newUserOffset) {\n\t\t\toutput.setUTCMinutes(output.getUTCMinutes() + newUserOffset - userOffset)\n\t\t}\n\n\t\treturn output;\n\t}\n\n\toffsetUTC(date: Date): number {\n\t\tconst utc = toUTCDate(this._utc, date);\n\t\tconst dtf = toUTCDate(this._dtf, date);\n\t\treturn (utc - dtf) / 60000;\n\t}\n\n\tparseDate(date: Date): ParsedDate {\n\t\treturn parseDate(this._dtf, date)\n\t}\n}\n","import type { ILocaleSettings } from \"./Language\"\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport { TextFormatter } from \"./TextFormatter\"\nimport { Timezone } from \"./Timezone\"\n\nimport * as $type from \"./Type\"\nimport * as $utils from \"./Utils\";\n\n/**\n * Interface describing parsed date format definition.\n *\n * @ignore\n */\nexport interface DateFormatInfo {\n\t\"template\": string;\n\t\"parts\": any[];\n}\n\nexport interface IDateFormatterSettings extends IEntitySettings {\n\n\t/**\n\t * Should the first letter of the formatted date be capitalized?\n\t *\n\t * @default true\n\t */\n\tcapitalize?: boolean;\n\n\t/**\n\t * A date format to be used when formatting dates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tdateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * An array of data fields that hold date values and should be formatted\n\t * with a [[DateFormatter]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/data-placeholders/#Formatting_placeholders} for more info\n\t */\n\tdateFields?: string[];\n\n\t/**\n\t * Locales to use when formatting using `Intl.DateFormatter`.\n\t */\n\tintlLocales?: string;\n\n}\n\nexport interface IDateFormatterPrivate extends IEntityPrivate {\n}\n\ntype Months = \"January\" | \"February\" | \"March\" | \"April\" | \"May\" | \"June\" | \"July\" | \"August\" | \"September\" | \"October\" | \"November\" | \"December\";\ntype ShortMonths = \"Jan\" | \"Feb\" | \"Mar\" | \"Apr\" | \"May(short)\" | \"Jun\" | \"Jul\" | \"Aug\" | \"Sep\" | \"Oct\" | \"Nov\" | \"Dec\";\ntype Weekdays = \"Sunday\" | \"Monday\" | \"Tuesday\" | \"Wednesday\" | \"Thursday\" | \"Friday\" | \"Saturday\";\ntype ShortWeekdays = \"Sun\" | \"Mon\" | \"Tue\" | \"Wed\" | \"Thu\" | \"Fri\" | \"Sat\";\n\nexport class DateFormatter extends Entity {\n\tdeclare public _settings: IDateFormatterSettings;\n\tdeclare public _privateSettings: IDateFormatterPrivate;\n\n\tprotected _setDefaults() {\n\t\t// Defaults\n\t\tthis._setDefault(\"capitalize\", true);\n\t\tthis._setDefault(\"dateFormat\", \"yyyy-MM-dd\");\n\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t}\n\n\tpublic format(source: any, format?: string | Intl.DateTimeFormatOptions): string {\n\n\t\t// Locale?\n\t\t// TODO\n\n\t\t// No format passed in or it's empty\n\t\tif (typeof format === \"undefined\" || format === \"\") {\n\t\t\tformat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n\t\t}\n\n\t\t// Init return value\n\t\tlet formatted;\n\n\t\t// Cast?\n\t\t// TODO: decide if we need to cast\n\t\tlet date: Date = source;\n\n\t\t// Is it a built-in format or Intl.DateTimeFormat\n\t\tif ($type.isObject(format)) {\n\n\t\t\ttry {\n\t\t\t\tconst locales = this.get(\"intlLocales\");\n\t\t\t\tif (locales) {\n\t\t\t\t\treturn new Intl.DateTimeFormat(locales, <Intl.DateTimeFormatOptions>format).format(date);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Intl.DateTimeFormat(undefined, <Intl.DateTimeFormatOptions>format).format(date);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treturn \"Invalid\";\n\t\t\t}\n\n\t\t}\n\n\t\t// get format info (it will also deal with parser caching)\n\t\tlet info = this.parseFormat(format);\n\n\t\t// Should we apply custom time zone?\n\t\tconst timezone = this._root.timezone;\n\t\tif (timezone && !this._root.utc) {\n\t\t\tdate = timezone.convertLocal(date);\n\t\t}\n\n\n\t\t// Check if it's a valid date\n\t\tif (!$type.isNumber(date.getTime())) {\n\t\t\t// TODO translation\n\t\t\t//return this._t(\"Invalid date\");\n\t\t\treturn \"Invalid date\";\n\t\t}\n\n\t\t// Apply format\n\t\tformatted = this.applyFormat(date, info);\n\n\t\t// Capitalize\n\t\tif (this.get(\"capitalize\")) {\n\t\t\tformatted = formatted.replace(\n\t\t\t\t/^.{1}/, formatted.substr(0, 1).toUpperCase()\n\t\t\t);\n\t\t}\n\n\t\t// We're done\n\t\treturn formatted;\n\t}\n\n\t/**\n\t * Applies format to Date.\n\t *\n\t * @param date      Date object\n\t * @param info      Parsed format information\n\t * @return Formatted date string\n\t */\n\tprotected applyFormat(date: Date, info: DateFormatInfo): string {\n\n\t\t// Init return value\n\t\tlet res = info.template;\n\n\t\t// Get values\n\t\tlet fullYear: number,\n\t\t\tmonth: number,\n\t\t\tweekday: number,\n\t\t\tday: number,\n\t\t\thours: number,\n\t\t\tminutes: number,\n\t\t\tseconds: number,\n\t\t\tmilliseconds: number,\n\t\t\ttimestamp: number = date.getTime();\n\t\tif (this._root.utc) {\n\t\t\tfullYear = date.getUTCFullYear();\n\t\t\tmonth = date.getUTCMonth();\n\t\t\tweekday = date.getUTCDay();\n\t\t\tday = date.getUTCDate();\n\t\t\thours = date.getUTCHours();\n\t\t\tminutes = date.getUTCMinutes();\n\t\t\tseconds = date.getUTCSeconds();\n\t\t\tmilliseconds = date.getUTCMilliseconds();\n\t\t}\n\t\telse {\n\t\t\tfullYear = date.getFullYear();\n\t\t\tmonth = date.getMonth();\n\t\t\tweekday = date.getDay();\n\t\t\tday = date.getDate();\n\t\t\thours = date.getHours();\n\t\t\tminutes = date.getMinutes();\n\t\t\tseconds = date.getSeconds();\n\t\t\tmilliseconds = date.getMilliseconds();\n\t\t}\n\n\t\t// Go through each part and format/replace it in template\n\t\tfor (let i = 0, len = info.parts.length; i < len; i++) {\n\t\t\tlet value: string = \"\";\n\t\t\tswitch (info.parts[i]) {\n\n\t\t\t\tcase \"G\":\n\t\t\t\t\tvalue = this._t(\n\t\t\t\t\t\tfullYear < 0\n\t\t\t\t\t\t\t? \"_era_bc\"\n\t\t\t\t\t\t\t: \"_era_ad\"\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyyy\":\n\t\t\t\t\tvalue = Math.abs(fullYear).toString();\n\t\t\t\t\tif (fullYear < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyy\":\n\t\t\t\tcase \"yy\":\n\t\t\t\tcase \"y\":\n\t\t\t\t\tvalue = Math.abs(fullYear).toString().substr(-info.parts[i].length);\n\t\t\t\t\tif (fullYear < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"YYYY\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\tcase \"YY\":\n\t\t\t\tcase \"Y\":\n\t\t\t\t\tlet week = $utils.getWeek(date);\n\t\t\t\t\tlet year = fullYear;\n\t\t\t\t\tif (week == 1 && (weekday > 4)) {\n\t\t\t\t\t\tyear--;\n\t\t\t\t\t}\n\t\t\t\t\tif (info.parts[i] == \"YYYY\") {\n\t\t\t\t\t\tvalue = Math.abs(year).toString();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = Math.abs(year).toString().substr(-info.parts[i].length);\n\t\t\t\t\t}\n\t\t\t\t\tif (year < 0) {\n\t\t\t\t\t\tvalue += this._t(\"_era_bc\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"u\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"q\":\n\t\t\t\t\tvalue = \"\" + Math.ceil((date.getMonth() + 1) / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMMM\":\n\t\t\t\t\tvalue = this._t(this._getMonth(month)).substr(0, 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMM\":\n\t\t\t\t\tvalue = this._t(this._getMonth(month));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMM\":\n\t\t\t\t\tvalue = this._t(this._getShortMonth(month));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MM\":\n\t\t\t\t\tvalue = $utils.padString(month + 1, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"M\":\n\t\t\t\t\tvalue = (month + 1).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ww\":\n\t\t\t\t\tvalue = $utils.padString($utils.getWeek(date, this._root.utc), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"w\":\n\t\t\t\t\tvalue = $utils.getWeek(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"W\":\n\t\t\t\t\tvalue = $utils.getMonthWeek(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dd\":\n\t\t\t\t\tvalue = $utils.padString(day, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"d\":\n\t\t\t\t\tvalue = day.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DD\":\n\t\t\t\tcase \"DDD\":\n\t\t\t\t\tvalue = $utils.padString($utils.getYearDay(date, this._root.utc).toString(), info.parts[i].length, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"D\":\n\t\t\t\t\tvalue = $utils.getYearDay(date, this._root.utc).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"F\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"g\":\n\t\t\t\t\t// @todo\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"t\":\n\t\t\t\t\tvalue = this._root.language.translateFunc(\"_dateOrd\").call(this, day);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"E\":\n\t\t\t\t\tvalue = (weekday || 7).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EE\":\n\t\t\t\t\tvalue = $utils.padString((weekday || 7).toString(), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEE\":\n\t\t\t\tcase \"eee\":\n\t\t\t\t\tvalue = this._t(this._getShortWeekday(weekday));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEEE\":\n\t\t\t\tcase \"eeee\":\n\t\t\t\t\tvalue = this._t(this._getWeekday(weekday));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"EEEEE\":\n\t\t\t\tcase \"eeeee\":\n\t\t\t\t\tvalue = this._t(this._getShortWeekday(weekday)).substr(0, 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"e\":\n\t\t\t\tcase \"ee\":\n\t\t\t\t\tvalue = (weekday - (this._root.locale.firstDayOfWeek || 1) + 1).toString();\n\t\t\t\t\tif (info.parts[i] == \"ee\") {\n\t\t\t\t\t\tvalue = $utils.padString(value, 2, \"0\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"a\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"PM\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"AM\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aa\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"P.M.\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"A.M.\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aaa\":\n\t\t\t\t\tif (hours >= 12) {\n\t\t\t\t\t\tvalue = this._t(\"P\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = this._t(\"A\");\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"h\":\n\t\t\t\t\tvalue = $utils.get12Hours(hours).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hh\":\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tvalue = hours.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"HH\":\n\t\t\t\t\tvalue = $utils.padString(hours, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"K\":\n\t\t\t\t\tvalue = $utils.get12Hours(hours, 0).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"KK\":\n\t\t\t\t\tvalue = $utils.padString($utils.get12Hours(hours, 0), 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"k\":\n\t\t\t\t\tvalue = (hours + 1).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kk\":\n\t\t\t\t\tvalue = $utils.padString(hours + 1, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"m\":\n\t\t\t\t\tvalue = minutes.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mm\":\n\t\t\t\t\tvalue = $utils.padString(minutes, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"s\":\n\t\t\t\t\tvalue = seconds.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ss\":\n\t\t\t\t\tvalue = $utils.padString(seconds, 2, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\tcase \"SS\":\n\t\t\t\tcase \"SSS\":\n\t\t\t\t\tvalue = Math.round((milliseconds / 1000) * Math.pow(10, info.parts[i].length)).toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\tvalue = timestamp.toString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"n\":\n\t\t\t\tcase \"nn\":\n\t\t\t\tcase \"nnn\":\n\t\t\t\t\tvalue = $utils.padString(milliseconds, info.parts[i].length, \"0\");\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"z\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, false, this._root.utc);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, false, this._root.utc);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zzz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, false, true, this._root.utc);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"zzzz\":\n\t\t\t\t\tvalue = $utils.getTimeZone(date, true, true, this._root.utc);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"ZZ\":\n\t\t\t\t\tlet timezone = this._root.utc ? \"UTC\" : this._root.timezone;\n\t\t\t\t\tif (timezone instanceof Timezone) {\n\t\t\t\t\t\ttimezone = timezone.name;\n\t\t\t\t\t}\n\t\t\t\t\tconst offset = timezone ? $utils.getTimezoneOffset(timezone) : date.getTimezoneOffset();\n\n\t\t\t\t\tlet tz = Math.abs(offset) / 60;\n\t\t\t\t\tlet tzh = Math.floor(tz);\n\t\t\t\t\tlet tzm = tz * 60 - tzh * 60;\n\n\t\t\t\t\tif (this._root.utc) {\n\t\t\t\t\t\ttzh = 0;\n\t\t\t\t\t\ttzm = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (info.parts[i] == \"Z\") {\n\t\t\t\t\t\tvalue = \"GMT\";\n\t\t\t\t\t\tvalue += offset > 0 ? \"-\" : \"+\";\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + \":\" + $utils.padString(tzm, 2);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue = offset > 0 ? \"-\" : \"+\";\n\t\t\t\t\t\tvalue += $utils.padString(tzh, 2) + $utils.padString(tzm, 2);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\tvalue = date.toISOString();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"I\":\n\t\t\t\t\tvalue = date.toUTCString();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\t\t\tres = res.replace($type.PLACEHOLDER, value);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Parses format into structured infromation.\n\t *\n\t * @param format Format template\n\t */\n\tprotected parseFormat(format: string): DateFormatInfo {\n\n\t\t// Check cache\n\t\t// TODO: implement caching of the parsed format\n\n\t\t// Init format parse info holder\n\t\tlet info: DateFormatInfo = {\n\t\t\t\"template\": \"\",\n\t\t\t\"parts\": <any>[]\n\t\t};\n\n\t\t// Let TextFormatter split into chunks\n\t\tlet chunks = TextFormatter.chunk(format, true);\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\tlet chunk = chunks[i];\n\n\t\t\tif (chunk.type === \"value\") {\n\n\t\t\t\t// Just \"Date\"?\n\t\t\t\tif (chunk.text.match(/^date$/i)) {\n\t\t\t\t\tlet dateFormat = this.get(\"dateFormat\", \"yyyy-MM-dd\");\n\t\t\t\t\tif (!$type.isString(dateFormat)) {\n\t\t\t\t\t\tdateFormat = \"yyyy-MM-dd\";\n\t\t\t\t\t}\n\t\t\t\t\tchunk.text = dateFormat;\n\t\t\t\t}\n\n\t\t\t\t// Find all possible parts\n\t\t\t\tlet matches = chunk.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);\n\n\t\t\t\t// Found?\n\t\t\t\tif (matches) {\n\n\t\t\t\t\t// Populate template\n\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\n\t\t\t\t\t\tinfo.parts.push(matches[x]);\n\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply to template\n\t\t\tinfo.template += chunk.text;\n\t\t}\n\n\t\t// Save cache\n\t\t// TODO\n\n\t\treturn info;\n\t}\n\n\tprotected _months(): Months[] {\n\t\treturn [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\t}\n\n\tprotected _getMonth(index: number): Months {\n\t\treturn this._months()[index];\n\t}\n\n\tprotected _shortMonths(): ShortMonths[] {\n\t\treturn [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May(short)\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t}\n\n\tprotected _getShortMonth(index: number): ShortMonths {\n\t\treturn this._shortMonths()[index];\n\t}\n\n\tprotected _weekdays(): Weekdays[] {\n\t\treturn [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\t}\n\n\tprotected _getWeekday(index: number): Weekdays {\n\t\treturn this._weekdays()[index];\n\t}\n\n\tprotected _shortWeekdays(): ShortWeekdays[] {\n\t\treturn [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t}\n\n\tprotected _getShortWeekday(index: number): ShortWeekdays {\n\t\treturn this._shortWeekdays()[index];\n\t}\n\n\tpublic parse(source: any, format: string): Date {\n\n\t\t// Is it already a Date\n\t\tif (source instanceof Date) {\n\t\t\treturn source;\n\t\t}\n\n\t\t// Is it a numeric timestamp\n\t\tif ($type.isNumber(source)) {\n\t\t\treturn new Date(source);\n\t\t}\n\n\t\t// No? Let's check if it's string, and try converting to it if nec\n\t\tif (!$type.isString(source)) {\n\t\t\tsource = source.toString();\n\t\t}\n\n\t\t// Init return value\n\t\tlet res: Date;\n\n\t\t// Init RegEx for parsing\n\t\tlet reg: string = \"\";\n\n\t\t// Clean format\n\t\tformat = $utils.cleanFormat(format);\n\n\t\t// Clip format to length of the source string\n\t\tformat = format.substr(0, source.length);\n\n\t\t// Parse format\n\t\tlet info = this.parseFormat(format);\n\n\t\t// Init parsed items holder\n\t\tlet parsedIndexes = {\n\t\t\t\"year\": -1,\n\t\t\t\"year3\": -1,\n\t\t\t\"year2\": -1,\n\t\t\t\"year1\": -1,\n\t\t\t\"month\": -1,\n\t\t\t\"monthShort\": -1,\n\t\t\t\"monthLong\": -1,\n\t\t\t\"weekdayShort\": -1,\n\t\t\t\"weekdayLong\": -1,\n\t\t\t\"day\": -1,\n\t\t\t\"yearDay\": -1,\n\t\t\t\"week\": -1,\n\t\t\t\"hourBase0\": -1,\n\t\t\t\"hour12Base0\": -1,\n\t\t\t\"hourBase1\": -1,\n\t\t\t\"hour12Base1\": -1,\n\t\t\t\"minute\": -1,\n\t\t\t\"second\": -1,\n\t\t\t\"millisecond\": -1,\n\t\t\t\"millisecondDigits\": -1,\n\t\t\t\"am\": -1,\n\t\t\t\"zone\": -1,\n\t\t\t\"timestamp\": -1,\n\t\t\t\"iso\": -1\n\t\t};\n\n\t\t// Init values\n\t\tlet resValues = {\n\t\t\t\"year\": 1970,\n\t\t\t\"month\": 0,\n\t\t\t\"day\": 1,\n\t\t\t\"hour\": 0,\n\t\t\t\"minute\": 0,\n\t\t\t\"second\": 0,\n\t\t\t\"millisecond\": 0,\n\t\t\t\"timestamp\": <any>null,\n\t\t\t\"offset\": 0,\n\t\t\t\"utc\": this._root.utc\n\t\t}\n\n\t\t// Index adjuster\n\t\tlet indexAdjust: number = 0;\n\t\tlet index: number = 0;\n\n\t\t// Iterate through all of the parts\n\t\tfor (let i: number = 0; i < info.parts.length; i++) {\n\n\t\t\t// Set current match index\n\t\t\tindex = i + indexAdjust + 1;\n\n\t\t\tswitch (info.parts[i]) {\n\n\t\t\t\tcase \"yyyy\":\n\t\t\t\tcase \"YYYY\":\n\t\t\t\t\treg += \"([0-9]{4})\";\n\t\t\t\t\tparsedIndexes.year = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yyy\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\t\treg += \"([0-9]{3})\";\n\t\t\t\t\tparsedIndexes.year3 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"yy\":\n\t\t\t\tcase \"YY\":\n\t\t\t\t\treg += \"([0-9]{2})\";\n\t\t\t\t\tparsedIndexes.year2 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"y\":\n\t\t\t\tcase \"Y\":\n\t\t\t\t\treg += \"([0-9]{1})\";\n\t\t\t\t\tparsedIndexes.year1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMMM\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._months()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.monthLong = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MMM\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._shortMonths()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.monthShort = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"MM\":\n\t\t\t\tcase \"M\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.month = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ww\":\n\t\t\t\tcase \"w\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.week = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"dd\":\n\t\t\t\tcase \"d\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.day = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"DDD\":\n\t\t\t\tcase \"DD\":\n\t\t\t\tcase \"D\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.yearDay = index;\n\t\t\t\t\tbreak;\n\n\n\t\t\t\tcase \"dddd\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._weekdays()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.weekdayLong = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ddd\":\n\t\t\t\t\treg += \"(\" + this.getStringList(this._shortWeekdays()).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.weekdayShort = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"aaa\":\n\t\t\t\tcase \"aa\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\t// TODO: fix (escape regex)\n\t\t\t\t\treg += \"(\" + this.getStringList([\"AM\", \"PM\", \"A\\.M\\.\", \"P\\.M\\.\", \"A\", \"P\"]).join(\"|\") + \")\";\n\t\t\t\t\tparsedIndexes.am = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"hh\":\n\t\t\t\tcase \"h\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hour12Base1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"HH\":\n\t\t\t\tcase \"H\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hourBase0 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"KK\":\n\t\t\t\tcase \"K\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hour12Base0 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"kk\":\n\t\t\t\tcase \"k\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.hourBase1 = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"mm\":\n\t\t\t\tcase \"m\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.minute = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ss\":\n\t\t\t\tcase \"s\":\n\t\t\t\t\treg += \"([0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.second = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"SSS\":\n\t\t\t\tcase \"SS\":\n\t\t\t\tcase \"S\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.millisecond = index;\n\t\t\t\t\tparsedIndexes.millisecondDigits = info.parts[i].length;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"nnn\":\n\t\t\t\tcase \"nn\":\n\t\t\t\tcase \"n\":\n\t\t\t\t\treg += \"([0-9]{3}|[0-9]{2}|[0-9]{1})\";\n\t\t\t\t\tparsedIndexes.millisecond = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"x\":\n\t\t\t\t\treg += \"([0-9]{1,})\";\n\t\t\t\t\tparsedIndexes.timestamp = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Z\":\n\t\t\t\t\treg += \"GMT([-+]+[0-9]{2}:[0-9]{2})\";\n\t\t\t\t\tparsedIndexes.zone = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"ZZ\":\n\t\t\t\t\treg += \"([\\\\-+]+[0-9]{2}[0-9]{2})\";\n\t\t\t\t\tparsedIndexes.zone = index;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"i\":\n\t\t\t\t\treg += \"([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\\\.?([0-9]{0,3})([zZ]|[+\\\\-][0-9]{2}:?[0-9]{2}|$)\";\n\t\t\t\t\tparsedIndexes.iso = index;\n\t\t\t\t\tindexAdjust += 7;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"G\":\n\t\t\t\tcase \"YYYY\":\n\t\t\t\tcase \"YYY\":\n\t\t\t\tcase \"YY\":\n\t\t\t\tcase \"Y\":\n\t\t\t\tcase \"MMMMM\":\n\t\t\t\tcase \"W\":\n\t\t\t\tcase \"EEEEE\":\n\t\t\t\tcase \"EEEE\":\n\t\t\t\tcase \"EEE\":\n\t\t\t\tcase \"EE\":\n\t\t\t\tcase \"E\":\n\t\t\t\tcase \"eeeee\":\n\t\t\t\tcase \"eeee\":\n\t\t\t\tcase \"eee\":\n\t\t\t\tcase \"ee\":\n\t\t\t\tcase \"e\":\n\t\t\t\tcase \"zzzz\":\n\t\t\t\tcase \"zzz\":\n\t\t\t\tcase \"zz\":\n\t\t\t\tcase \"z\":\n\t\t\t\tcase \"t\":\n\t\t\t\t\t// Ignore\n\t\t\t\t\tindexAdjust--;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treg += \"[^0-9]*\";\n\t\t}\n\n\t\t// Try matching\n\t\tlet regex = new RegExp(reg);\n\t\tlet matches: RegExpMatchArray = source.match(regex);\n\n\t\tif (matches) {\n\t\t\t// Populate the date object\n\n\t\t\t// Full year\n\t\t\tif (parsedIndexes.year > -1) {\n\t\t\t\tresValues.year = parseInt(matches[parsedIndexes.year]);\n\t\t\t}\n\n\t\t\t// 3-digit year\n\t\t\tif (parsedIndexes.year3 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year3]);\n\t\t\t\tval += 1000;\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// 2-digit year\n\t\t\tif (parsedIndexes.year2 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year2]);\n\t\t\t\tif (val > 50) {\n\t\t\t\t\tval += 1000;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tval += 2000;\n\t\t\t\t}\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// 1-digit year\n\t\t\tif (parsedIndexes.year1 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.year1]);\n\t\t\t\tval = Math.floor((new Date().getFullYear()) / 10) * 10 + val;\n\t\t\t\tresValues.year = val;\n\t\t\t}\n\n\t\t\t// Full month\n\t\t\tif (parsedIndexes.monthLong > -1) {\n\t\t\t\tresValues.month = this.resolveMonth(<any>matches[parsedIndexes.monthLong]);\n\t\t\t}\n\n\t\t\t// Short month\n\t\t\tif (parsedIndexes.monthShort > -1) {\n\t\t\t\tresValues.month = this.resolveShortMonth(<any>matches[parsedIndexes.monthShort]);\n\t\t\t}\n\n\t\t\t// Numeric month\n\t\t\tif (parsedIndexes.month > -1) {\n\t\t\t\tresValues.month = parseInt(matches[parsedIndexes.month]) - 1;\n\t\t\t}\n\n\t\t\t// Weekday\n\t\t\t// @todo\n\n\t\t\t// Week\n\t\t\tif ((parsedIndexes.week > -1) && (parsedIndexes.day === -1)) {\n\t\t\t\t// We parse weeks ONLY if day is not explicitly set\n\t\t\t\t// TODO: this needs work\n\t\t\t\t// (but maybe later - I can hardly imagine anyone passing their dates in weeks)\n\t\t\t\tresValues.month = 0;\n\t\t\t\tresValues.day = $utils.getDayFromWeek(\n\t\t\t\t\tparseInt(matches[parsedIndexes.week]),\n\t\t\t\t\tresValues.year,\n\t\t\t\t\t1,\n\t\t\t\t\tthis._root.utc\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Day\n\t\t\tif (parsedIndexes.day > -1) {\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.day]);\n\t\t\t}\n\n\t\t\t// Year day\n\t\t\tif (parsedIndexes.yearDay > -1) {\n\t\t\t\tresValues.month = 0;\n\t\t\t\tresValues.day = parseInt(matches[parsedIndexes.yearDay]);\n\t\t\t}\n\n\t\t\t// 24 Hour (0-23)\n\t\t\tif (parsedIndexes.hourBase0 > -1) {\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase0]);\n\t\t\t}\n\n\t\t\t// 24 Hour (1-24)\n\t\t\tif (parsedIndexes.hourBase1 > -1) {\n\t\t\t\tresValues.hour = parseInt(matches[parsedIndexes.hourBase1]) - 1;\n\t\t\t}\n\n\t\t\t// 12 Hour (0-11)\n\t\t\tif (parsedIndexes.hour12Base0 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base0]);\n\t\t\t\tif (val == 11) {\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\n\t\t\t\t\tval += 12;\n\t\t\t\t}\n\t\t\t\tresValues.hour = val;\n\t\t\t}\n\n\t\t\t// 12 Hour (1-12)\n\t\t\tif (parsedIndexes.hour12Base1 > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.hour12Base1]);\n\t\t\t\tif (val == 12) {\n\t\t\t\t\tval = 0;\n\t\t\t\t}\n\t\t\t\tif ((parsedIndexes.am > -1) && !this.isAm(matches[parsedIndexes.am])) {\n\t\t\t\t\tval += 12;\n\t\t\t\t}\n\t\t\t\tresValues.hour = val;\n\t\t\t}\n\n\t\t\t// Minute\n\t\t\tif (parsedIndexes.minute > -1) {\n\t\t\t\tresValues.minute = parseInt(matches[parsedIndexes.minute]);\n\t\t\t}\n\n\t\t\t// Second\n\t\t\tif (parsedIndexes.second > -1) {\n\t\t\t\tresValues.second = parseInt(matches[parsedIndexes.second]);\n\t\t\t}\n\n\t\t\t// Millisecond\n\t\t\tif (parsedIndexes.millisecond > -1) {\n\t\t\t\tlet val = parseInt(matches[parsedIndexes.millisecond]);\n\t\t\t\tif (parsedIndexes.millisecondDigits == 2) {\n\t\t\t\t\tval *= 10;\n\t\t\t\t}\n\t\t\t\telse if (parsedIndexes.millisecondDigits == 1) {\n\t\t\t\t\tval *= 100;\n\t\t\t\t}\n\t\t\t\tresValues.millisecond = val;\n\t\t\t}\n\n\t\t\t// Timestamp\n\t\t\tif (parsedIndexes.timestamp > -1) {\n\t\t\t\tresValues.timestamp = parseInt(matches[parsedIndexes.timestamp]);\n\n\t\t\t\tconst ts = new Date(resValues.timestamp);\n\t\t\t\tresValues.year = ts.getUTCFullYear();\n\t\t\t\tresValues.month = ts.getUTCMonth();\n\t\t\t\tresValues.day = ts.getUTCDate();\n\t\t\t\tresValues.hour = ts.getUTCHours();\n\t\t\t\tresValues.minute = ts.getUTCMinutes();\n\t\t\t\tresValues.second = ts.getUTCSeconds();\n\t\t\t\tresValues.millisecond = ts.getUTCMilliseconds();\n\t\t\t}\n\n\t\t\t// Adjust time zone\n\t\t\tif (parsedIndexes.zone > -1) {\n\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.zone]);\n\t\t\t}\n\n\t\t\t// ISO\n\t\t\tif (parsedIndexes.iso > -1) {\n\n\t\t\t\tresValues.year = $type.toNumber(matches[parsedIndexes.iso + 0]);\n\t\t\t\tresValues.month = $type.toNumber(matches[parsedIndexes.iso + 1]) - 1;\n\t\t\t\tresValues.day = $type.toNumber(matches[parsedIndexes.iso + 2]);\n\t\t\t\tresValues.hour = $type.toNumber(matches[parsedIndexes.iso + 3]);\n\t\t\t\tresValues.minute = $type.toNumber(matches[parsedIndexes.iso + 4]);\n\t\t\t\tresValues.second = $type.toNumber(matches[parsedIndexes.iso + 5]);\n\t\t\t\tresValues.millisecond = $type.toNumber(matches[parsedIndexes.iso + 6]);\n\n\t\t\t\tif (matches[parsedIndexes.iso + 7] == \"Z\" || matches[parsedIndexes.iso + 7] == \"z\") {\n\t\t\t\t\tresValues.utc = true;\n\t\t\t\t}\n\t\t\t\telse if (matches[parsedIndexes.iso + 7] != \"\") {\n\t\t\t\t\tresValues.offset = this.resolveTimezoneOffset(new Date(resValues.year, resValues.month, resValues.day), matches[parsedIndexes.iso + 7]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create Date object\n\t\t\tif (resValues.utc) {\n\t\t\t\tres = new Date(Date.UTC(\n\t\t\t\t\tresValues.year,\n\t\t\t\t\tresValues.month,\n\t\t\t\t\tresValues.day,\n\t\t\t\t\tresValues.hour,\n\t\t\t\t\tresValues.minute,\n\t\t\t\t\tresValues.second,\n\t\t\t\t\tresValues.millisecond\n\t\t\t\t));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres = new Date(\n\t\t\t\t\tresValues.year,\n\t\t\t\t\tresValues.month,\n\t\t\t\t\tresValues.day,\n\t\t\t\t\tresValues.hour,\n\t\t\t\t\tresValues.minute + resValues.offset,\n\t\t\t\t\tresValues.second,\n\t\t\t\t\tresValues.millisecond\n\t\t\t\t);\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Didn't match anything\n\t\t\t// Let's try dropping it into Date constructor and hope for the best\n\t\t\tres = new Date(source);\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tprotected resolveTimezoneOffset(date: Date, zone: string): number {\n\t\tlet value = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/);\n\t\tif (value) {\n\t\t\tlet match = zone.match(/([+\\-]?)([0-9]{2}):?([0-9]{2})/)!;\n\t\t\tlet dir = match[1];\n\t\t\tlet hour = match[2];\n\t\t\tlet minute = match[3];\n\t\t\tlet offset = parseInt(hour) * 60 + parseInt(minute);\n\n\t\t\t// Adjust offset\n\t\t\t// Making it negative does not seem to make sense, but it's right\n\t\t\t// because of how JavaScript calculates GMT offsets\n\t\t\tif (dir == \"+\") {\n\t\t\t\toffset *= -1;\n\t\t\t}\n\n\t\t\t// Check the difference in offset\n\t\t\tlet originalOffset = (date || new Date()).getTimezoneOffset();\n\t\t\tlet diff = offset - originalOffset;\n\t\t\treturn diff;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Resolves month name (i.e. \"December\") into a month number (11).\n\t *\n\t * @param value  Month name\n\t * @return Month number\n\t */\n\tprotected resolveMonth(value: Months): number {\n\n\t\t// Let's try English first\n\t\tlet month: number = this._months().indexOf(value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Try the translation\n\t\tif (!this._root.language.isDefault()) {\n\t\t\tmonth = this._root.language.translateAll(this._months()).indexOf(value);\n\t\t\tif (month > -1) {\n\t\t\t\treturn month\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Resolves short month name (i.e. \"Dec\") into a month number.\n\t *\n\t * @param value  Short month name\n\t * @return Month number\n\t */\n\tprotected resolveShortMonth(value: ShortMonths): number {\n\n\t\t// Let's try English first\n\t\tlet month: number = this._shortMonths().indexOf(value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Maybe long month (workaround for May)\n\t\tmonth = this._months().indexOf(<any>value);\n\t\tif (month > -1) {\n\t\t\treturn month;\n\t\t}\n\n\t\t// Try the translation\n\t\tif (this._root.language && !this._root.language.isDefault()) {\n\t\t\tmonth = this._root.language.translateAll(this._shortMonths()).indexOf(value);\n\t\t\tif (month > -1) {\n\t\t\t\treturn month\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Checks if passed in string represents AM/PM notation in many of its\n\t * versions.\n\t *\n\t * @param value  Source string\n\t * @return Is it AM/PM?\n\t */\n\tprotected isAm(value: string): boolean {\n\t\tlet list = this.getStringList([\"AM\", \"A.M.\", \"A\"]);\n\t\treturn list.indexOf(value.toUpperCase()) > -1;\n\t}\n\n\t/**\n\t * Translates list of strings.\n\t *\n\t * @param list  Source strings\n\t * @return Translated strings\n\t */\n\tprotected getStringList(list: Array<keyof ILocaleSettings>): Array<string> {\n\t\tlet res: string[] = [];\n\t\tfor (let i: number = 0; i < list.length; i++) {\n\t\t\t// translate?\n\t\t\tif (this._root.language) {\n\t\t\t\tres.push($utils.escapeForRgex(this._t(list[i])));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tres.push($utils.escapeForRgex(list[i]));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n}\n","import type { TimeUnit } from \"./Time\";\r\n\r\nimport { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\r\nimport { TextFormatter } from \"./TextFormatter\";\r\n\r\nimport * as $object from \"./Object\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $type from \"./Type\";\r\n\r\n\r\nexport interface IDurationFormatterSettings extends IEntitySettings {\r\n\r\n\t/**\r\n\t * A universal duration format to use wherever number needs to be formatted\r\n\t * as a duration.\r\n\t */\r\n\tdurationFormat?: string;\r\n\r\n\t/**\r\n\t * A base value. Any number below it will be considered \"negative\".\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tnegativeBase?: number;\r\n\r\n\t/**\r\n\t * Identifies what values are used in duration.\r\n\t *\r\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\r\n\t * @default \"second\"\r\n\t */\r\n\tbaseUnit?: TimeUnit;\r\n\r\n\t/**\r\n\t * Time unit dependent duration formats.\r\n\t *\r\n\t * Used be [[DurationAxis]].\r\n\t */\r\n\tdurationFormats?: Partial<Record<TimeUnit, Partial<Record<TimeUnit, string>>>>;\r\n\r\n\t/**\r\n\t * An array of data fields that hold duration values and should be formatted\r\n\t * with a [[DurationFormatter]].\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/data-placeholders/#Formatting_placeholders} for more info\r\n\t */\r\n\tdurationFields?: string[];\r\n\r\n}\r\n\r\nexport interface IDurationFormatterPrivate extends IEntityPrivate {\r\n}\r\n\r\n/**\r\n * A class used to format numberic values as time duration.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/} for more info\r\n */\r\nexport class DurationFormatter extends Entity {\r\n\tdeclare public _settings: IDurationFormatterSettings;\r\n\tdeclare public _privateSettings: IDurationFormatterPrivate;\r\n\r\n\tprotected _setDefaults() {\r\n\t\tconst dmillisecond = \"_duration_millisecond\";\r\n\t\tconst dsecond = \"_duration_second\";\r\n\t\tconst dminute = \"_duration_minute\";\r\n\t\tconst dhour = \"_duration_hour\";\r\n\t\tconst dday = \"_duration_day\";\r\n\t\tconst dweek = \"_duration_week\";\r\n\t\tconst dmonth = \"_duration_month\";\r\n\t\tconst dyear = \"_duration_year\";\r\n\r\n\t\tconst asecond = \"_second\";\r\n\t\tconst aminute = \"_minute\";\r\n\t\tconst ahour = \"_hour\";\r\n\t\tconst aday = \"_day\";\r\n\t\tconst aweek = \"_week\";\r\n\t\tconst amonth = \"_week\";\r\n\t\tconst ayear = \"_year\";\r\n\r\n\t\t// Defaults\r\n\t\tthis._setDefault(\"negativeBase\", 0);\r\n\t\tthis._setDefault(\"baseUnit\", \"second\");\r\n\t\tthis._setDefault(\"durationFormats\", {\r\n\t\t\t\"millisecond\": {\r\n\t\t\t\t\"millisecond\": this._t(dmillisecond),\r\n\t\t\t\t\"second\": this._t((dmillisecond + asecond) as any),\r\n\t\t\t\t\"minute\": this._t((dmillisecond + aminute) as any),\r\n\t\t\t\t\"hour\": this._t((dmillisecond + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dmillisecond + aday) as any),\r\n\t\t\t\t\"week\": this._t((dmillisecond + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dmillisecond + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dmillisecond + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"second\": {\r\n\t\t\t\t\"second\": this._t((dsecond) as any),\r\n\t\t\t\t\"minute\": this._t((dsecond + aminute) as any),\r\n\t\t\t\t\"hour\": this._t((dsecond + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dsecond + aday) as any),\r\n\t\t\t\t\"week\": this._t((dsecond + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dsecond + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dsecond + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"minute\": {\r\n\t\t\t\t\"minute\": this._t((dminute) as any),\r\n\t\t\t\t\"hour\": this._t((dminute + ahour) as any),\r\n\t\t\t\t\"day\": this._t((dminute + aday) as any),\r\n\t\t\t\t\"week\": this._t((dminute + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dminute + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dminute + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"hour\": {\r\n\t\t\t\t\"hour\": this._t((dhour) as any),\r\n\t\t\t\t\"day\": this._t((dhour + aday) as any),\r\n\t\t\t\t\"week\": this._t((dhour + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dhour + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dhour + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"day\": {\r\n\t\t\t\t\"day\": this._t((dday) as any),\r\n\t\t\t\t\"week\": this._t((dday + aweek) as any),\r\n\t\t\t\t\"month\": this._t((dday + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dday + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"week\": {\r\n\t\t\t\t\"week\": this._t((dweek) as any),\r\n\t\t\t\t\"month\": this._t((dweek + amonth) as any),\r\n\t\t\t\t\"year\": this._t((dweek + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"month\": {\r\n\t\t\t\t\"month\": this._t((dmonth) as any),\r\n\t\t\t\t\"year\": this._t((dmonth + ayear) as any)\r\n\t\t\t},\r\n\t\t\t\"year\": {\r\n\t\t\t\t\"year\": this._t(dyear)\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsuper._setDefaults();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Collection of aliases for units.\r\n\t */\r\n\tprotected _unitAliases: { [index: string]: string } = {\r\n\t\t\"Y\": \"y\",\r\n\t\t\"D\": \"d\",\r\n\t\t\"H\": \"h\",\r\n\t\t\"K\": \"h\",\r\n\t\t\"k\": \"h\",\r\n\t\t\"n\": \"S\"\r\n\t};\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t}\r\n\r\n\t/**\r\n\t * Formats the number as duration.\r\n\t *\r\n\t * For example `1000` (base unit seconds) would be converted to `16:40` as in\r\n\t * 16 minutes and 40 seconds.\r\n\t *\r\n\t * @param value   Value to format\r\n\t * @param format  Format to apply\r\n\t * @param base    Override base unit\r\n\t * @return Formatted number\r\n\t */\r\n\tpublic format(value: number | string, format?: string, base?: TimeUnit): string {\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this.get(\"baseUnit\");\r\n\r\n\t\t// no format passed in or empty\r\n\t\tif (typeof format === \"undefined\" || format === \"\") {\r\n\t\t\tif (this.get(\"durationFormat\") != null) {\r\n\t\t\t\tformat = this.get(\"durationFormat\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tformat = this.getFormat($type.toNumber(value), undefined, baseUnit);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Clean format\r\n\t\tformat = $utils.cleanFormat(format!);\r\n\r\n\t\t// get format info (it will also deal with parser caching)\r\n\t\tlet info = this.parseFormat(format, baseUnit);\r\n\r\n\t\t// cast to number just in case\r\n\t\t// TODO: maybe use better casting\r\n\t\tlet source: number = Number(value);\r\n\r\n\t\t// format and replace the number\r\n\t\tlet details;\r\n\t\tif (source > this.get(\"negativeBase\")) {\r\n\t\t\tdetails = info.positive;\r\n\t\t}\r\n\t\telse if (source < this.get(\"negativeBase\")) {\r\n\t\t\tdetails = info.negative;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdetails = info.zero;\r\n\t\t}\r\n\r\n\r\n\t\t// Format\r\n\t\tlet formatted = this.applyFormat(source, details);\r\n\r\n\t\t// Apply color?\r\n\t\tif (details.color !== \"\") {\r\n\t\t\tformatted = \"[\" + details.color + \"]\" + formatted + \"[/]\";\r\n\t\t}\r\n\r\n\t\treturn formatted;\r\n\t}\r\n\r\n\t/**\r\n\t * Parses supplied format into structured object which can be used to format\r\n\t * the number.\r\n\t *\r\n\t * @param format  Format string, i.e. \"#,###.00\"\r\n\t * @param base    Override base unit\r\n\t * @return Parsed information\r\n\t */\r\n\tprotected parseFormat(format: string, base?: TimeUnit): any {\r\n\r\n\t\t// Check cache\r\n\t\t// TODO\r\n\t\t// let cached = this.getCache(format);\r\n\t\t// if (cached != null) {\r\n\t\t// \treturn cached;\r\n\t\t// }\r\n\r\n\t\t// no base unit?\r\n\t\tlet baseUnit = base || this.get(\"baseUnit\");\r\n\r\n\t\t// Initialize duration parsing info\r\n\t\tlet info = {\r\n\t\t\t\"positive\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"negative\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t},\r\n\t\t\t\"zero\": {\r\n\t\t\t\t\"color\": \"\",\r\n\t\t\t\t\"template\": \"\",\r\n\t\t\t\t\"parts\": <any>[],\r\n\t\t\t\t\"source\": \"\",\r\n\t\t\t\t\"baseUnit\": baseUnit,\r\n\t\t\t\t\"parsed\": false,\r\n\t\t\t\t\"absolute\": false\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Escape double vertical bars (that mean display one vertical bar)\r\n\t\tformat = format.replace(\"||\", $type.PLACEHOLDER2);\r\n\r\n\t\t// Split it up and deal with different formats\r\n\t\tlet parts = format.split(\"|\");\r\n\t\tinfo.positive.source = parts[0];\r\n\r\n\t\tif (typeof parts[2] === \"undefined\") {\r\n\t\t\tinfo.zero = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.zero.source = parts[2];\r\n\t\t}\r\n\r\n\t\tif (typeof parts[1] === \"undefined\") {\r\n\t\t\tinfo.negative = info.positive;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tinfo.negative.source = parts[1];\r\n\t\t}\r\n\r\n\t\t// Parse each\r\n\t\t$object.each(info, (_part, item) => {\r\n\t\t\t// Already parsed\r\n\t\t\tif (item.parsed) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Check cached\r\n\t\t\t// TODO\r\n\t\t\t// if (typeof this.getCache(item.source) !== \"undefined\") {\r\n\t\t\t// \tinfo[part] = this.getCache(item.source);\r\n\t\t\t// \treturn;\r\n\t\t\t// }\r\n\r\n\t\t\t// Begin parsing\r\n\t\t\tlet partFormat: string = item.source;\r\n\r\n\t\t\t// Check for [] directives\r\n\t\t\tlet dirs: string[] | null = [];\r\n\t\t\tdirs = item.source.match(/^\\[([^\\]]*)\\]/);\r\n\t\t\tif (dirs && dirs.length && dirs[0] !== \"\") {\r\n\t\t\t\tpartFormat = item.source.substr(dirs[0].length);\r\n\t\t\t\titem.color = dirs[1];\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Let TextFormatter split into chunks\r\n\t\t\tlet chunks = TextFormatter.chunk(partFormat, true);\r\n\t\t\tfor (let i: number = 0; i < chunks.length; i++) {\r\n\t\t\t\tlet chunk = chunks[i];\r\n\r\n\t\t\t\t// replace back double vertical bar\r\n\t\t\t\tchunk.text = chunk.text.replace($type.PLACEHOLDER2, \"|\");\r\n\r\n\t\t\t\tif (chunk.type === \"value\") {\r\n\r\n\t\t\t\t\t// Just \"Duration\"?\r\n\t\t\t\t\t// if (chunk.text.toLowerCase() === \"duration\") {\r\n\t\t\t\t\t// \tchunk.text = durationFormat;\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\t// Check for \"a\" (absolute) modifier\r\n\t\t\t\t\tif (chunk.text.match(/[yYMdDwhHKkmsSn]+a/)) {\r\n\t\t\t\t\t\titem.absolute = true;\r\n\t\t\t\t\t\tchunk.text = chunk.text.replace(/([yYMdDwhHKkmsSn]+)a/, \"$1\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find all possible parts\r\n\t\t\t\t\tlet matches = chunk.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);\r\n\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t// Populate template\r\n\t\t\t\t\t\tfor (let x = 0; x < matches.length; x++) {\r\n\t\t\t\t\t\t\t// Is it an alias?\r\n\t\t\t\t\t\t\tif (matches[x] == null) {\r\n\t\t\t\t\t\t\t\tmatches[x] = this._unitAliases[matches[x]];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\titem.parts.push(matches[x]);\r\n\t\t\t\t\t\t\tchunk.text = chunk.text.replace(matches[x], $type.PLACEHOLDER);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Apply to template\r\n\t\t\t\titem.template += chunk.text;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply style formatting\r\n\t\t\t//item.template = TextFormatter.format(item.template, this.outputFormat);\r\n\r\n\t\t\t// Save cache\r\n\t\t\t// TODO\r\n\t\t\t//this.setCache(item.source, item);\r\n\r\n\t\t\t// Mark this as parsed\r\n\t\t\titem.parsed = true;\r\n\t\t});\r\n\r\n\t\t// Save cache (the whole thing)\r\n\t\t// TODO\r\n\t\t//this.setCache(format, info);\r\n\r\n\t\treturn info;\r\n\t}\r\n\r\n\t/**\r\n\t * Applies parsed format to a numeric value.\r\n\t *\r\n\t * @param value    Value\r\n\t * @param details  Parsed format as returned by {parseFormat}\r\n\t * @return Formatted duration\r\n\t */\r\n\tprotected applyFormat(value: number, details: any): string {\r\n\r\n\t\t// Use absolute values\r\n\t\tlet negative = !details.absolute && (value < this.get(\"negativeBase\"));\r\n\t\tvalue = Math.abs(value);\r\n\r\n\t\t// Recalculate to milliseconds\r\n\t\tlet tstamp = this.toTimeStamp(value, details.baseUnit);\r\n\r\n\t\t// Init return value\r\n\t\tlet res = details.template;\r\n\r\n\t\t// Iterate through duration parts\r\n\t\tfor (let i = 0, len = details.parts.length; i < len; i++) {\r\n\r\n\t\t\t// Gather the part\r\n\t\t\tlet part = details.parts[i];\r\n\t\t\tlet unit = this._toTimeUnit(part.substr(0, 1));\r\n\t\t\tlet digits = part.length;\r\n\r\n\t\t\t// Calculate current unit value\r\n\t\t\tlet ints = Math.floor(tstamp / this._getUnitValue(unit!));\r\n\t\t\tres = res.replace($type.PLACEHOLDER, $utils.padString(ints, digits, \"0\"));\r\n\r\n\t\t\t// Reduce timestamp\r\n\t\t\ttstamp -= ints * this._getUnitValue(unit!);\r\n\t\t}\r\n\r\n\t\t// Reapply negative sign\r\n\t\tif (negative) {\r\n\t\t\tres = \"-\" + res;\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value to timestamp in milliseconds.\r\n\t *\r\n\t * @param value     A source value\r\n\t * @param baseUnit  Base unit the source value is in: \"q\", \"s\", \"i\", \"h\", \"d\", \"w\", \"m\", \"y\"\r\n\t * @return Value representation as a timestamp in milliseconds\r\n\t */\r\n\tpublic toTimeStamp(value: number, baseUnit: TimeUnit): number {\r\n\t\treturn value * this._getUnitValue(baseUnit);\r\n\t}\r\n\r\n\tprotected _toTimeUnit(code: string): TimeUnit | undefined {\r\n\t\tswitch (code) {\r\n\t\t\tcase \"S\":\r\n\t\t\t\treturn \"millisecond\";\r\n\t\t\tcase \"s\":\r\n\t\t\t\treturn \"second\";\r\n\t\t\tcase \"m\":\r\n\t\t\t\treturn \"minute\";\r\n\t\t\tcase \"h\":\r\n\t\t\t\treturn \"hour\";\r\n\t\t\tcase \"d\":\r\n\t\t\t\treturn \"day\";\r\n\t\t\tcase \"w\":\r\n\t\t\t\treturn \"week\";\r\n\t\t\tcase \"M\":\r\n\t\t\t\treturn \"month\";\r\n\t\t\tcase \"y\":\r\n\t\t\t\treturn \"year\";\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Returns appropriate default format for the value.\r\n\t *\r\n\t * If `maxValue` is sepcified, it will use that value to determine the time\r\n\t * unit for the format.\r\n\t *\r\n\t * For example if your `baseUnit` is `\"second\"` and you pass in `10`, you\r\n\t * will get `\"10\"`.\r\n\t *\r\n\t * However, you might want it to be formatted in the context of bigger scale,\r\n\t * say 10 minutes (600 seconds). If you pass in `600` as `maxValue`, all\r\n\t * values, including small ones will use format with minutes, e.g.:\r\n\t * `00:10`, `00:50`, `12: 30`, etc.\r\n\t *\r\n\t * @param value     Value to format\r\n\t * @param maxValue  Maximum value to be used to determine format\r\n\t * @param baseUnit  Base unit of the value\r\n\t * @return Format\r\n\t */\r\n\tpublic getFormat(value: number, maxValue?: number, baseUnit?: TimeUnit): string {\r\n\r\n\t\t// Is format override set?\r\n\t\tif (this.get(\"durationFormat\") != null) {\r\n\t\t\treturn this.get(\"durationFormat\")!;\r\n\t\t}\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\tif (maxValue != null && value != maxValue) {\r\n\t\t\tvalue = Math.abs(value);\r\n\t\t\tmaxValue = Math.abs(maxValue);\r\n\t\t\tlet maxUnit = this.getValueUnit(Math.max(value, maxValue), baseUnit);\r\n\t\t\t//let diffUnit = this.getValueUnit(Math.abs(maxValue - value), baseUnit);\r\n\t\t\t//console.log(maxUnit, diffUnit);\r\n\t\t\treturn (<any>this.get(\"durationFormats\"))[baseUnit!][maxUnit!];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet unit = this.getValueUnit(value, baseUnit);\r\n\t\t\treturn (<any>this.get(\"durationFormats\"))[baseUnit!][unit!];\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns value's closest denominator time unit, e.g 100 seconds is\r\n\t * `\"minute\"`, while 59 seconds would still be `second`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Denominator\r\n\t */\r\n\tpublic getValueUnit(value: number, baseUnit?: TimeUnit): TimeUnit | undefined {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\t// Convert to milliseconds\r\n\t\tlet currentUnit: any;\r\n\t\tlet ms = this.getMilliseconds(value, baseUnit);\r\n\t\t$object.eachContinue(this._getUnitValues(), (key, val) => {\r\n\t\t\tif (key == baseUnit || currentUnit) {\r\n\t\t\t\tlet num = ms / val;\r\n\t\t\t\tif (num <= 1) {\r\n\t\t\t\t\tif (!currentUnit) {\r\n\t\t\t\t\t\tcurrentUnit = key;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tcurrentUnit = key;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\treturn currentUnit;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts value to milliseconds according to `baseUnit`.\r\n\t *\r\n\t * @param value     Source duration value\r\n\t * @param baseUnit  Base unit\r\n\t * @return Value in milliseconds\r\n\t */\r\n\tpublic getMilliseconds(value: number, baseUnit?: TimeUnit): number {\r\n\r\n\t\t// Get base unit\r\n\t\tif (!baseUnit) {\r\n\t\t\tbaseUnit = this.get(\"baseUnit\");\r\n\t\t}\r\n\r\n\t\treturn value * this._getUnitValue(baseUnit!);\r\n\t}\r\n\r\n\tprotected _getUnitValue(timeUnit: TimeUnit): number {\r\n\t\treturn this._getUnitValues()[timeUnit];\r\n\t}\r\n\r\n\tprotected _getUnitValues(): any {\r\n\t\treturn {\r\n\t\t\t\"millisecond\": 1,\r\n\t\t\t\"second\": 1000,\r\n\t\t\t\"minute\": 60000,\r\n\t\t\t\"hour\": 3600000,\r\n\t\t\t\"day\": 86400000,\r\n\t\t\t\"week\": 604800000,\r\n\t\t\t\"month\": 2592000000,\r\n\t\t\t\"year\": 31536000000,\r\n\t\t};\r\n\t}\r\n\r\n}\r\n","/**\n * amCharts 5 locale\n * \n * Locale: en\n * Language: International English\n * Author: Martynas Majeris\n *\n * Follow instructions in [on this page](https://www.amcharts.com/docs/v5/tutorials/creating-translations/) to make corrections or add new translations.\n *\n * ---\n * Edit but leave the header section above this line. You can remove any\n * subsequent comment sections.\n * ---\n *\n * Use this file as a template to create translations. Leave the key part in\n * English intact. Fill the value with a translation.\n *\n * Empty string means no translation, so default \"International English\"\n * will be used.\n *\n * If you need the translation to literally be an empty string, use `null`\n * instead.\n *\n * IMPORTANT:\n * When translating make good effort to keep the translation length\n * at least the same chartcount as the English, especially for short prompts.\n *\n * Having significantly longer prompts may distort the actual charts.\n *\n * NOTE:\n * Some prompts - like months or weekdays - come in two versions: full and\n * shortened.\n *\n * If there's no official shortened version of these in your language, and it\n * would not be possible to invent such short versions that don't seem weird\n * to native speakers of that language, fill those with the same as full\n * version.\n *\n * PLACEHOLDERS:\n * Some prompts have placeholders like \"%1\". Those will be replaced by actual\n * values during translation and should be retained in the translated prompts.\n *\n * Placeholder positions may be changed to better suit structure of the\n * sentence.\n *\n * For example \"From %1 to %2\", when actually used will replace \"%1\" with an\n * actual value representing range start, and \"%2\" will be replaced by end\n * value.\n *\n * E.g. in a Scrollbar for Value axis \"From %1 to %2\" will become\n * \"From 100 to 200\". You may translate \"From\" and \"to\", as well as re-arrange\n * the order of the prompt itself, but make sure the \"%1\" and \"%2\" remain, in\n * places where they will make sense.\n *\n * Save the file as language_LOCALE, i.e. `en_GB.ts`, `fr_FR.ts`, etc.\n */\nexport default {\n\t\"firstDayOfWeek\": 1,\n\t\n\t// Number formatting options.\n\t// \n\t// Please check with the local standards which separator is accepted to be\n\t// used for separating decimals, and which for thousands.\n\t\"_decimalSeparator\": \".\",\n\t\"_thousandSeparator\": \",\",\n\n\t// Position of the percent sign in numbers\n\t\"_percentPrefix\": null,\n\t\"_percentSuffix\": \"%\",\n\n\t// Suffixes for numbers\n\t// When formatting numbers, big or small numers might be reformatted to\n\t// shorter version, by applying a suffix.\n\t// \n\t// For example, 1000000 might become \"1m\".\n\t// Or 1024 might become \"1KB\" if we're formatting byte numbers.\n\t// \n\t// This section defines such suffixes for all such cases.\n\t\"_big_number_suffix_3\": \"k\",\n\t\"_big_number_suffix_6\": \"M\",\n\t\"_big_number_suffix_9\": \"G\",\n\t\"_big_number_suffix_12\": \"T\",\n\t\"_big_number_suffix_15\": \"P\",\n\t\"_big_number_suffix_18\": \"E\",\n\t\"_big_number_suffix_21\": \"Z\",\n\t\"_big_number_suffix_24\": \"Y\",\n\n\t\"_small_number_suffix_3\": \"m\",\n\t\"_small_number_suffix_6\": \"μ\",\n\t\"_small_number_suffix_9\": \"n\",\n\t\"_small_number_suffix_12\": \"p\",\n\t\"_small_number_suffix_15\": \"f\",\n\t\"_small_number_suffix_18\": \"a\",\n\t\"_small_number_suffix_21\": \"z\",\n\t\"_small_number_suffix_24\": \"y\",\n\n\t\"_byte_suffix_B\": \"B\",\n\t\"_byte_suffix_KB\": \"KB\",\n\t\"_byte_suffix_MB\": \"MB\",\n\t\"_byte_suffix_GB\": \"GB\",\n\t\"_byte_suffix_TB\": \"TB\",\n\t\"_byte_suffix_PB\": \"PB\",\n\n\t// Default date formats for various periods.\n\t// \n\t// This should reflect official or de facto formatting universally accepted\n\t// in the country translation is being made for\n\t// Available format codes here:\n\t// https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#Format_codes\n\t// \n\t// This will be used when formatting date/time for particular granularity,\n\t// e.g. \"_date_hour\" will be shown whenever we need to show time as hours.\n\t// \n\t// \"date\" is used as in default date format when showing standalone dates.\n\t\"_date\": \"yyyy-MM-dd\",\n\t\"_date_millisecond\": \"mm:ss SSS\",\n\t\"_date_millisecond_full\": \"HH:mm:ss SSS\",\n\t\"_date_second\": \"HH:mm:ss\",\n\t\"_date_second_full\": \"HH:mm:ss\",\n\t\"_date_minute\": \"HH:mm\",\n\t\"_date_minute_full\": \"HH:mm - MMM dd, yyyy\",\n\t\"_date_hour\": \"HH:mm\",\n\t\"_date_hour_full\": \"HH:mm - MMM dd, yyyy\",\n\t\"_date_day\": \"MMM dd\",\n\t\"_date_day_full\": \"MMM dd, yyyy\",\n\t\"_date_week\": \"ww\",\n\t\"_date_week_full\": \"MMM dd, yyyy\",\n\t\"_date_month\": \"MMM\",\n\t\"_date_month_full\": \"MMM, yyyy\",\n\t\"_date_year\": \"yyyy\",\n\n\t// Default duration formats for various base units.\n\t// \n\t// This will be used by DurationFormatter to format numeric values into\n\t// duration.\n\t// \n\t// Notice how each duration unit comes in several versions. This is to ensure\n\t// that each base unit is shown correctly.\n\t// \n\t// For example, if we have baseUnit set to \"second\", meaning our duration is\n\t// in seconds.\n\t// \n\t// If we pass in `50` to formatter, it will know that we have just 50 seconds\n\t// (less than a minute) so it will use format in `\"_duration_second\"` (\"ss\"),\n\t// and the formatted result will be in like `\"50\"`.\n\t// \n\t// If we pass in `70`, which is more than a minute, the formatter will switch\n\t// to `\"_duration_second_minute\"` (\"mm:ss\"), resulting in \"01:10\" formatted\n\t// text.\n\t// \n\t// Available codes here:\n\t// https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/#Available_Codes\n\t\"_duration_millisecond\": \"SSS\",\n\t\"_duration_millisecond_second\": \"ss.SSS\",\n\t\"_duration_millisecond_minute\": \"mm:ss SSS\",\n\t\"_duration_millisecond_hour\": \"hh:mm:ss SSS\",\n\t\"_duration_millisecond_day\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_week\": \"d'd' mm:ss SSS\",\n\t\"_duration_millisecond_month\": \"M'm' dd'd' mm:ss SSS\",\n\t\"_duration_millisecond_year\": \"y'y' MM'm' dd'd' mm:ss SSS\",\n\n\t\"_duration_second\": \"ss\",\n\t\"_duration_second_minute\": \"mm:ss\",\n\t\"_duration_second_hour\": \"hh:mm:ss\",\n\t\"_duration_second_day\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_week\": \"d'd' hh:mm:ss\",\n\t\"_duration_second_month\": \"M'm' dd'd' hh:mm:ss\",\n\t\"_duration_second_year\": \"y'y' MM'm' dd'd' hh:mm:ss\",\n\n\t\"_duration_minute\": \"mm\",\n\t\"_duration_minute_hour\": \"hh:mm\",\n\t\"_duration_minute_day\": \"d'd' hh:mm\",\n\t\"_duration_minute_week\": \"d'd' hh:mm\",\n\t\"_duration_minute_month\": \"M'm' dd'd' hh:mm\",\n\t\"_duration_minute_year\": \"y'y' MM'm' dd'd' hh:mm\",\n\n\t\"_duration_hour\": \"hh'h'\",\n\t\"_duration_hour_day\": \"d'd' hh'h'\",\n\t\"_duration_hour_week\": \"d'd' hh'h'\",\n\t\"_duration_hour_month\": \"M'm' dd'd' hh'h'\",\n\t\"_duration_hour_year\": \"y'y' MM'm' dd'd' hh'h'\",\n\n\t\"_duration_day\": \"d'd'\",\n\t\"_duration_day_week\": \"d'd'\",\n\t\"_duration_day_month\": \"M'm' dd'd'\",\n\t\"_duration_day_year\": \"y'y' MM'm' dd'd'\",\n\n\t\"_duration_week\": \"w'w'\",\n\t\"_duration_week_month\": \"w'w'\",\n\t\"_duration_week_year\": \"w'w'\",\n\n\t\"_duration_month\": \"M'm'\",\n\t\"_duration_month_year\": \"y'y' MM'm'\",\n\n\t\"_duration_year\": \"y'y'\",\n\n\t// Era translations\n\t\"_era_ad\": \"AD\",\n\t\"_era_bc\": \"BC\",\n\n\t// Day part, used in 12-hour formats, e.g. 5 P.M.\n\t// Please note that these come in 3 variants:\n\t// * one letter (e.g. \"A\")\n\t// * two letters (e.g. \"AM\")\n\t// * two letters with dots (e.g. \"A.M.\")\n\t// \n\t// All three need to to be translated even if they are all the same. Some\n\t// users might use one, some the other.\n\t\"A\": \"\",\n\t\"P\": \"\",\n\t\"AM\": \"\",\n\t\"PM\": \"\",\n\t\"A.M.\": \"\",\n\t\"P.M.\": \"\",\n\n\t// Date-related stuff.\n\t// \n\t// When translating months, if there's a difference, use the form which is\n\t// best for a full date, e.g. as you would use it in \"2018 January 1\".\n\t// \n\t// Note that May is listed twice. This is because in English May is the same\n\t// in both long and short forms, while in other languages it may not be the\n\t// case. Translate \"May\" to full word, while \"May(short)\" to shortened\n\t// version.\n\t// \n\t// Should month names and weekdays be capitalized or not?\n\t// \n\t// Rule of thumb is this: if the names should always be capitalized,\n\t// regardless of name position within date (\"January\", \"21st January 2018\",\n\t// etc.) use capitalized names. Otherwise enter all lowercase.\n\t// \n\t// The date formatter will automatically capitalize names if they are the\n\t// first (or only) word in resulting date.\n\t\"January\": \"\",\n\t\"February\": \"\",\n\t\"March\": \"\",\n\t\"April\": \"\",\n\t\"May\": \"\",\n\t\"June\": \"\",\n\t\"July\": \"\",\n\t\"August\": \"\",\n\t\"September\": \"\",\n\t\"October\": \"\",\n\t\"November\": \"\",\n\t\"December\": \"\",\n\t\"Jan\": \"\",\n\t\"Feb\": \"\",\n\t\"Mar\": \"\",\n\t\"Apr\": \"\",\n\t\"May(short)\": \"May\",\n\t\"Jun\": \"\",\n\t\"Jul\": \"\",\n\t\"Aug\": \"\",\n\t\"Sep\": \"\",\n\t\"Oct\": \"\",\n\t\"Nov\": \"\",\n\t\"Dec\": \"\",\n\n\t// Weekdays.\n\t\"Sunday\": \"\",\n\t\"Monday\": \"\",\n\t\"Tuesday\": \"\",\n\t\"Wednesday\": \"\",\n\t\"Thursday\": \"\",\n\t\"Friday\": \"\",\n\t\"Saturday\": \"\",\n\t\"Sun\": \"\",\n\t\"Mon\": \"\",\n\t\"Tue\": \"\",\n\t\"Wed\": \"\",\n\t\"Thu\": \"\",\n\t\"Fri\": \"\",\n\t\"Sat\": \"\",\n\n\t// Date ordinal function.\n\t// \n\t// This is used when adding number ordinal when formatting days in dates.\n\t// \n\t// E.g. \"January 1st\", \"February 2nd\".\n\t// \n\t// The function accepts day number, and returns a string to be added to the\n\t// day, like in default English translation, if we pass in 2, we will receive\n\t// \"nd\" back.\n\t\"_dateOrd\": function(day: number): string {\n\t\tlet res = \"th\";\n\t\tif ((day < 11) || (day > 13)) {\n\t\t\tswitch (day % 10) {\n\t\t\t\tcase 1:\n\t\t\t\t\tres = \"st\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tres = \"nd\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tres = \"rd\"\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\t// Various chart controls.\n\t// Shown as a tooltip on zoom out button.\n\t\"Zoom Out\": \"\",\n\n\t// Timeline buttons\n\t\"Play\": \"\",\n\t\"Stop\": \"\",\n\n\t// Chart's Legend screen reader title.\n\t\"Legend\": \"\",\n\n\t// Legend's item screen reader indicator.\n\t\"Press ENTER to toggle\": \"\",\n\n\t// Shown when the chart is busy loading something.\n\t\"Loading\": \"\",\n\n\t// Shown as the first button in the breadcrumb navigation, e.g.:\n\t// Home > First level > ...\n\t\"Home\": \"\",\n\n\t// Chart types.\n\t// Those are used as default screen reader titles for the main chart element\n\t// unless developer has set some more descriptive title.\n\t\"Chart\": \"\",\n\t\"Serial chart\": \"\",\n\t\"X/Y chart\": \"\",\n\t\"Pie chart\": \"\",\n\t\"Gauge chart\": \"\",\n\t\"Radar chart\": \"\",\n\t\"Sankey diagram\": \"\",\n\t\"Flow diagram\": \"\",\n\t\"Chord diagram\": \"\",\n\t\"TreeMap chart\": \"\",\n\t\"Force directed tree\": \"\",\n\t\"Sliced chart\": \"\",\n\n\t// Series types.\n\t// Used to name series by type for screen readers if they do not have their\n\t// name set.\n\t\"Series\": \"\",\n\t\"Candlestick Series\": \"\",\n\t\"OHLC Series\": \"\",\n\t\"Column Series\": \"\",\n\t\"Line Series\": \"\",\n\t\"Pie Slice Series\": \"\",\n\t\"Funnel Series\": \"\",\n\t\"Pyramid Series\": \"\",\n\t\"X/Y Series\": \"\",\n\n\t// Map-related stuff.\n\t\"Map\": \"\",\n\t\"Press ENTER to zoom in\": \"\",\n\t\"Press ENTER to zoom out\": \"\",\n\t\"Use arrow keys to zoom in and out\": \"\",\n\t\"Use plus and minus keys on your keyboard to zoom in and out\": \"\",\n\n\t// Export-related stuff.\n\t// These prompts are used in Export menu labels.\n\t// \n\t// \"Export\" is the top-level menu item.\n\t// \n\t// \"Image\", \"Data\", \"Print\" as second-level indicating type of export\n\t// operation.\n\t// \n\t// Leave actual format untranslated, unless you absolutely know that they\n\t// would convey more meaning in some other way.\n\t\"Export\": \"\",\n\t\"Image\": \"\",\n\t\"Data\": \"\",\n\t\"Print\": \"\",\n\t\"Press ENTER or use arrow keys to navigate\": \"\",\n\t\"Press ENTER to open\": \"\",\n\t\"Press ENTER to print.\": \"\",\n\t\"Press ENTER to export as %1.\": \"\",\n\t\"(Press ESC to close this message)\": \"\",\n\t\"Image Export Complete\": \"\",\n\t\"Export operation took longer than expected. Something might have gone wrong.\": \"\",\n\t\"Saved from\": \"\",\n\t\"PNG\": \"\",\n\t\"JPG\": \"\",\n\t\"GIF\": \"\",\n\t\"SVG\": \"\",\n\t\"PDF\": \"\",\n\t\"JSON\": \"\",\n\t\"CSV\": \"\",\n\t\"XLSX\": \"\",\n\t\"HTML\": \"\",\n\n\t// Scrollbar-related stuff.\n\t// \n\t// Scrollbar is a control which can zoom and pan the axes on the chart.\n\t// \n\t// Each scrollbar has two grips: left or right (for horizontal scrollbar) or\n\t// upper and lower (for vertical one).\n\t// \n\t// Prompts change in relation to whether Scrollbar is vertical or horizontal.\n\t// \n\t// The final section is used to indicate the current range of selection.\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\": \"\",\n\t\"Use left and right arrows to move selection\": \"\",\n\t\"Use left and right arrows to move left selection\": \"\",\n\t\"Use left and right arrows to move right selection\": \"\",\n\t\"Use TAB select grip buttons or up and down arrows to change selection\": \"\",\n\t\"Use up and down arrows to move selection\": \"\",\n\t\"Use up and down arrows to move lower selection\": \"\",\n\t\"Use up and down arrows to move upper selection\": \"\",\n\t\"From %1 to %2\": \"\",\n\t\"From %1\": \"\",\n\t\"To %1\": \"\",\n\n\t// Data loader-related.\n\t\"No parser available for file: %1\": \"\",\n\t\"Error parsing file: %1\": \"\",\n\t\"Unable to load file: %1\": \"\",\n\t\"Invalid date\": \"\",\n\n\t// Common actions\n\t\"Close\": \"\",\n\t\"Minimize\": \"\"\n\n};","import { Entity, IEntitySettings, IEntityPrivate } from \"./Entity\"\nimport * as $array from \"./Array\"\nimport en from \"../../../locales/en\";\n\n/**\n * Defines properties that exist for the locale.\n *\n * @ignore\n */\nexport interface ILocaleSettings {\n\t\"firstDayOfWeek\"?: number,\n\n\t// number formatter related\n\t\"_decimalSeparator\"?: string;\n\t\"_thousandSeparator\"?: string;\n\n\t\"_percentPrefix\"?: string | null;\n\t\"_percentSuffix\"?: string | null;\n\n\t\"_big_number_suffix_3\"?: string;\n\t\"_big_number_suffix_6\"?: string;\n\t\"_big_number_suffix_9\"?: string;\n\t\"_big_number_suffix_12\"?: string;\n\t\"_big_number_suffix_15\"?: string;\n\t\"_big_number_suffix_18\"?: string;\n\t\"_big_number_suffix_21\"?: string;\n\t\"_big_number_suffix_24\"?: string;\n\n\t\"_small_number_suffix_24\"?: string;\n\t\"_small_number_suffix_21\"?: string;\n\t\"_small_number_suffix_18\"?: string;\n\t\"_small_number_suffix_15\"?: string;\n\t\"_small_number_suffix_12\"?: string;\n\t\"_small_number_suffix_9\"?: string;\n\t\"_small_number_suffix_6\"?: string;\n\t\"_small_number_suffix_3\"?: string;\n\n\t\"_byte_suffix_B\"?: string;\n\t\"_byte_suffix_KB\"?: string;\n\t\"_byte_suffix_MB\"?: string;\n\t\"_byte_suffix_GB\"?: string;\n\t\"_byte_suffix_TB\"?: string;\n\t\"_byte_suffix_PB\"?: string;\n\n\t// Default date formats for various periods\n\t\"_date\"?: string;\n\t\"_date_millisecond\"?: string;\n\t\"_date_millisecond_full\"?: string;\n\t\"_date_second\"?: string;\n\t\"_date_second_full\"?: string;\n\t\"_date_minute\"?: string;\n\t\"_date_minute_full\"?: string;\n\t\"_date_hour\"?: string;\n\t\"_date_hour_full\"?: string;\n\t\"_date_day\"?: string;\n\t\"_date_day_full\"?: string;\n\t\"_date_week\"?: string;\n\t\"_date_week_full\"?: string;\n\t\"_date_month\"?: string;\n\t\"_date_month_full\"?: string;\n\t\"_date_year\"?: string;\n\n\t// Default duration formats for various base units\n\t\"_duration_millisecond\"?: string;\n\t\"_duration_millisecond_second\"?: string;\n\t\"_duration_millisecond_minute\"?: string;\n\t\"_duration_millisecond_hour\"?: string;\n\t\"_duration_millisecond_day\"?: string;\n\t\"_duration_millisecond_week\"?: string;\n\t\"_duration_millisecond_month\"?: string;\n\t\"_duration_millisecond_year\"?: string;\n\n\t\"_duration_second\"?: string;\n\t\"_duration_second_minute\"?: string;\n\t\"_duration_second_hour\"?: string;\n\t\"_duration_second_day\"?: string;\n\t\"_duration_second_week\"?: string;\n\t\"_duration_second_month\"?: string;\n\t\"_duration_second_year\"?: string;\n\n\t\"_duration_minute\"?: string;\n\t\"_duration_minute_hour\"?: string;\n\t\"_duration_minute_day\"?: string;\n\t\"_duration_minute_week\"?: string;\n\t\"_duration_minute_month\"?: string;\n\t\"_duration_minute_year\"?: string;\n\n\t\"_duration_hour\"?: string;\n\t\"_duration_hour_day\"?: string;\n\t\"_duration_hour_week\"?: string;\n\t\"_duration_hour_month\"?: string;\n\t\"_duration_hour_year\"?: string;\n\n\t\"_duration_day\"?: string;\n\t\"_duration_day_week\"?: string;\n\t\"_duration_day_month\"?: string;\n\t\"_duration_day_year\"?: string;\n\n\t\"_duration_week\"?: string;\n\t\"_duration_week_month\"?: string;\n\t\"_duration_week_year\"?: string;\n\n\t\"_duration_month\"?: string;\n\t\"_duration_month_year\"?: string;\n\n\t\"_duration_year\"?: string;\n\n\t// Era\n\t\"_era_ad\"?: string;\n\t\"_era_bc\"?: string;\n\n\t// Period\n\t\"A\"?: string;\n\t\"P\"?: string;\n\t\"AM\"?: string;\n\t\"PM\"?: string;\n\t\"A.M.\"?: string;\n\t\"P.M.\"?: string;\n\n\t// Dates\n\t\"January\"?: string;\n\t\"February\"?: string;\n\t\"March\"?: string;\n\t\"April\"?: string;\n\t\"May\"?: string;\n\t\"June\"?: string;\n\t\"July\"?: string;\n\t\"August\"?: string;\n\t\"September\"?: string;\n\t\"October\"?: string;\n\t\"November\"?: string;\n\t\"December\"?: string;\n\t\"Jan\"?: string;\n\t\"Feb\"?: string;\n\t\"Mar\"?: string;\n\t\"Apr\"?: string;\n\t\"May(short)\"?: string;\n\t\"Jun\"?: string;\n\t\"Jul\"?: string;\n\t\"Aug\"?: string;\n\t\"Sep\"?: string;\n\t\"Oct\"?: string;\n\t\"Nov\"?: string;\n\t\"Dec\"?: string;\n\t\"Sunday\"?: string;\n\t\"Monday\"?: string;\n\t\"Tuesday\"?: string;\n\t\"Wednesday\"?: string;\n\t\"Thursday\"?: string;\n\t\"Friday\"?: string;\n\t\"Saturday\"?: string;\n\t\"Sun\"?: string;\n\t\"Mon\"?: string;\n\t\"Tue\"?: string;\n\t\"Wed\"?: string;\n\t\"Thu\"?: string;\n\t\"Fri\"?: string;\n\t\"Sat\"?: string;\n\n\t// Chart elements\n\t\"Zoom Out\"?: string;\n\t\"Play\"?: string;\n\t\"Stop\"?: string;\n\t\"Legend\"?: string;\n\t\"Press ENTER to toggle\"?: string;\n\t\"Loading\"?: string;\n\t\"%1 shown\"?: string;\n\t\"%1 hidden\"?: string;\n\n\t// Chart types\n\t\"Chart\"?: string;\n\t\"Serial chart\"?: string;\n\t\"X/Y chart\"?: string;\n\t\"Pie chart\"?: string;\n\t\"Sunburst chart\"?: string;\n\t\"Gauge chart\"?: string;\n\t\"Radar chart\"?: string;\n\t\"Sankey diagram\"?: string;\n\t\"Flow diagram\"?: string;\n\t\"Chord diagram\"?: string;\n\t\"TreeMap chart\"?: string;\n\t\"Force directed tree\"?: string;\n\t\"Sliced chart\"?: string;\n\n\t// Series types\n\t\"Series\"?: string;\n\t\"Candlestick Series\"?: string;\n\t\"OHLC Series\"?: string;\n\t\"Column Series\"?: string;\n\t\"Line Series\"?: string;\n\t\"Pie Slice Series\"?: string;\n\t\"Funnel Series\"?: string;\n\t\"Pyramid Series\"?: string;\n\t\"X/Y Series\"?: string;\n\n\t// Map-related\n\t\"Map\"?: string;\n\t\"Press ENTER to zoom in\"?: string;\n\t\"Press ENTER to zoom out\"?: string;\n\t\"Use arrow keys to zoom in and out\"?: string;\n\t\"Use plus and minus keys on your keyboard to zoom in and out\"?: string;\n\t\"Home\"?: string;\n\t\"Zoom level changed to %1\"?: string;\n\n\t// Export-related\n\t\"Export\"?: string;\n\t\"Image\"?: string;\n\t\"Data\"?: string;\n\t\"Print\"?: string;\n\t\"Press ENTER or use arrow keys to navigate\"?: string;\n\t\"Press ENTER to open\"?: string;\n\t\"Press ENTER to print.\"?: string;\n\t\"Press ENTER to export as %1.\"?: string;\n\t\"(Press ESC to close this message)\"?: string;\n\t\"Image Export Complete\"?: string;\n\t\"Export operation took longer than expected. Something might have gone wrong.\"?: string;\n\t\"Saved from\"?: string;\n\t\"PNG\"?: string;\n\t\"JPG\"?: string;\n\t\"GIF\"?: string;\n\t\"SVG\"?: string;\n\t\"PDF\"?: string;\n\t\"JSON\"?: string;\n\t\"CSV\"?: string;\n\t\"XLSX\"?: string;\n\t\"HTML\"?: string;\n\n\t// Scrollbar-related\n\t\"Use TAB to select grip buttons or left and right arrows to change selection\"?: string;\n\t\"Use left and right arrows to move selection\"?: string;\n\t\"Use left and right arrows to move left selection\"?: string;\n\t\"Use left and right arrows to move right selection\"?: string;\n\t\"Use TAB select grip buttons or up and down arrows to change selection\"?: string;\n\t\"Use up and down arrows to move selection\"?: string;\n\t\"Use up and down arrows to move lower selection\"?: string;\n\t\"Use up and down arrows to move upper selection\"?: string;\n\t\"From %1 to %2\"?: string;\n\t\"From %1\"?: string;\n\t\"To %1\"?: string;\n\n\t// Data loader-related\n\t\"No parser available for file: %1\"?: string;\n\t\"Error parsing file: %1\"?: string;\n\t\"Unable to load file: %1\"?: string;\n\t\"Invalid date\"?: string;\n\n\t// Common actions\n\t\"Close\"?: string;\n\t\"Minimize\"?: string;\n\n\t\"Venn Series\"?: string;\n\t\"Venn Diagram\"?: string;\n}\n\n/**\n * Defines functions that exist for the locale.\n *\n * @ignore\n */\nexport interface ILocaleFunctions {\n\t// ordinal function\n\t\"_dateOrd\": (day: number) => string;\n}\n\n/**\n * Defines all of the defaults for locale properties.\n * @ignore\n */\nexport interface ILocaleDefault extends ILocaleSettings, ILocaleFunctions { }\n\n/**\n * Defines locale interface.\n *\n * @ignore\n */\nexport interface ILocale extends Partial<ILocaleDefault> { };\n\nexport interface ILanguageSettings extends IEntitySettings {\n}\n\nexport interface ILanguagePrivate extends IEntityPrivate {\n\n\t/**\n\t * A locale for International English (default).\n\t */\n\tdefaultLocale: ILocale;\n\n}\n\nexport class Language extends Entity {\n\tdeclare public _settings: ILanguageSettings;\n\tdeclare public _privateSettings: ILanguagePrivate;\n\n\tprotected _setDefaults() {\n\t\tthis.setPrivate(\"defaultLocale\", en);\n\t\tsuper._setDefaults();\n\t}\n\n\tpublic translate<Key extends keyof ILocaleSettings>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\n\n\t\t// Get langauge\n\t\tif (!locale) {\n\t\t\tlocale = this._root.locale || this.getPrivate(\"defaultLocale\");\n\t\t}\n\n\t\t// Init translation\n\t\tlet translation: string = prompt;\n\t\tlet value = locale[prompt];\n\n\t\t// Try to look for the translation\n\t\tif (value === null) {\n\t\t\ttranslation = \"\";\n\t\t}\n\t\telse if (value != null) {\n\t\t\t// It might be an empty string\n\t\t\tif (value) {\n\t\t\t\ttranslation = <string>value!;\n\t\t\t}\n\t\t}\n\t\telse if (locale !== this.getPrivate(\"defaultLocale\")) {\n\t\t\t// Try to look in default language\n\t\t\treturn this.translate(prompt, this.getPrivate(\"defaultLocale\"), ...rest);\n\t\t}\n\n\t\t// Replace %1, %2, etc params\n\t\tif (rest.length) {\n\t\t\tfor (let len = rest.length, i = 0; i < len; ++i) {\n\t\t\t\ttranslation = translation.split(\"%\" + (i + 1)).join(rest[i]);\n\t\t\t}\n\t\t}\n\n\t\t// Return the translation\n\t\treturn translation;\n\t}\n\n\tpublic translateAny(prompt: string, locale?: ILocale, ...rest: Array<string>): string {\n\t\treturn this.translate(<any>prompt, locale, ...rest);\n\t}\n\n\tpublic setTranslationAny(prompt: string, translation: string, locale?: ILocale): void {\n\t\tconst localeTarget = locale || this._root.locale;\n\t\t(<any>localeTarget)[prompt] = translation;\n\t}\n\n\tpublic translateEmpty<Key extends keyof ILocaleSettings>(prompt: Key, locale?: ILocale, ...rest: Array<string>): string {\n\t\tlet translation = this.translate(prompt, locale, ...rest);\n\t\treturn translation == prompt ? \"\" : translation;\n\t}\n\n\tpublic translateFunc<Key extends keyof ILocaleFunctions>(prompt: Key, locale?: ILocale): ILocaleFunctions[Key] {\n\n\t\tif ((<any>this._root.locale)[prompt]) {\n\t\t\treturn (<any>this._root.locale)[prompt];\n\t\t}\n\n\t\t// Try to look in default language\n\t\tif (locale !== this.getPrivate(\"defaultLocale\")) {\n\t\t\treturn this.translateFunc(prompt, this.getPrivate(\"defaultLocale\"));\n\t\t}\n\n\t\t// Fail - return empty function\n\t\treturn (): string => {\n\t\t\treturn \"\";\n\t\t};\n\t}\n\n\tpublic translateAll<Key extends keyof ILocaleSettings>(list: Array<Key>, locale?: ILocale): Array<string> {\n\t\t// Translate all items in the list\n\t\tif (!this.isDefault()) {\n\t\t\treturn $array.map(list, (x) => this.translate(x, locale));\n\n\t\t} else {\n\t\t\treturn list;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if the currently selected locale is a default locale.\n\t *\n\t * @return `true` if locale is default; `false` if it is not.\n\t */\n\tpublic isDefault(): boolean {\n\t\treturn this.getPrivate(\"defaultLocale\") === this._root.locale;\n\t}\n\n}\n","/**\n * Modified from Pixi:\n *\n * The MIT License\n *\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport type { IPoint } from \"./IPoint\";\n\n/**\n * @ignore\n */\nexport class Matrix {\n\tpublic a: number;\n\tpublic b: number;\n\tpublic c: number;\n\tpublic d: number;\n\tpublic tx: number;\n\tpublic ty: number;\n\n\tconstructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Sets the matrix based on all the available properties\n\t */\n\tsetTransform(x: number, y: number, pivotX: number, pivotY: number, rotation: number, scale: number = 1): void {\n\t\tthis.a = Math.cos(rotation) * scale;\n\t\tthis.b = Math.sin(rotation) * scale;\n\t\tthis.c = -Math.sin(rotation) * scale;\n\t\tthis.d = Math.cos(rotation) * scale;\n\t\tthis.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n\t\tthis.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\t}\n\n\t/**\n\t * Get a new position with the current transformation applied.\n\t * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n\t */\n\tapply(origin: IPoint): IPoint {\n\t\treturn {\n\t\t\tx: (this.a * origin.x) + (this.c * origin.y) + this.tx,\n\t\t\ty: (this.b * origin.x) + (this.d * origin.y) + this.ty\n\t\t};\n\t}\n\n\t/**\n\t * Get a new position with the inverse of the current transformation applied.\n\t * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n\t */\n\tapplyInverse(origin: IPoint): IPoint {\n\t\tconst id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n\t\treturn {\n\t\t\tx: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\n\t\t\ty: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\n\t\t};\n\t}\n\n\t/**\n\t * Appends the given Matrix to this Matrix.\n\t */\n\tappend(matrix: Matrix): void {\n\t\tconst a1 = this.a;\n\t\tconst b1 = this.b;\n\t\tconst c1 = this.c;\n\t\tconst d1 = this.d;\n\t\tthis.a = (matrix.a * a1) + (matrix.b * c1);\n\t\tthis.b = (matrix.a * b1) + (matrix.b * d1);\n\t\tthis.c = (matrix.c * a1) + (matrix.d * c1);\n\t\tthis.d = (matrix.c * b1) + (matrix.d * d1);\n\t\tthis.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n\t\tthis.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\t}\n\n\t/**\n\t * Prepends the given Matrix to this Matrix.\n\t */\n\tprepend(matrix: Matrix): void {\n\t\tconst tx1 = this.tx;\n\t\tif (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n\t\t\tconst a1 = this.a;\n\t\t\tconst c1 = this.c;\n\t\t\tthis.a = (a1 * matrix.a) + (this.b * matrix.c);\n\t\t\tthis.b = (a1 * matrix.b) + (this.b * matrix.d);\n\t\t\tthis.c = (c1 * matrix.a) + (this.d * matrix.c);\n\t\t\tthis.d = (c1 * matrix.b) + (this.d * matrix.d);\n\t\t}\n\t\tthis.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n\t\tthis.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\t}\n\n\t/**\n\t * Copies the other matrix's properties into this matrix\n\t */\n\tcopyFrom(matrix: Matrix): void {\n\t\tthis.a = matrix.a;\n\t\tthis.b = matrix.b;\n\t\tthis.c = matrix.c;\n\t\tthis.d = matrix.d;\n\t\tthis.tx = matrix.tx;\n\t\tthis.ty = matrix.ty;\n\t}\n}\n\n","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","/** @ignore *//** */\n\nimport {\n\tIRenderer, IContainer, IDisplayObject, IGraphics, IRendererEvents, IMargin,\n\tIText, ITextStyle, IRadialText, IPicture, IRendererEvent, ILayer, ICanvasOptions, BlendMode, IPointerEvent, Id\n} from \"./Renderer\";\nimport type { IBounds } from \"../../util/IBounds\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\n//import { Throttler } from \"../../util/Throttler\";\nimport { ArrayDisposer, Disposer, DisposerClass, IDisposer, CounterDisposer, MultiDisposer } from \"../../util/Disposer\";\nimport { TextFormatter, ITextChunk } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $object from \"../../util/Object\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n\n\n/**\n * @ignore\n */\nfunction checkArgs(name: string, actual: number, expected: number) {\n\tif (actual !== expected) {\n\t\tthrow new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkMinArgs(name: string, actual: number, expected: number) {\n\tif (actual < expected) {\n\t\tthrow new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkEvenArgs(name: string, actual: number, expected: number) {\n\tcheckMinArgs(name, actual, expected);\n\n\tif ((actual % expected) !== 0) {\n\t\tthrow new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n\t}\n}\n\n/**\n * @ignore\n * This splits the flag so that way 0017 will be processed as 0 0 17\n *\n * This is important for weird paths like `M17 5A1 1 0 0017 30 1 1 0 0017 5`\n */\nfunction splitArcFlags(args: Array<string>) {\n\tfor (let i = 0; i < args.length; i += 7) {\n\t\tlet index = i + 3;\n\t\tlet flag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])([01])(.*)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs.splice(index, 0, a[2]);\n\t\t\t\t++index;\n\n\t\t\t\tif (a[3].length > 0) {\n\t\t\t\t\targs[index] = a[3];\n\n\t\t\t\t} else {\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t++index;\n\n\t\tflag = args[index];\n\n\t\tif (flag.length > 1) {\n\t\t\tconst a = /^([01])(.+)$/.exec(flag);\n\n\t\t\tif (a !== null) {\n\t\t\t\targs.splice(index, 0, a[1]);\n\t\t\t\t++index;\n\n\t\t\t\targs[index] = a[2];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction assertBinary(value: number): 0 | 1 {\n\tif (value === 0 || value === 1) {\n\t\treturn value;\n\n\t} else {\n\t\tthrow new Error(\"Flag must be 0 or 1\");\n\t}\n}\n\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n\n/**\n * Function by smeans:\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\n * @ignore\n */\nfunction distributeId(id: number): number {\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 24; i++) {\n\t\trgb[i % 3] <<= 1;\n\t\trgb[i % 3] |= id & 0x01;\n\t\tid >>= 1;\n\t}\n\treturn (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n\n/**\n * @ignore\n */\nfunction eachTargets(hitTarget: CanvasDisplayObject, f: (target: CanvasDisplayObject) => boolean): void {\n\tfor (; ;) {\n\t\tif (hitTarget.interactive) {\n\t\t\tif (!f(hitTarget)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (hitTarget._parent) {\n\t\t\thitTarget = hitTarget._parent;\n\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// TODO feature detection for mouse/touch/pointer\n/**\n * @ignore\n */\nfunction onPointerEvent(element: EventTarget, name: string, f: (event: Array<IPointerEvent>) => void): IDisposer {\n\treturn $utils.addEventListener(element, $utils.getRendererEvent(name), (event: MouseEvent | TouchEvent) => {\n\t\tlet touches = (<any>event).touches;\n\t\tif (touches) {\n\t\t\tif (touches.length == 0) {\n\t\t\t\ttouches = (<any>event).changedTouches;\n\t\t\t}\n\n\t\t\tf($array.copy(<TouchList>touches));\n\n\t\t} else {\n\t\t\tf([<MouseEvent>event]);\n\t\t}\n\t});\n}\n\n/**\n * @ignore\n */\nfunction isTainted(image: HTMLImageElement): boolean {\n\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\tconst context = canvas.getContext(\"2d\", { willReadFrequently: true })! as CanvasRenderingContext2D;\n\tcontext.drawImage(image, 0, 0, 1, 1);\n\n\ttry {\n\t\tcontext.getImageData(0, 0, 1, 1);\n\t\treturn false;\n\t}\n\tcatch (err) {\n\t\tconsole.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n\t\treturn true;\n\t}\n}\n\n/**\n * This is needed to workaround a bug in iOS which causes it to not GC canvas elements.\n *\n * @ignore\n */\nfunction clearCanvas(view: HTMLCanvasElement) {\n\tview.width = 0;\n\tview.height = 0;\n\tview.style.width = \"0px\";\n\tview.style.height = \"0px\";\n}\n\n/**\n * @ignore\n */\nexport class CanvasPivot implements IPoint {\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasDisplayObject extends DisposerClass implements IDisplayObject, IDisposer {\n\tpublic _layer?: CanvasLayer;\n\n\tpublic mask: CanvasGraphics | null = null;\n\tpublic visible: boolean = true;\n\tpublic exportable?: boolean = true;\n\tpublic interactive: boolean = false;\n\tpublic inactive: boolean = false;\n\tpublic wheelable: boolean = false;\n\tpublic cancelTouch: boolean = false;\n\tpublic isMeasured: boolean = false;\n\tpublic buttonMode: boolean = false;\n\tpublic alpha: number = 1;\n\tpublic compoundAlpha: number = 1;\n\tpublic angle: number = 0;\n\tpublic scale: number = 1;\n\tpublic x: number = 0;\n\tpublic y: number = 0;\n\tpublic pivot: CanvasPivot = new CanvasPivot();\n\n\tpublic filter?: string;\n\n\tpublic cursorOverStyle?: string;\n\tpublic _replacedCursorStyle?: string;\n\n\tpublic _localMatrix: Matrix = new Matrix();\n\tpublic _matrix: Matrix = new Matrix();\n\t// TODO can this be replaced with _localMatrix ?\n\tprotected _uMatrix: Matrix = new Matrix();\n\n\tpublic _renderer: CanvasRenderer;\n\tpublic _parent: CanvasContainer | undefined;\n\n\tprotected _localBounds: IBounds | undefined;\n\tprotected _bounds: IBounds | undefined;\n\tpublic _colorId: string | undefined;\n\n\tconstructor(renderer: CanvasRenderer) {\n\t\tsuper();\n\t\tthis._renderer = renderer;\n\t}\n\n\tprotected _dispose(): void {\n\t\tthis._renderer._removeObject(this);\n\t}\n\n\tpublic getCanvas(): HTMLCanvasElement {\n\t\treturn this.getLayer().view;\n\t}\n\n\tpublic getLayer(): CanvasLayer {\n\t\tlet self: CanvasDisplayObject = this;\n\n\t\tfor (; ;) {\n\t\t\tif (self._layer) {\n\t\t\t\treturn self._layer;\n\n\t\t\t} else if (self._parent) {\n\t\t\t\tself = self._parent;\n\n\t\t\t} else {\n\t\t\t\treturn this._renderer.defaultLayer;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setLayer(order: number | undefined, margin: IMargin | undefined): void {\n\t\tif (order == null) {\n\t\t\tthis._layer = undefined;\n\n\t\t} else {\n\t\t\tconst visible = true;\n\t\t\tthis._layer = this._renderer.getLayer(order, visible);\n\t\t\tthis._layer.visible = visible;\n\t\t\tthis._layer.margin = margin;\n\t\t\tif (margin) {\n\t\t\t\t$utils.setInteractive(this._layer.view, false);\n\t\t\t}\n\n\t\t\tif (this._parent) {\n\t\t\t\tthis._parent.registerChildLayer(this._layer);\n\t\t\t}\n\n\t\t\tthis._renderer.resizeLayer(this._layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(): void {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic clear(): void {\n\t\tthis.invalidateBounds();\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tthis._localBounds = undefined;\n\t}\n\n\tpublic _addBounds(_bounds: IBounds): void { }\n\n\tprotected _getColorId(): string {\n\t\tif (this._colorId === undefined) {\n\t\t\tthis._colorId = this._renderer.paintId(this);\n\t\t}\n\n\t\treturn this._colorId;\n\t}\n\n\tprotected _isInteractive(): boolean {\n\t\treturn this.inactive == false && (this.interactive || this._renderer._forceInteractive > 0);\n\t}\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this._isInteractive();\n\t}\n\n\tpublic contains(child: CanvasDisplayObject): boolean {\n\t\tfor (; ;) {\n\t\t\tif (child === this) {\n\t\t\t\treturn true;\n\n\t\t\t} else if (child._parent) {\n\t\t\t\tchild = child._parent;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoGlobal(point: IPoint): IPoint {\n\t\treturn this._matrix.apply(point);\n\t}\n\n\ttoLocal(point: IPoint): IPoint {\n\t\treturn this._matrix.applyInverse(point);\n\t}\n\n\tpublic getLocalMatrix(): Matrix {\n\t\tthis._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\t\treturn this._uMatrix;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\t\t\tconst bn = 10000000;\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: bn,\n\t\t\t\ttop: bn,\n\t\t\t\tright: -bn,\n\t\t\t\tbottom: -bn\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tgetAdjustedBounds(bounds: IBounds): IBounds {\n\t\tthis._setMatrix();\n\n\t\tconst matrix = this.getLocalMatrix();\n\n\t\tconst p0 = matrix.apply({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = matrix.apply({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tif (this.interactive) {\n\t\t\treturn this._renderer._addEvent(this, key, callback, context);\n\n\t\t} else {\n\t\t\treturn new Disposer(() => { });\n\t\t}\n\t}\n\n\tpublic _setMatrix(): void {\n\t\t// TODO only calculate this if it has actually changed\n\t\tthis._localMatrix.setTransform(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.pivot.x,\n\t\t\tthis.pivot.y,\n\t\t\t// Converts degrees to radians\n\t\t\tthis.angle * Math.PI / 180,\n\t\t\tthis.scale\n\t\t);\n\n\t\tthis._matrix.copyFrom(this._localMatrix);\n\n\t\tif (this._parent) {\n\t\t\t// TODO only calculate this if it has actually changed\n\t\t\tthis._matrix.prepend(this._parent._matrix);\n\t\t}\n\t}\n\n\tpublic _transform(context: CanvasRenderingContext2D, resolution: number): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\tm.tx * resolution,\n\t\t\tm.ty * resolution\n\t\t);\n\t}\n\n\tpublic _transformMargin(context: CanvasRenderingContext2D, resolution: number, margin: IMargin): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\t(m.tx + margin.left) * resolution,\n\t\t\t(m.ty + margin.top) * resolution\n\t\t);\n\t}\n\n\tpublic _transformLayer(context: CanvasRenderingContext2D, resolution: number, layer: CanvasLayer): void {\n\t\tif (layer.margin) {\n\t\t\tthis._transformMargin(context, layer.scale || resolution, layer.margin);\n\n\t\t} else {\n\t\t\tthis._transform(context, layer.scale || resolution);\n\t\t}\n\t}\n\n\tpublic render(parentLayer: CanvasLayer): void {\n\t\tif (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n\t\t\tthis._setMatrix();\n\n\t\t\tconst resolution = this._renderer.resolution;\n\n\t\t\tconst layers = this._renderer.layers;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t}\n\n\t\t\t// TODO improve this\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tconst context = layer.context;\n\t\t\t\t\tcontext.save();\n\n\t\t\t\t\t// We must apply the mask before we transform the element\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tmask._transformLayer(context, resolution, layer);\n\t\t\t\t\t\tmask._runPath(context);\n\t\t\t\t\t\tcontext.clip();\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\t\t\tthis._transformLayer(context, resolution, layer);\n\n\t\t\t\t\tif (this.filter) {\n\t\t\t\t\t\tcontext.filter = this.filter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tghostContext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tif (mask && this._isInteractiveMask()) {\n\t\t\t\tmask._transform(ghostContext, resolution);\n\t\t\t\tmask._runPath(ghostContext);\n\t\t\t\tghostContext.clip();\n\t\t\t}\n\n\t\t\tthis._transform(ghostContext, resolution);\n\n\t\t\tthis._render(parentLayer);\n\n\t\t\tghostContext.restore();\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tif (this.exportable === false) {\n\t\t\tconst layer = this._layer || parentLayer;\n\t\t\tlayer.tainted = true;\n\t\t}\n\t}\n\n\thovering(): boolean {\n\t\treturn this._renderer._hovering.has(this);\n\t}\n\n\tdragging(): boolean {\n\t\treturn this._renderer._dragging.some((x) => x.value === this);\n\t}\n\n\tpublic dispose() {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic shouldCancelTouch(): boolean {\n\t\tconst renderer = this._renderer;\n\t\tif (renderer.tapToActivate && !renderer._touchActive) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.cancelTouch) {\n\t\t\treturn true;\n\t\t}\n\t\telse if (this._parent) {\n\t\t\treturn this._parent.shouldCancelTouch();\n\t\t}\n\t\treturn false;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasContainer extends CanvasDisplayObject implements IContainer {\n\tpublic interactiveChildren: boolean = true;\n\tprivate _childLayers?: CanvasLayer[];\n\n\tprotected _children: Array<CanvasDisplayObject> = [];\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this.interactiveChildren || super._isInteractiveMask();\n\t}\n\n\taddChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = this;\n\t\tthis._children.push(child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\taddChildAt(child: CanvasDisplayObject, index: number): void {\n\t\tchild._parent = this;\n\t\tthis._children.splice(index, 0, child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\tremoveChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = undefined;\n\t\t$array.removeFirst(this._children, child);\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst renderer = this._renderer;\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t++renderer._forceInteractive;\n\t\t}\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t$array.each(this._children, (child) => {\n\t\t\tchild.compoundAlpha = this.compoundAlpha * this.alpha;\n\t\t\tchild.render(layer);\n\t\t});\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t--renderer._forceInteractive;\n\t\t}\n\t}\n\n\tregisterChildLayer(layer: CanvasLayer): void {\n\t\tif (!this._childLayers) {\n\t\t\tthis._childLayers = [];\n\t\t}\n\t\t$array.pushOne(this._childLayers, layer);\n\t\tif (this._parent) {\n\t\t\tthis._parent.registerChildLayer(layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(deep: boolean = false): void {\n\t\tsuper.markDirtyLayer();\n\t\tif (deep && this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => layer.dirty = true);\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\tif (this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => {\n\t\t\t\tlayer.dirty = true;\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction setPoint(bounds: IBounds, point: IPoint): void {\n\tbounds.left = Math.min(bounds.left, point.x);\n\tbounds.top = Math.min(bounds.top, point.y);\n\tbounds.right = Math.max(bounds.right, point.x);\n\tbounds.bottom = Math.max(bounds.bottom, point.y);\n}\n\n/**\n * @ignore\n */\nabstract class Op {\n\tpublic colorize(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void { }\n\n\tpublic path(_context: CanvasRenderingContext2D): void { }\n\n\tpublic addBounds(_bounds: IBounds): void { }\n}\n\n/**\n * @ignore\n */\nclass BeginFill extends Op {\n\tconstructor(public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.fillStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndFill extends Op {\n\tconstructor(public clearShadow: boolean) { super(); }\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.fill();\n\t\tif (this.clearShadow) {\n\t\t\tcontext.shadowColor = \"\";\n\t\t\tcontext.shadowBlur = 0;\n\t\t\tcontext.shadowOffsetX = 0;\n\t\t\tcontext.shadowOffsetY = 0;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndStroke extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.stroke();\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineStyle extends Op {\n\tconstructor(public width: number, public color: string | CanvasGradient | CanvasPattern, public lineJoin?: \"miter\" | \"round\" | \"bevel\") { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.strokeStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t}\n\n\t\tcontext.lineWidth = this.width;\n\t\tif (this.lineJoin) {\n\t\t\tcontext.lineJoin = this.lineJoin;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDash extends Op {\n\tconstructor(public dash: number[]) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.setLineDash(this.dash);\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDashOffset extends Op {\n\tconstructor(public dashOffset: number) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.lineDashOffset = this.dashOffset;\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawRect extends Op {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tconst l = this.x;\n\t\tconst t = this.y;\n\t\tconst r = l + this.width;\n\t\tconst b = t + this.height;\n\n\t\tsetPoint(bounds, { x: l, y: t });\n\t\tsetPoint(bounds, { x: r, y: t });\n\t\tsetPoint(bounds, { x: l, y: b });\n\t\tsetPoint(bounds, { x: r, y: b });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawCircle extends Op {\n\tconstructor(public x: number, public y: number, public radius: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x + this.radius, this.y);\n\t\tcontext.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\n\t\tsetPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawEllipse extends Op {\n\tconstructor(public x: number, public y: number, public radiusX: number, public radiusY: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, Math.PI * 2);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radiusX, y: this.y - this.radiusY });\n\t\tsetPoint(bounds, { x: this.x + this.radiusX, y: this.y + this.radiusY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Arc extends Op {\n\tconstructor(\n\t\tpublic cx: number,\n\t\tpublic cy: number,\n\t\tpublic radius: number,\n\t\tpublic startAngle: number,\n\t\tpublic endAngle: number,\n\t\tpublic anticlockwise: boolean,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t\t}\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tlet arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n\t\tsetPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\n\t\tsetPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ArcTo extends Op {\n\tconstructor(\n\t\tpublic x1: number,\n\t\tpublic y1: number,\n\t\tpublic x2: number,\n\t\tpublic y2: number,\n\t\tpublic radius: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t\t}\n\t}\n\n\t// TODO: add points\n\tpublic addBounds(_bounds: IBounds): void {\n\t\t/*\n\t\t// not finished\n\t\thttps://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\n\n\t\tif (prevPoint) {\n\t\t\tlet x1 = prevPoint.x;\n\t\t\tlet y1 = prevPoint.y;\n\t\t\tlet x2 = this.x2;\n\t\t\tlet y2 = this.y2;\n\t\t\tlet r = this.radius;\n\n\t\t\tlet xa = (x2 - x1) / 2;\n\t\t\tlet ya = (y2 - y1) / 2;\n\n\t\t\tlet x0 = x1 + xa;\n\t\t\tlet y0 = y1 + ya;\n\n\t\t\tlet a = Math.hypot(xa, ya);\n\t\t\tlet b = Math.sqrt(r * r - a * a);\n\n\t\t\tlet cx = x0 + b * ya / a;\n\t\t\tlet cy = y0 - b * xa / a;\n\n\t\t\tconsole.log(cx, cy);\n\t\t}*/\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.lineTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass MoveTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ClosePath extends Op {\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.closePath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BezierCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic cpX2: number,\n\t\tpublic cpY2: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.cpX2, y: this.cpY2 });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass QuadraticCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Shadow extends Op {\n\tconstructor(\n\t\tpublic color: string,\n\t\tpublic blur: number,\n\t\tpublic offsetX: number,\n\t\tpublic offsetY: number,\n\t\tpublic opacity?: number\n\t) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tif (this.opacity) {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t\tcontext.shadowColor = this.color;\n\t\tcontext.shadowBlur = this.blur;\n\t\tcontext.shadowOffsetX = this.offsetX;\n\t\tcontext.shadowOffsetY = this.offsetY;\n\t}\n}\n\n/**\n * @ignore\n */\nclass GraphicsImage extends Op {\n\tconstructor(\n\t\tpublic image: HTMLImageElement,\n\t\tpublic width: number,\n\t\tpublic height: number,\n\t\tpublic x: number,\n\t\tpublic y: number\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.drawImage(this.image, this.x, this.y, this.width, this.height);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t\tsetPoint(bounds, { x: this.width, y: this.height });\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasGraphics extends CanvasDisplayObject implements IGraphics {\n\tprotected _operations: Array<Op> = [];\n\n\tpublic blendMode: BlendMode = BlendMode.NORMAL;\n\n\tprotected _hasShadows: boolean = false;\n\tprotected _fillAlpha?: number;\n\tprotected _strokeAlpha?: number;\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tthis._operations.length = 0;\n\t}\n\n\tprotected _pushOp(op: Op): void {\n\t\tthis._operations.push(op);\n\t}\n\n\tbeginFill(color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._fillAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new BeginFill(color.toCSS(alpha)));\n\n\t\t\t} else {\n\t\t\t\tthis.isMeasured = true;\n\t\t\t\tthis._pushOp(new BeginFill(color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tendFill(): void {\n\t\tthis._pushOp(new EndFill(this._hasShadows));\n\t}\n\n\tendStroke(): void {\n\t\tthis._pushOp(new EndStroke());\n\t}\n\n\tlineStyle(width: number = 0, color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1, lineJoin?: \"miter\" | \"round\" | \"bevel\"): void {\n\t\tthis._strokeAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new LineStyle(width, color.toCSS(alpha), lineJoin));\n\t\t\t} else {\n\t\t\t\tthis._pushOp(new LineStyle(width, color, lineJoin));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\", lineJoin));\n\t\t}\n\t}\n\n\tsetLineDash(dash?: number[]): void {\n\t\tthis._pushOp(new LineDash(dash ? dash : []));\n\t}\n\n\tsetLineDashOffset(dashOffset: number = 0): void {\n\t\tthis._pushOp(new LineDashOffset(dashOffset));\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number): void {\n\t\tthis._pushOp(new DrawRect(x, y, width, height));\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number): void {\n\t\tthis._pushOp(new DrawCircle(x, y, radius));\n\t}\n\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void {\n\t\tthis._pushOp(new DrawEllipse(x, y, radiusX, radiusY));\n\t}\n\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\n\t\tthis._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n\t\tthis._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\tlineTo(x: number, y: number): void {\n\t\tthis._pushOp(new LineTo(x, y));\n\t}\n\n\tmoveTo(x: number, y: number): void {\n\t\tthis._pushOp(new MoveTo(x, y));\n\t}\n\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n\t}\n\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n\t}\n\n\tclosePath(): void {\n\t\tthis._pushOp(new ClosePath());\n\t}\n\n\tshadow(color: Color, blur: number = 0, offsetX: number = 0, offsetY: number = 0, opacity?: number): void {\n\t\tthis._hasShadows = true;\n\t\tthis._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n\t}\n\n\timage(image: HTMLImageElement, width: number, height: number, x: number, y: number): void {\n\t\tthis._pushOp(new GraphicsImage(image, width, height, x, y));\n\t}\n\n\t// https://svgwg.org/svg2-draft/paths.html#DProperty\n\t// TODO better error checking\n\tsvgPath(path: string): void {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet cpx: number | null = null;\n\t\tlet cpy: number | null = null;\n\t\tlet qcpx: number | null = null;\n\t\tlet qcpy: number | null = null;\n\n\t\tconst SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n\t\tconst ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n\n\t\tlet match;\n\n\t\twhile ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n\t\t\tconst name = match[1];\n\t\t\tconst rest = match[2];\n\n\t\t\tconst args: Array<string> = [];\n\n\t\t\twhile ((match = ARGS_REGEXP.exec(rest)) !== null) {\n\t\t\t\targs.push(match[1]);\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n\t\t\t\tcpx = null;\n\t\t\t\tcpy = null;\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n\t\t\t\tqcpx = null;\n\t\t\t\tqcpy = null;\n\t\t\t}\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"M\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx = +args[0];\n\t\t\t\t\ty = +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx += +args[0];\n\t\t\t\t\ty += +args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"L\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty = +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty += +args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"C\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i];\n\t\t\t\t\t\tconst y1 = +args[i + 1];\n\t\t\t\t\t\tcpx = +args[i + 2];\n\t\t\t\t\t\tcpy = +args[i + 3];\n\t\t\t\t\t\tx = +args[i + 4];\n\t\t\t\t\t\ty = +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = +args[i] + x;\n\t\t\t\t\t\tconst y1 = +args[i + 1] + y;\n\t\t\t\t\t\tcpx = +args[i + 2] + x;\n\t\t\t\t\t\tcpy = +args[i + 3] + y;\n\t\t\t\t\t\tx += +args[i + 4];\n\t\t\t\t\t\ty += +args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i];\n\t\t\t\t\t\tcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = +args[i] + x;\n\t\t\t\t\t\tcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i];\n\t\t\t\t\t\tqcpy = +args[i + 1];\n\t\t\t\t\t\tx = +args[i + 2];\n\t\t\t\t\t\ty = +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = +args[i] + x;\n\t\t\t\t\t\tqcpy = +args[i + 1] + y;\n\t\t\t\t\t\tx += +args[i + 2];\n\t\t\t\t\t\ty += +args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"T\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx = +args[i];\n\t\t\t\t\t\ty = +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"t\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx += +args[i];\n\t\t\t\t\t\ty += +args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"A\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\tconst relative = (name === \"a\");\n\n\t\t\t\t\tsplitArcFlags(args);\n\t\t\t\t\tcheckEvenArgs(name, args.length, 7);\n\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 7) {\n\t\t\t\t\t\tlet cx = +args[i + 5];\n\t\t\t\t\t\tlet cy = +args[i + 6];\n\n\t\t\t\t\t\tif (relative) {\n\t\t\t\t\t\t\tcx += x;\n\t\t\t\t\t\t\tcy += y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bs = arcToBezier({\n\t\t\t\t\t\t\tpx: x,\n\t\t\t\t\t\t\tpy: y,\n\t\t\t\t\t\t\trx: +args[i],\n\t\t\t\t\t\t\try: +args[i + 1],\n\t\t\t\t\t\t\txAxisRotation: +args[i + 2],\n\t\t\t\t\t\t\tlargeArcFlag: assertBinary(+args[i + 3]),\n\t\t\t\t\t\t\tsweepFlag: assertBinary(+args[i + 4]),\n\t\t\t\t\t\t\tcx,\n\t\t\t\t\t\t\tcy,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$array.each(bs, (b) => {\n\t\t\t\t\t\t\tthis.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\t\t\t\t\t\t\tx = b.x;\n\t\t\t\t\t\t\ty = b.y;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"z\":\n\t\t\t\t\tcheckArgs(name, args.length, 0);\n\t\t\t\t\tthis.closePath();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _runPath(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\n\t\t$array.each(this._operations, (op) => {\n\t\t\top.path(context);\n\t\t});\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\tconst layerDirty = layer.dirty;\n\t\tconst interactive = this._isInteractive();\n\n\t\tif (layerDirty || interactive) {\n\n\t\t\tconst context = layer.context;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tif (layerDirty) {\n\t\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\t\tcontext.beginPath();\n\t\t\t}\n\n\t\t\tlet color: string | undefined;\n\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.beginPath();\n\t\t\t\tcolor = this._getColorId();\n\t\t\t}\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\top.path(context);\n\t\t\t\t\top.colorize(context, undefined);\n\t\t\t\t}\n\n\t\t\t\tif (interactive) {\n\t\t\t\t\top.path(ghostContext);\n\t\t\t\t\top.colorize(ghostContext, color);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic renderDetached(context: CanvasRenderingContext2D): void {\n\t\tif (this.visible) {\n\t\t\tthis._setMatrix();\n\n\t\t\tcontext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t\tmask._transform(context, 1);\n\t\t\t\tmask._runPath(context);\n\t\t\t\tcontext.clip();\n\t\t\t}\n\n\t\t\t// TODO handle compoundAlpha somehow ?\n\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\tthis._transform(context, 1);\n\n\t\t\tif (this.filter) {\n\t\t\t\tcontext.filter = this.filter;\n\t\t\t}\n\n\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\tcontext.beginPath();\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.path(context);\n\t\t\t\top.colorize(context, undefined);\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.addBounds(bounds);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ILineChunk {\n\tstyle: string | undefined,\n\tfill: Color | undefined,\n\ttext: string,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\tascent: number,\n\toffsetX: number,\n\toffsetY: number,\n\ttextDecoration: string | undefined,\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\"\n}\n\n/**\n * @ignore\n */\ninterface ILine {\n\toffsetY: number,\n\tascent: number,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttextChunks: Array<ILineChunk>,\n}\n\n/**\n * @ignore\n */\nexport class CanvasText extends CanvasDisplayObject implements IText {\n\tpublic text: string;\n\tpublic style: CanvasTextStyle;\n\tpublic resolution: number = 1;\n\n\tprotected _textInfo: Array<ILine> | undefined;\n\tprotected _textVisible: boolean = true;\n\tprotected _originalScale?: number = 1;\n\n\tconstructor(renderer: CanvasRenderer, text: string, style: CanvasTextStyle) {\n\t\tsuper(renderer);\n\t\tthis.text = text;\n\t\tthis.style = style;\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tsuper.invalidateBounds();\n\t\tthis._textInfo = undefined;\n\t}\n\n\tprivate _shared(context: CanvasRenderingContext2D) {\n\t\tif (this.style.textAlign) {\n\t\t\tcontext.textAlign = this.style.textAlign;\n\t\t}\n\n\t\tif (this.style.direction) {\n\t\t\tcontext.direction = this.style.direction;\n\t\t}\n\n\t\tif (this.style.textBaseline) {\n\t\t\tcontext.textBaseline = this.style.textBaseline;\n\t\t}\n\n\t}\n\n\tprotected _prerender(layer: CanvasLayer, ignoreGhost = false, ignoreFontWeight = false): void {\n\t\tsuper._render(layer);\n\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Font style\n\n\t\tconst style = this.style;\n\t\tlet fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n\t\tcontext.font = fontStyle;\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.font = fontStyle;\n\t\t}\n\n\t\t// Other parameters\n\t\tif (style.fill) {\n\t\t\tif (style.fill instanceof Color) {\n\t\t\t\tcontext.fillStyle = style.fill.toCSS(style.fillOpacity != undefined ? style.fillOpacity : 1);\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = style.fill;\n\t\t\t}\n\t\t}\n\n\t\tif (style.shadowColor) {\n\t\t\tlayer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n\t\t}\n\t\tif (style.shadowBlur) {\n\t\t\tlayer.context.shadowBlur = style.shadowBlur;\n\t\t}\n\t\tif (style.shadowOffsetX) {\n\t\t\tlayer.context.shadowOffsetX = style.shadowOffsetX;\n\t\t}\n\t\tif (style.shadowOffsetY) {\n\t\t\tlayer.context.shadowOffsetY = style.shadowOffsetY;\n\t\t}\n\n\t\tthis._shared(context);\n\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.fillStyle = this._getColorId();\n\t\t\tthis._shared(ghostContext);\n\t\t}\n\t}\n\n\tprotected _getFontStyle(style2?: ITextStyle, ignoreFontWeight = false): string {\n\n\t\t// Process defaults\n\t\tconst style = this.style;\n\t\tlet fontStyle: string[] = [];\n\n\t\tif (style2 && style2.fontVariant) {\n\t\t\tfontStyle.push(style2.fontVariant);\n\t\t}\n\t\telse if (style.fontVariant) {\n\t\t\tfontStyle.push(style.fontVariant);\n\t\t}\n\n\t\tif (!ignoreFontWeight) {\n\t\t\tif (style2 && style2.fontWeight) {\n\t\t\t\tfontStyle.push(style2.fontWeight);\n\t\t\t}\n\t\t\telse if (style.fontWeight) {\n\t\t\t\tfontStyle.push(style.fontWeight);\n\t\t\t}\n\t\t}\n\n\t\tif (style2 && style2.fontStyle) {\n\t\t\tfontStyle.push(style2.fontStyle);\n\t\t}\n\t\telse if (style.fontStyle) {\n\t\t\tfontStyle.push(style.fontStyle);\n\t\t}\n\n\t\tif (style2 && style2.fontSize) {\n\t\t\tif ($type.isNumber(style2.fontSize)) {\n\t\t\t\tstyle2.fontSize = style2.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style2.fontSize);\n\t\t}\n\t\telse if (style.fontSize) {\n\t\t\tif ($type.isNumber(style.fontSize)) {\n\t\t\t\tstyle.fontSize = style.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style.fontSize);\n\t\t}\n\n\t\tif (style2 && style2.fontFamily) {\n\t\t\tfontStyle.push(style2.fontFamily);\n\t\t}\n\t\telse if (style.fontFamily) {\n\t\t\tfontStyle.push(style.fontFamily);\n\t\t}\n\t\telse if (fontStyle.length) {\n\t\t\tfontStyle.push(\"Arial\");\n\t\t}\n\n\t\treturn fontStyle.join(\" \");\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(layer);\n\t\t}\n\n\t\tif (this._textVisible) {\n\n\t\t\tconst interactive = this._isInteractive();\n\t\t\tconst context = layer.context;\n\t\t\tconst layerDirty = layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tcontext.save();\n\t\t\tghostContext.save();\n\t\t\tthis._prerender(layer);\n\n\t\t\t// const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\t\t// const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (this._isInteractive()) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw text\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw underline\n\t\t\t\t\tif (chunk.textDecoration == \"underline\" || chunk.textDecoration == \"line-through\") {\n\n\t\t\t\t\t\tlet thickness = 1;\n\t\t\t\t\t\tlet offset = 1;\n\t\t\t\t\t\tlet fontSize = chunk.height;\n\n\t\t\t\t\t\tlet offsetX = chunk.offsetX;\n\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\toffsetX -= chunk.width / 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\t\tconst format = TextFormatter.getTextStyle(chunk.style);\n\t\t\t\t\t\t\tswitch (format.fontWeight) {\n\t\t\t\t\t\t\t\tcase \"bolder\":\n\t\t\t\t\t\t\t\tcase \"bold\":\n\t\t\t\t\t\t\t\tcase \"700\":\n\t\t\t\t\t\t\t\tcase \"800\":\n\t\t\t\t\t\t\t\tcase \"900\":\n\t\t\t\t\t\t\t\t\tthickness = 2;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fontSize) {\n\t\t\t\t\t\t\toffset = fontSize / 20;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet y: number;\n\n\t\t\t\t\t\tif (chunk.textDecoration == \"line-through\") {\n\t\t\t\t\t\t\ty = thickness + line.offsetY + chunk.offsetY - chunk.height / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ty = thickness + offset * 1.5 + line.offsetY + chunk.offsetY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.beginPath();\n\t\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\t\tcontext.strokeStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (this.style.fill && this.style.fill instanceof Color) {\n\t\t\t\t\t\t\tcontext.strokeStyle = this.style.fill.toCSS();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.lineWidth = thickness * offset;\n\t\t\t\t\t\tcontext.moveTo(offsetX, y);\n\t\t\t\t\t\tcontext.lineTo(offsetX + chunk.width, y);\n\t\t\t\t\t\tcontext.stroke();\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interactive && this.interactive) {\n\t\t\t\t\t\t// Draw text in ghost canvas ONLY if it is set as interactive\n\t\t\t\t\t\t// explicitly. This way we avoid hit test anomalies caused by anti\n\t\t\t\t\t\t// aliasing of text.\n\t\t\t\t\t\tghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t//if (this._textVisible) {\n\t\t\tconst x = this._measure(this.getLayer());\n\t\t\tsetPoint(bounds, { x: x.left, y: x.top });\n\t\t\tsetPoint(bounds, { x: x.right, y: x.bottom });\n\t\t\t//}\n\t\t}\n\t}\n\n\tprotected _ignoreFontWeight(): boolean {\n\t\treturn /apple/i.test(navigator.vendor);\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\n\t\t// Init\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true, this._ignoreFontWeight());\n\n\t\t// Get default font metrix\n\t\tconst refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet minX = 0;\n\t\tlet maxX = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\tlet currentStyle: string | undefined;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks: ITextChunk[];\n\t\t\tif (line == \"\") {\n\t\t\t\tchunks = [{\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\t\t\t}\n\n\t\t\twhile (chunks.length > 0) {\n\n\t\t\t\t// Init line object\n\t\t\t\tlet lineInfo: ILine = {\n\t\t\t\t\toffsetY: offsetY,\n\t\t\t\t\tascent: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextChunks: []\n\t\t\t\t};\n\n\t\t\t\t// Measure reference text\n\t\t\t\tconst metrics = this._measureText(refText, context);\n\n\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\tlineInfo.height = height;\n\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\n\t\t\t\tlet currentFormat: string;\n\t\t\t\tlet currentDecoration: string | undefined = this.style.textDecoration;\n\t\t\t\tlet currentFill: Color | undefined;\n\t\t\t\tlet currentChunkWidth: number | undefined;\n\t\t\t\tlet skipFurtherText = false;\n\t\t\t\tlet firstTextChunk = true;\n\t\t\t\tlet leftoverChunks: Array<ITextChunk> = [];\n\t\t\t\tlet currentVerticalAlign: \"baseline\" | \"sub\" | \"super\" | undefined;\n\t\t\t\t//let offsetX = 0;\n\t\t\t\t//let chunk;\n\n\t\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t\t$array.eachContinue(chunks, (chunk, index) => {\n\n\t\t\t\t\t// Format chunk\n\t\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t\t\tcurrentDecoration = this.style.textDecoration;\n\t\t\t\t\t\t\tcurrentVerticalAlign = undefined\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t\tif (format.textDecoration) {\n\t\t\t\t\t\t\t\tcurrentDecoration = format.textDecoration;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (format.verticalAlign) {\n\t\t\t\t\t\t\t\tcurrentVerticalAlign = format.verticalAlign;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyleRestored = false;\n\n\t\t\t\t\t\t\t// Measure reference text after change of format\n\t\t\t\t\t\t\tconst metrics = this._measureText(refText, context);\n\t\t\t\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\t\tif (height > lineInfo.height) {\n\t\t\t\t\t\t\t\tlineInfo.height = height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text chunk\n\t\t\t\t\telse if (chunk.type == \"value\" && !skipFurtherText) {\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t// Check for fit\n\t\t\t\t\t\tif (truncate) {\n\n\t\t\t\t\t\t\t// Break words?\n\t\t\t\t\t\t\tlet breakWords = firstTextChunk || this.style.breakWords || false;\n\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\t\t\t\t\t\tconst ellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n\t\t\t\t\t\t\t\tchunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n\t\t\t\t\t\t\t\tchunk.text += ellipsis;\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (wrap) {\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width;\n\t\t\t\t\t\t\t\tconst tmpText = this._truncateText(\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t\tchunk.text,\n\t\t\t\t\t\t\t\t\texcessWidth,\n\t\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\t\t(firstTextChunk && this.style.oversizedBehavior != \"wrap-no-break\")\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (tmpText == \"\") {\n\t\t\t\t\t\t\t\t\t// Unable to fit a single letter - hide the whole label\n\t\t\t\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//skipFurtherText = true;\n\n\t\t\t\t\t\t\t\t//Add remaining chunks for the next line\n\t\t\t\t\t\t\t\tleftoverChunks = chunks.slice(index + 1);\n\n\t\t\t\t\t\t\t\t//Add remaining text of current chunk if it was forced-cut\n\t\t\t\t\t\t\t\tif ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\ttype: \"value\",\n\t\t\t\t\t\t\t\t\t\ttext: chunk.text.substr(tmpText.length)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (currentFormat) {\n\t\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"format\",\n\t\t\t\t\t\t\t\t\t\t\ttext: currentFormat\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Set current chunk (truncated)\n\t\t\t\t\t\t\t\tchunk.text = $utils.trim(tmpText);\n\n\t\t\t\t\t\t\t\tchunks = [];\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tlet leftBoundMod = 1;\n\t\t\t\t\t\tlet rightBoundMod = 1;\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\t// increase horizontal bounding boxes accordingly\n\t\t\t\t\t\t\tconst boundsMod = chunkWidth / currentChunkWidth\n\t\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: chunk.text,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: 0,\n\t\t\t\t\t\t\ttextDecoration: currentDecoration,\n\t\t\t\t\t\t\tverticalAlign: currentVerticalAlign\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//offsetX += chunkWidth;\n\n\t\t\t\t\t\tfirstTextChunk = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftoverChunks) {\n\t\t\t\t\t\t//return false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//}\n\t\t\t\t});\n\n\t\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight || 1.2;\n\t\t\t\t}\n\n\t\t\t\tif (minX < lineInfo.left) {\n\t\t\t\t\tminX = lineInfo.left;\n\t\t\t\t}\n\n\t\t\t\tif (maxX < lineInfo.right) {\n\t\t\t\t\tmaxX = lineInfo.right;\n\t\t\t\t}\n\n\t\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\t\toffsetY += lineInfo.height;\n\n\t\t\t\t// Reset chunks so that it can proceed to the next line\n\t\t\t\tchunks = leftoverChunks || [];\n\t\t\t}\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo, _index: number) => {\n\t\t\tlet currentChunkOffset = 0\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n\t\t\t\tchunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n\t\t\t\tcurrentChunkOffset += chunk.width;\n\n\t\t\t\tif (chunk.verticalAlign) {\n\t\t\t\t\tswitch (chunk.verticalAlign) {\n\t\t\t\t\t\tcase \"super\":\n\t\t\t\t\t\t\tchunk.offsetY -= lineInfo.height / 2 - chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"sub\":\n\t\t\t\t\t\t\tchunk.offsetY += chunk.height / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst bounds = {\n\t\t\tleft: rtl ? -maxX : -minX,\n\t\t\ttop: 0,\n\t\t\tright: rtl ? minX : maxX,\n\t\t\tbottom: offsetY,\n\t\t};\n\n\n\t\t// We need to fit?\n\t\tif (oversizedBehavior !== \"none\") {\n\t\t\tconst ratio = this._fitRatio(bounds);\n\t\t\tif (ratio < 1) {\n\t\t\t\tif (oversizedBehavior == \"fit\") {\n\t\t\t\t\tif ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\n\t\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!this._originalScale || this._originalScale == 1) {\n\t\t\t\t\t\t\tthis._originalScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.scale = ratio;\n\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (oversizedBehavior == \"hide\") {\n\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth;\n\t\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth / 2;\n\t\t\t\t\t\t\tbounds.right = maxWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\t\tbounds.right = maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\t\tthis._originalScale = undefined;\n\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\tthis._originalScale = undefined;\n\t\t\t\tthis._textVisible = true;\n\t\t\t}\n\t\t}\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn bounds;\n\t}\n\n\tprotected _fitRatio(bounds: IBounds): number {\n\t\tconst maxW = this.style.maxWidth;\n\t\tconst maxH = this.style.maxHeight;\n\t\tif (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst w = bounds.right - bounds.left;\n\t\tconst h = bounds.bottom - bounds.top;\n\t\treturn Math.min(maxW! / w || 1, maxH! / h || 1);\n\t}\n\n\tprotected _truncateText(context: CanvasRenderingContext2D, text: string, maxWidth: number, breakWords: boolean = false, fallbackBreakWords: boolean = true): string {\n\t\tlet width: number;\n\t\tdo {\n\t\t\tif (breakWords) {\n\t\t\t\ttext = text.slice(0, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = text.replace(/[^,;:!?\\\\\\/\\s]+[,;:!?\\\\\\/\\s]*$/g, \"\");\n\t\t\t\tif (tmp == \"\" && fallbackBreakWords) {\n\t\t\t\t\tbreakWords = true;\n\t\t\t\t}\n\t\t\t\telse if (tmp == \"\") {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst metrics = this._measureText(text, context);\n\t\t\twidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t} while ((width > maxWidth) && text != \"\");\n\t\treturn text;\n\t}\n\n\tprotected _measureText(text: string, context: CanvasRenderingContext2D): TextMetrics {\n\t\tlet metrics = context.measureText(text);\n\t\tlet fakeMetrics: any = {};\n\t\tif (metrics.actualBoundingBoxAscent == null) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.innerText = text;\n\t\t\tdiv.style.visibility = \"hidden\";\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"-1000000px;\"\n\t\t\tdiv.style.fontFamily = this.style.fontFamily || \"\";\n\t\t\tdiv.style.fontSize = this.style.fontSize + \"\";\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst bbox = div.getBoundingClientRect();\n\t\t\tdocument.body.removeChild(div);\n\t\t\tconst h = bbox.height;\n\t\t\tconst w = metrics.width;\n\t\t\tlet left = 0;\n\t\t\tlet right = w;\n\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: h,\n\t\t\t\tactualBoundingBoxDescent: 0,\n\t\t\t\tactualBoundingBoxLeft: left,\n\t\t\t\tactualBoundingBoxRight: right,\n\t\t\t\tfontBoundingBoxAscent: h,\n\t\t\t\tfontBoundingBoxDescent: 0,\n\t\t\t\twidth: w\n\t\t\t}\n\t\t\t//return fake;\n\t\t}\n\t\telse {\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tactualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\tactualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n\t\t\t\tactualBoundingBoxRight: metrics.actualBoundingBoxRight,\n\t\t\t\tfontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tfontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\twidth: metrics.width\n\t\t\t}\n\t\t}\n\n\t\tconst w = metrics.width;\n\t\tswitch (this.style.textAlign) {\n\t\t\tcase \"right\":\n\t\t\tcase \"end\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w / 2;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = 0;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w;\n\t\t}\n\n\t\treturn fakeMetrics;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasTextStyle implements ITextStyle {\n\t//public wordWrapWidth: number = 100;\n\tpublic fill?: Color | CanvasGradient | CanvasPattern;\n\tpublic fillOpacity?: number;\n\tpublic textAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tpublic fontFamily?: string;\n\tpublic fontSize?: string | number;\n\tpublic fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tpublic fontStyle?: 'normal' | 'italic' | 'oblique';\n\tpublic fontVariant?: \"normal\" | \"small-caps\";\n\tpublic textDecoration?: \"underline\" | \"line-through\";\n\tpublic shadowColor?: Color | null;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tpublic lineHeight?: number | Percent = percent(120);\n\tpublic baselineRatio?: number = 0.19;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tpublic direction?: \"ltr\" | \"rtl\";\n\tpublic textBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\tpublic oversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\" = \"none\";\n\tpublic breakWords?: boolean = false;\n\tpublic ellipsis?: string = \"…\";\n\tpublic maxWidth?: number;\n\tpublic maxHeight?: number;\n\tpublic minScale?: number;\n\tpublic ignoreFormatting?: boolean = false;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRadialText extends CanvasText implements IRadialText {\n\tpublic textType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\" = \"circular\";\n\tpublic radius?: number;\n\tpublic startAngle?: number;\n\tpublic inside?: boolean = false;\n\tpublic orientation?: \"inward\" | \"outward\" | \"auto\" = \"auto\";\n\tpublic kerning?: number = 0;\n\n\tprivate _textReversed: boolean = false;\n\n\tpublic _render(parentLayer: CanvasLayer): void {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\tthis._renderCircular(parentLayer);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._render(parentLayer);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic _renderCircular(parentLayer: CanvasLayer): void {\n\t\tif (this._textVisible) {\n\t\t\tconst layer = this._layer || parentLayer;\n\n\t\t\tthis._prerender(layer);\n\n\t\t\tconst interactive = this._isInteractive();\n\t\t\tconst context = layer.context;\n\t\t\tconst layerDirty = layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\t// Savepoint\n\t\t\tcontext.save();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.save();\n\t\t\t}\n\n\t\t\t// Init\n\t\t\tlet radius = (this.radius || 0);\n\t\t\tlet startAngle = (this.startAngle || 0);\n\t\t\tlet deltaAngle = 0;\n\t\t\tlet orientation = this.orientation;\n\t\t\tlet inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n\t\t\tconst inside = this.inside;\n\t\t\tconst align = this.style.textAlign || \"left\";\n\t\t\tconst kerning = this.kerning || 0;\n\t\t\tlet clockwise = align == \"left\" ? 1 : -1;\n\t\t\tconst shouldReverse = !this._textReversed;\n\n\t\t\t// We need measurements in order to properly position text for alignment\n\t\t\tif (!this._textInfo) {\n\t\t\t\tthis._measure(layer);\n\t\t\t}\n\n\t\t\t// Check if we need to invert the whole stuff\n\t\t\tif (inward == \"auto\") {\n\t\t\t\t// Calc max angle so we know whether we need to flip it\n\t\t\t\tlet maxAngle = 0;\n\t\t\t\tlet midAngle = 0;\n\t\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t\tconst deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\n\t\t\t\t\tif (deltaAngle > maxAngle) {\n\t\t\t\t\t\tmaxAngle = deltaAngle;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (align == \"left\") {\n\t\t\t\t\tmidAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse if (align == \"right\") {\n\t\t\t\t\tmidAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmidAngle = startAngle * $math.DEGREES;\n\t\t\t\t}\n\t\t\t\tmidAngle = $math.normalizeAngle(midAngle);\n\t\t\t\tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t}\n\n\t\t\tif (inward == true && shouldReverse) {\n\t\t\t\tthis._textInfo!.reverse();\n\t\t\t\tthis._textReversed = true;\n\t\t\t}\n\n\t\t\t// if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n\t\t\t// \tclockwise *= -1;\n\t\t\t// }\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\n\t\t\t\tconst textHeight = line.height;\n\n\t\t\t\t// Adjust radius (for `inside = false`)\n\t\t\t\t// Radius adjustment for `inside = false` is below the line calculation\n\t\t\t\tif (!inside) {\n\t\t\t\t\tradius += textHeight;\n\t\t\t\t}\n\n\t\t\t\t// Reverse letters if we're painting them counter-clockwise\n\t\t\t\tif (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\n\t\t\t\t\tline.textChunks.reverse();\n\t\t\t\t}\n\n\t\t\t\t// Init angles\n\t\t\t\tlet lineStartAngle = startAngle;\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t\t// Adjust for center-align\n\t\t\t\tif (align == \"center\") {\n\t\t\t\t\tlineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\n\t\t\t\t\tdeltaAngle = lineStartAngle - startAngle;\n\t\t\t\t}\n\n\t\t\t\t// if (inward == \"auto\") {\n\t\t\t\t// \tlet midAngle;\n\t\t\t\t// \tif (align == \"left\") {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \telse if () {\n\t\t\t\t// \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t\t// \t}\n\t\t\t\t// \tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t\t// }\n\n\t\t\t\t// Rotate letters if they are facing outward\n\t\t\t\tlineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\n\n\t\t\t\t// Savepoint\n\t\t\t\tcontext.save();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.save();\n\t\t\t\t}\n\n\t\t\t\t// Assume starting angle\n\t\t\t\tcontext.rotate(lineStartAngle);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(lineStartAngle);\n\t\t\t\t}\n\n\t\t\t\tlet angleShift = 0;\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Draw the letter\n\t\t\t\t\tconst char = chunk.text;\n\t\t\t\t\tconst charWidth = chunk.width;\n\n\t\t\t\t\t// Rotate half a letter\n\t\t\t\t\tangleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\n\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Center letters\n\t\t\t\t\tcontext.textBaseline = \"middle\";\n\t\t\t\t\tcontext.textAlign = \"center\";\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.textBaseline = \"middle\";\n\t\t\t\t\t\tghostContext.textAlign = \"center\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// Plop the letter\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Rotate half a letter and add spacing\n\t\t\t\t\tangleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n\t\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t\t}\n\n\t\t\t\t});\n\n\t\t\t\t// Restore angle\n\t\t\t\tcontext.restore();\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.restore();\n\t\t\t\t}\n\n\t\t\t\t// Adjust radius (for `inside = true`)\n\t\t\t\tif (inside) {\n\t\t\t\t\tradius -= textHeight;\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Restore\n\t\t\tcontext.restore();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.restore();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\treturn this._measureCircular(layer);\n\t\t\tdefault:\n\t\t\t\treturn super._measure(layer);\n\t\t}\n\t}\n\n\tpublic _measureCircular(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\t\tconst rtl = this.style.direction == \"rtl\";\n\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\tlet ellipsisMetrics: TextMetrics;\n\t\t//const wrap = $type.isNumber(maxWidth) && (oversizedBehavior == \"wrap\" || oversizedBehavior == \"wrap-no-break\");\n\n\n\t\t// Reset text info\n\t\tthis._textVisible = true;\n\t\tthis._textInfo = [];\n\t\tthis._textReversed = false;\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true);\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet totalWidth = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\n\t\t\t// Init line object\n\t\t\tlet lineInfo: ILine = {\n\t\t\t\toffsetY: offsetY,\n\t\t\t\tascent: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttextChunks: []\n\t\t\t};\n\n\t\t\tlet currentStyle: string | undefined;\n\t\t\tlet currentFill: Color | undefined;\n\t\t\tlet currentChunkWidth: number | undefined;\n\n\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t$array.each(chunks, (chunk, _index) => {\n\n\t\t\t\t// Format chunk\n\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleRestored = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Text format\n\t\t\t\telse if (chunk.type == \"value\") {\n\n\t\t\t\t\t// Measure each letter\n\t\t\t\t\tconst chars = chunk.text.match(/./ug) || [];\n\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\tchars.reverse();\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < chars.length; i++) {\n\n\t\t\t\t\t\tconst char = chars[i];\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(char, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.width;\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: char,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight + metrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\ttotalWidth += chunkWidth;\n\n\t\t\t\t\t\t// Handle oversized behavior\n\t\t\t\t\t\tif (truncate) {\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tif (!ellipsisMetrics) {\n\t\t\t\t\t\t\t\tellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\ttotalWidth += ellipsisWidth;\n\t\t\t\t\t\t\tif ((totalWidth + ellipsisWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tif (lineInfo.textChunks.length == 1) {\n\t\t\t\t\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tlineInfo.width += ellipsisWidth;\n\t\t\t\t\t\t\t\t\tlineInfo.left += ellipsisMetrics.actualBoundingBoxLeft;\n\t\t\t\t\t\t\t\t\tlineInfo.right += ellipsisMetrics.actualBoundingBoxRight;\n\t\t\t\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\t\t\t\ttext: ellipsis,\n\t\t\t\t\t\t\t\t\t\twidth: ellipsisWidth,\n\t\t\t\t\t\t\t\t\t\theight: chunkHeight + ellipsisMetrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\t\t\t\tleft: ellipsisMetrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\t\t\t\tright: ellipsisMetrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\t\t\t\tascent: ellipsisMetrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\t\t\t\toffsetY: chunkHeight,\n\t\t\t\t\t\t\t\t\t\ttextDecoration: undefined\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rtl) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t}\n\n\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\toffsetY += lineInfo.height;\n\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\n\t\tif (oversizedBehavior == \"hide\" && (totalWidth > maxWidth)) {\n\t\t\tthis._textVisible = false;\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo) => {\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n\t\t\t});\n\t\t});\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasImage extends CanvasDisplayObject implements IPicture {\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic image: HTMLImageElement | undefined;\n\tpublic tainted?: boolean;\n\n\tpublic shadowColor?: Color;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\n\tprotected _imageMask: HTMLCanvasElement | undefined;\n\n\tconstructor(renderer: CanvasRenderer, image: HTMLImageElement | undefined) {\n\t\tsuper(renderer);\n\t\tthis.image = image;\n\t}\n\n\tprotected _dispose(): void {\n\t\tsuper._dispose();\n\n\t\tif (this._imageMask) {\n\t\t\tclearCanvas(this._imageMask);\n\t\t}\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\n\t\t\tlet w = 0;\n\t\t\tlet h = 0;\n\n\t\t\tif (this.width) {\n\t\t\t\tw = this.width;\n\t\t\t}\n\t\t\tif (this.height) {\n\t\t\t\th = this.height;\n\t\t\t}\n\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: w,\n\t\t\t\tbottom: h\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tif (this.image) {\n\t\t\tconst layer = this._layer || parentLayer;\n\n\t\t\tif (this.tainted === undefined) {\n\t\t\t\tthis.tainted = isTainted(this.image);\n\t\t\t\tlayer.tainted = true;\n\t\t\t}\n\n\t\t\tif (this.tainted && this._renderer._omitTainted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (layer.dirty) {\n\n\t\t\t\tif (this.shadowColor) {\n\t\t\t\t\tlayer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n\t\t\t\t}\n\t\t\t\tif (this.shadowBlur) {\n\t\t\t\t\tlayer.context.shadowBlur = this.shadowBlur;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetX) {\n\t\t\t\t\tlayer.context.shadowOffsetX = this.shadowOffsetX;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetY) {\n\t\t\t\t\tlayer.context.shadowOffsetY = this.shadowOffsetY;\n\t\t\t\t}\n\n\t\t\t\t// TODO should this round ?\n\t\t\t\tconst width = this.width || this.image.naturalWidth;\n\t\t\t\tconst height = this.height || this.image.naturalHeight;\n\n\t\t\t\tlayer.context.drawImage(this.image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tif (this.interactive && this._isInteractive()) {\n\t\t\t\tconst mask = this._getMask(this.image);\n\n\t\t\t\tthis._renderer._ghostContext.drawImage(mask, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tsuper.clear();\n\t\tthis.image = undefined;\n\t\tthis._imageMask = undefined;\n\t}\n\n\tprotected _getMask(image: HTMLImageElement): HTMLCanvasElement {\n\t\tif (this._imageMask === undefined) {\n\t\t\t// TODO should this round ?\n\t\t\tconst width = this.width || image.naturalWidth;\n\t\t\tconst height = this.height || image.naturalHeight;\n\n\t\t\t// We need to create a second canvas because destination-in clears out the entire canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\t\tcontext.imageSmoothingEnabled = false;\n\n\t\t\tcontext.fillStyle = this._getColorId();\n\t\t\tcontext.fillRect(0, 0, width, height);\n\n\t\t\tif (!isTainted(image)) {\n\t\t\t\tcontext.globalCompositeOperation = \"destination-in\";\n\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tthis._imageMask = canvas;\n\t\t}\n\n\t\treturn this._imageMask;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasRendererEvent<A> implements IRendererEvent<A> {\n\tpublic id: Id;\n\tpublic simulated: boolean = false;\n\tpublic native: boolean = true;\n\n\tconstructor(public event: A, public point: IPoint, public bbox: DOMRect) {\n\t\tif ($utils.supports(\"touchevents\") && event instanceof Touch) {\n\t\t\tthis.id = event.identifier;\n\n\t\t} else {\n\t\t\tthis.id = null;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface Event<Key extends keyof IRendererEvents> {\n\tobject: CanvasDisplayObject;\n\tcontext: unknown;\n\tcallback: (event: IRendererEvents[Key]) => void;\n\tdisposed: boolean;\n}\n\n/**\n * @ignore\n */\ninterface Events<Key extends keyof IRendererEvents> {\n\tdisposer: IDisposer;\n\tcallbacks: Array<Event<Key>>;\n\tdispatching: boolean;\n\tcleanup: boolean;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRenderer extends ArrayDisposer implements IRenderer, IDisposer {\n\tpublic view: HTMLElement = document.createElement(\"div\");\n\tprotected _layerDom: HTMLElement = document.createElement(\"div\");\n\n\tpublic layers: Array<CanvasLayer> = [];\n\tpublic _dirtyLayers: Array<CanvasLayer> = [];\n\tpublic defaultLayer: CanvasLayer = this.getLayer(0);\n\n\tprotected _ghostView: HTMLCanvasElement;\n\tpublic _ghostContext: CanvasRenderingContext2D;\n\n\tprotected _patternCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\tprotected _patternContext: CanvasRenderingContext2D = this._patternCanvas.getContext(\"2d\")!;\n\n\tprotected _width: number = 0;\n\tprotected _height: number = 0;\n\n\tprotected _clientWidth: number = 0;\n\tprotected _clientHeight: number = 0;\n\n\tpublic resolution: number;\n\tpublic interactionsEnabled: boolean = true;\n\n\tprotected _listeners: { [key: string]: CounterDisposer } = {};\n\tprotected _events: { [Key in keyof IRendererEvents]?: Events<Key> } = {};\n\n\tprotected _colorId: number = 0;\n\tprotected _colorMap: { [color: string]: CanvasDisplayObject } = {};\n\n\tpublic _forceInteractive: number = 0;\n\tpublic _omitTainted: boolean = false;\n\n\t// TODO this should store the Id as well\n\tpublic _hovering: Set<CanvasDisplayObject> = new Set();\n\tpublic _dragging: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\tpublic _mousedown: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\n\tprotected _lastPointerMoveEvent: { events: Array<IPointerEvent>, native: boolean } | undefined;\n\n\tpublic tapToActivate: boolean = false;\n\tpublic tapToActivateTimeout: number = 3000;\n\tpublic _touchActive: boolean = false;\n\tprotected _touchActiveTimeout?: number;\n\n\t/*protected _mouseMoveThrottler: Throttler = new Throttler(() => {\n\t\tthis._dispatchGlobalMousemove(this._lastPointerMoveEvent.event, this._lastPointerMoveEvent.native);\n\t});\n\t*/\n\n\tconstructor(resolution?: number) {\n\t\tsuper();\n\n\t\tif (resolution == null) {\n\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t} else {\n\t\t\tthis.resolution = resolution;\n\t\t}\n\n\t\tthis.view.style.position = \"absolute\";\n\t\tthis.view.appendChild(this._layerDom);\n\n\t\tthis._disposers.push(new Disposer(() => {\n\t\t\t$object.each(this._events, (_key, events) => {\n\t\t\t\tevents.disposer.dispose();\n\t\t\t});\n\n\t\t\t$array.each(this.layers, (layer) => {\n\t\t\t\tclearCanvas(layer.view);\n\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tclearCanvas(layer.exportableView);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclearCanvas(this._ghostView);\n\t\t\tclearCanvas(this._patternCanvas);\n\t\t}));\n\n\t\t// @todo : do the same for ghost\n\t\tthis._ghostView = document.createElement(\"canvas\");\n\t\tthis._ghostContext = this._ghostView.getContext(\"2d\", { alpha: false, willReadFrequently: true })! as CanvasRenderingContext2D;\n\t\tthis._ghostContext.imageSmoothingEnabled = false;\n\n\t\tthis._ghostView.style.position = \"absolute\";\n\t\tthis._ghostView.style.top = \"0px\";\n\t\tthis._ghostView.style.left = \"0px\";\n\n\t\tthis._disposers.push($utils.addEventListener(this._ghostView, \"click\", (originalEvent: MouseEvent) => {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\t\t\tconsole.debug(target);\n\t\t}));\n\n\t\t// Monitor for possible pixel ratio changes (when page is zoomed)\n\t\tthis._disposers.push($utils.onZoom(() => {\n\t\t\tif (resolution == null) {\n\t\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t\t}\n\t\t}));\n\n\t\t// We need this in order top prevent default touch gestures when dragging\n\t\t// draggable elements\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tconst listener = (ev: any) => {\n\t\t\t\tif (this._dragging.length !== 0) {\n\t\t\t\t\t$array.eachContinue(this._dragging, (item) => {\n\t\t\t\t\t\tif (item.value.shouldCancelTouch()) {\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If touch down happends, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"touchstart\", listener, { passive: false }));\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchstart\", listener, { passive: false }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"touchmove\", () => {\n\t\t\t\t// If touch is moving, delay touch out\n\t\t\t\tif (this._touchActiveTimeout) {\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"click\", (_ev: any) => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, { passive: true }));\n\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"click\", (_ev: any) => {\n\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\tthis._touchActive = true;\n\t\t\t\t\tthis._delayTouchDeactivate();\n\t\t\t\t}, 100);\n\t\t\t}, { passive: true }));\n\n\t\t}\n\n\t\t// Prevent scrolling of the window when hovering on \"wheelable\" object\n\t\tif ($utils.supports(\"wheelevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(this.view, \"wheel\", (ev) => {\n\t\t\t\tlet prevent = false;\n\t\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\t\tif (obj.wheelable) {\n\t\t\t\t\t\tprevent = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (prevent) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false }));\n\t\t}\n\n\t}\n\n\tprotected _delayTouchDeactivate(): void {\n\t\tif (this._touchActiveTimeout) {\n\t\t\tclearTimeout(this._touchActiveTimeout);\n\t\t}\n\t\tif (this.tapToActivateTimeout > 0) {\n\t\t\tthis._touchActiveTimeout = window.setTimeout(() => {\n\t\t\t\tthis._touchActive = false;\n\t\t\t}, this.tapToActivateTimeout);\n\t\t}\n\t}\n\n\tpublic get debugGhostView(): boolean {\n\t\treturn !!this._ghostView.parentNode;\n\t}\n\n\tpublic set debugGhostView(value: boolean) {\n\t\tif (value) {\n\t\t\tif (!this._ghostView.parentNode) {\n\t\t\t\tthis.view.appendChild(this._ghostView);\n\t\t\t}\n\n\t\t} else {\n\t\t\tif (this._ghostView.parentNode) {\n\t\t\t\tthis._ghostView.parentNode.removeChild(this._ghostView);\n\t\t\t}\n\t\t}\n\t}\n\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n\t}\n\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n\t}\n\n\tcreatePattern(graphics: CanvasGraphics, background: CanvasGraphics, repetition: string, width: number, height: number): CanvasPattern {\n\t\t// const patternCanvas = document.createElement(\"canvas\");\n\t\t// const patternContext = patternCanvas.getContext(\"2d\")!;\n\t\t// patternCanvas.width = width;\n\t\t// patternCanvas.height = height;\n\t\t// if (fill) {\n\t\t// \tpatternContext.fillStyle = fill.toCSS();\n\t\t// \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n\t\t// }\n\n\t\t// const layer = {\n\t\t// \tview: patternCanvas,\n\t\t// \tcontext: patternContext,\n\t\t// \tvisible: true,\n\t\t// \torder: 0,\n\t\t// \twidth: width,\n\t\t// \theight: height,\n\t\t// \tdirty: true\n\t\t// };\n\n\t\t// // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n\t\t// // patternContext.stroke();\n\n\t\t// image.targetLayer = layer;\n\t\t// image.render(layer);\n\n\t\t//this._layerDom.appendChild(patternCanvas);\n\n\t\tthis._patternCanvas.width = width;\n\t\tthis._patternCanvas.height = height;\n\n\t\tthis._patternContext.clearRect(0, 0, width, height);\n\n\t\t// patternCanvas.style.width = width * this.resolution + \"px\";\n\t\t// patternCanvas.style.height = height * this.resolution + \"px\";\n\n\t\tbackground.renderDetached(this._patternContext);\n\t\tgraphics.renderDetached(this._patternContext);\n\n\t\treturn this._patternContext.createPattern(this._patternCanvas, repetition)!;\n\t}\n\n\tmakeContainer(): CanvasContainer {\n\t\treturn new CanvasContainer(this);\n\t}\n\n\tmakeGraphics(): CanvasGraphics {\n\t\treturn new CanvasGraphics(this);\n\t}\n\n\tmakeText(text: string, style: CanvasTextStyle): CanvasText {\n\t\treturn new CanvasText(this, text, style);\n\t}\n\n\tmakeTextStyle(): CanvasTextStyle {\n\t\treturn new CanvasTextStyle();\n\t}\n\n\tmakeRadialText(text: string, style: CanvasTextStyle): CanvasRadialText {\n\t\treturn new CanvasRadialText(this, text, style);\n\t}\n\n\tmakePicture(image: HTMLImageElement | undefined): CanvasImage {\n\t\treturn new CanvasImage(this, image);\n\t}\n\n\tresizeLayer(layer: CanvasLayer) {\n\t\tlayer.dirty = true;\n\t\tlayer.resize(this._clientWidth, this._clientHeight, this.resolution);\n\t}\n\n\tresize(width: number, height: number): void {\n\t\tthis._clientWidth = width;\n\t\tthis._clientHeight = height;\n\t\tthis._width = Math.floor(width * this.resolution);\n\t\tthis._height = Math.floor(height * this.resolution);\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tthis.resizeLayer(layer);\n\t\t\t}\n\t\t});\n\n\t\t// @todo: do the same for ghost canvases\n\t\tthis._ghostView.width = this._width;\n\t\tthis._ghostView.height = this._height;\n\t\tthis._ghostView.style.width = width + \"px\";\n\t\tthis._ghostView.style.height = height + \"px\";\n\n\t\tthis.view.style.width = width + \"px\";\n\t\tthis.view.style.height = height + \"px\";\n\t}\n\n\tprivate createDetachedLayer(willReadFrequently: boolean = false): CanvasLayer {\n\t\tconst view = document.createElement(\"canvas\");\n\t\tconst context = view.getContext(\"2d\", { willReadFrequently: willReadFrequently })! as CanvasRenderingContext2D;\n\n\t\tconst layer = new CanvasLayer(view, context);\n\n\t\tview.style.position = \"absolute\";\n\t\tview.style.top = \"0px\";\n\t\tview.style.left = \"0px\";\n\n\t\treturn layer;\n\t}\n\n\tgetLayerByOrder(order: number): CanvasLayer | undefined {\n\t\tconst layers = this.layers;\n\t\tconst length = layers.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst layer = layers[i];\n\t\t\tif (layer.order == order) {\n\t\t\t\treturn layer;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayer(order: number, visible: boolean = true): CanvasLayer {\n\t\tlet existingLayer = this.getLayerByOrder(order);\n\t\tif (existingLayer) {\n\t\t\treturn existingLayer;\n\t\t}\n\n\t\tconst layer = this.createDetachedLayer(order == 99);\n\t\tlayer.order = order;\n\t\tlayer.visible = visible;\n\n\t\tif (layer.visible && this._width) {\n\t\t\tlayer.view.width = this._width;\n\t\t\tlayer.view.style.width = this._clientWidth + \"px\";\n\t\t\tlayer.view.height = this._height;\n\t\t\tlayer.view.style.height = this._clientHeight + \"px\";\n\t\t}\n\n\t\tconst layers = this.layers;\n\n\t\tlayers.push(layer);\n\n\t\tlayers.sort((a, b) => {\n\t\t\tif (a.order > b.order) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (a.order < b.order) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tconst length = layers.length;\n\t\tconst layerIndex = $array.indexOf(layers, layer);\n\t\tlet next;\n\n\t\tfor (let i = layerIndex + 1; i < length; i++) {\n\t\t\tif (layers[i].visible) {\n\t\t\t\tnext = layers[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (layer.visible) {\n\t\t\tif (next === undefined) {\n\t\t\t\tthis._layerDom.appendChild(layer.view);\n\n\t\t\t} else {\n\t\t\t\tthis._layerDom.insertBefore(layer.view, next.view);\n\t\t\t}\n\t\t}\n\n\t\treturn layer;\n\t}\n\n\trender(root: CanvasDisplayObject): void {\n\n\t\tthis._dirtyLayers.length = 0;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tif (layer.dirty && layer.visible) {\n\t\t\t\t\tthis._dirtyLayers.push(layer);\n\t\t\t\t\tlayer.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._ghostContext.save();\n\t\t//this._ghostContext.clearRect(0, 0, this._width, this._height);\n\t\t//this._ghostContext.beginPath();\n\t\tthis._ghostContext.fillStyle = '#000';\n\t\tthis._ghostContext.fillRect(0, 0, this._width, this._height);\n\n\t\troot.render(this.defaultLayer);\n\n\t\tthis._ghostContext.restore();\n\n\t\t//setTimeout(() => {\n\n\t\t// Remove this after the Chrome bug is fixed:\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=1279394\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tconst context = layer.context;\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(0, 0);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t});\n\n\t\t$array.each(this._dirtyLayers, (layer) => {\n\t\t\tlayer.context.restore();\n\t\t\tlayer.dirty = false;\n\t\t});\n\t\t//}, 100)\n\n\t\tif (this._hovering.size && this._lastPointerMoveEvent) {\n\t\t\t//this._mouseMoveThrottler.run();\n\t\t\tconst native = this._lastPointerMoveEvent.native;\n\n\t\t\t$array.each(this._lastPointerMoveEvent.events, (event) => {\n\t\t\t\tthis._dispatchGlobalMousemove(event, native);\n\t\t\t});\n\t\t}\n\t}\n\n\tpaintId(obj: CanvasDisplayObject): string {\n\t\tconst id = distributeId(++this._colorId);\n\t\tconst color = Color.fromHex(id).toCSS();\n\t\tthis._colorMap[color] = obj;\n\t\treturn color;\n\t}\n\n\t_removeObject(obj: CanvasDisplayObject): void {\n\t\tif (obj._colorId !== undefined) {\n\t\t\tdelete this._colorMap[obj._colorId];\n\t\t}\n\t}\n\n\t// protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n\t// \treturn this._colorMap[colorId];\n\t// }\n\n\tpublic getEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint: boolean = true): CanvasRendererEvent<A> {\n\t\tconst bbox: DOMRect = adjustPoint ? this.view.getBoundingClientRect() : new DOMRect(0, 0, 0, 0);\n\n\t\treturn new CanvasRendererEvent(\n\t\t\toriginalEvent,\n\t\t\t(originalEvent.clientX || originalEvent.clientY ? {\n\t\t\t\tx: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n\t\t\t\ty: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0),\n\t\t\t} : {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0\n\t\t\t}),\n\t\t\tbbox,\n\t\t);\n\t}\n\n\t_getHitTarget(point: IPoint, bbox: DOMRect): CanvasDisplayObject | undefined | false {\n\t\tif (bbox.width === 0 || bbox.height === 0 || point.x < 0 || point.x > bbox.width || point.y < 0 || point.y > bbox.height) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tconst pixel = this._ghostContext.getImageData(\n\t\t\t\t// TODO should this round ?\n\t\t\t\tMath.round((point.x / bbox.width) * this._width),\n\t\t\t\tMath.round((point.y / bbox.height) * this._height),\n\t\t\t\t1,\n\t\t\t\t1\n\t\t\t);\n\n\t\t\tif (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n\t\t\tconst hit = this._colorMap[colorId];\n\n\t\t\treturn hit;\n\t\t}\n\t}\n\n\t_withEvents<Key extends keyof IRendererEvents>(key: Key, f: (events: Events<Key>) => void): void {\n\t\tconst events = this._events[key] as Events<Key> | undefined;\n\n\t\tif (events !== undefined) {\n\t\t\tevents.dispatching = true;\n\n\t\t\ttry {\n\t\t\t\tf(events);\n\n\t\t\t} finally {\n\t\t\t\tevents.dispatching = false;\n\n\t\t\t\tif (events.cleanup) {\n\t\t\t\t\tevents.cleanup = false;\n\n\t\t\t\t\t$array.keepIf(events.callbacks, (callback) => {\n\t\t\t\t\t\treturn !callback.disposed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (events.callbacks.length === 0) {\n\t\t\t\t\t\tevents.disposer.dispose();\n\t\t\t\t\t\tdelete this._events[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_dispatchEventAll<Key extends keyof IRendererEvents>(key: Key, event: IRendererEvents[Key]): void {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_dispatchEvent<Key extends keyof IRendererEvents>(key: Key, target: CanvasDisplayObject, event: IRendererEvents[Key]): boolean {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dispatched = false;\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed && callback.object === target) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t\tdispatched = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn dispatched;\n\t}\n\n\t_dispatchMousedown(originalEvent: IPointerEvent): void {\n\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tif (button != 0 && button != 2 && button != 1 && button !== undefined) {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\n\t\tif (target) {\n\t\t\tconst id = event.id;\n\n\t\t\tlet dragged = false;\n\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tconst info = { id: id, value: obj };\n\n\t\t\t\tthis._mousedown.push(info);\n\n\t\t\t\tif (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n\t\t\t\t\t// Only dispatch the first element which matches\n\t\t\t\t\tdragged = true;\n\n\t\t\t\t\tconst has = this._dragging.some((x) => {\n\t\t\t\t\t\treturn x.value === obj && x.id === id;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!has) {\n\t\t\t\t\t\tthis._dragging.push(info);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchGlobalMousemove(originalEvent: IPointerEvent, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\t\tevent.native = native;\n\n\t\tif (target) {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (!obj.contains(target)) {\n\t\t\t\t\tthis._hovering.delete(obj);\n\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t\t}\n\t\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (event.native) {\n\t\t\t\teachTargets(target, (obj) => {\n\t\t\t\t\tif (!this._hovering.has(obj)) {\n\t\t\t\t\t\tthis._hovering.add(obj);\n\t\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t\tobj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n\t\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(\"pointerover\", obj, event);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//} else if (target === false) {\n\t\t} else {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t}\n\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t});\n\n\t\t\tthis._hovering.clear();\n\t\t}\n\t\tthis._dispatchEventAll(\"globalpointermove\", event);\n\t}\n\n\t_dispatchGlobalMouseup(originalEvent: IPointerEvent, native: boolean): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tevent.native = native;\n\t\t//const target = this._getHitTarget(event.point);\n\t\tthis._dispatchEventAll(\"globalpointerup\", event);\n\t}\n\n\t_dispatchDragMove(originalEvent: IPointerEvent): void {\n\t\tif (this._dragging.length !== 0) {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst id = event.id;\n\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointermove\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchDragEnd(originalEvent: IPointerEvent): void {\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tlet clickevent: \"click\" | \"rightclick\" | \"middleclick\";\n\t\tif (button == 0 || button === undefined) {\n\t\t\tclickevent = \"click\";\n\t\t}\n\t\telse if (button == 2) {\n\t\t\tclickevent = \"rightclick\";\n\t\t}\n\t\telse if (button == 1) {\n\t\t\tclickevent = \"middleclick\";\n\t\t}\n\t\telse {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst id = event.id;\n\n\t\tif (this._mousedown.length !== 0) {\n\t\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\t\t\tif (target) {\n\t\t\t\tthis._mousedown.forEach((obj) => {\n\t\t\t\t\tif (obj.id === id && obj.value.contains(target)) {\n\t\t\t\t\t\tthis._dispatchEvent(clickevent, obj.value, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._mousedown.length = 0;\n\t\t}\n\n\t\tif (this._dragging.length !== 0) {\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointerup\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._dragging.length = 0;\n\t\t}\n\t}\n\n\t_dispatchDoubleClick(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"dblclick\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchWheel(originalEvent: WheelEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point, event.bbox);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"wheel\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_makeSharedEvent(key: string, f: () => IDisposer): IDisposer {\n\t\tif (this._listeners[key] === undefined) {\n\t\t\tconst listener = f();\n\n\t\t\tthis._listeners[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._listeners[key];\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn this._listeners[key].increment();\n\t}\n\n\t_onPointerEvent(name: string, f: (event: Array<IPointerEvent>, native: boolean) => void): IDisposer {\n\t\tlet native = false;\n\t\tlet timer: number | null = null;\n\n\t\tfunction clear() {\n\t\t\ttimer = null;\n\t\t\tnative = false;\n\t\t}\n\n\t\treturn new MultiDisposer([\n\t\t\tnew Disposer(() => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\tclear();\n\t\t\t}),\n\n\t\t\t$utils.addEventListener(this.view, $utils.getRendererEvent(name), (_) => {\n\t\t\t\tnative = true;\n\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t}\n\n\t\t\t\ttimer = window.setTimeout(clear, 0);\n\t\t\t}),\n\n\t\t\tonPointerEvent(window, name, (ev) => {\n\t\t\t\tif (timer !== null) {\n\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\ttimer = null;\n\t\t\t\t}\n\n\t\t\t\tf(ev, native);\n\n\t\t\t\tnative = false;\n\t\t\t}),\n\t\t]);\n\t}\n\n\t// This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\t_initEvent(key: keyof IRendererEvents): IDisposer | undefined {\n\t\tswitch (key) {\n\t\t\tcase \"globalpointermove\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn this._makeSharedEvent(\"pointermove\", () => {\n\t\t\t\t\tconst listener = (events: Array<IPointerEvent>, native: boolean) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, native };\n\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMousemove(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\n\t\t\t\t\treturn new MultiDisposer([\n\t\t\t\t\t\tthis._onPointerEvent(\"pointerdown\", listener),\n\t\t\t\t\t\tthis._onPointerEvent(\"pointermove\", listener),\n\t\t\t\t\t]);\n\t\t\t\t});\n\t\t\tcase \"globalpointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerup\", () => {\n\t\t\t\t\tvar mouseup = this._onPointerEvent(\"pointerup\", (events, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, native };\n\t\t\t\t\t});\n\n\t\t\t\t\tvar pointercancel = this._onPointerEvent(\"pointercancel\", (events, native) => {\n\t\t\t\t\t\t$array.each(events, (event) => {\n\t\t\t\t\t\t\tthis._dispatchGlobalMouseup(event, native);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { events, native };\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"click\":\n\t\t\tcase \"rightclick\":\n\t\t\tcase \"middleclick\":\n\t\t\tcase \"pointerdown\":\n\t\t\t/*\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"pointerdown\", (event, native) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = { event, native };\n\t\t\t\t\t\tthis._dispatchMousedown(event)\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t*/\n\t\t\tcase \"pointermove\":\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\tconst mousedown = onPointerEvent(this.view, \"pointerdown\", (events) => {\n\t\t\t\t\t\t$array.each(events, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchMousedown(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\tconst mousemove = this._onPointerEvent(\"pointermove\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragMove(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst mouseup = this._onPointerEvent(\"pointerup\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst pointercancel = this._onPointerEvent(\"pointercancel\", (ev: Array<IPointerEvent>) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDragEnd(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmousedown.dispose();\n\t\t\t\t\t\tmousemove.dispose();\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t\tpointercancel.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"dblclick\":\n\t\t\t\treturn this._makeSharedEvent(\"dblclick\", () => {\n\t\t\t\t\treturn this._onPointerEvent(\"dblclick\", (ev) => {\n\t\t\t\t\t\t$array.each(ev, (ev) => {\n\t\t\t\t\t\t\tthis._dispatchDoubleClick(ev);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"wheel\":\n\t\t\t\treturn this._makeSharedEvent(\"wheel\", () => {\n\t\t\t\t\treturn $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event: WheelEvent) => {\n\t\t\t\t\t\tthis._dispatchWheel(event);\n\t\t\t\t\t}, { passive: false });\n\t\t\t\t});\n\t\t}\n\t}\n\n\t_addEvent<C, Key extends keyof IRendererEvents>(object: CanvasDisplayObject, key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tlet events: Events<Key> | undefined = this._events[key] as any;\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._events[key] = {\n\t\t\t\tdisposer: this._initEvent(key)!,\n\t\t\t\tcallbacks: [],\n\t\t\t\tdispatching: false,\n\t\t\t\tcleanup: false,\n\t\t\t};\n\t\t}\n\n\t\tconst listener = { object, context, callback, disposed: false };\n\n\t\tevents!.callbacks.push(listener);\n\n\t\treturn new Disposer(() => {\n\t\t\tlistener.disposed = true;\n\n\t\t\tif (events!.dispatching) {\n\t\t\t\tevents!.cleanup = true;\n\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(events!.callbacks, listener);\n\n\t\t\t\tif (events!.callbacks.length === 0) {\n\t\t\t\t\tevents!.disposer.dispose();\n\t\t\t\t\tdelete this._events[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCanvas(root: CanvasDisplayObject, options?: ICanvasOptions): HTMLCanvasElement {\n\n\t\t// Make sure everything is rendered\n\t\tthis.render(root);\n\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet scale: number = this.resolution;\n\n\t\t// Check if we need to scale\n\t\tif (options.minWidth && (options.minWidth > this._width)) {\n\t\t\tlet minScale = options.minWidth / this._width;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.minHeight && (options.minHeight > this._height)) {\n\t\t\tlet minScale = options.minHeight / this._height;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxWidth && (options.maxWidth < this._width)) {\n\t\t\tlet maxScale = options.maxWidth / this._width;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxHeight && (options.maxHeight > this._height)) {\n\t\t\tlet maxScale = options.maxHeight / this._height;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\t// Check if we need to compensate for pixel ratio\n\t\tif (options.maintainPixelRatio) {\n\t\t\tscale /= this.resolution;\n\t\t}\n\n\t\t// Init list canvases to remove from DOM after export\n\t\tconst canvases: HTMLCanvasElement[] = [];\n\n\t\t// Set up new canvas for export\n\t\tlet forceRender = false;\n\t\tlet canvasWidth = this._width;\n\t\tlet canvasHeight = this._height;\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tif (scale != this.resolution) {\n\t\t\tforceRender = true;\n\t\t\tcanvasWidth = this._width * scale / this.resolution;\n\t\t\tcanvasHeight = this._height * scale / this.resolution;\n\t\t}\n\n\t\tcanvas.width = canvasWidth;\n\t\tcanvas.height = canvasHeight;\n\n\t\t// Add to DOM so it inherits CSS\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tthis.view.appendChild(canvas);\n\t\tcanvases.push(canvas);\n\n\t\t// Context\n\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet needRerender = false;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\t\t\t\tif (layer.tainted || forceRender) {\n\t\t\t\t\tneedRerender = true;\n\n\t\t\t\t\tlayer.exportableView = layer.view;\n\t\t\t\t\tlayer.exportableContext = layer.context;\n\n\t\t\t\t\tlayer.view = document.createElement(\"canvas\");\n\n\t\t\t\t\t// Add to DOM so it inherits CSS\n\t\t\t\t\tlayer.view.style.position = \"fixed\";\n\t\t\t\t\tlayer.view.style.top = \"-10000px\";\n\t\t\t\t\tthis.view.appendChild(layer.view);\n\t\t\t\t\tcanvases.push(layer.view);\n\n\t\t\t\t\tlayer.view.width = canvasWidth;\n\t\t\t\t\tlayer.view.height = canvasHeight;\n\n\t\t\t\t\tlayer.context = layer.view.getContext(\"2d\")!;\n\n\t\t\t\t\tlayer.dirty = true;\n\t\t\t\t\tlayer.scale = scale;\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needRerender) {\n\t\t\tthis._omitTainted = true;\n\t\t\tthis.render(root);\n\t\t\tthis._omitTainted = false;\n\t\t}\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\n\t\t\t\t// Layer is fine. Just plop it into our target canvas\n\t\t\t\tcontext.drawImage(layer.view, 0, 0);\n\n\t\t\t\t// Restore layer original canvas\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tlayer.view = layer.exportableView;\n\t\t\t\t\tlayer.exportableView = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (layer.exportableContext) {\n\t\t\t\t\tlayer.context = layer.exportableContext;\n\t\t\t\t\tlayer.exportableContext = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (width < layer.view.clientWidth) {\n\t\t\t\t\twidth = layer.view.clientWidth;\n\t\t\t\t}\n\t\t\t\tif (height < layer.view.clientHeight) {\n\t\t\t\t\theight = layer.view.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tlayer.scale = undefined;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\t$array.each(canvases, (canvas) => {\n\t\t\tcanvas.style.position = \"\";\n\t\t\tcanvas.style.top = \"\";\n\t\t\tthis.view.removeChild(canvas);\n\t\t})\n\n\t\treturn canvas;\n\t}\n\n}\n\n\n/**\n * @ignore\n */\nexport class CanvasLayer implements ILayer {\n\tpublic view: HTMLCanvasElement;\n\tpublic context: CanvasRenderingContext2D;\n\tpublic tainted: boolean = true;\n\tpublic margin: IMargin | undefined;\n\tpublic order: number = 0;\n\tpublic visible: boolean = true;\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic scale: number | undefined;\n\tpublic dirty: boolean = true;\n\tpublic exportableView: HTMLCanvasElement | undefined;\n\tpublic exportableContext: CanvasRenderingContext2D | undefined;\n\n\tprivate _width: number = 0;\n\tprivate _height: number = 0;\n\n\tconstructor(view: HTMLCanvasElement, context: CanvasRenderingContext2D) {\n\t\tthis.view = view;\n\t\tthis.context = context;\n\t}\n\n\tresize(width: number, height: number, resolution: number) {\n\t\tif (this.width != null) {\n\t\t\twidth = this.width;\n\t\t}\n\n\t\tif (this.height != null) {\n\t\t\theight = this.height;\n\t\t}\n\n\t\tif (this.margin) {\n\t\t\twidth += (this.margin.left + this.margin.right);\n\t\t\theight += (this.margin.top + this.margin.bottom);\n\t\t\tthis.view.style.left = -this.margin.left + \"px\";\n\t\t\tthis.view.style.top = -this.margin.top + \"px\";\n\n\t\t} else {\n\t\t\tthis.view.style.left = \"0px\";\n\t\t\tthis.view.style.top = \"0px\";\n\t\t}\n\n\t\tthis._width = Math.floor(width * resolution);\n\t\tthis._height = Math.floor(height * resolution);\n\n\t\tthis.view.width = this._width;\n\t\tthis.view.style.width = width + \"px\";\n\n\t\tthis.view.height = this._height;\n\t\tthis.view.style.height = height + \"px\";\n\t}\n\n\tclear() {\n\t\tthis.context.save();\n\t\tthis.context.clearRect(0, 0, this._width, this._height);\n\t}\n}\n","import type { IAnimation } from \"./util/Animation\";\nimport type { Entity } from \"./util/Entity\";\nimport type { Sprite } from \"./render/Sprite\";\nimport type { Theme } from \"./Theme\";\nimport type { IPoint } from \"./util/IPoint\";\nimport type { IRenderer, IPointerEvent } from \"./render/backend/Renderer\";\nimport type { Timezone } from \"./util/Timezone\";\n\nimport { Container } from \"./render/Container\";\nimport { Text } from \"./render/Text\";\nimport { HorizontalLayout } from \"./render/HorizontalLayout\";\nimport { VerticalLayout } from \"./render/VerticalLayout\";\nimport { GridLayout } from \"./render/GridLayout\";\nimport { IDisposer, Disposer } from \"./util/Disposer\";\nimport { ResizeSensor } from \"./util/ResizeSensor\";\nimport { InterfaceColors } from \"./util/InterfaceColors\";\nimport { Graphics } from \"./render/Graphics\";\nimport { Rectangle } from \"./render/Rectangle\";\nimport { Tooltip } from \"./render/Tooltip\";\nimport { NumberFormatter } from \"./util/NumberFormatter\";\nimport { DateFormatter } from \"./util/DateFormatter\";\nimport { DurationFormatter } from \"./util/DurationFormatter\";\nimport { ILocale, Language } from \"./util/Language\";\nimport { Events, EventDispatcher } from \"./util/EventDispatcher\";\nimport { DefaultTheme } from \"../themes/DefaultTheme\";\nimport { CanvasRenderer } from \"./render/backend/CanvasRenderer\";\nimport { p100, percent } from \"./util/Percent\";\nimport { color } from \"./util/Color\";\nimport { populateString } from \"./util/PopulateString\";\nimport { registry } from \"./Registry\";\n\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\nimport * as $object from \"./util/Object\";\nimport * as $utils from \"./util/Utils\";\nimport * as $type from \"./util/Type\";\n\n\nimport en from \"../../locales/en\";\n\n\nfunction rAF(fps: number | undefined, callback: (currentTime: number) => void): void {\n\tif (fps == null) {\n\t\trequestAnimationFrame(callback);\n\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\trequestAnimationFrame(callback);\n\t\t}, 1000 / fps);\n\t}\n}\n\n\n/**\n * @ignore\n */\ninterface IParent extends Entity {\n\t_prepareChildren(): void;\n\t_updateChildren(): void;\n}\n\ninterface IBounds extends Entity {\n\tdepth(): number;\n\t_updateBounds(): void;\n}\n\n\nexport interface IRootEvents {\n\tframestarted: {\n\t\ttimestamp: number;\n\t};\n\tframeended: {\n\t\ttimestamp: number;\n\t};\n}\n\n\nexport interface IRootSettings {\n\n\t/**\n\t * Indicates whether chart should use \"safe\" resolution on some memory-limiting\n\t * platforms such as Safari.\n\t *\n\t * @default true\n\t */\n\tuseSafeResolution?: boolean;\n\n\t/**\n\t * Allows defining margins around chart area for tooltips to go outside the\n\t * chart itself.\n\t *\n\t * @since 5.2.24\n\t */\n\ttooltipContainerBounds?: { top: number, left: number, right: number, bottom: number };\n}\n\n\n// TODO implement Disposer\n/**\n * Root element of the chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/getting-started/#Root_element} for more info\n */\nexport class Root implements IDisposer {\n\n\t/**\n\t * A reference to original chart container (div element).\n\t */\n\tpublic dom: HTMLElement;\n\tpublic _inner: HTMLElement;\n\n\tprotected _isDirty: boolean = false;\n\tprotected _isDirtyParents: boolean = false;\n\tprotected _dirty: { [id: number]: Entity } = {};\n\tprotected _dirtyParents: { [id: number]: IParent } = {};\n\tprotected _dirtyBounds: { [id: number]: IBounds } = {};\n\tprotected _dirtyPositions: { [id: number]: Sprite } = {};\n\n\tprotected _ticker: ((currentTime: number) => void) | null = null;\n\tprotected _tickers: Array<(currentTime: number) => void> = [];\n\n\t/**\n\t * Root's event dispatcher.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n\t */\n\tpublic events: EventDispatcher<Events<this, IRootEvents>> = new EventDispatcher();\n\n\t/**\n\t * @ignore\n\t * @todo needs description\n\t */\n\tpublic animationTime: number | null = null;\n\n\tprivate _animations: Array<IAnimation> = [];\n\n\tpublic _renderer: IRenderer;\n\n\tpublic _rootContainer!: Container;\n\n\t/**\n\t * Main content container.\n\t */\n\tpublic container!: Container;\n\n\t/**\n\t * A [[Container]] used to display tooltips in.\n\t */\n\tpublic tooltipContainer!: Container\n\tprotected _tooltipContainerSettings!: { top: number, left: number, right: number, bottom: number };\n\n\tpublic _tooltip!: Tooltip;\n\n\t// Locale-related\n\n\t/**\n\t * @ignore\n\t */\n\tpublic language: Language = Language.new(this, {});\n\n\t/**\n\t * Locale used by the chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/locales/}\n\t */\n\tpublic locale: ILocale = en;\n\n\t// Date-time related\n\n\t/**\n\t * Use UTC when formatting date/time.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/#UTC_and_time_zones} for more info\n\t */\n\tpublic utc: boolean = false;\n\n\t/**\n\t * If set, will format date/time in specific time zone.\n\t *\n\t * The value should be named time zone, e.g.:\n\t * `\"America/Vancouver\"`, `\"Australia/Sydney\"`, `\"UTC\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Time_zone} for more info\n\t * @since 5.1.0\n\t */\n\tpublic timezone?: Timezone;\n\n\t/**\n\t * The maximum FPS that the Root will run at.\n\t *\n\t * If `undefined` it will run at the highest FPS.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Performance} for more info\n\t */\n\tpublic fps: number | undefined;\n\n\t/**\n\t * Number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-numbers/} for more info\n\t */\n\tpublic numberFormatter: NumberFormatter = NumberFormatter.new(this, {});\n\n\t/**\n\t * Date/time formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tpublic dateFormatter: DateFormatter = DateFormatter.new(this, {});\n\n\t/**\n\t * Duration formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\tpublic durationFormatter: DurationFormatter = DurationFormatter.new(this, {});\n\n\n\t// Accessibility\n\n\t/**\n\t * Global tab index for using for the whole chart\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\n\t */\n\tpublic tabindex: number = 0;\n\n\t//@todo maybe make this better\n\tprotected _tabindexes: Sprite[] = [];\n\n\tprotected _focusElementDirty: boolean = false;\n\tprotected _focusElementContainer: HTMLDivElement | undefined;\n\tprotected _focusedSprite: Sprite | undefined;\n\tprotected _isShift: boolean | undefined;\n\tprotected _keyboardDragPoint: IPoint | undefined;\n\tprotected _tooltipElementContainer: HTMLDivElement | undefined;\n\tprotected _readerAlertElement: HTMLDivElement | undefined;\n\n\tpublic _logo?: Container;\n\n\tpublic _tooltipDiv: HTMLDivElement | undefined;\n\n\t/**\n\t * Used for dynamically-created CSS and JavaScript with strict source policies.\n\t */\n\tpublic nonce?: string;\n\n\t/**\n\t * Special color set to be used for various controls.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Interface_colors} for more info\n\t */\n\tpublic interfaceColors: InterfaceColors;\n\n\t/**\n\t * An instance of vertical layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default VerticalLayout.new()\n\t */\n\tpublic verticalLayout: VerticalLayout = VerticalLayout.new(this, {});\n\n\t/**\n\t * An instance of horizontal layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default HorizontalLayout.new()\n\t */\n\tpublic horizontalLayout: VerticalLayout = HorizontalLayout.new(this, {});\n\n\t/**\n\t * An instance of grid layout object that can be used to set `layout` setting\n\t * of a [[Container]].\n\t *\n\t * @default VerticalLayout.new()\n\t */\n\tpublic gridLayout: VerticalLayout = GridLayout.new(this, {});\n\n\t/**\n\t * Indicates whether chart should resized automatically when parent container\n\t * width and/or height changes.\n\t *\n\t * If disabled (`autoResize = false`) you can make the chart resize manually\n\t * by calling root element's `resize()` method.\n\t */\n\tpublic autoResize: boolean = true;\n\n\tprotected _fontHash: string = \"\";\n\n\tprotected _isDisposed: boolean = false;\n\tprotected _disposers: Array<IDisposer> = [];\n\n\tprotected _resizeSensorDisposer?: IDisposer;\n\n\tpublic _tooltips: Array<Tooltip> = [];\n\n\tprotected _htmlElementContainer: HTMLDivElement | undefined;\n\tprotected _htmlEnabledContainers: Container[] = [];\n\n\tprotected constructor(id: string | HTMLElement, settings: IRootSettings = {}, isReal: boolean) {\n\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tif (settings.useSafeResolution == null) {\n\t\t\tsettings.useSafeResolution = true;\n\t\t}\n\n\t\tlet resolution;\n\n\t\tif (settings.useSafeResolution) {\n\t\t\tresolution = $utils.getSafeResolution();\n\t\t}\n\n\t\tthis._renderer = new CanvasRenderer(resolution);\n\n\t\tlet dom: HTMLElement | null;\n\n\t\tif (id instanceof HTMLElement) {\n\t\t\tdom = id;\n\t\t}\n\t\telse {\n\t\t\tdom = document.getElementById(id);\n\t\t}\n\n\t\t$array.each(registry.rootElements, (root) => {\n\t\t\tif (root.dom === dom) {\n\t\t\t\tthrow new Error(\"You cannot have multiple Roots on the same DOM node\");\n\t\t\t}\n\t\t});\n\n\t\tthis.interfaceColors = InterfaceColors.new(this, {});\n\n\t\tif (dom === null) {\n\t\t\tthrow new Error(\"Could not find HTML element with id `\" + id + \"`\");\n\t\t}\n\n\t\tthis.dom = dom;\n\n\t\tlet inner: HTMLDivElement = document.createElement(\"div\");\n\t\tinner.style.position = \"relative\";\n\t\tinner.style.height = \"100%\";\n\t\tdom.appendChild(inner);\n\n\t\tconst tooltipContainerBounds = settings.tooltipContainerBounds;\n\t\tif (tooltipContainerBounds) {\n\t\t\tthis._tooltipContainerSettings = tooltipContainerBounds;\n\t\t}\n\n\t\tthis._inner = inner;\n\n\t\tthis._updateComputedStyles();\n\n\t\tregistry.rootElements.push(this);\n\t}\n\n\n\n\n\tpublic static new(id: string | HTMLElement, settings?: IRootSettings): Root {\n\t\tconst root = new Root(id, settings, true);\n\t\troot._init();\n\t\treturn root;\n\t}\n\n\tpublic moveDOM(id: string | HTMLElement): void {\n\t\tlet dom: HTMLElement | null;\n\n\t\tif (id instanceof HTMLElement) {\n\t\t\tdom = id;\n\t\t}\n\t\telse {\n\t\t\tdom = document.getElementById(id);\n\t\t}\n\n\t\tif (dom) {\n\t\t\twhile (this.dom.childNodes.length > 0) {\n\t\t\t\tdom.appendChild(this.dom.childNodes[0]);\n\t\t\t}\n\t\t\tthis.dom = dom;\n\t\t\tthis._initResizeSensor();\n\t\t\tthis.resize();\n\t\t}\n\n\t}\n\n\n\tprotected _handleLogo(): void {\n\t\tif (this._logo) {\n\t\t\tconst w = this.dom.offsetWidth;\n\t\t\tconst h = this.dom.offsetHeight;\n\t\t\tif ((w <= 150) || (h <= 60)) {\n\t\t\t\tthis._logo.hide();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._logo.show();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _showBranding(): void {\n\t\tif (!this._logo) {\n\t\t\tconst logo = this.tooltipContainer.children.push(Container.new(this, {\n\t\t\t\tinteractive: true,\n\t\t\t\tinteractiveChildren: false,\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tsetStateOnChildren: true,\n\t\t\t\tpaddingTop: 9,\n\t\t\t\tpaddingRight: 9,\n\t\t\t\tpaddingBottom: 9,\n\t\t\t\tpaddingLeft: 9,\n\t\t\t\tscale: .6,\n\t\t\t\ty: percent(100),\n\t\t\t\tcenterY: p100,\n\t\t\t\ttooltipText: \"Created using amCharts 5\",\n\t\t\t\ttooltipX: p100,\n\t\t\t\tcursorOverStyle: \"pointer\",\n\t\t\t\tbackground: Rectangle.new(this, {\n\t\t\t\t\tfill: color(0x474758),\n\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\ttooltipY: 5\n\t\t\t\t})\n\t\t\t}));\n\n\t\t\tconst tooltip = Tooltip.new(this, {\n\t\t\t\tpointerOrientation: \"horizontal\",\n\t\t\t\tpaddingTop: 4,\n\t\t\t\tpaddingRight: 7,\n\t\t\t\tpaddingBottom: 4,\n\t\t\t\tpaddingLeft: 7\n\t\t\t});\n\t\t\ttooltip.label.setAll({\n\t\t\t\tfontSize: 12\n\t\t\t});\n\t\t\ttooltip.get(\"background\")!.setAll({\n\t\t\t\tfill: this.interfaceColors.get(\"background\"),\n\t\t\t\tstroke: this.interfaceColors.get(\"grid\"),\n\t\t\t\tstrokeOpacity: 0.3\n\t\t\t})\n\t\t\tlogo.set(\"tooltip\", tooltip);\n\n\t\t\tlogo.events.on(\"click\", () => {\n\t\t\t\twindow.open(\"https://www.amcharts.com/\", \"_blank\");\n\t\t\t});\n\n\t\t\tlogo.states.create(\"hover\", {});\n\n\t\t\tconst m = logo.children.push(Graphics.new(this, {\n\t\t\t\tstroke: color(0xcccccc),\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\tsvgPath: \"M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6\"\n\t\t\t}));\n\n\t\t\tm.states.create(\"hover\", { stroke: color(0x3CABFF) });\n\n\t\t\tconst a = logo.children.push(Graphics.new(this, {\n\t\t\t\tstroke: color(0x888888),\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\tsvgPath: \"M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0\"\n\t\t\t}));\n\n\t\t\ta.states.create(\"hover\", { stroke: color(0x474758) });\n\n\t\t\t//logo.set(\"tooltip\", this._tooltip);\n\t\t\t//logo.setPrivate(\"tooltipTarget\", logo.get(\"background\"));\n\t\t\tthis._logo = logo;\n\n\t\t\tthis._handleLogo();\n\t\t}\n\t}\n\n\tprotected _init(): void {\n\t\tconst renderer = this._renderer;\n\t\tconst rect = this.dom.getBoundingClientRect();\n\t\tconst width = Math.floor(rect.width);\n\t\tconst height = Math.floor(rect.height);\n\t\tconst rootContainer = Container.new(this, { visible: true, width, height });\n\t\tthis._rootContainer = rootContainer;\n\t\tthis._rootContainer._defaultThemes.push(DefaultTheme.new(this));\n\n\t\tconst container = rootContainer.children.push(Container.new(this, { visible: true, width: p100, height: p100 }));\n\t\tthis.container = container;\n\n\t\trenderer.resize(width, height);\n\n\t\t//@todo: better appendChild - refer\n\t\tthis._inner.appendChild(renderer.view);\n\n\t\t// TODO: TMP TMP TMP for testing only, remove\n\t\t//document.body.appendChild((<any>renderer)._ghostView);\n\n\t\tthis._initResizeSensor();\n\n\t\t// HTML content holder\n\t\tthis._htmlElementContainer = document.createElement(\"div\");\n\t\tthis._htmlElementContainer.className = \"am5-html-container\";\n\t\tthis._htmlElementContainer.style.position = \"absolute\";\n\t\tthis._htmlElementContainer.style.pointerEvents = \"none\";\n\t\tif (!this._tooltipContainerSettings) {\n\t\t\tthis._htmlElementContainer.style.overflow = \"hidden\";\n\t\t}\n\t\tthis._inner.appendChild(this._htmlElementContainer);\n\n\t\t// Create element which is used to make announcements to screen reader\n\t\tconst readerAlertElement = document.createElement(\"div\");\n\t\treaderAlertElement.className = \"am5-reader-container\";\n\t\treaderAlertElement.setAttribute(\"role\", \"alert\");\n\t\treaderAlertElement.style.zIndex = \"-100000\";\n\t\treaderAlertElement.style.opacity = \"0\";\n\t\treaderAlertElement.style.position = \"absolute\";\n\t\treaderAlertElement.style.top = \"0\";\n\t\tthis._readerAlertElement = readerAlertElement;\n\t\tthis._inner.appendChild(this._readerAlertElement);\n\n\t\tconst focusElementContainer = document.createElement(\"div\");\n\t\tfocusElementContainer.className = \"am5-focus-container\";\n\t\tfocusElementContainer.style.position = \"absolute\";\n\t\tfocusElementContainer.style.pointerEvents = \"none\";\n\t\tfocusElementContainer.style.top = \"0px\";\n\t\tfocusElementContainer.style.left = \"0px\";\n\t\tfocusElementContainer.style.overflow = \"hidden\";\n\t\tfocusElementContainer.style.width = width + \"px\";\n\t\tfocusElementContainer.style.height = height + \"px\";\n\n\t\tfocusElementContainer.setAttribute(\"role\", \"application\");\n\n\t\t$utils.setInteractive(focusElementContainer, false);\n\t\tthis._focusElementContainer = focusElementContainer;\n\t\tthis._inner.appendChild(this._focusElementContainer);\n\n\t\tthis._tooltipElementContainer = document.createElement(\"div\");\n\t\tthis._tooltipElementContainer.className = \"am5-tooltip-container\";\n\t\tthis._inner.appendChild(this._tooltipElementContainer);\n\n\t\t// Add keyboard events for accessibility, e.g. simulating drag with arrow\n\t\t// keys and click with ENTER\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tif (ev.keyCode == 16) {\n\t\t\t\t\tthis._isShift = true;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._disposers.push($utils.addEventListener(window, \"keyup\", (ev: KeyboardEvent) => {\n\t\t\t\tif (ev.keyCode == 16) {\n\t\t\t\t\tthis._isShift = false;\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\tif (focusedSprite) {\n\t\t\t\t\tif (ev.keyCode == 27) {\n\t\t\t\t\t\t// ESC pressed - lose current focus\n\t\t\t\t\t\t$utils.blur();\n\t\t\t\t\t\tthis._focusedSprite = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tlet dragOffsetX = 0;\n\t\t\t\t\tlet dragOffsetY = 0;\n\t\t\t\t\t// TODO: figure out if using bogus MouseEvent is fine, or it will\n\t\t\t\t\t// fail on some platforms\n\t\t\t\t\tswitch (ev.keyCode) {\n\t\t\t\t\t\tcase 13:\n\t\t\t\t\t\t\tev.preventDefault();\n\t\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"click\"));\n\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"click\", {\n\t\t\t\t\t\t\t\ttype: \"click\",\n\t\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\t\tdragOffsetX = -6;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\t\tdragOffsetX = 6;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\t\tdragOffsetY = -6;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\tdragOffsetY = 6;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dragOffsetX != 0 || dragOffsetY != 0) {\n\t\t\t\t\t\tev.preventDefault();\n\n\t\t\t\t\t\tif (!focusedSprite.isDragging()) {\n\t\t\t\t\t\t\t// Start dragging\n\t\t\t\t\t\t\tthis._keyboardDragPoint = {\n\t\t\t\t\t\t\t\tx: 0,\n\t\t\t\t\t\t\t\ty: 0\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst downEvent = renderer.getEvent(new MouseEvent(\"mousedown\", {\n\t\t\t\t\t\t\t\tclientX: 0,\n\t\t\t\t\t\t\t\tclientY: 0\n\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"pointerdown\")) {\n\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"pointerdown\", {\n\t\t\t\t\t\t\t\t\ttype: \"pointerdown\",\n\t\t\t\t\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Move focus marker\n\t\t\t\t\t\t\t//this._positionFocusElement(focusedSprite);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Move incrementally\n\t\t\t\t\t\tconst dragPoint = this._keyboardDragPoint!;\n\t\t\t\t\t\tdragPoint.x += dragOffsetX;\n\t\t\t\t\t\tdragPoint.y += dragOffsetY;\n\t\t\t\t\t\tconst moveEvent = renderer.getEvent(new MouseEvent(\"mousemove\", {\n\t\t\t\t\t\t\tclientX: dragPoint.x,\n\t\t\t\t\t\t\tclientY: dragPoint.y\n\t\t\t\t\t\t}), false);\n\n\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"globalpointermove\")) {\n\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"globalpointermove\", {\n\t\t\t\t\t\t\t\ttype: \"globalpointermove\",\n\t\t\t\t\t\t\t\toriginalEvent: moveEvent.event,\n\t\t\t\t\t\t\t\tpoint: moveEvent.point,\n\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tthis._disposers.push($utils.addEventListener(focusElementContainer, \"keyup\", (ev: KeyboardEvent) => {\n\t\t\t\tif (this._focusedSprite) {\n\t\t\t\t\tconst focusedSprite = this._focusedSprite;\n\t\t\t\t\tconst keyCode = ev.keyCode;\n\t\t\t\t\tswitch (keyCode) {\n\t\t\t\t\t\tcase 37:\n\t\t\t\t\t\tcase 39:\n\t\t\t\t\t\tcase 38:\n\t\t\t\t\t\tcase 40:\n\t\t\t\t\t\t\tif (focusedSprite.isDragging()) {\n\t\t\t\t\t\t\t\t// Simulate drag stop\n\t\t\t\t\t\t\t\tconst dragPoint = this._keyboardDragPoint!;\n\t\t\t\t\t\t\t\tconst upEvent = renderer.getEvent(new MouseEvent(\"mouseup\", {\n\t\t\t\t\t\t\t\t\tclientX: dragPoint.x,\n\t\t\t\t\t\t\t\t\tclientY: dragPoint.y\n\t\t\t\t\t\t\t\t}));\n\n\t\t\t\t\t\t\t\tif (focusedSprite.events.isEnabled(\"globalpointerup\")) {\n\t\t\t\t\t\t\t\t\tfocusedSprite.events.dispatch(\"globalpointerup\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"globalpointerup\",\n\t\t\t\t\t\t\t\t\t\toriginalEvent: upEvent.event,\n\t\t\t\t\t\t\t\t\t\tpoint: upEvent.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: true,\n\t\t\t\t\t\t\t\t\t\ttarget: focusedSprite\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//this._positionFocusElement(focusedSprite);\n\t\t\t\t\t\t\t\tthis._keyboardDragPoint = undefined;\n\t\t\t\t\t\t\t\t// @todo dispatch mouseup event instead of calling dragStop?\n\t\t\t\t\t\t\t\t// this._dispatchEvent(\"globalpointerup\", target, upEvent);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (focusedSprite.get(\"focusableGroup\")) {\n\t\t\t\t\t\t\t\t// Find next item in focusable group\n\t\t\t\t\t\t\t\tconst group = focusedSprite.get(\"focusableGroup\");\n\t\t\t\t\t\t\t\tconst items = this._tabindexes.filter(item => item.get(\"focusableGroup\") == group);\n\t\t\t\t\t\t\t\tlet index = items.indexOf(focusedSprite);\n\t\t\t\t\t\t\t\tconst lastIndex = items.length - 1;\n\t\t\t\t\t\t\t\tindex += (keyCode == 39 || keyCode == 40) ? 1 : -1;\n\t\t\t\t\t\t\t\tif (index < 0) {\n\t\t\t\t\t\t\t\t\tindex = lastIndex;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (index > lastIndex) {\n\t\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$utils.focus(items[index].getPrivate(\"focusElement\")!.dom);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._startTicker();\n\t\tthis.setThemes([]);\n\n\t\tthis._addTooltip();\n\n\t\tif (!this._hasLicense()) {\n\t\t\tthis._showBranding();\n\t\t}\n\t}\n\n\tprivate _initResizeSensor(): void {\n\t\tif (this._resizeSensorDisposer) {\n\t\t\tthis._resizeSensorDisposer.dispose();\n\t\t}\n\t\tthis._resizeSensorDisposer = new ResizeSensor(this.dom, () => {\n\t\t\tif (this.autoResize) {\n\t\t\t\tthis.resize();\n\t\t\t}\n\t\t});\n\t\tthis._disposers.push(this._resizeSensorDisposer);\n\t}\n\n\t/**\n\t * If automatic resizing of char is disabled (`root.autoResize = false`), it\n\t * can be resized manually by calling this method.\n\t */\n\tpublic resize(): void {\n\t\tconst dom = this.dom;\n\t\tconst rect = dom.getBoundingClientRect();\n\t\tconst w = Math.floor(rect.width);\n\t\tconst h = Math.floor(rect.height);\n\t\tif (w > 0 && h > 0) {\n\t\t\tconst htmlElementContainer = this._htmlElementContainer!;\n\t\t\thtmlElementContainer.style.width = w + \"px\";\n\t\t\thtmlElementContainer.style.height = h + \"px\";\n\n\t\t\tconst focusElementContainer = this._focusElementContainer!;\n\t\t\tfocusElementContainer.style.width = w + \"px\";\n\t\t\tfocusElementContainer.style.height = h + \"px\";\n\n\t\t\tthis._renderer.resize(w, h);\n\n\t\t\tconst rootContainer = this._rootContainer;\n\n\t\t\trootContainer.setPrivate(\"width\", w);\n\t\t\trootContainer.setPrivate(\"height\", h);\n\t\t\tthis._render();\n\t\t\tthis._handleLogo();\n\t\t}\n\t}\n\n\tprivate _render() {\n\t\tthis._renderer.render(this._rootContainer._display);\n\n\t\tif (this._focusElementDirty) {\n\t\t\tthis._updateCurrentFocus();\n\t\t\tthis._focusElementDirty = false;\n\t\t}\n\t}\n\n\tprivate _runTickers(currentTime: number) {\n\t\t$array.each(this._tickers, (f) => {\n\t\t\tf(currentTime);\n\t\t});\n\t}\n\n\tprivate _runAnimations(currentTime: number) {\n\t\t$array.keepIf(this._animations, (animation) => {\n\t\t\treturn animation._runAnimation(currentTime);\n\t\t});\n\t}\n\n\tprivate _runDirties() {\n\t\t//console.log(\"tick **************************************************************\");\n\t\tlet allParents: { [id: number]: IParent } = {};\n\n\t\twhile (this._isDirtyParents) {\n\t\t\t// This must be before calling _prepareChildren\n\t\t\tthis._isDirtyParents = false;\n\n\t\t\t$object.keys(this._dirtyParents).forEach((key) => {\n\t\t\t\tconst parent = this._dirtyParents[key];\n\n\t\t\t\tdelete this._dirtyParents[key];\n\n\t\t\t\tif (!parent.isDisposed()) {\n\t\t\t\t\tallParents[parent.uid] = parent;\n\t\t\t\t\tparent._prepareChildren();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$object.keys(allParents).forEach((key) => {\n\t\t\tallParents[key]._updateChildren();\n\t\t});\n\n\t\tconst objects: Array<Entity> = [];\n\n\t\t//\t\tconsole.log(\"_beforeChanged\")\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tconst entity = this._dirty[key];\n\n\t\t\tif (entity.isDisposed()) {\n\t\t\t\tdelete this._dirty[entity.uid];\n\n\t\t\t} else {\n\t\t\t\tobjects.push(entity);\n\t\t\t\tentity._beforeChanged();\n\t\t\t}\n\t\t});\n\n\t\t//\t\tconsole.log(\"_changed\")\n\t\tobjects.forEach((entity) => {\n\t\t\tentity._changed();\n\t\t\tdelete this._dirty[entity.uid];\n\t\t\tentity._clearDirty();\n\t\t});\n\n\t\tthis._isDirty = false;\n\n\t\tconst depths: { [id: number]: number } = {};\n\t\tconst bounds: Array<IBounds> = [];\n\n\t\t$object.keys(this._dirtyBounds).forEach((key) => {\n\t\t\tconst entity = this._dirtyBounds[key];\n\n\t\t\tdelete this._dirtyBounds[key];\n\n\t\t\tif (!entity.isDisposed()) {\n\t\t\t\tdepths[entity.uid] = entity.depth();\n\t\t\t\tbounds.push(entity);\n\t\t\t}\n\t\t});\n\n\t\t// High depth -> low depth\n\t\tbounds.sort((x, y) => {\n\t\t\treturn $order.compare(depths[y.uid], depths[x.uid]);\n\t\t});\n\n\t\t//\t\tconsole.log(\"_updateBounds\")\n\t\tbounds.forEach((entity) => {\n\t\t\tentity._updateBounds();\n\t\t});\n\n\t\t//\t\tconsole.log(\"_updatePosition\")\n\t\tconst dirtyPositions = this._dirtyPositions;\n\t\t$object.keys(dirtyPositions).forEach((key) => {\n\t\t\tconst sprite = dirtyPositions[key];\n\n\t\t\tdelete dirtyPositions[key];\n\n\t\t\tif (!sprite.isDisposed()) {\n\t\t\t\tsprite._updatePosition();\n\t\t\t}\n\t\t});\n\n\t\t//\t\tconsole.log(\"_afterChanged\")\n\t\tobjects.forEach((entity) => {\n\t\t\tentity._afterChanged();\n\t\t});\n\n\t}\n\n\tprivate _renderFrame(currentTime: number): boolean {\n\t\tif (this.events.isEnabled(\"framestarted\")) {\n\t\t\tthis.events.dispatch(\"framestarted\", {\n\t\t\t\ttype: \"framestarted\",\n\t\t\t\ttarget: this,\n\t\t\t\ttimestamp: currentTime,\n\t\t\t});\n\t\t}\n\n\t\tthis._checkComputedStyles();\n\t\tthis._runTickers(currentTime);\n\t\tthis._runAnimations(currentTime);\n\t\tthis._runDirties();\n\t\tthis._render();\n\t\tthis._positionHTMLElements();\n\n\t\tif (this.events.isEnabled(\"frameended\")) {\n\t\t\tthis.events.dispatch(\"frameended\", {\n\t\t\t\ttype: \"frameended\",\n\t\t\t\ttarget: this,\n\t\t\t\ttimestamp: currentTime,\n\t\t\t});\n\t\t}\n\n\n\t\treturn this._tickers.length === 0 &&\n\t\t\tthis._animations.length === 0 &&\n\t\t\t!this._isDirty;\n\t}\n\n\tprivate _runTicker(currentTime: number) {\n\t\tif (!this.isDisposed()) {\n\t\t\tthis.animationTime = currentTime;\n\n\t\t\tconst done = this._renderFrame(currentTime);\n\n\t\t\t// No more work to do\n\t\t\tif (done) {\n\t\t\t\tthis._ticker = null;\n\t\t\t\tthis.animationTime = null;\n\n\t\t\t} else {\n\t\t\t\trAF(this.fps, this._ticker!);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _runTickerNow() {\n\t\tif (!this.isDisposed()) {\n\t\t\tfor (; ;) {\n\t\t\t\tconst currentTime = performance.now();\n\n\t\t\t\tthis.animationTime = currentTime;\n\n\t\t\t\tconst done = this._renderFrame(currentTime);\n\n\t\t\t\tif (done) {\n\t\t\t\t\tthis.animationTime = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _startTicker() {\n\t\tif (this._ticker === null) {\n\t\t\tthis.animationTime = null;\n\n\t\t\tthis._ticker = (currentTime) => {\n\t\t\t\tthis._runTicker(currentTime);\n\t\t\t};\n\n\t\t\trAF(this.fps, this._ticker!);\n\t\t}\n\t}\n\n\tpublic _addDirtyEntity(entity: Entity) {\n\t\tif (this._dirty[entity.uid] === undefined) {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._dirty[entity.uid] = entity;\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _addDirtyParent(parent: IParent) {\n\t\tif (this._dirtyParents[parent.uid] === undefined) {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._isDirtyParents = true;\n\t\t\tthis._dirtyParents[parent.uid] = parent;\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _addDirtyBounds(entity: IBounds) {\n\t\tif (this._dirtyBounds[entity.uid] === undefined) {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._dirtyBounds[entity.uid] = entity;\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _addDirtyPosition(sprite: Sprite) {\n\t\tif (this._dirtyPositions[sprite.uid] === undefined) {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._dirtyPositions[sprite.uid] = sprite;\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _addAnimation(animation: IAnimation) {\n\t\t// TODO use numeric id instead\n\t\tif (this._animations.indexOf(animation) === -1) {\n\t\t\tthis._animations.push(animation);\n\t\t\tthis._startTicker();\n\t\t}\n\t}\n\n\tpublic _markDirty() {\n\t\tthis._isDirty = true;\n\t}\n\n\tpublic _markDirtyRedraw() {\n\t\tthis.events.once(\"frameended\", () => {\n\t\t\tthis._isDirty = true;\n\t\t\tthis._startTicker();\n\t\t})\n\t}\n\n\tpublic eachFrame(f: (currentTime: number) => void): IDisposer {\n\t\tthis._tickers.push(f);\n\t\tthis._startTicker();\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(this._tickers, f);\n\t\t});\n\t}\n\n\tpublic markDirtyGlobal(container?: Container): void {\n\t\tif (!container) {\n\t\t\tcontainer = this.container;\n\t\t}\n\t\tconsole.log(this.width());\n\t\tcontainer.walkChildren((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tthis.markDirtyGlobal(child);\n\t\t\t}\n\t\t\tchild.markDirty();\n\t\t\tchild.markDirtyBounds();\n\t\t});\n\t}\n\n\t/**\n\t * Returns width of the target container, in pixels.\n\t *\n\t * @return Width\n\t */\n\tpublic width(): number {\n\t\t// TODO make this more efficient, maybe just return the renderer's width ?\n\t\treturn Math.floor(this.dom.getBoundingClientRect().width);\n\t}\n\n\t/**\n\t * Returns height of the target container, in pixels.\n\t *\n\t * @return Height\n\t */\n\tpublic height(): number {\n\t\t// TODO make this more efficient, maybe just return the renderer's height ?\n\t\treturn Math.floor(this.dom.getBoundingClientRect().height);\n\t}\n\n\t/**\n\t * Disposes root and all the content in it.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._isDisposed) {\n\t\t\tthis._isDisposed = true;\n\n\t\t\tthis._rootContainer.dispose();\n\t\t\tthis._renderer.dispose();\n\t\t\tthis.horizontalLayout.dispose();\n\t\t\tthis.verticalLayout.dispose();\n\t\t\tthis.interfaceColors.dispose();\n\n\t\t\t$array.each(this._disposers, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\n\t\t\tif (this._inner) {\n\t\t\t\t$utils.removeElement(this._inner);\n\t\t\t}\n\n\t\t\t$array.remove(registry.rootElements, this);\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if root element is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\t/**\n\t * Triggers screen reader read out a message.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/accessibility/} for more info\n\t * @param  text  Alert text\n\t */\n\tpublic readerAlert(text: string): void {\n\t\tthis._readerAlertElement!.innerHTML = $utils.stripTags(text);\n\t}\n\n\t/**\n\t * Sets themes to be used for the chart.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t * @param  themes  A list of themes\n\t */\n\tpublic setThemes(themes: Array<Theme>): void {\n\t\tthis._rootContainer.set(\"themes\", themes);\n\n\t\t// otherwise new themes are not applied\n\t\tconst tooltipContainer = this.tooltipContainer;\n\t\tif (tooltipContainer) {\n\t\t\ttooltipContainer._applyThemes();\n\t\t}\n\n\t\t// @todo review this\n\t\tconst interfaceColors = this.interfaceColors;\n\t\tif (interfaceColors) {\n\t\t\tinterfaceColors._applyThemes();\n\t\t}\n\n\n\t}\n\n\tprotected _addTooltip() {\n\t\tif (!this.tooltipContainer) {\n\t\t\tconst tooltipContainer = this._rootContainer.children.push(Container.new(this, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tisMeasured: false,\n\t\t\t\twidth: p100,\n\t\t\t\theight: p100,\n\t\t\t\tlayer: this._tooltipContainerSettings ? 35 : 30,\n\t\t\t\tlayerMargin: this._tooltipContainerSettings ? this._tooltipContainerSettings : undefined\n\t\t\t}));\n\t\t\tthis.tooltipContainer = tooltipContainer;\n\n\t\t\tconst tooltip = Tooltip.new(this, {});\n\t\t\tthis.container.set(\"tooltip\", tooltip);\n\t\t\ttooltip.hide(0);\n\t\t\tthis._tooltip = tooltip;\n\t\t}\n\t}\n\n\t/**\n\t * Accesibility\n\t */\n\n\tpublic _registerTabindexOrder(target: Sprite): void {\n\t\tif (target.get(\"focusable\")) {\n\t\t\t$array.pushOne(this._tabindexes, target);\n\t\t}\n\t\telse {\n\t\t\t$array.remove(this._tabindexes, target);\n\t\t}\n\t\tthis._invalidateTabindexes();\n\t}\n\n\tpublic _unregisterTabindexOrder(target: Sprite): void {\n\t\t$array.remove(this._tabindexes, target);\n\t\tthis._invalidateTabindexes();\n\t}\n\n\tpublic _invalidateTabindexes(): void {\n\n\t\tthis._tabindexes.sort((a: Sprite, b: Sprite) => {\n\t\t\tconst aindex = a.get(\"tabindexOrder\", 0);\n\t\t\tconst bindex = b.get(\"tabindexOrder\", 0);\n\t\t\tif (aindex == bindex) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\telse if (aindex > bindex) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t});\n\n\t\tconst groups: Array<string | number> = [];\n\t\t$array.each(this._tabindexes, (item, index) => {\n\t\t\tif (!item.getPrivate(\"focusElement\")) {\n\t\t\t\tthis._makeFocusElement(index, item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._moveFocusElement(index, item);\n\t\t\t}\n\t\t\tconst group = item.get(\"focusableGroup\");\n\t\t\tif (group) {\n\t\t\t\tif (groups.indexOf(group) !== -1) {\n\t\t\t\t\t// Non-first element in the group, make it not directly focusable\n\t\t\t\t\titem.getPrivate(\"focusElement\")!.dom.setAttribute(\"tabindex\", \"-1\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgroups.push(group);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tpublic _updateCurrentFocus(): void {\n\t\tif (this._focusedSprite) {\n\t\t\tthis._decorateFocusElement(this._focusedSprite);\n\t\t\tthis._positionFocusElement(this._focusedSprite);\n\t\t}\n\t}\n\n\tpublic _decorateFocusElement(target: Sprite, focusElement?: HTMLDivElement): void {\n\n\t\t// Decorate with proper accessibility attributes\n\t\tif (!focusElement) {\n\t\t\tfocusElement = target.getPrivate(\"focusElement\")!.dom;\n\t\t}\n\n\t\tif (!focusElement) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (target.get(\"visible\") && target.get(\"role\") != \"tooltip\" && !target.isHidden()) {\n\t\t\tif (focusElement.getAttribute(\"tabindex\") != \"-1\") {\n\t\t\t\tfocusElement.setAttribute(\"tabindex\", \"\" + this.tabindex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"tabindex\")\n\t\t}\n\n\t\tconst role = target.get(\"role\");\n\t\tif (role) {\n\t\t\tfocusElement.setAttribute(\"role\", role);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"role\");\n\t\t}\n\n\t\tconst ariaLabel = target.get(\"ariaLabel\");\n\t\tif (ariaLabel) {\n\t\t\tconst label = populateString(target, ariaLabel);\n\t\t\tfocusElement.setAttribute(\"aria-label\", label);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-label\");\n\t\t}\n\n\t\tconst ariaLive = target.get(\"ariaLive\");\n\t\tif (ariaLive) {\n\t\t\tfocusElement.setAttribute(\"aria-live\", ariaLive);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-live\");\n\t\t}\n\n\t\tconst ariaChecked = target.get(\"ariaChecked\");\n\t\tif (ariaChecked != null) {\n\t\t\tfocusElement.setAttribute(\"aria-checked\", ariaChecked ? \"true\" : \"false\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-checked\");\n\t\t}\n\n\t\tif (target.get(\"ariaHidden\")) {\n\t\t\tfocusElement.setAttribute(\"aria-hidden\", \"hidden\");\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-hidden\");\n\t\t}\n\n\t\tconst ariaOrientation = target.get(\"ariaOrientation\");\n\t\tif (ariaOrientation) {\n\t\t\tfocusElement.setAttribute(\"aria-orientation\", ariaOrientation);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-orientation\");\n\t\t}\n\n\t\tconst ariaValueNow = target.get(\"ariaValueNow\");\n\t\tif (ariaValueNow) {\n\t\t\tfocusElement.setAttribute(\"aria-valuenow\", ariaValueNow);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuenow\");\n\t\t}\n\n\t\tconst ariaValueMin = target.get(\"ariaValueMin\");\n\t\tif (ariaValueMin) {\n\t\t\tfocusElement.setAttribute(\"aria-valuemin\", ariaValueMin);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuemin\");\n\t\t}\n\n\t\tconst ariaValueMax = target.get(\"ariaValueMax\");\n\t\tif (ariaValueMax) {\n\t\t\tfocusElement.setAttribute(\"aria-valuemax\", ariaValueMax);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuemax\");\n\t\t}\n\n\t\tconst ariaValueText = target.get(\"ariaValueText\");\n\t\tif (ariaValueText) {\n\t\t\tfocusElement.setAttribute(\"aria-valuetext\", ariaValueText);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-valuetext\");\n\t\t}\n\n\t\tconst ariaControls = target.get(\"ariaControls\");\n\t\tif (ariaControls) {\n\t\t\tfocusElement.setAttribute(\"aria-controls\", ariaControls);\n\t\t}\n\t\telse {\n\t\t\tfocusElement.removeAttribute(\"aria-controls\");\n\t\t}\n\t}\n\n\tpublic _makeFocusElement(index: number, target: Sprite): void {\n\n\t\tif (target.getPrivate(\"focusElement\")) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Init\n\t\tconst focusElement = document.createElement(\"div\");\n\t\tif (target.get(\"role\") != \"tooltip\") {\n\t\t\tfocusElement.tabIndex = this.tabindex;\n\t\t}\n\t\tfocusElement.style.position = \"absolute\";\n\t\t$utils.setInteractive(focusElement, false);\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\ttarget.setPrivate(\"focusElement\", {\n\t\t\tdom: focusElement,\n\t\t\tdisposers,\n\t\t});\n\n\t\tthis._decorateFocusElement(target);\n\n\t\tdisposers.push($utils.addEventListener(focusElement, \"focus\", (ev: FocusEvent) => {\n\t\t\tthis._handleFocus(ev, index);\n\t\t}));\n\n\t\tdisposers.push($utils.addEventListener(focusElement, \"blur\", (ev: FocusEvent) => {\n\t\t\tthis._handleBlur(ev, index);\n\t\t}));\n\n\t\tthis._moveFocusElement(index, target);\n\n\t}\n\n\tpublic _removeFocusElement(target: Sprite): void {\n\t\t$array.remove(this._tabindexes, target);\n\t\tconst focusElement = target.getPrivate(\"focusElement\");\n\t\tif (focusElement) {\n\t\t\tconst container = this._focusElementContainer!;\n\t\t\tcontainer.removeChild(focusElement.dom);\n\t\t\t$array.each(focusElement.disposers, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _hideFocusElement(target: Sprite): void {\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!;\n\t\tfocusElement.dom.style.display = \"none\";\n\t}\n\n\tprotected _moveFocusElement(index: number, target: Sprite): void {\n\n\t\t// Get container\n\t\tconst container = this._focusElementContainer!;\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!.dom;\n\n\t\tif (focusElement === this._focusElementContainer!.children[index]) {\n\t\t\t// Nothing to do\n\t\t\treturn;\n\t\t}\n\n\t\tconst next = this._focusElementContainer!.children[index + 1];\n\t\tif (next) {\n\t\t\tcontainer.insertBefore(focusElement, next);\n\t\t}\n\t\telse {\n\t\t\tcontainer.append(focusElement);\n\t\t}\n\t}\n\n\tprotected _positionFocusElement(target: Sprite): void {\n\t\tconst bounds = target.globalBounds();\n\n\t\tconst width = bounds.right == bounds.left ? target.width() : bounds.right - bounds.left;\n\t\tconst height = bounds.top == bounds.bottom ? target.height() : bounds.bottom - bounds.top;\n\n\t\tconst focusElement = target.getPrivate(\"focusElement\")!.dom;\n\t\tfocusElement.style.top = (bounds.top - 2) + \"px\";\n\t\tfocusElement.style.left = (bounds.left - 2) + \"px\";\n\t\tfocusElement.style.width = (width + 4) + \"px\";\n\t\tfocusElement.style.height = (height + 4) + \"px\";\n\n\t}\n\n\tprotected _handleFocus(ev: FocusEvent, index: number): void {\n\t\t// Get element\n\t\tconst focused = this._tabindexes[index];\n\n\t\t// Jump over hidden elements\n\t\tif (!focused.isVisibleDeep()) {\n\t\t\tthis._focusNext(<HTMLDivElement>ev.target, this._isShift ? -1 : 1);\n\t\t\treturn;\n\t\t}\n\n\t\t// Size and position\n\t\tthis._positionFocusElement(focused);\n\t\t//this._decorateFocusElement(focused);\n\n\t\tthis._focusedSprite = focused;\n\n\t\tif (focused.events.isEnabled(\"focus\")) {\n\t\t\tfocused.events.dispatch(\"focus\", {\n\t\t\t\ttype: \"focus\",\n\t\t\t\toriginalEvent: ev,\n\t\t\t\ttarget: focused\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _focusNext(el: HTMLDivElement, direction: 1 | -1): void {\n\t\tvar focusableElements = Array.from(document.querySelectorAll([\n\t\t\t'a[href]',\n\t\t\t'area[href]',\n\t\t\t'button:not([disabled])',\n\t\t\t'details',\n\t\t\t'input:not([disabled])',\n\t\t\t'iframe:not([disabled])',\n\t\t\t'select:not([disabled])',\n\t\t\t'textarea:not([disabled])',\n\t\t\t'[contentEditable=\"\"]',\n\t\t\t'[contentEditable=\"true\"]',\n\t\t\t'[contentEditable=\"TRUE\"]',\n\t\t\t'[tabindex]:not([tabindex^=\"-\"])',\n\t\t\t//':not([disabled])'\n\t\t].join(',')));\n\n\t\tlet index = focusableElements.indexOf(el) + direction;\n\n\t\tif (index < 0) {\n\t\t\tindex = focusableElements.length - 1;\n\t\t}\n\t\telse if (index >= focusableElements.length) {\n\t\t\tindex = 0;\n\t\t}\n\n\t\t(<HTMLElement>focusableElements[index]).focus();\n\t}\n\n\tprotected _handleBlur(ev: FocusEvent, _index: number): void {\n\t\tconst focused = this._focusedSprite;\n\t\tif (focused && focused.events.isEnabled(\"blur\")) {\n\t\t\tfocused.events.dispatch(\"blur\", {\n\t\t\t\ttype: \"blur\",\n\t\t\t\toriginalEvent: ev,\n\t\t\t\ttarget: focused\n\t\t\t});\n\t\t}\n\t\tthis._focusedSprite = undefined;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltip(target: Text): void {\n\t\tconst text = $utils.stripTags(target._getText());\n\t\tlet tooltipElement = target.getPrivate(\"tooltipElement\");\n\t\tif (target.get(\"role\") == \"tooltip\" && text != \"\") {\n\t\t\tif (!tooltipElement) {\n\t\t\t\ttooltipElement = this._makeTooltipElement(target);\n\t\t\t}\n\t\t\tif (tooltipElement.innerHTML != text) {\n\t\t\t\ttooltipElement.innerHTML = text!;\n\t\t\t}\n\t\t}\n\t\telse if (tooltipElement) {\n\t\t\ttooltipElement.remove();\n\t\t\ttarget.removePrivate(\"tooltipElement\");\n\t\t}\n\t}\n\n\tpublic _makeTooltipElement(target: Text): HTMLDivElement {\n\t\tconst container = this._tooltipElementContainer!;\n\t\tconst tooltipElement = document.createElement(\"div\");\n\t\ttooltipElement.style.position = \"absolute\";\n\t\ttooltipElement.style.top = \"-1000000px\";\n\t\ttooltipElement.style.opacity = \"0.0000001\";\n\n\t\t$utils.setInteractive(tooltipElement, false);\n\n\t\tthis._decorateFocusElement(target, tooltipElement);\n\t\tcontainer.append(tooltipElement);\n\t\ttarget.setPrivate(\"tooltipElement\", tooltipElement);\n\t\treturn tooltipElement;\n\t}\n\n\tpublic _invalidateAccessibility(target: Sprite): void {\n\t\tthis._focusElementDirty = true;\n\t\tconst focusElement = target.getPrivate(\"focusElement\");\n\t\tif (target.get(\"focusable\")) {\n\t\t\tif (focusElement) {\n\t\t\t\tthis._decorateFocusElement(target);\n\t\t\t\tthis._positionFocusElement(target);\n\t\t\t}\n\t\t\t// else {\n\t\t\t// \tthis._renderer._makeFocusElement(0, this);\n\t\t\t// }\n\t\t}\n\t\telse if (focusElement) {\n\t\t\tthis._removeFocusElement(target);\n\t\t}\n\t\t//this.updateCurrentFocus();\n\t}\n\n\t/**\n\t * Returns `true` if `target` is currently focused.\n\t *\n\t * @param   target  Target\n\t * @return          Focused?\n\t */\n\tpublic focused(target: Sprite): boolean {\n\t\treturn this._focusedSprite === target;\n\t}\n\n\t/**\n\t * Converts document coordinates to coordinates withing root element.\n\t *\n\t * @param   point  Document point\n\t * @return         Root point\n\t */\n\tpublic documentPointToRoot(point: IPoint): IPoint {\n\t\tconst bbox = this.dom.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: point.x - bbox.left,\n\t\t\ty: point.y - bbox.top\n\t\t};\n\t}\n\n\t/**\n\t * Converts root coordinates to document\n\t *\n\t * @param   point  Document point\n\t * @return         Root point\n\t */\n\tpublic rootPointToDocument(point: IPoint): IPoint {\n\t\tconst bbox = this.dom.getBoundingClientRect();\n\t\treturn {\n\t\t\tx: point.x + bbox.left,\n\t\t\ty: point.y + bbox.top\n\t\t};\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _updateComputedStyles(): boolean {\n\t\tconst styles = window.getComputedStyle(this.dom);\n\t\tlet fontHash = \"\";\n\t\t$object.each(styles, (key, val) => {\n\t\t\tif ($type.isString(key) && key.match(/^font/)) {\n\t\t\t\tfontHash += val;\n\t\t\t}\n\t\t})\n\t\tconst changed = fontHash != this._fontHash;\n\t\tif (changed) {\n\t\t\tthis._fontHash = fontHash;\n\t\t}\n\t\treturn changed;\n\t}\n\n\tprotected _checkComputedStyles(): void {\n\t\tif (this._updateComputedStyles()) {\n\t\t\tthis._invalidateLabelBounds(this.container);\n\t\t}\n\t}\n\n\tprotected _invalidateLabelBounds(target: Sprite): void {\n\t\tif (target instanceof Container) {\n\t\t\ttarget.children.each((child) => {\n\t\t\t\tthis._invalidateLabelBounds(child);\n\t\t\t});\n\t\t}\n\t\telse if (target instanceof Text) {\n\t\t\ttarget.markDirtyBounds();\n\t\t}\n\t}\n\n\t/**\n\t * To all the clever heads out there. Yes, we did not make any attempts to\n\t * scramble this.\n\t *\n\t * This is a part of a tool meant for our users to manage their commercial\n\t * licenses for removal of amCharts branding from charts.\n\t *\n\t * The only legit way to do so is to purchase a commercial license for amCharts:\n\t * https://www.amcharts.com/online-store/\n\t *\n\t * Removing or altering this code, or disabling amCharts branding in any other\n\t * way is against the license and thus illegal.\n\t */\n\tprotected _hasLicense(): boolean {\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5C.{5,}/i)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic _licenseApplied(): void {\n\t\tif (this._logo) {\n\t\t\tthis._logo.set(\"forceHidden\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get debugGhostView(): boolean {\n\t\treturn this._renderer.debugGhostView;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic set debugGhostView(value: boolean) {\n\t\tthis._renderer.debugGhostView = value;\n\t}\n\n\t/**\n\t * Set this to `true` if you need chart to require first a tap onto it before\n\t * touch gesture related functionality like zoom/pan is turned on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\n\t * @default false\n\t * @since 5.2.9\n\t * @param  value  Needs a tap to activate touch functions\n\t */\n\tpublic set tapToActivate(value: boolean) {\n\t\tthis._renderer.tapToActivate = value;\n\t}\n\n\t/**\n\t * @return Needs a tap to activate touch functions\n\t */\n\tpublic get tapToActivate(): boolean {\n\t\treturn this._renderer.tapToActivate;\n\t}\n\n\t/**\n\t * If `tapToActivate` is set to `true`, this setting will determine number\n\t * of milliseconds the chart will stay \"active\", before releasing the\n\t * controls back to the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/root-element/#Touch_related_options} for more info\n\t * @default 3000\n\t * @since 5.2.9\n\t * @param  value  Timeout\n\t */\n\tpublic set tapToActivateTimeout(value: number) {\n\t\tthis._renderer.tapToActivateTimeout = value;\n\t}\n\n\t/**\n\t * @return Timeout\n\t */\n\tpublic get tapToActivateTimeout(): number {\n\t\treturn this._renderer.tapToActivateTimeout;\n\t}\n\n\tpublic _makeHTMLElement(target: Container): HTMLDivElement {\n\n\t\t// Get container\n\t\tconst container = this._htmlElementContainer!;\n\n\t\t// Init\n\t\tconst htmlElement = document.createElement(\"div\");\n\t\ttarget.setPrivate(\"htmlElement\", htmlElement);\n\n\t\t//htmlElement.tabIndex = this.tabindex;\n\t\thtmlElement.style.position = \"absolute\";\n\t\thtmlElement.style.overflow = \"auto\";\n\t\thtmlElement.style.boxSizing = \"border-box\";\n\t\t$utils.setInteractive(htmlElement, true);\n\n\t\t// Translate events\n\t\tif (target.events.isEnabled(\"click\")) {\n\t\t\tthis._disposers.push($utils.addEventListener<PointerEvent | MouseEvent>(htmlElement, \"click\", (ev: IPointerEvent) => {\n\t\t\t\tconst downEvent = this._renderer.getEvent(ev);\n\t\t\t\ttarget.events.dispatch(\"click\", {\n\t\t\t\t\ttype: \"click\",\n\t\t\t\t\toriginalEvent: downEvent.event,\n\t\t\t\t\tpoint: downEvent.point,\n\t\t\t\t\tsimulated: false,\n\t\t\t\t\ttarget: target\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\n\t\tthis._positionHTMLElement(target);\n\n\t\tcontainer.append(htmlElement);\n\n\t\t$array.pushOne(this._htmlEnabledContainers, target);\n\n\t\treturn htmlElement;\n\t}\n\n\tpublic _positionHTMLElements(): void {\n\t\t$array.each(this._htmlEnabledContainers, (target) => {\n\t\t\tthis._positionHTMLElement(target);\n\t\t});\n\t}\n\n\tpublic _positionHTMLElement(target: Container): void {\n\t\tconst htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (htmlElement) {\n\n\t\t\t// Translate settings\n\t\t\tconst visualSettings = [\"paddingTop\", \"paddingRight\", \"paddingBottom\", \"paddingLeft\", \"minWidth\", \"minHeight\", \"maxWidth\", \"maxHeight\"];\n\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\tconst value = target.get(setting);\n\t\t\t\tif (value) {\n\t\t\t\t\thtmlElement.style[setting] = value + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thtmlElement.style[setting] = \"\";\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Deal with opacity\n\t\t\tconst opacity = target.compositeOpacity();\n\t\t\tsetTimeout(() => {\n\t\t\t\thtmlElement.style.opacity = opacity + \"\";\n\t\t\t}, 10);\n\n\t\t\tconst visible = target.isVisibleDeep();\n\t\t\tif (visible) {\n\t\t\t\thtmlElement.style.display = \"block\";\n\t\t\t}\n\n\t\t\t// Deal with position\n\t\t\tconst bounds = target.globalBounds();\n\t\t\thtmlElement.style.top = (bounds.top) + \"px\";\n\t\t\thtmlElement.style.left = (bounds.left) + \"px\";\n\n\t\t\t// Use width/height if those are set\n\t\t\tconst width = target.get(\"width\");\n\t\t\tconst height = target.get(\"height\");\n\n\t\t\tlet w: number = 0;\n\t\t\tlet h: number = 0;\n\n\t\t\tif (width) {\n\t\t\t\tw = target.width();\n\t\t\t}\n\n\t\t\tif (height) {\n\t\t\t\th = target.height();\n\t\t\t}\n\n\t\t\tif (!width || !height) {\n\t\t\t\thtmlElement.style.width = \"\";\n\t\t\t\thtmlElement.style.height = \"\";\n\t\t\t\tconst bbox = htmlElement.getBoundingClientRect();\n\t\t\t\tw = bbox.width;\n\t\t\t\th = bbox.height;\n\n\t\t\t\ttarget._adjustedLocalBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\t\t\t\ttarget.setPrivate(\"minWidth\", w);\n\t\t\t\ttarget.setPrivate(\"minHeight\", h);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.removePrivate(\"minWidth\");\n\t\t\t\ttarget.removePrivate(\"minHeight\");\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\thtmlElement.style.minWidth = (w) + \"px\";\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\thtmlElement.style.minHeight = (h) + \"px\";\n\t\t\t}\n\n\t\t\t// Hide or show\n\t\t\tif (!visible || opacity == 0) {\n\t\t\t\thtmlElement.style.display = \"none\";\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic _setHTMLContent(target: Container, html: string): void {\n\t\tlet htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (!htmlElement) {\n\t\t\thtmlElement = this._makeHTMLElement(target);\n\t\t}\n\t\tif (htmlElement.innerHTML != html) {\n\t\t\thtmlElement.innerHTML = html;\n\t\t}\n\t}\n\n\tpublic _removeHTMLContent(target: Container): void {\n\t\tlet htmlElement = target.getPrivate(\"htmlElement\");\n\t\tif (htmlElement) {\n\t\t\tthis._htmlElementContainer!.removeChild(htmlElement);\n\t\t}\n\t\t$array.remove(this._htmlEnabledContainers, target);\n\t}\n}\n","import type { Entity } from \"./util/Entity\";\nimport { Template } from \"./util/Template\";\nimport type { Root } from \"./Root\";\nimport type { IClasses } from \"./Classes\";\nimport * as $order from \"./util/Order\";\nimport * as $array from \"./util/Array\";\n\nexport interface IRule<A extends Entity> {\n\ttags: Array<string>;\n\ttemplate: Template<A>;\n}\n\n/**\n * A base class for an amCharts theme.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n * @important\n */\nexport class Theme {\n\n\tprotected _root!: Root;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<T extends typeof Theme>(this: T, root: Root): InstanceType<T> {\n\t\tconst x = (new this(root, true)) as InstanceType<T>;\n\t\tx.setupDefaultRules();\n\t\treturn x;\n\t}\n\n\tconstructor(root: Root, isReal:boolean) {\n\t\tthis._root = root;\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t}\n\n\tprotected setupDefaultRules(): void {}\n\n\tprotected _rules: { [type: string]: Array<IRule<Entity>>; } = {};\n\n\t/**\n\t * Looks up the rules for a specific theme class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\n\t * @param   themeClass Theme class\n\t * @return             Array<IRule<A>>\n\t */\n\tpublic _lookupRules<A extends Entity>(themeClass: string): Array<IRule<A>> | undefined {\n\t\treturn this._rules[themeClass] as unknown as Array<IRule<A>> | undefined;\n\t}\n\n\t/**\n\t * Creates a [[Template]] for specific theme class and tags.\n\t *\n\t * NOTE: the difference from `rule()` is that `ruleRaw()` does not do any\n\t * type checks.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\n\t * @param   themeClass Theme class\n\t * @param   themeTags  Theme tags\n\t * @return             Template\n\t */\n\tpublic ruleRaw<A extends Entity>(themeClass: string, themeTags: Array<string> = []): Template<A> {\n\t\tlet rules = this._rules[themeClass];\n\n\t\tif (!rules) {\n\t\t\trules = this._rules[themeClass] = [];\n\t\t}\n\n\t\tthemeTags.sort($order.compare);\n\n\t\tconst { index, found } = $array.getSortedIndex(rules, (x) => {\n\t\t\tconst order = $order.compare(x.tags.length, themeTags.length);\n\n\t\t\tif (order === 0) {\n\t\t\t\treturn $order.compareArray(x.tags, themeTags, $order.compare);\n\n\t\t\t} else {\n\t\t\t\treturn order;\n\t\t\t}\n\t\t});\n\n\t\tif (found) {\n\t\t\treturn rules[index].template as Template<A>;\n\n\t\t} else {\n\t\t\tconst template = Template.new<A>({});\n\n\t\t\trules.splice(index, 0, {\n\t\t\t\ttags: themeTags,\n\t\t\t\ttemplate,\n\t\t\t});\n\n\t\t\treturn template;\n\t\t}\n\t}\n\n\t/**\n\t * Creates a [[Template]] for specific theme class and tags.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/themes/} for more info\n\t * @param   themeClass Theme class\n\t * @param   themeTags  Theme tags\n\t * @return             Template\n\t */\n\tpublic rule<K extends keyof IClasses>(themeClass: K, themeTags: Array<string> = []): Template<IClasses[K]> {\n\t\treturn this.ruleRaw(themeClass, themeTags) as Template<IClasses[K]>;\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport type { Series } from \"../../core/render/Series\";\n\nexport interface IBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Horizontal location within target element.\n\t *\n\t * 0 - left, 1 - right, or anything inbetweeen.\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location within target element.\n\t *\n\t * 0 - top, 1 - bottom, or anything inbetweeen.\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * If set to `true`, the bullet will redraw its `sprite` element whenever\n\t * anything in its parent series changes.\n\t *\n\t * @default false\n\t */\n\tdynamic?: boolean;\n\n\t/**\n\t * If set to `true`, the bullet will be automatically rotated to face\n\t * direction of line it is attached to.\n\t *\n\t * NOTE: Works only in  [[Flow]] and [[MapPointSeries]] (when [[MapPoint]] is\n\t * attached to a [[MapLine]]).\n\t *\n\t * @default false\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * If `autoRotate` is set to `true`, value of `autoRotateAngle` will be added\n\t * to the automatically-calculated angle.\n\t */\n\tautoRotateAngle?: number;\n\n}\n\nexport interface IBulletPrivate extends IEntityPrivate {\n\thidden?:boolean;\n}\n\n/**\n * A universal placeholder for bullet elements.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n */\nexport class Bullet extends Entity {\n\tpublic static className: string = \"Bullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Bullet.className]);\n\n\tdeclare public _settings: IBulletSettings;\n\tdeclare public _privateSettings: IBulletPrivate;\n\n\t// used by MapPolygons where one data item can have multiple bullets of the same kind\n\tpublic _index?: number;\n\n\t/**\n\t * Target series object if it's a bullet for series.\n\t */\n\tpublic series: Series | undefined;\n\n\tprotected _afterNew() {\n\t\t// Applying themes because bullet will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tconst sprite = this.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"locationX\") || this.isDirty(\"locationY\")) {\n\t\t\tif (this.series) {\n\t\t\t\tthis.series._positionBullet(this);\n\t\t\t}\n\t\t}\n\t}\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface ICircleSettings extends IGraphicsSettings {\n\n\t/**\n\t * Circle radius in pixels.\n\t */\n\tradius?: number;\n\n}\n\nexport interface ICirclePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a circle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Circle extends Graphics {\n\n\tdeclare public _settings: ICircleSettings;\n\tdeclare public _privateSettings: ICirclePrivate;\n\n\tpublic static className: string = \"Circle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Circle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis._display.drawCircle(0, 0, this.get(\"radius\", 10));\n\t\t}\n\t}\n}\n","import { List } from \"./List\";\nimport type { IDisposer } from \"./Disposer\";\nimport type { Container } from \"../render/Container\";\nimport type { Sprite } from \"../render/Sprite\";\nimport * as $array from \"./Array\";\n\n/**\n * A version of [[List]] to hold children of the [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n */\nexport class Children<A extends Sprite> extends List<A> implements IDisposer {\n\tprivate _disposed: boolean = false;\n\tprivate _container: Container;\n\tprivate _events: IDisposer;\n\n\tpublic constructor(container: Container) {\n\t\tsuper();\n\n\t\tthis._container = container;\n\n\t\tthis._events = this.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (x) => {\n\t\t\t\t\tthis._onRemoved(x);\n\t\t\t\t});\n\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._onInserted(change.newValue);\n\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._onRemoved(change.oldValue);\n\t\t\t\tthis._onInserted(change.newValue, change.index);\n\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._onInserted(change.newValue, change.index);\n\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._onRemoved(change.oldValue);\n\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._onRemoved(change.value);\n\t\t\t\tthis._onInserted(change.value, change.newIndex);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _onInserted(child: A, index?: number) {\n\t\tchild._setParent(this._container, true);\n\t\tconst childrenDisplay = this._container._childrenDisplay;\n\t\tif (index === undefined) {\n\t\t\tchildrenDisplay.addChild(child._display);\n\n\t\t} else {\n\t\t\tchildrenDisplay.addChildAt(child._display, index);\n\t\t}\n\t}\n\n\tprotected _onRemoved(child: A) {\n\t\tthis._container._childrenDisplay.removeChild(child._display);\n\t\tthis._container.markDirtyBounds();\n\t\tthis._container.markDirty();\n\t}\n\n\t/**\n\t * Returns `true` if obejct is disposed.\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Permanently dispose this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\tthis._events.dispose();\n\n\t\t\t$array.each(this.values, (child) => {\n\t\t\t\tchild.dispose();\n\t\t\t});\n\t\t}\n\t}\n}\n","import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport { populateString } from \"../util/PopulateString\";\nimport type { IDisposer } from \"../util/Disposer\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $utils from \"../util/Utils\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t * Setting this to an instance of [[Scrollbar]] will enable vertical\n\t * scrolling of content if it does not fit into the Container.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n\t/**\n\t * If set to `true` its children will be laid out in opposite order.\n\t *\n\t * @since 5.1.1\n\t */\n\treverseChildren?: boolean;\n\n\t/**\n\t * HTML content of the container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/html-content/} for more info\n\t * @since 5.2.11\n\t */\n\thtml?: string;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n\n\t/**\n\t * A `<div>` element used for HTML content of the `Container`.\n\t */\n\thtmlElement?: HTMLDivElement;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _vsbd0: IDisposer | undefined;\n\tprotected _vsbd1: IDisposer | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.eachReverse(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tif (this.getPrivate(\"htmlElement\")) {\n\t\t\tthis._root._removeHTMLContent(this);\n\t\t}\n\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis._prevWidth = 0;\n\t\t\tthis._prevHeight = 0;\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\twidth: this.width() + .5,\n\t\t\t\t\t\theight: this.height() + .5\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\t\t\t\t\t\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t\tthis._contentMask = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\t\tlet maxHeight = this.get(\"maxHeight\");\n\n\t\t\tif (maxHeight) {\n\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\th = maxHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (maxWidth) {\n\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\tw = maxWidth;\n\t\t\t\t}\n\t\t\t}\t\t\t\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width:width + .5, height:height + .5 });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\n\t\t\t\tlet visible = true;\n\t\t\t\tif (this._contentHeight <= height) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t\tverticalScrollbar.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tif (super._applyThemes()) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes();\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tprotected _getBounds() {\n\n\t\tlet width = this.get(\"width\");\n\t\tlet height = this.get(\"height\");\n\t\tlet pWidth = this.getPrivate(\"width\");\n\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\tlet bounds: IBounds = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: this.width(),\n\t\t\tbottom: this.height(),\n\t\t};\n\n\t\tlet layout = this.get(\"layout\");\n\t\tlet horizontal = false;\n\t\tlet vertical = false;\n\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\thorizontal = true;\n\t\t}\n\n\t\tif (layout instanceof VerticalLayout) {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t// void\n\t\t}\n\t\telse {\n\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\tlet l = m;\n\t\t\tlet r = -m;\n\t\t\tlet t = m;\n\t\t\tlet b = -m;\n\n\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\tthis.children.each((child) => {\n\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\tl = cl;\n\t\t\t\t\t}\n\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\tr = cr;\n\t\t\t\t\t}\n\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\tt = ct;\n\t\t\t\t\t}\n\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\tb = cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (l == m) {\n\t\t\t\tl = 0;\n\t\t\t}\n\n\t\t\tif (r == -m) {\n\t\t\t\tr = 0;\n\t\t\t}\n\n\t\t\tif (t == m) {\n\t\t\t\tt = 0;\n\t\t\t}\n\n\t\t\tif (b == -m) {\n\t\t\t\tb = 0;\n\t\t\t}\n\n\t\t\tbounds.left = l - paddingLeft;\n\t\t\tbounds.top = t - paddingTop;\n\t\t\tbounds.right = r + paddingRight;\n\t\t\tbounds.bottom = b + paddingBottom;\n\t\t}\n\n\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = width;\n\t\t}\n\n\t\tif ($type.isNumber(pWidth)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = pWidth;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = height;\n\t\t}\n\n\t\tif ($type.isNumber(pHeight)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = pHeight;\n\t\t}\n\n\t\tthis._localBounds = bounds;\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateChildren() {\n\n\t\tif(this.isDirty(\"html\")){\n\t\t\tconst html = this.get(\"html\");\n\t\t\tif (html && html !== \"\") {\n\t\t\t\tthis._root._setHTMLContent(this, populateString(this, this.get(\"html\", \"\")));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._removeHTMLContent(this);\n\t\t\t}\n\t\t\tthis._root._positionHTMLElement(this);\n\t\t}\t\t\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.startGrip);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.endGrip);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._vsbd0 = this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t\t// some page element is over the chart.\n\t\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\t\t\t\t\tif (start + shiftY > 0 && end + shiftY < 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd0);\n\n\t\t\t\tthis._vsbd1 = verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tthis._disposers.push(this._vsbd1);\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst previous = this._prevSettings.verticalScrollbar\n\t\t\t\tif (previous) {\n\t\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\t\tif (this._vsbd0) {\n\t\t\t\t\t\tthis._vsbd0.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._vsbd1) {\n\t\t\t\t\t\tthis._vsbd1.dispose();\n\t\t\t\t\t}\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tchildrenDisplay.y = 0;\n\n\t\t\t\t\tthis.setPrivate(\"height\", undefined);\n\t\t\t\t\tthis.set(\"maskContent\", false);\n\t\t\t\t\tthis.set(\"paddingRight\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tvar parent = mask.parent;\n\t\t\t\tif (parent) {\n\t\t\t\t\tparent.children.removeValue(mask);\n\t\t\t\t}\n\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst updated = (dataItem !== this._dataItem);\n\t\tsuper._setDataItem(dataItem);\n\t\tconst html = this.get(\"html\", \"\");\n\t\tif (html && html !== \"\" && updated) {\n\t\t\tthis._root._setHTMLContent(this, populateString(this, html));\n\t\t}\n\t}\n}","import type { IGraphics, IPattern } from \"../backend/Renderer\";\nimport type { Color } from \"../../util/Color\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../util/Entity\";\n\nexport interface IPatternSettings extends IEntitySettings {\n\n\t/**\n\t * Rotation of patterm in degrees. Supported values: -90 to 90.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Rotation} for more info\n\t */\n\trotation?: number;\n\n\t/**\n\t * How pattern tiles are repeated when filling the area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Repetition} for more info\n\t */\n\trepetition?: \"repeat\" | \"repeat-x\" | \"repeat-y\" | \"no-repeat\";\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\twidth?: number;\n\n\t/**\n\t * Width of the pattern tile, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Sizing_patterns} for more info\n\t */\n\theight?: number;\n\n\t/**\n\t * Color of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Opacity of the pattern shape.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tcolorOpacity?: number;\n\n\t/**\n\t * Width of the pattern's line elements.\n\t *\n\t * @default 1\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Color to fill gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Opacity of the fill for gaps between pattern shapes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Colors} for more info\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfillInherited?: boolean;\n}\n\nexport interface IPatternPrivate extends IEntityPrivate {\n}\n\nexport interface IPatternEvents extends IEntityEvents {\n}\n\n/**\n * Base class for patterns.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class Pattern extends Entity {\n\tprotected _afterNew() {\n\t\t// Applying themes because pattern will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\tdeclare public _settings: IPatternSettings;\n\tdeclare public _privateSettings: IPatternPrivate;\n\n\tpublic static className: string = \"Pattern\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Pattern.className]);\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\tpublic _backgroundDisplay: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tprotected _pattern: IPattern | undefined;\n\n\tpublic get pattern(): IPattern | undefined {\n\t\treturn this._pattern;\n\t}\n\n\tprotected _draw(): void { }\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"repetition\") || this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\") || this.isDirty(\"color\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"colorOpacity\") || this.isDirty(\"fill\") || this.isDirty(\"fillOpacity\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tconst repetition = this.get(\"repetition\", \"\");\n\t\t\tconst width = this.get(\"width\", 100);\n\t\t\tconst height = this.get(\"height\", 100);\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\", 1);\n\n\t\t\tthis._display.clear();\n\t\t\tthis._backgroundDisplay.clear();\n\n\t\t\tif (fill && (fillOpacity > 0)) {\n\t\t\t\tthis._backgroundDisplay.beginFill(fill, fillOpacity);\n\t\t\t\tthis._backgroundDisplay.drawRect(0, 0, width, height);\n\t\t\t\tthis._backgroundDisplay.endFill();\n\t\t\t}\n\n\t\t\tthis._display.angle = this.get(\"rotation\", 0);\n\t\t\t//this._display.pivot = { x: width / 2, y: height / 2 };\n\t\t\tthis._draw();\n\n\t\t\tthis._pattern = this._root._renderer.createPattern(this._display, this._backgroundDisplay, repetition, width, height);\n\t\t}\n\t}\n}\n","import { Pattern, IPatternSettings, IPatternPrivate, IPatternEvents } from \"./Pattern\";\n\nexport interface IPicturePatternSettings extends IPatternSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * How pattern should be sized:\n\t *\n\t * * `\"image\"` (default) - pattern will be sized to actual image dimensions.\n\t * * `\"pattern\"` - image will sized to image dimensions.\n\t * * `\"none\"` - image will be placed in the pattern, regardless of either dimensions.\n\t * \n\t * @default \"image\"\n\t */\n\tfit?: \"image\" | \"pattern\" | \"none\";\n\n\t/**\n\t * Center images.\n\t *\n\t * @default true\n\t */\n\tcentered?: boolean;\n\n}\n\nexport interface IPicturePatternPrivate extends IPatternPrivate {\n}\n\nexport interface IPicturePatternEvents extends IPatternEvents {\n\n\t/**\n\t * Invoked when related image is loaded.\n\t */\n\tloaded: {};\n\n}\n\n/**\n * Picture pattern.\n *\n * @since 5.2.15\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n */\nexport class PicturePattern extends Pattern {\n\tdeclare public _settings: IPicturePatternSettings;\n\tdeclare public _privateSettings: IPicturePatternPrivate;\n\tdeclare public _events: IPicturePatternEvents;\n\n\tpublic static className: string = \"PicturePattern\";\n\tpublic static classNames: Array<string> = Pattern.classNames.concat([PicturePattern.className]);\n\n\tpublic _image: HTMLImageElement | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._clear = true;\n\n\t\tif (this.isDirty(\"src\")) {\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tsuper._draw();\n\n\t\tconst image = this._image;\n\t\tif (image) {\n\n\t\t\tconst patternWidth = this.get(\"width\", 100);\n\t\t\tconst patternHeight = this.get(\"height\", 100);\n\n\t\t\t// Fit\n\t\t\tconst fit = this.get(\"fit\", \"image\");\n\t\t\tlet width = 0;\n\t\t\tlet height = 0;\n\t\t\tif (fit == \"pattern\") {\n\t\t\t\twidth = patternWidth;\n\t\t\t\theight = patternHeight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twidth = image.width;\n\t\t\t\theight = image.height;\n\t\t\t\tif (fit == \"image\") {\n\t\t\t\t\tthis.set(\"width\", width);\n\t\t\t\t\tthis.set(\"height\", height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Position\n\t\t\tconst centered = this.get(\"centered\", true);\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\t\t\tif (centered) {\n\t\t\t\tx = patternWidth / 2 - width / 2;\n\t\t\t\ty = patternHeight / 2 - height / 2;\n\t\t\t}\n\t\t\tthis._display.image(image, width, height, x, y);\n\t\t}\n\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\t//image.crossOrigin = \"Anonymous\";\n\t\t\timage.src = src!;\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._image = image;\n\t\t\t\tthis._draw();\n\t\t\t\tif (this.events.isEnabled(\"loaded\")) {\n\t\t\t\t\tthis.events.dispatch(\"loaded\", { type: \"loaded\", target: this });\n\t\t\t\t}\n\t\t\t}).catch((_error: any) => {\n\t\t\t\t// TODO: maybe raise error?\n\t\t\t});\n\t\t}\n\t}\n\n}","import type { Color } from \"../util/Color\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Gradient } from \"../render/gradients/Gradient\";\n\nimport { PicturePattern } from \"../render/patterns/PicturePattern\";\nimport { ISpriteSettings, ISpritePrivate, ISpriteEvents, Sprite } from \"./Sprite\";\nimport { IGraphics, BlendMode } from \"./backend/Renderer\";\n\nimport * as $type from \"../util/Type\";\nimport * as $array from \"../util/Array\";\n\n\nexport const visualSettings = [\"fill\", \"fillOpacity\", \"stroke\", \"strokeWidth\", \"strokeOpacity\", \"fillPattern\", \"strokePattern\", \"fillGradient\", \"strokeGradient\", \"strokeDasharray\", \"strokeDashoffset\"];\n\nexport interface IGraphicsSettings extends ISpriteSettings {\n\n\t/**\n\t * Fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more information\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Stroke (border or line) color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more information\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Fill pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more information\n\t */\n\tfillPattern?: Pattern;\n\n\t/**\n\t * Stroke (border or line) pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more information\n\t */\n\tstrokePattern?: Pattern;\n\n\t/**\n\t * Fill gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t */\n\tfillGradient?: Gradient;\n\n\t/**\n\t * Stroke (border or line) gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more information\n\t */\n\tstrokeGradient?: Gradient;\n\n\t/**\n\t * Stroke (border or line) dash settings.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDasharray?: number[] | number;\n\n\t/**\n\t * Stroke (border or line) dash offset.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/#Dashed_lines} for more information\n\t */\n\tstrokeDashoffset?: number;\n\n\t/**\n\t * Opacity of the fill. 0 - fully transparent; 1 - fully opaque.\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * Opacity of the stroke (border or line). 0 - fully transparent; 1 - fully opaque.\n\t */\n\tstrokeOpacity?: number;\n\n\t/**\n\t * Width of the stroke (border or line) in pixels.\n\t */\n\tstrokeWidth?: number;\n\n\t/**\n\t * Indicates if stroke of a Graphics should stay the same when it's scale changes. Note, this doesn't take into account parent container scale changes.\n\t * @default false\n\t */\n\tnonScalingStroke?: boolean;\n\n\t/**\n\t * Drawing function.\n\t *\n\t * Must use renderer (`display` parameter) methods to draw.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/#Custom_draw_functions} for more info\n\t */\n\tdraw?: (display: IGraphics, graphics: Graphics) => void;\n\n\t/**\n\t * Rendering mode.\n\t *\n\t * @default BlendMode.NORMAL (\"source-over\")\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation} for more information\n\t * @ignore\n\t */\n\tblendMode?: BlendMode;\n\n\t/**\n\t * Draw a shape using an SVG path.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths} for more information\n\t */\n\tsvgPath?: string;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n\t/**\n\t * A method to be used on anchor points (joints) of the multi-point line.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin} for more info\n\t * @default \"miter\"\n\t * @since 5.2.10\n\t */\n\tlineJoin?: \"miter\" | \"round\" | \"bevel\";\n\n}\n\nexport interface IGraphicsPrivate extends ISpritePrivate {\n}\n\nexport interface IGraphicsEvents extends ISpriteEvents {\n}\n\n/**\n * Base class used for drawing shapes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Graphics extends Sprite {\n\n\tdeclare public _settings: IGraphicsSettings;\n\tdeclare public _privateSettings: IGraphicsPrivate;\n\tdeclare public _events: IGraphicsEvents;\n\n\tpublic _display: IGraphics = this._root._renderer.makeGraphics();\n\n\tprotected _clear = false;\n\n\tpublic static className: string = \"Graphics\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Graphics.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"draw\") || this.isDirty(\"svgPath\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\") || this.isDirty(\"visible\") || this.isDirty(\"forceHidden\") || this.isDirty(\"scale\") || this.isDirty(\"fillGradient\") || this.isDirty(\"strokeGradient\") || this.isDirty(\"fillPattern\") || this.isDirty(\"strokePattern\") || this.isDirty(\"fillOpacity\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"draw\") || this.isDirty(\"blendMode\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeDashoffset\") || this.isDirty(\"svgPath\") || this.isDirty(\"lineJoin\") || this.isDirty(\"shadowColor\") || this.isDirty(\"shadowBlur\") || this.isDirty(\"shadowOffsetX\") || this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\n\t\tif (this.isDirty(\"fillGradient\")) {\n\t\t\tconst gradient = this.get(\"fillGradient\");\n\t\t\tif (gradient) {\n\t\t\t\tthis._display.isMeasured = true;\n\t\t\t\tconst gradientTarget = gradient.get(\"target\");\n\t\t\t\tif (gradientTarget) {\n\t\t\t\t\tthis._disposers.push(gradientTarget.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\tthis._markDirtyKey(\"fill\");\n\t\t\t\t\t}))\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"positionchanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"fill\");\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"strokeGradient\")) {\n\t\t\tconst gradient = this.get(\"strokeGradient\");\n\t\t\tif (gradient) {\n\t\t\t\tthis._display.isMeasured = true;\n\t\t\t\tconst gradientTarget = gradient.get(\"target\");\n\t\t\t\tif (gradientTarget) {\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"boundschanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t\t\t}))\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\tgradientTarget.events.on(\"positionchanged\", () => {\n\t\t\t\t\t\t\tthis._markDirtyKey(\"stroke\");\n\t\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirtyLayer();\n\t\t\tthis._display.clear();\n\n\t\t\tlet strokeDasharray = this.get(\"strokeDasharray\");\n\t\t\tif ($type.isNumber(strokeDasharray)) {\n\t\t\t\tif (strokeDasharray < 0.5) {\n\t\t\t\t\tstrokeDasharray = [0];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tstrokeDasharray = [strokeDasharray]\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._display.setLineDash(strokeDasharray as number[]);\n\n\t\t\tconst strokeDashoffset = this.get(\"strokeDashoffset\");\n\t\t\tif (strokeDashoffset) {\n\t\t\t\tthis._display.setLineDashOffset(strokeDashoffset);\n\t\t\t}\n\n\t\t\tconst blendMode = this.get(\"blendMode\", BlendMode.NORMAL);\n\t\t\tthis._display.blendMode = blendMode;\n\n\t\t\tconst draw = this.get(\"draw\");\n\t\t\tif (draw) {\n\t\t\t\tdraw(this._display, this);\n\t\t\t}\n\n\t\t\tconst svgPath = this.get(\"svgPath\");\n\t\t\tif (svgPath != null) {\n\t\t\t\tthis._display.svgPath(svgPath!);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tif (this._clear) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tconst fillGradient = this.get(\"fillGradient\");\n\t\t\tconst fillPattern = this.get(\"fillPattern\");\n\t\t\tconst fillOpacity = this.get(\"fillOpacity\");\n\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tconst strokeGradient = this.get(\"strokeGradient\");\n\t\t\tconst strokePattern = this.get(\"strokePattern\");\n\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tconst shadowBlur = this.get(\"shadowBlur\");\n\t\t\tconst shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t\tconst shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t\tconst shadowOpacity = this.get(\"shadowOpacity\");\n\n\t\t\t//const bounds = this._display.getLocalBounds();\n\n\t\t\tif (shadowColor && (shadowBlur || shadowOffsetX || shadowOffsetY)) {\n\t\t\t\tthis._display.shadow(shadowColor, shadowBlur, shadowOffsetX, shadowOffsetY, shadowOpacity);\n\t\t\t}\n\n\t\t\tif (fillPattern) {\n\t\t\t\tlet changed = false;\n\t\t\t\tif (fill && (!fillPattern.get(\"fill\") || fillPattern.get(\"fillInherited\"))) {\n\t\t\t\t\tfillPattern.set(\"fill\", fill);\n\t\t\t\t\tfillPattern.set(\"fillInherited\", true)\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t\tif (stroke && (!fillPattern.get(\"color\") || fillPattern.get(\"colorInherited\"))) {\n\t\t\t\t\tfillPattern.set(\"color\", stroke);\n\t\t\t\t\tfillPattern.set(\"colorInherited\", true)\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t\tif (changed) {\n\t\t\t\t\t// @todo: is this OK?\n\t\t\t\t\tfillPattern._changed();\n\t\t\t\t}\n\t\t\t\tconst pattern = fillPattern.pattern;\n\t\t\t\tif (pattern) {\n\t\t\t\t\tthis._display.beginFill(pattern, fillOpacity);\n\t\t\t\t\tthis._display.endFill();\n\n\t\t\t\t\tif (fillPattern instanceof PicturePattern) {\n\t\t\t\t\t\tfillPattern.events.once(\"loaded\", () => {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tthis.markDirty();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (fillGradient) {\n\t\t\t\tif (fill) {\n\t\t\t\t\tconst stops = fillGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && fill) {\n\t\t\t\t\t\t\t\tstop.color = fill;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = fillOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst gradient = fillGradient.getFill(this);\n\t\t\t\tif (gradient) {\n\t\t\t\t\tthis._display.beginFill(gradient, fillOpacity);\n\t\t\t\t\tthis._display.endFill();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (fill) {\n\t\t\t\tthis._display.beginFill(fill, fillOpacity);\n\t\t\t\tthis._display.endFill();\n\t\t\t}\n\n\t\t\tif (stroke || strokeGradient || strokePattern) {\n\t\t\t\tconst strokeOpacity = this.get(\"strokeOpacity\");\n\t\t\t\tlet strokeWidth = this.get(\"strokeWidth\", 1);\n\n\t\t\t\tif (this.get(\"nonScalingStroke\")) {\n\t\t\t\t\tstrokeWidth = strokeWidth / this.get(\"scale\", 1)\n\t\t\t\t}\n\t\t\t\tconst lineJoin = this.get(\"lineJoin\");\n\n\t\t\t\tif (strokePattern) {\n\t\t\t\t\tlet changed = false;\n\t\t\t\t\tif (stroke && (!strokePattern.get(\"color\") || strokePattern.get(\"colorInherited\"))) {\n\t\t\t\t\t\tstrokePattern.set(\"color\", stroke);\n\t\t\t\t\t\tstrokePattern.set(\"colorInherited\", true);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\t// @todo: is this OK?\n\t\t\t\t\t\tstrokePattern._changed();\n\t\t\t\t\t}\n\t\t\t\t\tconst pattern = strokePattern.pattern;\n\t\t\t\t\tif (pattern) {\n\t\t\t\t\t\tthis._display.lineStyle(strokeWidth, pattern, strokeOpacity, lineJoin);\n\t\t\t\t\t\tthis._display.endStroke();\n\n\t\t\t\t\t\tif (strokePattern instanceof PicturePattern) {\n\t\t\t\t\t\t\tstrokePattern.events.once(\"loaded\", () => {\n\t\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\t\tthis.markDirty();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (strokeGradient) {\n\n\t\t\t\t\tconst stops = strokeGradient.get(\"stops\", []);\n\t\t\t\t\tif (stops.length) {\n\t\t\t\t\t\t$array.each(stops, (stop: any) => {\n\t\t\t\t\t\t\tif ((!stop.color || stop.colorInherited) && stroke) {\n\t\t\t\t\t\t\t\tstop.color = stroke;\n\t\t\t\t\t\t\t\tstop.colorInherited = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stop.opacity == null || stop.opacityInherited) {\n\t\t\t\t\t\t\t\tstop.opacity = strokeOpacity;\n\t\t\t\t\t\t\t\tstop.opacityInherited = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tconst gradient = strokeGradient.getFill(this);\n\t\t\t\t\tif (gradient) {\n\t\t\t\t\t\tthis._display.lineStyle(strokeWidth, gradient, strokeOpacity, lineJoin);\n\t\t\t\t\t\tthis._display.endStroke();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (stroke) {\n\t\t\t\t\tthis._display.lineStyle(strokeWidth, stroke, strokeOpacity, lineJoin);\n\t\t\t\t\tthis._display.endStroke();\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\t\tthis._clear = false;\n\t}\n\n}\n","import { Layout, ILayoutSettings, ILayoutPrivate, eachChildren } from \"./Layout\";\nimport * as $array from \"../util/Array\";\nimport * as $math from \"../util/Math\";\nimport type { Container } from \"./Container\";\n\n\nexport interface IGridLayoutSettings extends ILayoutSettings {\n\n\t/**\n\t * If set to `true` all columns in the grid will be equal width.\n\t *\n\t * @default false\n\t */\n\tfixedWidthGrid?: boolean;\n\n\t/**\n\t * Maximum number of columns in the grid.\n\t */\n\tmaxColumns?: number;\n\n}\n\nexport interface IGridLayoutPrivate extends ILayoutPrivate {\n}\n\n/**\n * A grid children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class GridLayout extends Layout {\n\n\tpublic static className: string = \"GridLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([GridLayout.className]);\n\n\tdeclare public _settings: IGridLayoutSettings;\n\tdeclare public _privateSettings: IGridLayoutPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._setRawDefault(\"maxColumns\", Number.MAX_VALUE);\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingLeft = container.get(\"paddingLeft\", 0);\n\t\tlet paddingRight = container.get(\"paddingRight\", 0);\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableWidth = container.maxWidth() - paddingLeft - paddingRight;\n\n\t\tlet minCellWidth = availableWidth;\n\t\tlet maxCellWidth = 1;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif(child.get(\"visible\") && child.getPrivate(\"visible\") && !child.get(\"forceHidden\")){\n\t\t\t\tif (child.get(\"position\") != \"absolute\") {\n\t\t\t\t\tlet childWidth = child.width();\n\n\t\t\t\t\tif (childWidth < minCellWidth) {\n\t\t\t\t\t\tminCellWidth = childWidth;\n\t\t\t\t\t}\n\t\t\t\t\tif (childWidth > maxCellWidth) {\n\t\t\t\t\t\tmaxCellWidth = childWidth;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tminCellWidth = $math.fitToRange(minCellWidth, 1, availableWidth);\n\t\tmaxCellWidth = $math.fitToRange(maxCellWidth, 1, availableWidth);\n\n\t\tlet columnCount = 1;\n\t\tif (this.get(\"fixedWidthGrid\")) {\n\t\t\tcolumnCount = availableWidth / maxCellWidth;\n\t\t}\n\t\telse {\n\t\t\tcolumnCount = availableWidth / minCellWidth;\n\t\t}\n\n\t\tcolumnCount = Math.max(1, Math.floor(columnCount));\n\t\tcolumnCount = Math.min(this.get(\"maxColumns\", Number.MAX_VALUE), columnCount);\n\n\t\tlet columnWidths = this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n\n\t\tlet prevY = paddingTop;\n\n\t\tlet column = 0;\n\t\tlet maxColumnHeight = 0;\n\n\t\tcolumnCount = columnWidths.length;\n\n\t\tlet prevX = paddingLeft;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.get(\"position\") == \"relative\" && child.isVisible()) {\n\t\t\t\tconst marginTop = child.get(\"marginTop\", 0);\n\t\t\t\tconst marginBottom = child.get(\"marginBottom\", 0);\n\n\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\n\t\t\t\tlet marginLeft = child.get(\"marginLeft\", 0);\n\t\t\t\tlet marginRight = child.get(\"marginRight\", 0);\n\t\t\t\tlet x = prevX + marginLeft - bounds.left;\n\t\t\t\tlet y = prevY + marginTop - bounds.top;\n\n\t\t\t\tchild.setPrivate(\"x\", x);\n\t\t\t\tchild.setPrivate(\"y\", y);\n\n\t\t\t\tprevX += columnWidths[column] + marginRight;\n\n\t\t\t\tmaxColumnHeight = Math.max(maxColumnHeight, child.height() + marginTop + marginBottom);\n\n\t\t\t\tcolumn++;\n\n\t\t\t\tif (column >= columnCount) {\n\t\t\t\t\tcolumn = 0;\n\t\t\t\t\tprevX = paddingLeft;\n\t\t\t\t\tprevY += maxColumnHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getColumnWidths(container: Container, columnCount: number, maxCellWidth: number, availableWidth: number): number[] {\n\t\tlet totalWidth = 0;\n\t\tlet columnWidths: Array<number> = [];\n\t\tlet column = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\tif (child.get(\"position\") != \"absolute\" && child.isVisible()) {\n\t\t\t\tif (this.get(\"fixedWidthGrid\")) {\n\t\t\t\t\tcolumnWidths[column] = maxCellWidth;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumnWidths[column] = Math.max(columnWidths[column] | 0, bounds.right - bounds.left + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0));\n\t\t\t\t}\n\n\t\t\t\tif (column < container.children.length - 1) {\n\t\t\t\t\tcolumn++;\n\t\t\t\t\tif (column == columnCount) {\n\t\t\t\t\t\tcolumn = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t$array.each(columnWidths, (w) => {\n\t\t\ttotalWidth += w;\n\t\t})\n\n\t\tif (totalWidth > availableWidth) {\n\t\t\tif (columnCount > 2) {\n\t\t\t\tcolumnCount -= 1;\n\t\t\t\treturn this.getColumnWidths(container, columnCount, maxCellWidth, availableWidth);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn [availableWidth];\n\t\t\t}\n\t\t}\n\n\t\treturn columnWidths;\n\t}\n}\n","import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n/**\n * A horizontal children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class HorizontalLayout extends Layout {\n\n\tpublic static className: string = \"HorizontalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([HorizontalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\n\t\tlet paddingLeft = container.get(\"paddingLeft\", 0);\n\n\t\tlet availableWidth = container.innerWidth();\n\n\t\tlet totalPercent = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childWidth = child.get(\"width\");\n\t\t\t\t\tif (childWidth instanceof Percent) {\n\t\t\t\t\t\ttotalPercent += childWidth.value;\n\n\t\t\t\t\t\tlet w = availableWidth * childWidth.value;\n\t\t\t\t\t\tlet minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n\t\t\t\t\t\tif (minWidth > w) {\n\t\t\t\t\t\t\tavailableWidth -= minWidth;\n\t\t\t\t\t\t\ttotalPercent -= childWidth.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n\t\t\t\t\t\tif (w > maxWidth) {\n\t\t\t\t\t\t\tavailableWidth -= maxWidth;\n\t\t\t\t\t\t\ttotalPercent -= childWidth.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$type.isNumber(childWidth)) {\n\t\t\t\t\t\t\tchildWidth = child.width();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tavailableWidth -= childWidth + child.get(\"marginLeft\", 0) + child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (availableWidth < 0) {\n\t\t\tavailableWidth = 0.01;\n\t\t}\n\n\t\t//if (availableWidth > 0) {\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childWidth = child.get(\"width\");\n\t\t\t\t\tif (childWidth instanceof Percent) {\n\t\t\t\t\t\tlet privateWidth = availableWidth * childWidth.value / totalPercent - child.get(\"marginLeft\", 0) - child.get(\"marginRight\", 0);\n\t\t\t\t\t\tlet minWidth = child.get(\"minWidth\", child.getPrivate(\"minWidth\", -Infinity));\n\t\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\", child.getPrivate(\"maxWidth\", Infinity));\n\t\t\t\t\t\tprivateWidth = Math.min(Math.max(minWidth, privateWidth), maxWidth);\n\n\t\t\t\t\t\tchild.setPrivate(\"width\", privateWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//}\n\n\t\tlet prevX = paddingLeft;\n\n\t\teachChildren(container, (child) => {\n\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tif (child.isVisible()) {\n\t\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet marginLeft = child.get(\"marginLeft\", 0);\n\t\t\t\t\tlet marginRight = child.get(\"marginRight\", 0);\n\n\t\t\t\t\tlet maxWidth = child.get(\"maxWidth\");\n\n\t\t\t\t\tlet left = bounds.left;\n\t\t\t\t\tlet right = bounds.right;\n\t\t\t\t\tif (maxWidth) {\n\t\t\t\t\t\tif (right - left > maxWidth) {\n\t\t\t\t\t\t\tright = left + maxWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet x = prevX + marginLeft - left;\n\t\t\t\t\tchild.setPrivate(\"x\", x);\n\t\t\t\t\tprevX = x + right + marginRight;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchild.setPrivate(\"x\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Text } from \"../render/Text\";\nimport { p50, p100 } from \"../util/Percent\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\n\nimport * as  $array from \"../../core/util/Array\";\nimport * as  $type from \"../../core/util/Type\";\n\n\nexport interface ILabelSettings extends IContainerSettings {\n\n\t/**\n\t * Labels' text.\n\t */\n\ttext?: string;\n\n\t/**\n\t * Text color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Text opacity.\n\t *\n\t * @default 1\n\t * @ince 5.2.39\n\t */\n\tfillOpacity?: number;\n\n\t/**\n\t * Alignment.\n\t */\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\n\t/**\n\t * Font family to use for the label.\n\t *\n\t * Multiple fonts can be separated by commas.\n\t */\n\tfontFamily?: string;\n\n\t/**\n\t * Font size in misc any supported CSS format (pixel, point, em, etc.).\n\t */\n\tfontSize?: string | number;\n\n\t/**\n\t * Font weight.\n\t */\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\n\n\t/**\n\t * Font style.\n\t */\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\n\t/**\n\t * Font variant.\n\t */\n\tfontVariant?: \"normal\" | \"small-caps\";\n\n\t/**\n\t * Text decoration.\n\t *\n\t * Supported options `\"underline\"`, `\"line-through\"`.\n\t *\n\t * @since 5.0.15\n\t */\n\ttextDecoration?: \"underline\" | \"line-through\";\n\n\t/**\n\t * Line height in percent or absolute pixels.\n\t */\n\tlineHeight?: Percent | number;\n\n\t/**\n\t * How mouch of the height should be considered to go below baseline.\n\t *\n\t * @default 0.19\n\t */\n\tbaselineRatio?: number;\n\n\t/**\n\t * Opacity of the label.\n\t *\n\t * 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Text direction.\n\t *\n\t * @default \"ltr\"\n\t */\n\tdirection?: \"ltr\" | \"rtl\";\n\n\t/**\n\t * A base line to use when aligning text chunks vertically.\n\t */\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\n\t/**\n\t * How to handle labels that do not fit into its designated space.\n\t *\n\t * LIMITATIONS: on circular labels, the only values supported are `\"hide\"` and\n\t * `\"truncate\"`. The latter will ignore `breakWords` setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/#Oversized_text} for more info\n\t */\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\n\t/**\n\t * Whether words can be broken when truncating or wrapping text.\n\t *\n\t * @default false\n\t */\n\tbreakWords?: boolean;\n\n\t/**\n\t * Ellipsis characters to use when truncating text.\n\t *\n\t * Will use Unicode ellipsis symbol (`\"…\"`) by default, which might not be\n\t * available in all fonts. If ellipsis looks broken, use different\n\t * characters. E.g.:\n\t *\n\t * ```TypeScript\n\t * label.set(\"ellipsis\", \"...\");\n\t * ```\n\t * ```JavaScript\n\t * label.set(\"ellipsis\", \"...\");\n\t * ```\n\t *\n\t *\n\t * @default \"…\"\n\t */\n\tellipsis?: string;\n\n\t/**\n\t * Minimum relative scale allowed for label when scaling down\n\t * when `oversizedBehavior` is set to `\"fit\"`.\n\t *\n\t * If fitting the label would require it to scale beyond `minScale` it would\n\t * be hidden instead.\n\t */\n\tminScale?: number;\n\n\t/**\n\t * If set to `true` the label will parse `text` for data placeholders and\n\t * will try to populate them with actual data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/#Data_placeholders} for more info\n\t */\n\tpopulateText?: boolean;\n\n\t/**\n\t * If set to `true`, will ignore in-line formatting blocks and will display\n\t * text exactly as it is.\n\t *\n\t * @default false\n\t */\n\tignoreFormatting?: boolean;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n\t// The following migh be supported some day:\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\t// leading?: number;\n\t// letterSpacing?: number;\n}\n\nexport interface ILabelPrivate extends IContainerPrivate {\n}\n\n/**\n * Creates a label with support for in-line styling and data bindings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/labels/} for more info\n */\nexport class Label extends Container {\n\n\tdeclare public _settings: ILabelSettings;\n\tdeclare public _privateSettings: ILabelPrivate;\n\n\tprotected _text!: Text;\n\n\tprotected _textKeys: Array<string> = [\n\t\t\"text\",\n\t\t\"fill\",\n\t\t\"fillOpacity\",\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\",\n\t\t\"populateText\",\n\t\t\"role\",\n\t\t\"ignoreFormatting\"\n\t];\n\n\tpublic static className: string = \"Label\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Label.className]);\n\n\t/**\n\t * @ignore Text is not to be used directly\n\t */\n\tpublic get text(): Text {\n\t\treturn this._text;\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis._makeText();\n\n\t\t$array.each(this._textKeys, (property) => {\n\t\t\tconst propValue = this.get(property as any);\n\t\t\tif (propValue != undefined) {\n\t\t\t\tthis._text.set(property as any, propValue);\n\t\t\t}\n\t\t});\n\n\t\tif (this.get(\"html\", \"\") !== \"\") {\n\t\t\tthis._text.set(\"text\", \"\");\n\t\t}\n\n\t\tthis.onPrivate(\"maxWidth\", () => {\n\t\t\tthis._setMaxDimentions();\n\t\t});\n\n\t\tthis.onPrivate(\"maxHeight\", () => {\n\t\t\tthis._setMaxDimentions();\n\t\t});\n\t}\n\n\tpublic _makeText() {\n\t\tthis._text = this.children.push(Text.new(this._root, {}));\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t$array.each(this._textKeys, (property) => {\n\t\t\tthis._text.set(property as any, this.get(property as any));\n\t\t})\n\n\t\tif (this.isDirty(\"maxWidth\")) {\n\t\t\tthis._setMaxDimentions();\n\t\t}\n\n\t\tif (this.isDirty(\"maxHeight\")) {\n\t\t\tthis._setMaxDimentions();\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis._setMaxDimentions();\n\t\t}\n\n\t\t// Do not show regular text if HTML is used\n\t\tif (this.get(\"html\", \"\") !== \"\") {\n\t\t\tthis._text.set(\"text\", \"\");\n\t\t}\n\t\telse {\n\t\t\tthis._text.set(\"text\", this.get(\"text\"));\n\t\t}\n\n\t\tif (this.isDirty(\"textAlign\") || this.isDirty(\"width\")) {\n\t\t\tconst textAlign = this.get(\"textAlign\");\n\t\t\tlet x: number | Percent | undefined;\n\t\t\tif (this.get(\"width\") != null) {\n\t\t\t\tif (textAlign == \"right\") {\n\t\t\t\t\tx = p100;\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"center\") {\n\t\t\t\t\tx = p50;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (textAlign == \"left\" || textAlign == \"start\") {\n\t\t\t\t\tx = this.get(\"paddingLeft\");\n\t\t\t\t}\n\t\t\t\telse if (textAlign == \"right\" || textAlign == \"end\") {\n\t\t\t\t\tx = -this.get(\"paddingRight\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.text.set(\"x\", x);\n\t\t}\n\t}\n\n\tprotected _setMaxDimentions() {\n\t\tconst rotation = this.get(\"rotation\");\n\t\tconst vertical = rotation == 90 || rotation == 270 || rotation == -90;\n\n\t\tconst maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\", Infinity));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tthis.text.set(vertical ? \"maxHeight\" : \"maxWidth\", maxWidth - this.get(\"paddingLeft\", 0) - this.get(\"paddingRight\", 0));\n\t\t}\n\t\telse {\n\t\t\tthis.text.set(vertical ? \"maxHeight\" : \"maxWidth\", undefined);\n\t\t}\n\n\t\tconst maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\", Infinity));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\tthis.text.set(vertical ? \"maxWidth\" : \"maxHeight\", maxHeight - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0));\n\t\t}\n\t\telse {\n\t\t\tthis.text.set(vertical ? \"maxWidth\" : \"maxHeight\", undefined);\n\t\t}\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis._markDirtyKey(\"text\")\n\t\tif (this.text.get(\"populateText\")) {\n\t\t\tthis.text.markDirtyText();\n\t\t}\n\t}\n\n\t/**\n\t * Returns text with populated placeholders and formatting if `populateText` is\n\t * set to `true`.\n\t *\n\t * @return Populated text\n\t */\n\tpublic getText(): string {\n\t\treturn this._text._getText();\n\t}\n}\n","import type { Container } from \"./Container\";\nimport type { Sprite } from \"./Sprite\";\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../util/Entity\";\n\nexport interface ILayoutSettings extends IEntitySettings {\n}\n\nexport interface ILayoutPrivate extends IEntityPrivate {\n}\n\nexport function eachChildren(container: Container, f: (sprite: Sprite) => void): void {\n    if (container.get(\"reverseChildren\", false)) {\n        container.children.eachReverse(f);\n    } else {\n        container.children.each(f);\n    }\n}\n\n/**\n * Base class for [[Container]] layouts.\n */\nexport abstract class Layout extends Entity {\n\tdeclare public _settings: ILayoutSettings;\n\tdeclare public _privateSettings: ILayoutPrivate;\n\n\tpublic static className: string = \"Layout\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Layout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateContainer(_container: Container): void;\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface IRectangleSettings extends IGraphicsSettings {\n}\n\nexport interface IRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Rectangle extends Graphics {\n\n\tdeclare public _settings: IRectangleSettings;\n\tdeclare public _privateSettings: IRectanglePrivate;\n\n\tpublic static className: string = \"Rectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Rectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear && !this.get(\"draw\")) {\n\t\t\tthis._draw();\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tthis._display.drawRect(0, 0, this.width(), this.height());\n\t}\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n}\n","import type { IDisplayObject, IRendererEvents, IRendererEvent, IPointerEvent, IMargin } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Container } from \"./Container\";\nimport type { IAccessibilitySettings } from \"../util/Accessibility\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Graphics } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { ListTemplate } from \"../util/List\";\n\nimport type { Tooltip } from \"./Tooltip\";\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher, Events, EventListener } from \"../util/EventDispatcher\";\nimport { IDisposer, MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\n\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\nimport * as $math from \"../util/Math\";\n//import { populateString } from \"../util/PopulateString\";\n\n\n/**\n * An [[EventDispatcher]] for [[Sprite]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nclass SpriteEventDispatcher<Target, E extends Events<Target, ISpriteEvents>> extends EventDispatcher<E> {\n\tprotected static RENDERER_EVENTS: { [K in keyof IRendererEvents]?: <E extends Events<Sprite, ISpriteEvents>>(this: SpriteEventDispatcher<Sprite, E>, event: IRendererEvents[K]) => void } = {\n\t\t\"click\": function(event) {\n\t\t\tif (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n\t\t\t\tthis.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"rightclick\": function(event) {\n\t\t\tif (this.isEnabled(\"rightclick\")) {\n\t\t\t\tthis.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"middleclick\": function(event) {\n\t\t\tif (this.isEnabled(\"middleclick\")) {\n\t\t\t\tthis.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"dblclick\": function(event) {\n\t\t\tthis.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n\t\t},\n\n\t\t\"pointerover\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerover\")) {\n\t\t\t\tthis.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerout\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerout\")) {\n\t\t\t\tthis.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerdown\": function(event) {\n\t\t\tthis.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n\t\t},\n\n\t\t\"pointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerup\")) {\n\t\t\t\tthis.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointerup\")) {\n\t\t\t\tthis.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointermove\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointermove\")) {\n\t\t\t\tthis.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"wheel\": function(event) {\n\t\t\tthis.dispatchParents(\"wheel\", {\n\t\t\t\ttype: \"wheel\",\n\t\t\t\ttarget: this._sprite,\n\t\t\t\toriginalEvent: event.event,\n\t\t\t\tpoint: event.point,\n\t\t\t});\n\t\t},\n\t};\n\n\tprotected _sprite: Sprite;\n\n\tprotected _rendererDisposers: { [K in keyof IRendererEvents]?: CounterDisposer } = {};\n\n\tprotected _dispatchParents: boolean = true;\n\n\tconstructor(sprite: Sprite) {\n\t\tsuper();\n\t\tthis._sprite = sprite;\n\t}\n\n\tprotected _makePointerEvent<K extends keyof E>(key: K, event: IRendererEvent<IPointerEvent>): ISpritePointerEvent & { type: K } {\n\t\treturn {\n\t\t\ttype: key,\n\t\t\toriginalEvent: event.event,\n\t\t\tpoint: event.point,\n\t\t\tsimulated: event.simulated,\n\t\t\tnative: event.native,\n\t\t\ttarget: this._sprite\n\t\t};\n\t}\n\n\tprotected _onRenderer<Key extends keyof IRendererEvents>(key: Key, dispatch: (this: this, event: IRendererEvents[Key]) => void): IDisposer {\n\t\t// TODO: is this OK? it'd be good not to require to set this on each individual element\n\t\tthis._sprite.set(\"interactive\", true);\n\t\tthis._sprite._display.interactive = true;\n\n\t\tlet events = this._rendererDisposers[key];\n\n\t\tif (events === undefined) {\n\t\t\tconst disposer = this._sprite._display.on(key, (e) => {\n\t\t\t\tdispatch.call(this, e);\n\t\t\t});\n\n\t\t\tevents = this._rendererDisposers[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._rendererDisposers[key];\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn events.increment();\n\t}\n\n\tprotected _on<C, Key extends keyof E>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: E[Key]) => void): EventListener {\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\n\n\t\tconst rendererEvent = (SpriteEventDispatcher.RENDERER_EVENTS as any)[type];\n\t\tif (rendererEvent !== undefined) {\n\t\t\tinfo.disposer = new MultiDisposer([\n\t\t\t\tinfo.disposer,\n\t\t\t\tthis._onRenderer(type as any, rendererEvent),\n\t\t\t]);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Will stop any bubbling up of the event to element's parents.\n\t *\n\t * Should be called in an event handler, e.g.:\n\t *\n\t * ```TypeScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t * ```JavaScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t */\n\tpublic stopParentDispatch() {\n\t\tthis._dispatchParents = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dispatchParents<Key extends keyof E>(type: Key, event: E[Key]): void {\n\t\tconst old = this._dispatchParents;\n\n\t\tthis._dispatchParents = true;\n\n\t\ttry {\n\t\t\tthis.dispatch(type, event);\n\n\t\t\tif (this._dispatchParents && this._sprite.parent) {\n\t\t\t\tthis._sprite.parent.events.dispatchParents(type as any, event);\n\t\t\t}\n\n\t\t} finally {\n\t\t\tthis._dispatchParents = old;\n\t\t}\n\t}\n}\n\n\nexport interface ISpriteSettings extends IEntitySettings, IAccessibilitySettings {\n\n\t/**\n\t * X position relative to parent.\n\t */\n\tx?: number | Percent | null;\n\n\t/**\n\t * Y position relative to parent.\n\t */\n\ty?: number | Percent | null;\n\n\t/**\n\t * Element's absolute width in pixels (numeric value) or relative width to\n\t * parent ([[Percent]]);\n\t */\n\twidth?: number | Percent | null;\n\n\t/**\n\t * Element's absolute height in pixels (numeric value) or relative height to\n\t * parent ([[Percent]]);\n\t */\n\theight?: number | Percent | null;\n\n\t/**\n\t * Maximum allowed width in pixels.\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * Maximum allowed height in pixels.\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * Minimum allowed width in pixels.\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * Minimum allowed height in pixels.\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * Opacity. 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Rotation in degrees.\n\t */\n\trotation?: number;\n\n\t/**\n\t * Scale.\n\t *\n\t * Setting to a value less than 1 will shrink object.\n\t */\n\tscale?: number;\n\n\t/**\n\t * X coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterX?: number | Percent;\n\n\t/**\n\t * Y coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterY?: number | Percent;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Is element visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Positioning of the element.\n\t *\n\t * `\"absolute\"` means element will not participate in parent layout scheme,\n\t * and will be positioned solely accoridng its `x` and `y` settings.\n\t */\n\tposition?: \"absolute\" | \"relative\";\n\n\t/**\n\t * Horizontal shift in pixels. Can be negative to shift leftward.\n\t */\n\tdx?: number;\n\n\t/**\n\t * Vertical shift in pixels. Can be negative to shift upward.\n\t */\n\tdy?: number;\n\n\t/**\n\t * Should this element accept user interaction events?\n\t */\n\tinteractive?: boolean;\n\n\t/**\n\t * Text to show in a tooltip when hovered.\n\t */\n\ttooltipText?: string;\n\n\t/**\n\t * HTML content to show in a tooltip when hovered.\n\t *\n\t * @since 5.2.11\n\t */\n\ttooltipHTML?: string;\n\n\t/**\n\t * Tooltip pointer X coordinate relative to the element itself.\n\t */\n\ttooltipX?: number | Percent;\n\n\t/**\n\t * Tooltip pointer Y coordinate relative to the element itself.\n\t */\n\ttooltipY?: number | Percent;\n\n\t/**\n\t * [[Tooltip]] instance.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * Tooltip position.\n\t */\n\ttooltipPosition?: \"fixed\" | \"pointer\";\n\n\t/**\n\t * If set to `false` element will not be measured and cannot participate in\n\t * layout schemes.\n\t */\n\tisMeasured?: boolean;\n\n\t/**\n\t * Allows binding element's settings to data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/template-fields/} for more info\n\t */\n\ttemplateField?: string;\n\n\t/**\n\t * If set to `true`, user will be able to drag this element. It will also\n\t * disable default drag events over the area of this element.\n\t */\n\tdraggable?: boolean;\n\n\t/**\n\t * If set to `true`, mouse wheel events will be triggered over the element. It\n\t * will also disable page scrolling using mouse wheel when pointer is over\n\t * the element.\n\t */\n\twheelable?: boolean;\n\n\t/**\n\t * An instance of [[NumberFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tnumberFormatter?: NumberFormatter | undefined;\n\n\t/**\n\t * An instance of [[DateFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdateFormatter?: DateFormatter | undefined;\n\n\t/**\n\t * An instance of [[DurationFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdurationFormatter?: DurationFormatter | undefined;\n\n\t/**\n\t * If set, element will toggle specified boolean setting between `true` and\n\t * `false` when clicked/touched.\n\t */\n\ttoggleKey?: \"disabled\" | \"active\" | \"none\" | undefined;\n\n\t/**\n\t * Indicates if element is currently active.\n\t */\n\tactive?: boolean;\n\n\t/**\n\t * Indicates if element is disabled.\n\t */\n\tdisabled?: boolean;\n\n\t/**\n\t * An SVG filter to apply to the element.\n\t *\n\t * IMPORTANT: SVG filters are not supported in some browsers, e.g. Safari.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter} for more info\n\t * @ignore todo: figure out if we still need this\n\t */\n\tfilter?: string;\n\n\t/**\n\t * A named mouse cursor style to show when hovering this element.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} for more info\n\t */\n\tcursorOverStyle?: string;\n\n\t/**\n\t * If set to `false` this element will not appear in exported snapshots of\n\t * the chart.\n\t */\n\texportable?: boolean;\n\n\t/**\n\t * Numeric layer to put element in.\n\t *\n\t * Elements with higher number will appear in front of the ones with lower\n\t * numer.\n\t *\n\t * If not set, will inherit layer from its ascendants.\n\t */\n\tlayer?: number;\n\n\t/**\n\t * Margins for the layer.\n\t *\n\t * Can be used to make the layer larger/or smaller than default chart size.\n\t *\n\t * @since @5.2.39\n\t */\n\tlayerMargin?: IMargin;\n\n\t/**\n\t * If set to `true` the element will be hidden regardless of `visible` or\n\t * even if `show()` is called.\n\t */\n\tforceHidden?: boolean;\n\n\t/**\n\t * If set to `true` the element will be inactive - absolutely oblivious\n\t * to all interactions, even if there are related events set, or\n\t * the `interactive: true` is set.\n\t *\n\t * @since 5.0.21\n\t */\n\tforceInactive?: boolean;\n\n\t/**\n\t * Defines when tooltip is shown over the element.\n\t *\n\t * Available options:\n\t * * `\"hover\"` (default) - tooltip is shown when element is hovered by a pointer or touched. It is hidden as soon as element is not hovered anymore, or touch occurs outside it.\n\t * * `\"always\"` - a tooltip will always be shown over the element, without any interactions. Please note that if you need to show tooltips for multiple elements at the same time, you need to explicitly create a `Tooltip` instance and set element's `tooltip` setting with it.\n\t * * '\"click\"' - a tooltip will only appear when target element is clicked/tapped. Tooltip will hide when clicking anywhere else on the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Sticky_tooltips} for more info\n\t * @default \"hover\"\n\t * @since 5.0.16\n\t */\n\tshowTooltipOn?: \"hover\" | \"always\" | \"click\";\n\n}\n\nexport interface ISpritePrivate extends IEntityPrivate {\n\t/**\n\t * @ignore\n\t */\n\tcustomData?: any;\n\n\t/**\n\t * @ignore\n\t */\n\tx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ty?: number;\n\n\t/**\n\t * @ignore\n\t */\n\twidth?: number;\n\n\t/**\n\t * @ignore\n\t */\n\theight?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Is element currently showing a tooltip?\n\t */\n\tshowingTooltip?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\ttouchHovering?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfocusElement?: {\n\t\tdom: HTMLDivElement,\n\t\tdisposers: Array<IDisposer>,\n\t};\n\n\t/**\n\t * An element tooltip should inherit its colors from.\n\t */\n\ttooltipTarget?: Graphics;\n\n\t/**\n\t * @ignore\n\t */\n\tlist?: ListTemplate<Sprite>;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminHeight?: number | null;\n}\n\n/**\n * An interface defining event objects that originate from pinter interactions.\n */\nexport interface ISpritePointerEvent {\n\n\t/**\n\t * Original event object that caused the interaction, e.g. [[MouseEvent]].\n\t */\n\toriginalEvent: IPointerEvent;\n\n\t/**\n\t * A point where event originated.\n\t */\n\tpoint: IPoint;\n\n\t/**\n\t * Is it a simulated event, e.g. if the event was generated by code rather\n\t * then actual user interaction.\n\t */\n\tsimulated: boolean;\n\n\t/**\n\t * Whether event originated in chart's container or its children.\n\t */\n\tnative?: boolean;\n\n\t/**\n\t * The element on which the event occurred.\n\t */\n\ttarget: Sprite;\n\n}\n\nexport interface ISpriteEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when element's data item changes.\n\t */\n\tdataitemchanged: {\n\t\toldDataItem: DataItem<IComponentDataItem> | undefined,\n\t\tnewDataItem: DataItem<IComponentDataItem> | undefined\n\t};\n\n\t/**\n\t * Invoked when element's position (X/Y) changes.\n\t */\n\tpositionchanged: {};\n\n\t/**\n\t * Invoked when element's bounds change due to any manipulation to it.\n\t */\n\tboundschanged: {};\n\n\t/**\n\t * Invoked when element dragging starts.\n\t */\n\tdragstart: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element dragging stops.\n\t */\n\tdragstop: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element ois being dragged.\n\t */\n\tdragged: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked or tapped.\n\t */\n\tclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked width the right mouse button.\n\t */\n\trightclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked with the middle mouse button.\n\t */\n\tmiddleclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is doubleclicked or tapped twice quickly.\n\t */\n\tdblclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves over the element.\n\t */\n\tpointerover: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves outside the element.\n\t */\n\tpointerout: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is pressed or touch starts over the element.\n\t */\n\tpointerdown: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops over the element.\n\t */\n\tpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops in the window, even\n\t * outside of the element or even chart area.\n\t */\n\tglobalpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer is moving anywhere in the window, even outside of the\n\t * element or even chart area.\n\t */\n\tglobalpointermove: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when mouse wheel is spinned while pointer is over the element.\n\t */\n\twheel: {\n\t\toriginalEvent: WheelEvent;\n\t\tpoint: IPoint;\n\t};\n\n\t/**\n\t * Invoked when element gains focus.\n\t */\n\tfocus: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n\t/**\n\t * Invoked when element loses focus.\n\t */\n\tblur: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n}\n\n/**\n * A base class for all visual elements.\n *\n * @important\n */\nexport abstract class Sprite extends Entity {\n\tdeclare public _settings: ISpriteSettings;\n\tdeclare public _privateSettings: ISpritePrivate;\n\tdeclare public _events: ISpriteEvents;\n\n\tdeclare public events: SpriteEventDispatcher<this, Events<this, this[\"_events\"]>>;\n\n\tpublic abstract _display: IDisplayObject;\n\n\tpublic _adjustedLocalBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _localBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic static className: string = \"Sprite\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Sprite.className]);\n\n\tpublic _parent: Container | undefined;\n\tprotected _dataItem: DataItem<IComponentDataItem> | undefined;\n\n\tprotected _templateField: Template<this> | undefined;\n\n\tprotected _sizeDirty: boolean = false;\n\n\t// Will be true only when dragging\n\tprotected _isDragging: boolean = false;\n\n\t// The event when the dragging starts\n\tprotected _dragEvent: ISpritePointerEvent | undefined;\n\n\t// The position when dragging starts\n\tprotected _dragPoint: IPoint | undefined;\n\n\tprotected _isHidden: boolean = false;\n\n\tprotected _isShowing: boolean = false;\n\n\tprotected _isHiding: boolean = false;\n\n\tprotected _isDown: boolean = false;\n\tpublic _downPoint: IPoint | undefined;\n\n\tpublic _downPoints: { [index: number]: IPoint } = {};\n\n\tpublic _toggleDp: IDisposer | undefined;\n\n\tprotected _dragDp: MultiDisposer | undefined;\n\n\tprotected _tooltipDp: MultiDisposer | undefined;\n\n\tprotected _hoverDp: MultiDisposer | undefined;\n\n\tprotected _focusDp: MultiDisposer | undefined;\n\n\tprotected _tooltipMoveDp: IDisposer | undefined;\n\n\tprotected _tooltipPointerDp: MultiDisposer | undefined;\n\n\tprotected _statesHandled: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.setPrivateRaw(\"visible\", true);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tsuper._markDirtyKey(key);\n\t\tif (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentagePositionChildren();\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tsuper._markDirtyPrivateKey(key);\n\t\tif (key == \"x\" || key == \"y\") {\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tprotected _removeTemplateField(): void {\n\t\tif (this._templateField) {\n\t\t\tthis._templateField._removeObjectTemplate(this);\n\t\t}\n\t}\n\n\tprotected _createEvents(): SpriteEventDispatcher<this, Events<this, this[\"_events\"]>> {\n\t\treturn new SpriteEventDispatcher(this);\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tlet template;\n\n\t\tconst field = this.get(\"templateField\");\n\n\t\tif (field) {\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\tconst context = dataItem.dataContext;\n\t\t\t\tif (context) {\n\t\t\t\t\ttemplate = (context as any)[field];\n\n\t\t\t\t\tif (!(template instanceof Template) && template) {\n\t\t\t\t\t\ttemplate = Template.new(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._templateField !== template) {\n\t\t\tthis._removeTemplateField();\n\n\t\t\tthis._templateField = template;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\t// TODO change this to run before the element is added to the parent, so that way\n\t//      it doesn't need to apply the themes twice\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst oldDataItem = this._dataItem\n\t\tthis._dataItem = dataItem;\n\t\tthis._processTemplateField();\n\t\tconst eventType = \"dataitemchanged\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, {\n\t\t\t\ttype: eventType,\n\t\t\t\ttarget: this,\n\t\t\t\toldDataItem: oldDataItem,\n\t\t\t\tnewDataItem: dataItem\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A [[DataItem]] used for this element.\n\t *\n\t * NOTE: data item is being assigned automatically in most cases where it\n\t * matters. Use this accessor to set data item only if you know what you're\n\t * doing.\n\t *\n\t * @param  value  Data item\n\t */\n\tpublic set dataItem(value: DataItem<IComponentDataItem> | undefined) {\n\t\tthis._setDataItem(value);\n\t}\n\n\t/**\n\t * @return DataItem\n\t */\n\tpublic get dataItem(): DataItem<IComponentDataItem> | undefined {\n\t\tif (this._dataItem) {\n\t\t\treturn this._dataItem;\n\n\t\t} else {\n\t\t\tlet parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._dataItem) {\n\t\t\t\t\treturn parent._dataItem;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentageSizeChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentageSizeChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentagePositionChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentagePositionChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyPosition() {\n\t\tthis._root._addDirtyPosition(this);\n\t}\n\n\tprotected updatePivotPoint() {\n\t\tconst bounds = this._localBounds;\n\t\tif (bounds) {\n\t\t\tconst centerX = this.get(\"centerX\");\n\t\t\tif (centerX != null) {\n\t\t\t\tthis._display.pivot.x = bounds.left + $utils.relativeToValue(centerX!, bounds.right - bounds.left);\n\t\t\t}\n\n\t\t\tconst centerY = this.get(\"centerY\");\n\t\t\tif (centerY != null) {\n\t\t\t\tthis._display.pivot.y = bounds.top + $utils.relativeToValue(centerY!, bounds.bottom - bounds.top);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\t// handling states in beforeChanged, otherwise states is not applied without animated theme\n\t\tthis._handleStates();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst previous = this._prevSettings.tooltip;\n\t\t\tif (previous) {\n\t\t\t\tprevious.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n\t\t\tthis._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n\t\t\tthis.markDirtyLayer();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipPosition\")) {\n\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\tif (tooltipMoveDp) {\n\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t}\n\n\t\t\tconst tooltipPointerDp = this._tooltipPointerDp;\n\t\t\tif (tooltipPointerDp) {\n\t\t\t\ttooltipPointerDp.dispose();\n\t\t\t\tthis._tooltipPointerDp = undefined;\n\t\t\t}\n\n\t\t\tif (this.get(\"tooltipPosition\") == \"pointer\") {\n\t\t\t\tthis._tooltipPointerDp = new MultiDisposer([\n\t\t\t\t\tthis.events.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\n\t\t\t\t\tthis.events.on(\"pointerout\", () => {\n\t\t\t\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\t\t\t\tif (tooltipMoveDp) {\n\t\t\t\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t})])\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleStates() {\n\t\tif (!this._statesHandled) {\n\t\t\tif (this.isDirty(\"active\")) {\n\t\t\t\tif (this.get(\"active\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"disabled\")) {\n\t\t\t\tif (this.get(\"disabled\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t\tthis._statesHandled = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst display = this._display;\n\t\tconst events = this.events;\n\n\t\tif (this.isDirty(\"draggable\")) {\n\t\t\tconst draggable = this.get(\"draggable\");\n\t\t\tif (draggable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\n\t\t\t\tthis._dragDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerdown\", (ev) => {\n\t\t\t\t\t\tthis.dragStart(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointermove\", (ev) => {\n\t\t\t\t\t\tthis.dragMove(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tthis.dragStop(ev);\n\t\t\t\t\t})])\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._dragDp) {\n\t\t\t\t\tthis._dragDp.dispose();\n\t\t\t\t\tthis._dragDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdisplay.cancelTouch = draggable ? true : false;\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\t\t\tconst showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n\t\t\tif (this._tooltipDp) {\n\t\t\t\tthis._tooltipDp.dispose();\n\t\t\t\tthis._tooltipDp = undefined;\n\t\t\t}\n\t\t\tif (tooltipText || tooltipHTML) {\n\t\t\t\tif (showTooltipOn == \"click\") {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"click\", () => {\n\t\t\t\t\t\t\tthis.setTimeout(() => this.showTooltip(), 10);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t$utils.addEventListener(document, \"click\", (_ev: MouseEvent) => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\telse if (showTooltipOn == \"always\") {\n\t\t\t\t\t// nothing\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tlet toggleKey = this.get(\"toggleKey\") as any;\n\t\t\tif (toggleKey && toggleKey != \"none\") {\n\t\t\t\tthis._toggleDp = events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tthis.set(toggleKey, !this.get(toggleKey));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._toggleDp) {\n\t\t\t\t\tthis._toggleDp.dispose();\n\t\t\t\t\tthis._toggleDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tdisplay.alpha = Math.max(0, this.get(\"opacity\", 1));\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"scale\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.scale = this.get(\"scale\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.updatePivotPoint();\n\t\t}\n\n\t\tif (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n\t\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\t\tdisplay.visible = false;\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.visible = true;\n\t\t\t}\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentageSizeChildren();\n\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tif ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\n\t\t\t\t\tparent.markDirty();\n\t\t\t\t\tparent._prevWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._updateSize();\n\t\t}\n\n\t\tif (this.isDirty(\"wheelable\")) {\n\t\t\tconst wheelable = this.get(\"wheelable\");\n\t\t\tif (wheelable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\t\t\t}\n\t\t\tdisplay.wheelable = wheelable ? true : false;\n\t\t}\n\n\t\t// Accessibility\n\t\tif (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"filter\")) {\n\t\t\t//this.markDirtyBounds();\n\t\t\tdisplay.filter = this.get(\"filter\");\n\t\t}\n\n\t\tif (this.isDirty(\"cursorOverStyle\")) {\n\t\t\tdisplay.cursorOverStyle = this.get(\"cursorOverStyle\");\n\t\t}\n\n\t\tif (this.isDirty(\"hoverOnFocus\")) {\n\t\t\tif (this.get(\"hoverOnFocus\")) {\n\t\t\t\tthis._focusDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"focus\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"blur\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t})])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._focusDp) {\n\t\t\t\t\tthis._focusDp.dispose();\n\t\t\t\t\tthis._focusDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"focusable\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\n\t\t\t// display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n\t\t\t// @todo make sure ariaLabel gets populated in Root\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"exportable\")) {\n\t\t\tdisplay.exportable = this.get(\"exportable\");\n\t\t}\n\n\t\tif (this.isDirty(\"interactive\")) {\n\t\t\tconst events = this.events;\n\t\t\tif (this.get(\"interactive\")) {\n\t\t\t\tthis._hoverDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"click\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (!this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", true);\n\t\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerover\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"pointerover\",\n\t\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t\t\t\t\tthis.events.dispatch(\"pointerout\", {\n\t\t\t\t\t\t\t\ttype: \"pointerout\",\n\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isDown) {\n\t\t\t\t\t\t\tthis._handleUp(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this._isDown = false;\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerdown\", (e) => {\n\t\t\t\t\t\tthis._handleDown(e);\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._display.interactive = false;\n\t\t\t\tif (this._hoverDp) {\n\t\t\t\t\tthis._hoverDp.dispose();\n\t\t\t\t\tthis._hoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"forceInactive\")) {\n\t\t\tthis._display.inactive = this.get(\"forceInactive\", false);\n\t\t}\n\n\t\tif (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStart(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = e;\n\t\tthis.events.stopParentDispatch();\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStop(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = undefined;\n\t\tthis._dragPoint = undefined;\n\t\tthis.events.stopParentDispatch();\n\n\t\tif (this._isDragging) {\n\t\t\tthis._isDragging = false;\n\n\t\t\tconst type = \"dragstop\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, {\n\t\t\t\t\ttype: type,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\tpoint: e.point,\n\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOver() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverActive\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverDisabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOut() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleUp(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse if (this.states.lookup(\"down\")) {\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._downPoint = undefined;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tdelete this._downPoints[pointerId];\n\n\t\t\tif ($object.keys(this._downPoints).length == 0) {\n\t\t\t\tthis._isDown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _hasMoved(e: ISpritePointerEvent): boolean {\n\t\t// @todo remove this once migrated to _downPoints\n\t\t// if (this._downPoint) {\n\t\t// \tconst x = Math.abs(this._downPoint.x - e.point.x);\n\t\t// \tconst y = Math.abs(this._downPoint.y - e.point.y);\n\t\t// \treturn (x > 5) || (y > 5);\n\t\t// }\n\n\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\tconst downPoint = this._downPoints[pointerId];\n\t\tif (downPoint) {\n\t\t\tconst x = Math.abs(downPoint.x - e.point.x);\n\t\t\tconst y = Math.abs(downPoint.y - e.point.y);\n\t\t\treturn (x > 5) || (y > 5);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic _hasDown(): boolean {\n\t\treturn $object.keys(this._downPoints).length > 0;\n\t}\n\n\tprotected _handleDown(e: ISpritePointerEvent) {\n\n\t\tconst parent = this.parent;\n\t\tif (parent && !this.get(\"draggable\")) {\n\t\t\tparent._handleDown(e);\n\t\t}\n\n\t\tif (this.get(\"interactive\") && !this.isHidden()) {\n\t\t\tif (this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t\tthis._downPoint = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._isDown = true;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tthis._downPoints[pointerId] = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragMove(e: ISpritePointerEvent) {\n\t\tlet dragEvent = this._dragEvent;\n\n\t\tif (dragEvent) {\n\n\t\t\tif (dragEvent.simulated && !e.simulated) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet angle = 0;\n\n\t\t\tlet parent = this.parent;\n\t\t\twhile (parent != null) {\n\t\t\t\tangle += parent.get(\"rotation\", 0);\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\tlet x = e.point.x - dragEvent.point.x;\n\t\t\tlet y = e.point.y - dragEvent.point.y;\n\n\t\t\tconst events = this.events;\n\n\t\t\tif (dragEvent.simulated && !this._isDragging) {\n\t\t\t\tthis._isDragging = true;\n\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\tthis._dragPoint = {\n\t\t\t\t\tx: this.x(),\n\t\t\t\t\ty: this.y()\n\t\t\t\t};\n\n\t\t\t\tconst type = \"dragstart\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isDragging) {\n\t\t\t\tlet dragPoint = this._dragPoint!;\n\n\t\t\t\tthis.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\n\t\t\t\tthis.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\n\n\t\t\t\tconst type = \"dragged\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (Math.hypot(x, y) > 5) {\n\t\t\t\t\tthis._isDragging = true;\n\t\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\t\tthis._dragPoint = {\n\t\t\t\t\t\tx: this.x(),\n\t\t\t\t\t\ty: this.y()\n\t\t\t\t\t};\n\n\t\t\t\t\tconst type = \"dragstart\";\n\t\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\t\tsimulated: e.simulated\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\n\t}\n\n\tprotected _getBounds() {\n\t\tthis._localBounds = this._display.getLocalBounds();\n\t}\n\n\t/**\n\t * Returns depth (how deep in the hierachy of the content tree) of this\n\t * element.\n\t *\n\t * @return Depth\n\t */\n\tpublic depth(): number {\n\t\tlet self: Container | undefined = this.parent;\n\t\tlet depth = 0;\n\n\t\twhile (true) {\n\t\t\tif (self) {\n\t\t\t\t++depth;\n\t\t\t\tself = self.parent;\n\n\t\t\t} else {\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize(): void {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyBounds(): void {\n\t\tconst display = this._display;\n\t\tif (this.get(\"isMeasured\")) {\n\t\t\tthis._root._addDirtyBounds(this);\n\t\t\tdisplay.isMeasured = true;\n\t\t\tdisplay.invalidateBounds();\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent && this.get(\"position\") != \"absolute\") {\n\t\t\t\tif (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n\t\t\t\t\tparent.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"focusable\") && this.isFocus()) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyAccessibility(): void {\n\t\t//if (this._root.focused(this)) {\n\t\tthis._root._invalidateAccessibility(this);\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyLayer() {\n\t\t//this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n\t\tthis._display.markDirtyLayer(true);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tsuper.markDirty();\n\t\tthis.markDirtyLayer();\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst oldBounds = this._adjustedLocalBounds;\n\n\t\tlet newBounds: IBounds;\n\n\t\t// if display.visible == false, it still returns bounds\n\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\tnewBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t};\n\t\t\tthis._localBounds = newBounds;\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tthis._getBounds();\n\t\t\tthis._fixMinBounds(this._localBounds);\n\t\t\tthis.updatePivotPoint();\n\t\t\tthis._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n\t\t\tnewBounds = this._adjustedLocalBounds!;\n\t\t}\n\n\t\tif (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\n\t\t\tconst eventType = \"boundschanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.markDirty();\n\t\t\t\tthis.parent.markDirtyBounds();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _fixMinBounds(bounds: IBounds) {\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tbounds.right = bounds.left + privateWidth;\n\t\t}\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\tbounds.bottom = bounds.top + privateHeight;\n\t\t}\n\t}\n\n\tprotected _removeParent(parent: Container | undefined) {\n\t\tif (parent) {\n\t\t\tparent.children.removeValue(this);\n\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._statesHandled = false;\n\t}\n\n\t/**\n\t * Simulate hover over element.\n\t */\n\tpublic hover() {\n\t\tthis.showTooltip();\n\t\tthis._handleOver();\n\t}\n\n\t/**\n\t * Simulate unhover over element.\n\t */\n\tpublic unhover(): void {\n\t\tthis.hideTooltip();\n\t\tthis._handleOut();\n\t}\n\n\t/**\n\t * Shows element's [[Tooltip]].\n\t */\n\tpublic showTooltip(point?: IPoint): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\n\t\tif ((tooltipText || tooltipHTML) && tooltip) {\n\t\t\tconst tooltipPosition = this.get(\"tooltipPosition\");\n\t\t\tconst tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n\t\t\tif (tooltipPosition == \"fixed\" || !point) {\n\t\t\t\tthis._display._setMatrix();\n\t\t\t\tpoint = this.toGlobal(tooltipTarget._getTooltipPoint());\n\t\t\t}\n\n\t\t\ttooltip.set(\"pointTo\", point);\n\t\t\ttooltip.set(\"tooltipTarget\", tooltipTarget);\n\n\t\t\tif (!tooltip.get(\"x\")) {\n\t\t\t\ttooltip.set(\"x\", point.x);\n\t\t\t}\n\t\t\tif (!tooltip.get(\"y\")) {\n\t\t\t\ttooltip.set(\"y\", point.y);\n\t\t\t}\n\n\t\t\tif (tooltipText) {\n\t\t\t\ttooltip.label.set(\"text\", tooltipText);\n\t\t\t}\n\t\t\tif (tooltipHTML) {\n\t\t\t\ttooltip.label.set(\"html\", tooltipHTML);\n\t\t\t}\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\ttooltip.label._setDataItem(dataItem);\n\t\t\t}\n\n\t\t\tif (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n\t\t\t\tthis.hideTooltip();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.label.text.markDirtyText();\n\t\t\tconst promise = tooltip.show();\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", true);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\t/**\n\t * Hides element's [[Tooltip]].\n\t */\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip) {\n\t\t\tlet timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n\t\t\tconst promise = tooltip.hide(timeout);\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", false);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst bounds = this._localBounds!;\n\n\t\tif (bounds) {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tif (!this.get(\"isMeasured\")) {\n\t\t\t\tx = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n\t\t\t\ty = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n\t\t\t\ty = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n\t\t\t}\n\n\t\t\treturn { x, y };\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\t/**\n\t * Returns [[Tooltip]] used for this element.\n\t *\n\t * @return Tooltip\n\t */\n\tpublic getTooltip(): Tooltip | undefined {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (!tooltip) {\n\t\t\tlet parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\treturn parent.getTooltip();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn tooltip;\n\t\t}\n\t}\n\n\tpublic _updatePosition() {\n\n\t\tconst parent = this.parent;\n\n\t\tlet dx = this.get(\"dx\", 0);\n\t\tlet dy = this.get(\"dy\", 0);\n\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tlet xx = 0;\n\t\tlet yy = 0;\n\n\t\tconst position = this.get(\"position\");\n\n\t\tif (x instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\tx = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(x)) {\n\t\t\txx = x + dx;\n\t\t}\n\t\telse {\n\t\t\tif (_x != null) {\n\t\t\t\txx = _x;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\txx = parent.get(\"paddingLeft\", 0) + dx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet y = this.get(\"y\");\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (y instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\ty = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(y)) {\n\t\t\tyy = y + dy;\n\t\t}\n\t\telse {\n\t\t\tif (_y != null) {\n\t\t\t\tyy = _y;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\tyy = parent.get(\"paddingTop\", 0) + dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst display = this._display;\n\n\t\tif (display.x != xx || display.y != yy) {\n\t\t\tdisplay.invalidateBounds();\n\t\t\tdisplay.x = xx;\n\t\t\tdisplay.y = yy;\n\n\t\t\tconst eventType = \"positionchanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\n\t\t// Update tooltip position together with the Sprite\n\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * Returns element's actual X position in pixels.\n\t *\n\t * @return X (px)\n\t */\n\tpublic x(): number {\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (x instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(x)) {\n\t\t\t\t\tif (_x != null) {\n\t\t\t\t\t\treturn _x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingLeft\", this._display.x)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.x;\n\t}\n\n\t/**\n\t * Returns element's actual Y position in pixels.\n\t *\n\t * @return Y (px)\n\t */\n\tpublic y(): number {\n\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (_y != null) {\n\t\t\treturn _y;\n\t\t}\n\n\t\tlet y = this.get(\"y\");\n\t\tconst parent = this.parent;\n\n\t\tif (parent) {\n\t\t\tif (y instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(y)) {\n\t\t\t\t\tif (_y != null) {\n\t\t\t\t\t\treturn _y;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingTop\", this._display.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.y;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._display.dispose();\n\t\tthis._removeTemplateField();\n\t\tthis._removeParent(this.parent);\n\t\tthis._root._removeFocusElement(this);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.dispose();\n\t\t}\n\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustedLocalBounds(): IBounds {\n\t\tthis._fixMinBounds(this._adjustedLocalBounds);\n\t\treturn this._adjustedLocalBounds;\n\t}\n\n\t/**\n\t * Returns local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic localBounds(): IBounds {\n\t\treturn this._localBounds;\n\t}\n\n\t/**\n\t * Returns adjusted local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic bounds(): IBounds {\n\t\tconst bounds = this._adjustedLocalBounds;\n\t\tconst x = this.x();\n\t\tconst y = this.y();\n\t\treturn { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\n\t}\n\n\t/**\n\t * Returns global coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic globalBounds(): IBounds {\n\t\tconst bounds = this.localBounds();\n\n\t\tconst p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\tprotected _onShow(_duration?: number) {\n\n\t}\n\n\tprotected _onHide(_duration?: number) {\n\n\t}\n\n\t/**\n\t * Plays initial reveal animation regardless if element is currently hidden\n\t * or visible.\n\t *\n\t * @param   duration  Duration of the animation in milliseconds\n\t * @param   delay     Delay showing of the element by X milliseconds\n\t * @return            Promise\n\t */\n\tpublic async appear(duration?: number, delay?: number): Promise<void> {\n\t\tawait this.hide(0);\n\t\tif (delay) {\n\t\t\treturn new Promise<void>((success, _error) => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tsuccess(this.show(duration));\n\t\t\t\t}, delay);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\treturn this.show(duration);\n\t\t}\n\t}\n\n\t/**\n\t * Shows currently hidden element and returns a `Promise` which completes\n\t * when all showing animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tif (!this._isShowing) {\n\t\t\tthis._isHidden = false;\n\t\t\tthis._isShowing = true;\n\t\t\tthis._isHiding = false;\n\n\t\t\tif (this.states.lookup(\"default\")!.get(\"visible\")) {\n\t\t\t\tthis.set(\"visible\", true);\n\t\t\t}\n\t\t\tthis._onShow(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"default\", duration);\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isShowing = false;\n\t\t}\n\t}\n\n\t/**\n\t * Hides the element and returns a `Promise` which completes when all hiding\n\t * animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tif (!this._isHiding && !this._isHidden) {\n\t\t\tthis._isHiding = true;\n\t\t\tthis._isShowing = false;\n\t\t\tlet state = this.states.lookup(\"hidden\");\n\t\t\tif (!state) {\n\t\t\t\tstate = this.states.create(\"hidden\", {\n\t\t\t\t\t\"opacity\": 0,\n\t\t\t\t\t\"visible\": false\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isHidden = true;\n\t\t\tthis._onHide(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"hidden\", duration);\n\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isHiding = false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hidden.\n\t *\n\t * @return Is hidden?\n\t */\n\tpublic isHidden(): boolean {\n\t\treturn this._isHidden;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a default state.\n\t *\n\t * @return Is showing?\n\t */\n\tpublic isShowing(): boolean {\n\t\treturn this._isShowing;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a hidden state.\n\t *\n\t * @return Is hiding?\n\t */\n\tpublic isHiding(): boolean {\n\t\treturn this._isHiding;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hovered by a pointer.\n\t *\n\t * @return Is hovered?\n\t */\n\tpublic isHover(): boolean {\n\t\treturn this._display.hovering();\n\t}\n\n\t/**\n\t * Returns `true` if this element does currently have focus.\n\t *\n\t * @return Is focused?\n\t */\n\tpublic isFocus(): boolean {\n\t\treturn this._root.focused(this);\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently being dragged.\n\t *\n\t * @return Is dragged?\n\t */\n\tpublic isDragging(): boolean {\n\t\treturn this._isDragging;\n\t}\n\n\t/**\n\t * Returns `false` if if either public or private setting `visible` is set\n\t * to `false`, or `forceHidden` is set to `true`.\n\t *\n\t * @return Visible?\n\t */\n\tpublic isVisible(): boolean {\n\t\tif (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Same as `isVisible()`, except it checks all ascendants, too.\n\t *\n\t * @since 5.2.7\n\t * @return Visible?\n\t */\n\tpublic isVisibleDeep(): boolean {\n\t\treturn this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\n\t}\n\n\t/**\n\t * Returns an actual opacity of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.2.11\n\t */\n\tpublic compositeOpacity(): number {\n\t\tconst opacity = this.get(\"opacity\", 1);\n\t\treturn this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\n\t}\n\n\t/**\n\t * Returns width of this element in pixels.\n\t *\n\t * @return Width (px)\n\t */\n\tpublic width(): number {\n\t\tlet width = this.get(\"width\");\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet w = 0;\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tw = privateWidth;\n\t\t}\n\t\telse {\n\t\t\tif (width == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\tw = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw = parent.innerWidth() * width.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tw = this._root.width() * width.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(width)) {\n\t\t\t\t\tw = width;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tw = Math.max(minWidth, w);\n\t\t}\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tw = Math.min(maxWidth, w);\n\t\t}\n\n\t\treturn w;\n\t}\n\n\t/**\n\t * Returns maximum allowed width of this element in pixels.\n\t *\n\t * @return Maximum width (px)\n\t */\n\tpublic maxWidth(): number {\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\treturn maxWidth;\n\t\t}\n\t\telse {\n\t\t\tlet width = this.get(\"width\")\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\treturn width;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerWidth();\n\t\t}\n\t\treturn this._root.width();\n\t}\n\n\t/**\n\t * Returns maximum allowed height of this element in pixels.\n\t *\n\t * @return Maximum height (px)\n\t */\n\tpublic maxHeight(): number {\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\treturn maxHeight;\n\t\t}\n\t\telse {\n\t\t\tlet height = this.get(\"height\")\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\treturn height;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerHeight();\n\t\t}\n\t\treturn this._root.height();\n\t}\n\n\t/**\n\t * Returns height of this element in pixels.\n\t *\n\t * @return Height (px)\n\t */\n\tpublic height(): number {\n\t\tlet height = this.get(\"height\");\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\t\tlet h = 0;\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\th = privateHeight;\n\t\t}\n\t\telse {\n\t\t\tif (height == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\th = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\th = parent.innerHeight() * height.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\th = this._root.height() * height.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(height)) {\n\t\t\t\t\th = height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\th = Math.max(minHeight, h);\n\t\t}\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\th = Math.min(maxHeight, h);\n\t\t}\n\n\t\treturn h;\n\t}\n\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\t// templateField overrides template\n\t\tif (this._templateField && f(this._templateField)) {\n\t\t\treturn this._templateField;\n\t\t}\n\n\t\treturn super._findStaticTemplate(f);\n\t}\n\n\tprotected _walkParents(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._walkParent(f);\n\t\t}\n\t}\n\n\tprotected _walkParent(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._parent._walkParent(f);\n\t\t}\n\n\t\tf(this);\n\t}\n\n\t/**\n\t * Parent [[Container]] of this element.\n\t *\n\t * @return Parent container\n\t */\n\tpublic get parent(): Container | undefined {\n\t\treturn this._parent;\n\t}\n\n\tpublic _setParent(parent: Container, updateChildren: boolean = false) {\n\t\tconst prevParent = this._parent;\n\t\tif (parent !== prevParent) {\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tparent.markDirty();\n\n\t\t\tthis._parent = parent;\n\n\t\t\tif (updateChildren) {\n\t\t\t\tthis._removeParent(prevParent);\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tthis._addPercentageSizeChildren();\n\t\t\t\t\tthis._addPercentagePositionChildren();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis._applyThemes();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an instance of [[NumberFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return NumberFormatter instace\n\t */\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\treturn this.get(\"numberFormatter\", this._root.numberFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DateFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DateFormatter instace\n\t */\n\tpublic getDateFormatter(): DateFormatter {\n\t\treturn this.get(\"dateFormatter\", this._root.dateFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DurationFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DurationFormatter instace\n\t */\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\treturn this.get(\"durationFormatter\", this._root.durationFormatter);\n\t}\n\n\t/**\n\t * Converts X/Y coordinate within this element to a global coordinate.\n\t *\n\t * @param  point  Local coordinate\n\t * @return        Global coordinate\n\t */\n\tpublic toGlobal(point: IPoint): IPoint {\n\t\treturn this._display.toGlobal(point);\n\t}\n\n\t/**\n\t * Converts global X/Y coordinate to a coordinate within this element.\n\t *\n\t * @param  point  Global coordinate\n\t * @return        Local coordinate\n\t */\n\tpublic toLocal(point: IPoint): IPoint {\n\t\treturn this._display.toLocal(point);\n\t}\n\n\tpublic _getDownPoint(): IPoint | undefined {\n\t\tconst id = this._getDownPointId();\n\t\tif (id) {\n\t\t\treturn this._downPoints[id];\n\t\t}\n\n\t}\n\n\tpublic _getDownPointId(): number | undefined {\n\t\tif (this._downPoints) {\n\t\t\treturn $object.keysOrdered(this._downPoints, (a, b) => {\n\t\t\t\tif (a > b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a < b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t})[0];\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the end of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toFront() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the beginning of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toBack() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, 0);\n\t\t}\n\t}\n\n}\n","import type { Color } from \"../util/Color\";\nimport type { Percent } from \"../util/Percent\";\nimport type { IText } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\nimport { Sprite, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\nimport { populateString } from \"../util/PopulateString\";\n\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\n\nimport * as $array from \"../util/Array\";\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport interface ITextSettings extends ISpriteSettings {\n\ttext?: string;\n\tfill?: Color;\n\tfillOpacity?: number;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\"\n\tfontStyle?: \"normal\" | \"italic\" | \"oblique\";\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: Percent | number;\n\tbaselineRatio?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\topacity?: number;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tminScale?: number;\n\tpopulateText?: boolean;\n\tignoreFormatting?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ITextPrivate extends ISpritePrivate {\n\n\t/**\n\t * @ignore\n\t */\n\ttooltipElement?: HTMLDivElement;\n\n}\n\n/**\n * @ignore Text is an internal class. Use Label instead.\n */\nexport class Text extends Sprite {\n\n\tdeclare public _settings: ITextSettings;\n\tdeclare public _privateSettings: ITextPrivate;\n\n\tpublic textStyle = this._root._renderer.makeTextStyle();\n\n\tpublic _display: IText = this._root._renderer.makeText(\"\", this.textStyle);\n\n\tprotected _textStyles: Array<keyof ITextSettings> = [\n\t\t\"textAlign\",\n\t\t\"fontFamily\",\n\t\t\"fontSize\",\n\t\t\"fontStyle\",\n\t\t\"fontWeight\",\n\t\t\"fontStyle\",\n\t\t\"fontVariant\",\n\t\t\"textDecoration\",\n\t\t\"shadowColor\",\n\t\t\"shadowBlur\",\n\t\t\"shadowOffsetX\",\n\t\t\"shadowOffsetY\",\n\t\t\"shadowOpacity\",\n\t\t// \"leading\",\n\t\t// \"letterSpacing\",\n\t\t\"lineHeight\",\n\t\t\"baselineRatio\",\n\t\t//\"padding\",\n\t\t// \"stroke\",\n\t\t// \"strokeThickness\",\n\t\t// \"trim\",\n\t\t// \"wordWrap\",\n\t\t\"direction\",\n\t\t\"textBaseline\",\n\t\t\"oversizedBehavior\",\n\t\t\"breakWords\",\n\t\t\"ellipsis\",\n\t\t\"minScale\"\n\t];\n\n\tprotected _originalScale: number | undefined;\n\n\tpublic static className: string = \"Text\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Text.className]);\n\n\tpublic _updateBounds(): void {\n\t\tif (!this.get(\"text\")) {\n\n\t\t\tlet newBounds: IBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0,\n\t\t\t};\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tsuper._updateBounds();\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tthis._display.clear();\n\n\t\tlet textStyle = <any>this.textStyle;\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tlet opacity = this.get(\"opacity\", 1);\n\t\t\tthis._display.alpha = opacity;\n\t\t}\n\n\t\tif (this.isDirty(\"text\") || this.isDirty(\"populateText\")) {\n\t\t\tthis._display.text = this._getText();\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\t\tthis._root.updateTooltip(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\ttextStyle.wordWrapWidth = this.width();\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"oversizedBehavior\")) {\n\t\t\ttextStyle.oversizedBehavior = this.get(\"oversizedBehavior\", \"none\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"breakWords\")) {\n\t\t\ttextStyle.breakWords = this.get(\"breakWords\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ellipsis\")) {\n\t\t\ttextStyle.ellipsis = this.get(\"ellipsis\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"ignoreFormatting\")) {\n\t\t\ttextStyle.ignoreFormatting = this.get(\"ignoreFormatting\", false);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"minScale\")) {\n\t\t\ttextStyle.minScale = this.get(\"minScale\", 0);\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tlet fill = this.get(\"fill\");\n\t\t\tif (fill) {\n\t\t\t\ttextStyle.fill = fill;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fillOpacity\")) {\n\t\t\tlet fillOpacity = this.get(\"fillOpacity\", 1);\n\t\t\tif (fillOpacity) {\n\t\t\t\ttextStyle.fillOpacity = fillOpacity;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isPrivateDirty(\"maxWidth\")) {\n\t\t\ttextStyle.maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"maxHeight\")) {\n\t\t\ttextStyle.maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\t$array.each(this._textStyles, (styleName) => {\n\t\t\tif (this._dirty[styleName]) {\n\t\t\t\ttextStyle[styleName] = this.get(styleName);\n\t\t\t\tthis.markDirtyBounds();\n\t\t\t}\n\t\t})\n\n\t\ttextStyle[\"fontSize\"] = this.get(\"fontSize\");\n\t\ttextStyle[\"fontFamily\"] = this.get(\"fontFamily\");\n\t\tthis._display.style = textStyle;\n\n\t\tif (this.isDirty(\"role\") && this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t}\n\n\tpublic _getText(): string {\n\t\tconst text = this.get(\"text\", \"\");\n\t\treturn this.get(\"populateText\") ? populateString(this, text) : text;\n\t}\n\n\tpublic markDirtyText(): void {\n\t\tthis._display.text = this._getText();\n\t\tif (this.get(\"role\") == \"tooltip\") {\n\t\t\tthis._root.updateTooltip(this);\n\t\t}\n\t\tthis.markDirtyBounds();\n\t\tthis.markDirty();\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tif (this.get(\"populateText\")) {\n\t\t\tthis.markDirtyText();\n\t\t}\n\t}\n\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getNumberFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getNumberFormatter();\n\t\t}\n\t}\n\n\tpublic getDateFormatter(): DateFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDateFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDateFormatter();\n\t\t}\n\t}\n\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\tif (this.parent) {\n\t\t\treturn this.parent.getDurationFormatter();\n\t\t}\n\t\telse {\n\t\t\treturn super.getDurationFormatter();\n\t\t}\n\t}\n}\n","import { Layout, eachChildren } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n\n/**\n * A vertical children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class VerticalLayout extends Layout {\n\n\tpublic static className: string = \"VerticalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([VerticalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableHeight = container.innerHeight();\n\t\tlet totalPercent = 0;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\ttotalPercent += childHeight.value;\n\n\t\t\t\t\t\tlet h = availableHeight * childHeight.value;\n\t\t\t\t\t\tlet minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n\t\t\t\t\t\tif (minHeight > h) {\n\t\t\t\t\t\t\tavailableHeight -= minHeight;\n\t\t\t\t\t\t\ttotalPercent -= childHeight.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n\t\t\t\t\t\tif (h > maxHeight) {\n\t\t\t\t\t\t\tavailableHeight -= maxHeight;\n\t\t\t\t\t\t\ttotalPercent -= childHeight.value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!$type.isNumber(childHeight)) {\n\t\t\t\t\t\t\tchildHeight = child.height();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tavailableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (availableHeight < 0) {\n\t\t\tavailableHeight = 0.01;\n\t\t}\n\n\t\t//if (availableHeight > 0) {\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.isVisible()) {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\tlet privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n\n\t\t\t\t\t\tlet minHeight = child.get(\"minHeight\", child.getPrivate(\"minHeight\", -Infinity));\n\t\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\", child.getPrivate(\"maxHeight\", Infinity));\n\t\t\t\t\t\tprivateHeight = Math.min(Math.max(minHeight, privateHeight), maxHeight);\n\n\t\t\t\t\t\tchild.setPrivate(\"height\", privateHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t//}\n\n\t\tlet prevY = paddingTop;\n\n\t\teachChildren(container, (child) => {\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tif (child.isVisible()) {\n\t\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet marginTop = child.get(\"marginTop\", 0);\n\n\t\t\t\t\tlet top = bounds.top;\n\t\t\t\t\tlet bottom = bounds.bottom;\n\n\t\t\t\t\tlet maxHeight = child.get(\"maxHeight\");\n\t\t\t\t\tif (maxHeight) {\n\t\t\t\t\t\tif (bottom - top > maxHeight) {\n\t\t\t\t\t\t\tbottom = top + maxHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet marginBottom = child.get(\"marginBottom\", 0);\n\t\t\t\t\tlet y = prevY + marginTop - top;\n\t\t\t\t\tchild.setPrivate(\"y\", y);\n\t\t\t\t\tprevY = y + bottom + marginBottom;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tchild.setPrivate(\"y\", undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import type { IDisposer } from \"../../util/Disposer\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport type { Color } from \"../../util/Color\";\nimport type { Percent } from \"../../util/Percent\";\nimport type { Matrix } from \"../../util/Matrix\";\nimport type { IBounds } from \"../../util/IBounds\";\n\nexport interface IGradient {\n\taddColorStop(offset: number, color: string): void;\n}\n\n/**\n * Represents an object describing color switching point in a gradiend.\n *F\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport interface IGradientStop {\n\n\t/**\n\t * Color.\n\t */\n\tcolor?: Color;\n\n\t/**\n\t * Offset defines where in the gradient the color should kick in. Values\n\t * from 0 to 1 are possible with 0 meaning start, 0.5 half-way through the\n\t * gradient, etc.\n\t */\n\toffset?: number;\n\n\t/**\n\t * Transparency of the color. 0 - completely transparent, 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Sets lightness of the color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/#Brightness} for more info\n\t */\n\tlighten?: number;\n\n\t/**\n\t * Sets brightness of the color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/#Brightness} for more info\n\t */\n\tbrighten?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcolorInherited?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\topacityInherited?: boolean;\n\n}\n\nexport interface IPattern {\n}\n\nexport type IPointerEvent = PointerEvent | MouseEvent | Touch;\n\nexport type Id = number | null;;\n\nexport interface IRendererEvent<E> {\n\tevent: E;\n\tpoint: IPoint;\n\tid: Id;\n\tsimulated: boolean;\n\tnative: boolean;\n}\n\nexport interface IRendererEvents {\n\tclick: IRendererEvent<IPointerEvent>;\n\trightclick: IRendererEvent<IPointerEvent>;\n\tmiddleclick: IRendererEvent<IPointerEvent>;\n\tdblclick: IRendererEvent<IPointerEvent>;\n\tglobalpointermove: IRendererEvent<IPointerEvent>,\n\tglobalpointerup: IRendererEvent<IPointerEvent>,\n\tpointerover: IRendererEvent<IPointerEvent>;\n\tpointerout: IRendererEvent<IPointerEvent>;\n\tpointerdown: IRendererEvent<IPointerEvent>;\n\tpointermove: IRendererEvent<IPointerEvent>;\n\tpointerup: IRendererEvent<IPointerEvent>;\n\twheel: IRendererEvent<WheelEvent>;\n}\n\nexport interface IDisplayObject extends IDisposer {\n\tmask: IGraphics | null;\n\tvisible: boolean;\n\tinteractive: boolean;\n\tinactive: boolean;\n\twheelable: boolean;\n\tcancelTouch: boolean;\n\tisMeasured: boolean;\n\tbuttonMode: boolean;\n\talpha: number;\n\tangle: number;\n\tscale: number;\n\tx: number;\n\ty: number;\n\tpivot: IPoint;\n\tfilter?: string;\n\tcursorOverStyle?: string;\n\texportable?: boolean;\n\n\t_setMatrix(): void;\n\tgetLayer(): ILayer;\n\tsetLayer(order: number | undefined, margin: IMargin | undefined): void;\n\tmarkDirtyLayer(deep?: boolean): void;\n\tclear(): void;\n\tinvalidateBounds(): void;\n\ttoLocal(point: IPoint): IPoint;\n\ttoGlobal(point: IPoint): IPoint;\n\tgetLocalBounds(): IBounds;\n\tgetAdjustedBounds(bounds?: IBounds): IBounds;\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer;\n\thovering(): boolean;\n\tgetCanvas(): HTMLCanvasElement;\n\n\t/**\n\t * @ignore\n\t */\n\tgetLocalMatrix(): Matrix;\n}\n\nexport interface IContainer extends IDisplayObject {\n\tinteractiveChildren: boolean;\n\t_renderer:IRenderer;\n\taddChild(child: IDisplayObject): void;\n\taddChildAt(child: IDisplayObject, index: number): void;\n\tremoveChild(child: IDisplayObject): void;\n}\n\n\n/**\n * From https://github.com/pixijs/pixi.js/blob/3dd0ff9a935f0bc13a09aefff9eb2872f02c51b9/packages/canvas/canvas-renderer/src/utils/mapCanvasBlendModesToPixi.ts#L13\n */\nexport enum BlendMode {\n\tADD = \"lighter\",\n\tCOLOR = \"color\",\n\tCOLOR_BURN = \"color-burn\",\n\tCOLOR_DODGE = \"color-dodge\",\n\tDARKEN = \"darken\",\n\tDIFFERENCE = \"difference\",\n\tDST_OVER = \"destination-over\",\n\tEXCLUSION = \"exclusion\",\n\tHARD_LIGHT = \"hard-light\",\n\tHUE = \"hue\",\n\tLIGHTEN = \"lighten\",\n\tLUMINOSITY = \"luminosity\",\n\tMULTIPLY = \"multiply\",\n\tNORMAL = \"source-over\",\n\tOVERLAY = \"overlay\",\n\tSATURATION = \"saturation\",\n\tSCREEN = \"screen\",\n\tSOFT_LIGHT = \"soft-light\",\n\tSRC_ATOP = \"source-atop\",\n\tXOR = \"xor\",\n}\n\nexport interface IGraphics extends IDisplayObject {\n\tblendMode: BlendMode;\n\n\tclear(): void;\n\n\tbeginFill(color?: Color | IGradient | IPattern, alpha?: number): void;\n\tendFill(): void;\n\n\tlineStyle(width?: number, color?: Color | IGradient | IPattern, alpha?: number, lineJoin?: \"miter\" | \"round\" | \"bevel\"): void;\n\tsetLineDash(dash?: number[]): void;\n\tsetLineDashOffset(dashOffset?: number): void;\n\tendStroke(): void;\n\n\tdrawRect(x: number, y: number, width: number, height: number): void;\n\tdrawCircle(x: number, y: number, radius: number): void;\n\tdrawEllipse(x: number, y: number, radiusX: number, radiusY: number): void;\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise?: boolean): void;\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n\tlineTo(x: number, y: number): void;\n\tmoveTo(x: number, y: number): void;\n\tclosePath(): void;\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void;\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void;\n\tsvgPath(path: string): void;\n\timage(image: HTMLImageElement, width: number, height: number, x: number, y: number): void;\n\tshadow(color: Color, blur?: number, offsetX?: number, offsetY?: number, opacity?: number): void;\n}\n\n/**\n * @ignore\n */\nexport interface IText extends IDisplayObject {\n\tresolution: number;\n\ttext: string;\n\tstyle: ITextStyle;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialText extends IText {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\trelativeAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\nexport interface ITextStyle {\n\t//wordWrapWidth: number = 100;\n\tfill?: Color | IGradient | IPattern;\n\ttextAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tverticalAlign?: \"baseline\" | \"sub\" | \"super\";\n\tfontFamily?: string;\n\tfontSize?: string | number;\n\tfontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tfontStyle?: 'normal' | 'italic' | 'oblique';\n\tfontVariant?: \"normal\" | \"small-caps\";\n\ttextDecoration?: \"underline\" | \"line-through\";\n\tshadowColor?: Color | null;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n\n\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tlineHeight?: number | Percent;\n\tbaselineRatio?: number;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tdirection?: \"ltr\" | \"rtl\";\n\ttextBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\toversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"wrap-no-break\" | \"truncate\";\n\tbreakWords?: boolean;\n\tellipsis?: string;\n\tmaxWidth?: number;\n\tmaxHeight?: number;\n\tminScale?: number;\n}\n\nexport interface IPicture extends IDisplayObject {\n\timage: HTMLImageElement | undefined;\n\twidth?: number | undefined;\n\theight?: number | undefined;\n\tshadowColor?: Color;\n\tshadowBlur?: number;\n\tshadowOffsetX?: number;\n\tshadowOffsetY?: number;\n\tshadowOpacity?: number;\n}\n\nexport interface IRenderer extends IDisposer {\n\tdebugGhostView: boolean;\n\ttapToActivate: boolean;\n\ttapToActivateTimeout: number;\n\tresolution: number;\n\tinteractionsEnabled: boolean;\n\t_getHitTarget(point: IPoint, bbox: DOMRect): IDisplayObject | undefined | false;\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): IGradient;\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): IGradient;\n\tcreatePattern(graphics: IGraphics, background: IGraphics, repetition: string, width: number, height: number): IPattern;\n\tmakeContainer(): IContainer;\n\tmakeGraphics(): IGraphics;\n\tmakeText(text: string, style: ITextStyle): IText;\n\tmakeRadialText(text: string, style: ITextStyle): IText;\n\tmakeTextStyle(): ITextStyle;\n\tmakePicture(image: HTMLImageElement | undefined): IPicture;\n\tresize(width: number, height: number): void;\n\trender(root: IDisplayObject): void;\n\tgetCanvas(root: IDisplayObject, options?: ICanvasOptions): HTMLCanvasElement;\n\tview: HTMLElement;\n\n\tgetEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint?: boolean): IRendererEvent<A>;\n}\n\nexport interface ICanvasOptions {\n\tmaintainPixelRatio?: boolean;\n\tminWidth?: number;\n\tmaxWidth?: number;\n\tminHeight?: number;\n\tmaxHeight?: number;\n}\n\nexport interface IMargin {\n\tleft: number;\n\tright: number;\n\ttop: number;\n\tbottom: number;\n}\n\n/**\n * @ignore\n */\nexport interface ILayer {\n\tvisible: boolean;\n\torder: number;\n\twidth: number | undefined;\n\theight: number | undefined;\n\tdirty: boolean;\n\tmargin: IMargin | undefined;\n}\n","import type { Entity, Animation } from \"./Entity\";\nimport { Percent } from \"./Percent\";\nimport { Color } from \"./Color\";\nimport type { Easing } from \"./Ease\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $object from \"./Object\";\n\nexport type Animations<T> = { [K in keyof T]?: Animation<T[K]> };\n\n/**\n * @ignore\n */\nexport async function waitForAnimations<T>(animations: Animations<T> | undefined): Promise<void> {\n\tif (animations !== undefined) {\n\t\tconst promises: Array<Promise<void>> = [];\n\n\t\t$object.each(animations, (_, animation) => {\n\t\t\tpromises.push(animation.waitForStop());\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n}\n\n\ninterface ITime {\n\treadonly tag: unique symbol;\n}\n\n/**\n * New type which allows for conversion from a number into a Time, but not from a Time to a number\n */\nexport type Time = number | ITime;\n\n\n/**\n * @ignore\n */\nexport function normalize(value: number, min: number, max: number): Time {\n\tif (min === max) {\n\t\treturn 0;\n\n\t} else {\n\t\treturn Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n\t}\n}\n\n/**\n * @ignore\n */\nexport function range(diff: Time, from: number, to: number): number {\n\treturn from + (diff as number * (to - from));\n}\n\n/**\n * @ignore\n */\nexport function defaultInterpolate<A, B>(diff: Time, from: A, to: B): A | B {\n\tif (diff >= 1) {\n\t\treturn to;\n\n\t} else {\n\t\treturn from;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function percentInterpolate(diff: Time, from: Percent, to: Percent): Percent {\n\treturn new Percent(range(diff, from.percent, to.percent));\n}\n\n/**\n * @ignore\n */\nexport function colorInterpolate(diff: Time, from: Color, to: Color): Color {\n\treturn Color.interpolate(diff, from, to);\n}\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: number, to: number): typeof range;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: Percent, to: Percent): typeof percentInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): typeof defaultInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): (diff: Time, from: any, to: any) => any {\n\tif (typeof from === \"number\" && typeof to === \"number\") {\n\t\treturn range;\n\t}\n\n\tif (from instanceof Percent && to instanceof Percent) {\n\t\treturn percentInterpolate;\n\t}\n\n\tif (from instanceof Color && to instanceof Color) {\n\t\treturn colorInterpolate;\n\t}\n\n\treturn defaultInterpolate;\n}\n\n\nexport interface IAnimation {\n\t// Returns true if the animation is still playing, or false if the animation isn't playing\n\t_runAnimation(_currentTime: number): boolean;\n}\n\n\n/**\n * @ignore\n */\nexport interface IEntityEvents {\n\tstarted: {};\n\tstopped: {};\n\t// TODO replace this with stopped\n\tended: {};\n\tprogress: { progress: number };\n}\n\n/**\n * @ignore\n */\nexport class AnimationTime implements IAnimation {\n\tprotected _entity: Entity;\n\tprotected _duration: number;\n\n\tprotected _playingDuration: number | null = null;\n\tprotected _startingTime: number | null = null;\n\tprotected _current: Time = 0;\n\tprotected _from: Time = 0;\n\tprotected _to: Time = 0;\n\n\tdeclare public _events: IEntityEvents;\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = new EventDispatcher();\n\n\tpublic easing: Easing | undefined;\n\n\tconstructor(entity: Entity, duration: number) {\n\t\tthis._entity = entity;\n\t\tthis._duration = duration;\n\t}\n\n\tprivate _stopEvent() {\n\t\tconst type = \"stopped\";\n\t\tif (this.events.isEnabled(type)) {\n\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t}\n\t}\n\n\tpublic _runAnimation(currentTime: number): boolean {\n\t\tif (this._playingDuration !== null) {\n\t\t\tif (this._startingTime === null) {\n\t\t\t\tthis._startingTime = currentTime;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst diff = (currentTime - this._startingTime) / this._playingDuration;\n\n\t\t\t\tif (diff >= 1) {\n\t\t\t\t\tthis._playingDuration = null;\n\t\t\t\t\tthis._startingTime = null;\n\t\t\t\t\tthis._from = this._to;\n\t\t\t\t\tthis._current = this._to;\n\t\t\t\t\tthis._entity.markDirty();\n\t\t\t\t\tthis._stopEvent();\n\t\t\t\t\tconst type = \"ended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._current = range(diff, this._from as number, this._to as number);\n\t\t\t\t\tthis._entity.markDirty();\n\n\t\t\t\t\tconst type = \"progress\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, progress: diff });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate _play() {\n\t\tthis._from = this._current;\n\n\t\tif (this._playingDuration === null) {\n\t\t\tthis._entity._root._addAnimation(this);\n\n\t\t\tconst type = \"started\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._startingTime = null;\n\t\t}\n\n\t\tthis._playingDuration = Math.abs((this._to as number) - (this._from as number)) * this._duration;\n\t}\n\n\tpublic get duration(): number {\n\t\treturn this._duration;\n\t}\n\n\tpublic set duration(value: number) {\n\t\tif (this._duration !== value) {\n\t\t\tthis._duration = value;\n\n\t\t\tif (value === 0) {\n\t\t\t\tthis.jumpTo(this._to);\n\n\t\t\t} else if (this._current !== this._to) {\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get current(): Time {\n\t\tif (this.easing) {\n\t\t\treturn this.easing(this._current);\n\n\t\t} else {\n\t\t\treturn this._current;\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tthis.jumpTo(this._current);\n\t}\n\n\tpublic jumpTo(value: Time) {\n\t\tif (this._current !== value) {\n\t\t\tthis._entity.markDirty();\n\t\t}\n\n\t\tif (this._playingDuration !== null) {\n\t\t\tthis._stopEvent();\n\t\t}\n\n\t\tthis._playingDuration = null;\n\t\tthis._startingTime = null;\n\t\tthis._current = value;\n\t\tthis._from = value;\n\t\tthis._to = value;\n\t}\n\n\tpublic tweenTo(value: Time) {\n\t\tif (this._current === value || this._duration === 0) {\n\t\t\tthis.jumpTo(value);\n\n\t\t} else {\n\t\t\tif (this._to !== value) {\n\t\t\t\tthis._to = value;\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/*export class AnimationValue extends AnimationTime {\n\tpublic _min: number;\n\tpublic _max: number;\n\n\tconstructor(entity: Entity, duration: number, min: number, max: number) {\n\t\tsuper(entity, duration);\n\t\tthis._min = min;\n\t\tthis._max = max;\n\t}\n\n\tpublic get min(): number {\n\t\treturn this._min;\n\t}\n\n\tpublic set min(value: number) {\n\t\tif (this._min !== value) {\n\t\t\tthis._min = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic get max(): number {\n\t\treturn this._max;\n\t}\n\n\tpublic set max(value: number) {\n\t\tif (this._max !== value) {\n\t\t\tthis._max = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic currentValue(): number {\n\t\treturn range(super.currentTime(), this._min, this._max);\n\t}\n\n\tpublic jumpToValue(value: number) {\n\t\tsuper.jumpToTime(normalize(value, this._min, this._max));\n\t}\n\n\tpublic tweenToValue(value: number) {\n\t\tsuper.tweenToTime(normalize(value, this._min, this._max));\n\t}\n}\n*/\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport type { Optional } from \"./Type\";\nimport * as $type from \"./Type\";\n\n\n/**\n * ============================================================================\n * UTILITY FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Searches `array` for `value`.\n *\n * Returns -1 if not found.\n *\n * @param array  Source array\n * @param value  Value to search\n * @returns Index\n */\nexport function indexOf<A>(array: ArrayLike<A>, value: A): number {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\t// TODO handle NaN\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Calls `test` for each element in `array`.\n *\n * If `test` returns `true` then it immediately returns `true`.\n *\n * If `test` returns `false` for all of the elements in `array` then it returns `false`.\n *\n * @param array  Source array\n * @param test   Function which is called on each element\n * @returns Whether `test` returned true or not\n */\nexport function any<A>(array: ArrayLike<A>, test: (value: A) => boolean): boolean {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tif (test(array[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * Calls `fn` function for every member of array and returns a new array out\n * of all outputs.\n *\n * @param array  Source array\n * @param fn     Callback function\n * @returns New array\n */\nexport function map<A, B>(array: ArrayLike<A>, fn: (value: A, index: number) => B): Array<B> {\n\tconst length = array.length;\n\tconst output = new Array(length);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\toutput[i] = fn(array[i], i);\n\t}\n\n\treturn output;\n}\n\n/**\n * Iterates through all items in array and calls `fn` function for each of\n * them.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function each<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tfn(array[i], i);\n\t}\n}\n\n/**\n * Iterates through all items in array in reverse order and calls `fn` function for each of\n * them.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function eachReverse<A>(array: ArrayLike<A>, fn: (value: A, index: number) => void): void {\n\tlet i = array.length;\n\n\twhile (i > 0) {\n\t\t--i;\n\t\tfn(array[i], i);\n\t}\n}\n\n/**\n * Iterates through all items in array and calls `fn` function for each of\n * them.\n *\n * If `fn` call evaluates to `false`, further iteration is cancelled.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function eachContinue<A>(array: ArrayLike<A>, fn: (value: A, index: number) => boolean): void {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tif (!fn(array[i], i)) {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n/**\n * Shifts an item at `index` towards beginning of the array.\n *\n * @param array  Source array\n * @param index  Target element index\n */\nexport function shiftLeft<A>(array: Array<A>, index: number): void {\n\tconst length = array.length;\n\n\tfor (let i = index; i < length; ++i) {\n\t\tarray[i - index] = array[i];\n\t}\n\n\tarray.length = length - index;\n}\n\n/**\n * Returns the last item of the array.\n *\n * @param array  Source array\n * @returns Last item\n */\nexport function last<A>(array: Array<A>): Optional<A> {\n\tconst length = array.length;\n\treturn length ? array[length - 1] : undefined;\n}\n\n/**\n * Returns the first item of the array.\n *\n * @param array  Source array\n * @returns Last item\n */\nexport function first<A>(array: Array<A>): Optional<A> {\n\treturn array[0];\n}\n\n/**\n * Inserts `element` into `array` at `index`.\n *\n * Caps `index` to be between `0` and `array.length`\n *\n * @param array    Source array\n * @param element  Item to insert\n * @param array    Index to insert item at\n */\nexport function insert<A>(array: Array<A>, element: A, index: number): void {\n\t//if (array) {\n\tindex = Math.max(0, Math.min(index, array.length));\n\tarray.splice(index, 0, element);\n\t//}\n}\n\n/**\n * Removes all copies of `element` from `array` (if they exist) and then\n * inserts `element` at `index`.\n *\n * @param array    Source array\n * @param element  Item\n * @param array    Index to move item to\n */\nexport function setIndex<A>(array: Array<A>, element: A, index: number): void {\n\tremove(array, element);\n\tinsert(array, element, index);\n}\n\n\n/**\n * Pushes all of the elements from `input` into `array`.\n *\n * @param array  Output array\n * @param input  Input array\n */\nexport function pushAll<A>(array: Array<A>, input: Array<A>) {\n\tconst length = input.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tarray.push(input[i]);\n\t}\n}\n\n\n/**\n * Removes `element` from `array`.\n *\n * If there are multiple copies of `element`, they are all removed.\n *\n * @param array    Source array\n * @param element  Item to remove\n */\nexport function remove<A>(array: Array<A>, element: A): boolean {\n\tlet found: boolean = false;\n\tlet index: number = 0;\n\n\tfor (;;) {\n\t\tindex = array.indexOf(element, index);\n\n\t\tif (index === -1) {\n\t\t\treturn found;\n\n\t\t} else {\n\t\t\tfound = true;\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t}\n}\n\nexport function removeFirst<A>(array: Array<A>, element: A): boolean {\n\tlet index: number = array.indexOf(element);\n\n\tif (index !== -1) {\n\t\tarray.splice(index, 1);\n\t\treturn true;\n\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/**\n * Adds an `element` to `array`.\n *\n * If array already contains and item like this, it is removed before adding\n * it again.\n *\n * Optionally `toIndex` can be specified to add element at specific index.\n *\n * @param array    Source array\n * @param element  Item to add\n * @param array    Index to move item to\n */\nexport function move<A>(array: Array<A>, element: A, toIndex?: number): void {\n\t// @todo this implementation must be the same as the List.moveValue method\n\t// @todo don't do anything if the desired index is the same as the current index\n\tlet index = indexOf(array, element);\n\n\t// @todo remove all old values rather than only the first ?\n\tif (index !== -1) {\n\t\tremoveIndex(array, index);\n\t}\n\n\tif (toIndex == null) {\n\t\tarray.push(element);\n\t} else {\n\t\tinsertIndex(array, toIndex, element);\n\t}\n}\n\n\n/**\n * Inserts `element` into `array` at `index`.\n *\n * If `index` is not provided, it will insert `element` at the end of `array`.\n *\n * @param array    Source array\n * @param element  Item to add\n * @param array    Index to add item at\n */\nexport function add<A>(array: Array<A>, element: A, index?: number): void {\n\t// Append to the end if index is not set\n\tif (!$type.isNumber(index)) {\n\t\tarray.push(element);\n\t}\n\n\t// Add to the beginning of array if index is 0\n\telse if (index === 0) {\n\t\tarray.unshift(element);\n\t}\n\t// Add to indicated place if index is set\n\telse {\n\t\tarray.splice(index, 0, element);\n\t}\n}\n\n\n/**\n * Pushes `element` into `array` if it doesn't already exist.\n *\n * @param array    Source array\n * @param element  Item to add\n */\nexport function pushOne<A>(array: Array<A>, element: A): void {\n\tif (array.indexOf(element) === -1) {\n\t\tarray.push(element);\n\t}\n}\n\n\n/**\n * Removes `element` from `array` (if it exists) and then inserts `element` at\n * `index`.\n *\n * If `index` is not provided, it will insert `element` at the end of `array`.\n *\n * @param array    Source array\n * @param element  Item to remove\n * @param array    Index to move item to\n */\nexport function replace<A>(array: Array<A>, element: A, index?: number): void {\n\t// check if exists\n\tlet ind: number = array.indexOf(element);\n\n\t// remove if exists\n\tif (ind !== -1) {\n\t\tarray.splice(ind, 1);\n\t}\n\n\t// add to end if index is not set\n\tif (!$type.isNumber(index)) {\n\t\tarray.push(element);\n\t}\n\t// add to indicated place if index is set\n\telse {\n\t\tarray.splice(index, 0, element);\n\t}\n}\n\n/**\n * Wraps `input` in an array, if it isn't already an array.\n *\n * @param input  Source value\n * @return An array\n */\nexport function toArray<A>(input: Array<A> | A): Array<A> {\n\tif (Array.isArray(input)) {\n\t\treturn input;\n\t}\n\telse {\n\t\treturn [input];\n\t}\n}\n\n/**\n * Returns `true` if `element` exists in `array`.\n *\n * @param array    Source array\n * @param element  Item to search for\n * @returns Item in array?\n */\nexport function has<A>(array: ArrayLike<A>, element: A): boolean {\n\treturn indexOf(array, element) !== -1;\n}\n\n/**\n * Returns a shallow copy of `array`.\n *\n * @param array  Source array\n * @returns Copy of the array\n */\nexport function copy<A>(array: ArrayLike<A>): Array<A> {\n\tconst length = array.length;\n\n\t// It's faster to create the array with a pre-defined length\n\tconst output = new Array(length);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\t// Because the array has a pre-defined length, we have to assign rather than push\n\t\t// This is also faster than pushing\n\t\toutput[i] = array[i];\n\t}\n\n\treturn output;\n}\n\n\n/**\n * Returns a copy of `array` which contains all the elements between `start`\n * and `end`. (including `start` and excluding `end`)\n *\n * If `end` is not provided, it defaults to `array.length`.\n *\n * @param array  Source array\n * @param start  Start index\n * @param end    End index\n * @returns Part of the array\n */\nexport function slice<A>(array: ArrayLike<A>, start: number, end: number = array.length): Array<A> {\n\tconst output = new Array(end - start);\n\n\tfor (let i = start; i < end; ++i) {\n\t\toutput[i - start] = array[i];\n\t}\n\n\treturn output;\n}\n\n/**\n * Inserts a value into array at specific index.\n *\n * @param array  Source array\n * @param index  Index\n * @param value  Value to insert\n */\nexport function insertIndex<A>(array: Array<A>, index: number, value: A): void {\n\tarray.splice(index, 0, value);\n}\n\n/**\n * Removes a value from array at specific index.\n *\n * @param array  Source array\n * @param index  Index\n */\nexport function removeIndex<A>(array: Array<A>, index: number): void {\n\tarray.splice(index, 1);\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface SortResult {\n\tfound: boolean;\n\tindex: number\n}\n\n/**\n * Searches the array using custom function and returns index of the item if\n * found.\n *\n * Will call `matches` function on all items of the array. If return value\n * evaluates to `true`, index is returned.\n *\n * Otherwise returns -1.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Index of the item if found\n */\nexport function findIndex<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): number {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tif (matches(array[i], i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * This is the same as `findIndex` except it searches from right to left.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Index of the item if found\n */\nexport function findIndexReverse<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): number {\n\tlet i = array.length;\n\n\twhile (i > 0) {\n\t\t--i;\n\t\tif (matches(array[i], i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Searches the array using custom function and returns item if found.\n *\n * Will call `matches` function on all items of the array. If return value\n * evaluates to `true`, index is returned.\n *\n * Otherwise returns `undefined`.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Item if found\n */\nexport function find<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): A | undefined {\n\tconst index = findIndex(array, matches);\n\n\tif (index !== -1) {\n\t\treturn array[index];\n\t}\n}\n\n/**\n * This is the same as `find` except it searches from right to left.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Item if found\n */\nexport function findReverse<A>(array: ArrayLike<A>, matches: (value: A, index: number) => boolean): A | undefined {\n\tconst index = findIndexReverse(array, matches);\n\n\tif (index !== -1) {\n\t\treturn array[index];\n\t}\n}\n\n/**\n * Searches the array using custom function and returns item if found.\n *\n * Will call `matches` function on all items of the array. If value\n * is not `undefined`, it returns it.\n *\n * Otherwise returns `undefined`.\n *\n * @param array    Source array\n * @param matches  Search function\n * @returns Item if found\n */\nexport function findMap<A, B>(array: ArrayLike<A>, matches: (value: A, index: number) => B | undefined): B | undefined {\n\tconst length = array.length;\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst value = matches(array[i], i);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * Iterates through all items in array and calls `fn` function for each of\n * them.\n *\n * @param array  Source array\n * @param fn     Callback function\n */\nexport function shuffle<A>(array: Array<A>) {\n\t// https://stackoverflow.com/a/2450976/449477\n\tlet currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n}\n\n\nexport type Ordering = -1 | 0 | 1;\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport interface SortResult {\n\tfound: boolean;\n\tindex: number\n}\n\n/**\n * Orders an array using specific `ordering` function and returns right-most index of\n * the `value`.\n *\n * @ignore Exclude from docs\n * @param array     Source array\n * @param ordering  An ordering function\n * @returns Result of the search\n */\nexport function getSortedIndex<A>(array: ArrayLike<A>, ordering: (left: A) => Ordering): SortResult {\n\tlet start = 0;\n\tlet end   = array.length;\n\tlet found = false;\n\n\twhile (start < end) {\n\t\t// TODO is this faster/slower than using Math.floor ?\n\t\tconst pivot = (start + end) >> 1;\n\n\t\tconst order = ordering(array[pivot]);\n\n\t\t// less\n\t\tif (order < 0) {\n\t\t\tstart = pivot + 1;\n\n\t\t// equal\n\t\t} else if (order === 0) {\n\t\t\tfound = true;\n\t\t\tstart = pivot + 1;\n\n\t\t// more\n\t\t} else {\n\t\t\tend = pivot;\n\t\t}\n\t}\n\n\treturn {\n\t\tfound: found,\n\t\tindex: (found ? start - 1 : start)\n\t};\n}\n\n\n/**\n * Orders an array using specific `ordering` function and returns left-most index of\n * the `value`.\n *\n * @ignore Exclude from docs\n * @param array     Source array\n * @param ordering  An ordering function\n * @returns Result of the search\n */\nexport function getFirstSortedIndex<A>(array: ArrayLike<A>, ordering: (left: A) => Ordering): SortResult {\n\tlet start = 0;\n\tlet end   = array.length;\n\tlet found = false;\n\n\twhile (start < end) {\n\t\t// TODO is this faster/slower than using Math.floor ?\n\t\tconst pivot = (start + end) >> 1;\n\n\t\tconst order = ordering(array[pivot]);\n\n\t\t// less\n\t\tif (order < 0) {\n\t\t\tstart = pivot + 1;\n\n\t\t// equal\n\t\t} else if (order === 0) {\n\t\t\tfound = true;\n\t\t\tend = pivot;\n\n\t\t// more\n\t\t} else {\n\t\t\tend = pivot;\n\t\t}\n\t}\n\n\treturn {\n\t\tfound: found,\n\t\tindex: start\n\t};\n}\n\n\nexport function keepIf<A>(array: Array<A>, keep: (value: A) => boolean): void {\n\tlet i = array.length;\n\n\twhile (i > 0) {\n\t\t--i;\n\n\t\tif (!keep(array[i])) {\n\t\t\tarray.splice(i, 1);\n\t\t}\n\t}\n}\n","import { range, Time } from \"./Animation\";\nimport * as $utils from \"./Utils\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nfunction string2hex(string: string): number {\n\t//string = cssColorNames[string.toLowerCase()] || string;\n\n\tif (string[0] === \"#\") {\n\t\tstring = string.substr(1);\n\t}\n\tif (string.length == 3) {\n\t\tstring = string[0].repeat(2) + string[1].repeat(2) + string[2].repeat(2);\n\t}\n\n\treturn parseInt(string, 16);\n}\n\n/**\n * @ignore\n */\nexport function rgba2hex(color: string): number {\n\tcolor = color.replace(/[ ]/g, \"\");\n\n\t// Init\n\tlet matches: string[] | null = color.match(/^rgb\\(([0-9]*),([0-9]*),([0-9]*)\\)/i);\n\n\t// Try rgb() format\n\tif (matches) {\n\t\tmatches.push(\"1\");\n\n\t} else {\n\t\tmatches = color.match(/^rgba\\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\\)/i);\n\n\t\tif (!matches) {\n\t\t\treturn 0x000000;\n\t\t}\n\t}\n\n\tlet hex = \"\";\n\tfor (let i = 1; i <= 3; i++) {\n\t\tlet val = parseInt(matches[i]).toString(16);\n\t\tif (val.length == 1) {\n\t\t\tval = \"0\" + val;\n\t\t}\n\t\thex += val;\n\t}\n\n\treturn string2hex(hex);\n\n}\n\n/**\n * Returns a new [[Color]] object base on input.\n *\n * Accepts parameters in CSS hex or rgb/rtba strings, or hex numbers.\n *\n * * `\"#f00\"`\n * * `\"#ff0000\"`\n * * `\"rgb(255, 0, 0)\"`\n * * `\"rgba(255, 0, 0, 1)\"`\n * * `0xff0000`\n * \n * @param   input  Input color\n * @return         Color\n */\nexport function color(input: number | string): Color {\n\treturn Color.fromAny(input);\n}\n\n/**\n * Wherever color needs to be specified in amCharts 5, `Color` object needs to\n * be used.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/} for more info\n * @important\n */\nexport class Color {\n\tprotected _hex: number;\n\n\tprivate constructor(hex: number) {\n\t\tthis._hex = hex | 0;\n\t}\n\n\t/**\n\t * Color numeric value.\n\t */\n\tpublic get hex(): number {\n\t\treturn this._hex;\n\t}\n\n\t/**\n\t * Value of color's R channel.\n\t * @return R value\n\t */\n\tpublic get r(): number {\n\t\treturn this._hex >>> 16;\n\t}\n\n\t/**\n\t * Value of color's G channel.\n\t * @return G value\n\t */\n\tpublic get g(): number {\n\t\treturn (this._hex >> 8) & 0xFF;\n\t}\n\n\t/**\n\t * Value of color's B channel.\n\t * @return B value\n\t */\n\tpublic get b(): number {\n\t\treturn this._hex & 0xFF;\n\t}\n\n\t/**\n\t * Returns color CSS representation in form of `rgba(r, g, b, a)` string.\n\t * \n\t * @param   alpha  Opacity\n\t * @return         CSS string\n\t */\n\tpublic toCSS(alpha: number = 1): string {\n\t\treturn \"rgba(\" + this.r + \", \" + this.g + \", \" + this.b + \", \" + alpha + \")\";\n\t}\n\n\t/**\n\t * Returns color CSS representation in form of `#rgb` string.\n\t * \n\t * @return         CSS string\n\t */\n\tpublic toCSSHex(): string {\n\t\treturn \"#\" + $utils.padString(this.r.toString(16), 2) + $utils.padString(this.g.toString(16), 2) + $utils.padString(this.b.toString(16), 2);\n\t}\n\n\t/**\n\t * Returns color's HSL info.\n\t * @param   alpha Opacity\n\t * @return        HSL info\n\t */\n\tpublic toHSL(alpha: number = 1): $utils.iHSL {\n\t\treturn $utils.rgbToHsl({\n\t\t\tr: this.r,\n\t\t\tg: this.g,\n\t\t\tb: this.b,\n\t\t\ta: alpha\n\t\t})\n\t}\n\n\t/**\n\t * Converts HSL values into a new [[Color]] object.\n\t *\n\t * @param   h H value\n\t * @param   s S value\n\t * @param   l L value\n\t * @return    Color object\n\t */\n\tpublic static fromHSL(h: number, s: number, l: number): Color {\n\t\tconst rgb = $utils.hslToRgb({\n\t\t\th: h,\n\t\t\ts: s,\n\t\t\tl: l\n\t\t});\n\t\treturn this.fromRGB(rgb.r, rgb.g, rgb.b);\n\t}\n\n\tpublic toString(): string {\n\t\treturn this.toCSSHex();\n\t}\n\n\t/**\n\t * Converts hex number into a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromHex(0xff0000) // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromHex(0xff0000) // red\n\t * ```\n\t *\n\t * @param   hex  Hex color\n\t * @return       Color\n\t */\n\tpublic static fromHex(hex: number): Color {\n\t\treturn new Color(hex);\n\t}\n\n\t/**\n\t * Converts RGB values to a new [[Color]] object.\n\t *\n\t * @param   r  R value\n\t * @param   g  G value\n\t * @param   b  B value\n\t * @return     Color\n\t */\n\tpublic static fromRGB(r: number, g: number, b: number): Color {\n\t\treturn new Color((b | 0) + (g << 8) + (r << 16));\n\t}\n\n\t/**\n\t * Converts RGB string to a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromString(\"#ff0000\") // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromString(\"#ff0000\") // red\n\t * ```\n\t *\n\t * @param   s  RGB string\n\t * @return     Color\n\t */\n\tpublic static fromString(s: string): Color {\n\t\treturn new Color(string2hex(s));\n\t}\n\n\t/**\n\t * Converts CSS rgba() syntax to a new [[Color]] object.\n\t *\n\t * ```TypeScript\n\t * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\n\t * ```\n\t * ```JavaScript\n\t * Color.fromCSS(\"rgba(255, 0, 0, 1)\") // red\n\t * ```\n\t *\n\t * @param  {string} s [description]\n\t * @return {Color}    [description]\n\t */\n\tpublic static fromCSS(s: string): Color {\n\t\treturn new Color(rgba2hex(s));\n\t}\n\n\t/**\n\t * Convert to color from virtually anything.\n\t *\n\t * Will throw an exception if unable to resolve the color.\n\t *\n\t * @param   s  Source\n\t * @return     Color\n\t */\n\tpublic static fromAny(s: string | number | Color): Color {\n\t\tif ($type.isString(s)) {\n\t\t\tif (s[0] == \"#\") {\n\t\t\t\treturn Color.fromString(s);\n\t\t\t}\n\t\t\telse if (s.substr(0, 3) == \"rgb\") {\n\t\t\t\treturn Color.fromCSS(s);\n\t\t\t}\n\t\t}\n\t\telse if ($type.isNumber(s)) {\n\t\t\treturn Color.fromHex(s);\n\t\t}\n\t\telse if (s instanceof Color) {\n\t\t\treturn Color.fromHex(s.hex);\n\t\t}\n\n\t\tthrow new Error(\"Unknown color syntax: \" + s);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] object based on either `lightAlternative` or\n\t * `darkAlternative` depending on which one is more contrasting with\n\t * the `color`.\n\t *\n\t * @param   color             Reference color\n\t * @param   lightAlternative  Light color\n\t * @param   darkAlternative   Dark color\n\t * @return                    Alternative color\n\t */\n\tpublic static alternative(color: Color, lightAlternative?: Color, darkAlternative?: Color): Color {\n\t\tconst rgb = $utils.alternativeColor(\n\t\t\t{ r: color.r, g: color.g, b: color.b },\n\t\t\tlightAlternative ? { r: lightAlternative.r, g: lightAlternative.g, b: lightAlternative.b } : undefined,\n\t\t\tdarkAlternative ? { r: darkAlternative.r, g: darkAlternative.g, b: darkAlternative.b } : undefined\n\t\t);\n\t\treturn this.fromRGB(rgb.r, rgb.g, rgb.b);\n\t}\n\n\t/**\n\t * Returns an intermediate Color between two reference colors depending on\n\t * the progress (`diff`) between the two.\n\t *\n\t * @param   diff  Progress\n\t * @param   from  Source color\n\t * @param   to    Target color\n\t * @param   mode  Interpolation mode\n\t * @return        Color\n\t */\n\tpublic static interpolate(diff: Time, from: Color, to: Color, mode: \"rgb\" | \"hsl\" = \"rgb\"): Color {\n\t\tif (mode == \"hsl\") {\n\t\t\tconst fromHSL = from.toHSL();\n\t\t\tconst toHSL = to.toHSL();\n\t\t\treturn Color.fromHSL(\n\t\t\t\trange(diff, fromHSL.h, toHSL.h),\n\t\t\t\trange(diff, fromHSL.s, toHSL.s),\n\t\t\t\trange(diff, fromHSL.l, toHSL.l)\n\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn Color.fromRGB(\n\t\t\t\trange(diff, from.r, to.r),\n\t\t\t\trange(diff, from.g, to.g),\n\t\t\t\trange(diff, from.b, to.b)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Returns a new [[Color]] lightened by `percent` value.\n\t *\n\t * Use negative value to darken the color.\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static lighten(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.lighten({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] brightened by `percent` value.\n\t *\n\t * Use negative value to dim the color.\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static brighten(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.brighten({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n\n\t/**\n\t * Returns a new [[Color]] saturated by `percent` value.\n\t *\n\t * Value range is between `0` (fully desaturated), to `1` (full color).\n\t *\n\t * @param   color    Source color\n\t * @param   percent  Percent\n\t * @return           New color\n\t */\n\tpublic static saturate(color: Color, percent: number): Color {\n\t\tconst rgb = $utils.saturate({ r: color.r, g: color.g, b: color.b }, percent);\n\t\treturn Color.fromRGB(rgb!.r, rgb!.g, rgb!.b);\n\t}\n}\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $array from \"./Array\";\nimport type { Optional } from \"./Type\";\n\n/**\n * Defines interface for disposable objects.\n *\n * @ignore Exclude from docs\n */\nexport interface IDisposer {\n\tisDisposed(): boolean;\n\tdispose(): void;\n}\n\n/**\n * A base class for disposable objects.\n *\n * @ignore Exclude from docs\n */\nexport abstract class DisposerClass implements IDisposer {\n\n\t/**\n\t * Is object disposed?\n\t */\n\tprivate _disposed: boolean;\n\n\t/**\n\t * Constructor.\n\t */\n\tconstructor() {\n\t\tthis._disposed = false;\n\t}\n\n\t/**\n\t * Checks if object is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\tprotected abstract _dispose(): void;\n\n\t/**\n\t * Disposes the object.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * A class for creating an IDisposer.\n *\n * @ignore Exclude from docs\n */\nexport class Disposer implements IDisposer {\n\n\t/**\n\t * Is object disposed?\n\t */\n\tprivate _disposed: boolean;\n\n\t/**\n\t * Method that disposes the object.\n\t */\n\tprivate _dispose: () => void;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param dispose  Function that disposes object\n\t */\n\tconstructor(dispose: () => void) {\n\t\tthis._disposed = false;\n\t\tthis._dispose = dispose;\n\t}\n\n\t/**\n\t * Checks if object is disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes the object.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * This can be extended by other classes to add a `_disposers` property.\n *\n * @ignore Exclude from docs\n */\nexport class ArrayDisposer extends DisposerClass {\n\tprotected _disposers: Array<IDisposer> = [];\n\n\tprotected _dispose(): void {\n\t\t$array.each(this._disposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\t}\n}\n\n/**\n * A collection of related disposers that can be disposed in one go.\n *\n * @ignore Exclude from docs\n */\nexport class MultiDisposer extends DisposerClass {\n\tprotected _disposers: Array<IDisposer>;\n\n\tconstructor(disposers: Array<IDisposer>) {\n\t\tsuper();\n\t\tthis._disposers = disposers;\n\t}\n\n\tprotected _dispose(): void {\n\t\t$array.each(this._disposers, (x) => {\n\t\t\tx.dispose();\n\t\t});\n\t}\n}\n\n/**\n * A special kind of Disposer that has attached value set.\n *\n * If a new value is set using `set()` method, the old disposer value is\n * disposed.\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class MutableValueDisposer<T extends IDisposer> extends DisposerClass {\n\n\t/**\n\t * Current disposer.\n\t */\n\tprivate _disposer: Optional<IDisposer>;\n\n\t/**\n\t * Current value.\n\t */\n\tprivate _value: Optional<T>;\n\n\tprotected _dispose(): void {\n\t\tif (this._disposer != null) {\n\t\t\tthis._disposer.dispose();\n\t\t\tthis._disposer = undefined;\n\t\t}\n\t}\n\n\t/**\n\t * Returns current value.\n\t *\n\t * @return Value\n\t */\n\tpublic get(): Optional<T> {\n\t\treturn this._value;\n\t}\n\n\t/**\n\t * Sets value and disposes previous disposer if it was set.\n\t *\n\t * @param value     New value\n\t * @param disposer  Disposer\n\t */\n\tpublic set(value: Optional<T>, disposer: Optional<IDisposer>): void {\n\t\tif (this._disposer != null) {\n\t\t\tthis._disposer.dispose();\n\t\t}\n\n\t\tthis._disposer = disposer;\n\t\tthis._value = value;\n\t}\n\n\t/**\n\t * Resets the disposer value.\n\t */\n\tpublic reset(): void {\n\t\tthis.set(undefined, undefined);\n\t}\n\n}\n\n/**\n * @ignore Exclude from docs\n * @todo Description\n */\nexport class CounterDisposer extends Disposer {\n\n\t/**\n\t * [_counter description]\n\t *\n\t * @todo Description\n\t */\n\tprivate _counter: number = 0;\n\n\t/**\n\t * [increment description]\n\t *\n\t * @todo Description\n\t */\n\tpublic increment() {\n\t\t// TODO throw an error if it is disposed\n\t\t++this._counter;\n\n\t\t// TODO make this more efficient\n\t\treturn new Disposer(() => {\n\t\t\t--this._counter;\n\n\t\t\tif (this._counter === 0) {\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n}\n","/**\n * A collection of easing functions\n *\n * Parts of this collection are taken from D3.js library (https://d3js.org/)\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport * as $math from \"./Math\";\nimport type { Time } from \"./Animation\";\n\nexport type Easing = (time: Time) => Time;\n\n/**\n * The functions below are from D3.js library (https://d3js.org/)\n *\n * ----------------------------------------------------------------------------\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *\tthis list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *\tthis list of conditions and the following disclaimer in the documentation\n *\tand/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *\tcontributors may be used to endorse or promote products derived from this\n *\tsoftware without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ----------------------------------------------------------------------------\n * @hidden\n */\n\n/**\n */\nexport function linear(t: Time): Time {\n\treturn t;\n}\n\nexport function quad(t: Time): Time {\n\treturn (t as number) * (t as number);\n}\n\nexport function cubic(t: Time): Time {\n\treturn (t as number) * (t as number) * (t as number);\n}\n\nexport function pow(t: Time, e: number): Time {\n\treturn Math.pow(t as number, e);\n}\n\nexport function exp(t: Time): Time {\n\treturn Math.pow(2, 10 * (t as number) - 10);\n}\n\nexport function sine(t: Time): Time {\n\treturn 1 - Math.cos((t as number) * $math.HALFPI);\n}\n\nexport function circle(t: Time): Time {\n\treturn 1 - Math.sqrt(1 - (t as number) * (t as number));\n}\n\n/**\n * ============================================================================\n * TRANSFORMERS\n * ============================================================================\n * @hidden\n */\n\n/**\n */\nexport function yoyo(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\tif ((t as number) < 0.5) {\n\t\t\treturn ease((t as number) * 2.0);\n\n\t\t} else {\n\t\t\treturn ease((1.0 - (t as number)) * 2.0);\n\t\t}\n\t};\n}\n\nexport function out(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\treturn 1.0 - (ease(1.0 - (t as number)) as number);\n\t};\n}\n\nexport function inOut(ease: Easing): Easing {\n\treturn function (t: Time) {\n\t\tif (t as number <= 0.5) {\n\t\t\treturn ease(t as number * 2.0) as number / 2.0;\n\n\t\t} else {\n\t\t\treturn 1.0 - (ease((1.0 - (t as number)) * 2.0) as number / 2.0);\n\t\t}\n\t};\n}\n\n/**\n * ============================================================================\n * BOUNCE\n * ============================================================================\n * @hidden\n */\nlet b1 = 4 / 11,\n\tb2 = 6 / 11,\n\tb3 = 8 / 11,\n\tb4 = 3 / 4,\n\tb5 = 9 / 11,\n\tb6 = 10 / 11,\n\tb7 = 15 / 16,\n\tb8 = 21 / 22,\n\tb9 = 63 / 64,\n\tb0 = 1 / b1 / b1;\n\nexport function bounce(t: Time): Time {\n\treturn 1 - (bounceOut(1 - (t as number)) as number);\n}\n\n/**\n * @ignore\n */\nfunction bounceOut(t: Time): Time {\n\tt = t as number;\n\tif (t < b1) {\n\t\treturn b0 * t * t;\n\t} else if (t < b3) {\n\t\treturn b0 * (t -= b2) * t + b4;\n\t} else if (t < b6) {\n\t\treturn b0 * (t -= b5) * t + b7;\n\t} else {\n\t\treturn b0 * (t -= b8) * t + b9;\n\t}\n}\n\n/**\n * ============================================================================\n * ELASTIC\n * ============================================================================\n * @hidden\n */\n\n/**\n * @ignore\n */\nlet tau = 2 * Math.PI;\n\n/**\n * @ignore\n */\nlet amplitude = 1;\n\n/**\n * @ignore\n */\nlet period = 0.3 / tau;\n\n/**\n * @ignore\n */\nlet s = Math.asin(1 / amplitude) * period;\n\nexport function elastic(t: Time): Time {\n\tlet v = t as number;\n\treturn amplitude * Math.pow(2, 10 * --v) * Math.sin((s - v) / period);\n}\n","import type { Entity, Dirty } from \"./Entity\";\nimport type { Animations } from \"./Animation\";\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\n\n/**\n * An object representing a collection of setting values to apply as required.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\n */\nexport class State<E extends Entity> {\n\tprivate _entity: E;\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _userSettings: Dirty<E[\"_settings\"]> = {};\n\n\tconstructor(entity: E, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._entity = entity;\n\t\tthis._settings = settings;\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` to be set when the state\n\t * is applied.\n\t *\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._userSettings[key] = true;\n\t\tthis.setRaw(key, value);\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userSettings[key];\n\t\tdelete this._settings[key];\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis.set(key, settings[key]);\n\t\t});\n\t}\n\n\tprivate _eachSetting<Key extends keyof E[\"_settings\"], Value extends E[\"_settings\"][Key]>(f: (key: Key, value: Value) => void): void {\n\t\t$object.each(this._settings, f as any);\n\t}\n\n\t/**\n\t * Applies the state to the target element.\n\t *\n\t * All setting values are set immediately.\n\t */\n\tpublic apply() {\n\t\tconst seen: Dirty<E[\"_settings\"]> = {};\n\n\t\tseen[\"stateAnimationEasing\"] = true;\n\t\tseen[\"stateAnimationDuration\"] = true;\n\n\t\tconst defaultState = this._entity.states.lookup(\"default\")!;\n\n\t\tthis._eachSetting((key, value) => {\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\t// save values to default state\n\t\t\t\tif (this !== defaultState) {\n\t\t\t\t\tif (!(key in defaultState._settings)) {\n\t\t\t\t\t\tdefaultState._settings[key] = this._entity.get(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._entity.set(key, value);\n\t\t\t}\n\t\t});\n\t}\n\n\n\n\t/**\n\t * Applies the state to the target element.\n\t *\n\t * Returns an object representing all [[Animation]] objects created for\n\t * each setting key transition.\n\t *\n\t * @return           Animations\n\t */\n\tpublic applyAnimate(duration?: number): Animations<E[\"_settings\"]> {\n\n\t\tif (duration == null) {\n\t\t\tduration = this._settings.stateAnimationDuration;\n\t\t}\n\t\tif (duration == null) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", this._entity.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tlet easing = this._settings.stateAnimationEasing;\n\t\tif (easing == null) {\n\t\t\teasing = this.get(\"stateAnimationEasing\", this._entity.get(\"stateAnimationEasing\", $ease.cubic));\n\t\t}\n\n\t\tconst defaultState = this._entity.states.lookup(\"default\")!;\n\n\t\tconst seen: Dirty<E[\"_settings\"]> = {};\n\n\t\tseen[\"stateAnimationEasing\"] = true;\n\t\tseen[\"stateAnimationDuration\"] = true;\n\n\t\tconst animations: Animations<E[\"_settings\"]> = {};\n\n\t\tthis._eachSetting((key, value) => {\n\t\t\tif (!seen[key]) {\n\t\t\t\tseen[key] = true;\n\n\t\t\t\t// save values to default state\n\t\t\t\tif (this != defaultState) {\n\t\t\t\t\tif (!(key in defaultState._settings)) {\n\t\t\t\t\t\tdefaultState._settings[key] = this._entity.get(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst animation = this._entity.animate({\n\t\t\t\t\tkey: key,\n\t\t\t\t\tto: value,\n\t\t\t\t\tduration: duration!,\n\t\t\t\t\teasing: easing\n\t\t\t\t});\n\n\t\t\t\tif (animation) {\n\t\t\t\t\tanimations[key] = animation;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn animations;\n\t}\n}\n\n/**\n * Collection of [[State]] objects for an element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/states/} for more info\n */\nexport class States<E extends Entity> {\n\tprivate _states: { [key: string]: State<E> } = {};\n\tprivate _entity: E;\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Checks if a state by `name` exists. Returns it there is one.\n\t *\n\t * @param  name  State name\n\t * @return       State\n\t */\n\tpublic lookup(name: string): State<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\t/**\n\t * Sets supplied `settings` on a state by the `name`.\n\t *\n\t * If such state does not yet exists, it is created.\n\t *\n\t * @param   name      State name\n\t * @param   settings  Settings\n\t * @return            New State\n\t */\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): State<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new State(this._entity, settings);\n\t\t\tthis._states[name] = state;\n\t\t\treturn state;\n\t\t}\n\t}\n\n\t/**\n\t * Removes the state called `name`.\n\t *\n\t * @param   name      State name\n\t */\n\tpublic remove(name: string): void {\n\t\tdelete this._states[name];\n\t}\n\n\t/**\n\t * Applies a named state to the target element.\n\t *\n\t * @param  newState  State name\n\t */\n\tpublic apply(newState: string) {\n\t\tconst state = this._states[newState];\n\n\t\tif (state) {\n\t\t\tstate.apply();\n\t\t}\n\n\t\tthis._entity._applyState(newState);\n\t}\n\n\t/**\n\t * Applies a named state to the element.\n\t *\n\t * Returns an object representing all [[Animation]] objects created for\n\t * each setting key transition.\n\t *\n\t * @param   newState  State name\n\t * @return            Animations\n\t */\n\tpublic applyAnimate(newState: string, duration?: number): Animations<E[\"_settings\"]> | undefined {\n\t\tlet animations;\n\t\tconst state = this._states[newState];\n\n\t\tif (state) {\n\t\t\tanimations = state.applyAnimate(duration);\n\t\t}\n\n\t\tthis._entity._applyStateAnimated(newState, duration);\n\t\treturn animations;\n\t}\n}\n","import type { Root } from \"../Root\";\nimport type { Template, ApplyState } from \"./Template\";\nimport type { Theme, IRule } from \"../Theme\";\nimport type { ILocale } from \"./Language\";\n\nimport { IDisposer, Disposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { Time, IAnimation, getInterpolate } from \"./Animation\";\nimport { States } from \"./States\";\nimport { registry } from \"../Registry\";\n\nimport * as $object from \"./Object\";\nimport * as $ease from \"./Ease\";\nimport * as $array from \"./Array\";\nimport * as $order from \"./Order\";\n\n/**\n * @ignore\n */\nexport type Dirty<A> = { [K in keyof A]?: boolean };\n\n\n/**\n * Allows to dynamically modify setting value of its target element.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n */\nexport class Adapters<E extends Settings> {\n\tprivate _entity: E;\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\tprivate _disabled: { [K in keyof E[\"_settings\"]]?: boolean } = {};\n\n\tconstructor(entity: E) {\n\t\tthis._entity = entity;\n\t}\n\n\t/**\n\t * Add a function (`callback`) that will modify value for setting `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/adapters/} for more info\n\t */\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\tthis._entity._markDirtyKey(key);\n\n\t\treturn new Disposer(() => {\n\t\t\tif ($array.removeFirst(callbacks!, callback)) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Removes all adapters for the specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\n\t\t\tif (callbacks.length !== 0) {\n\t\t\t\tthis._entity._markDirtyKey(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Enables (previously disabled) adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic enable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (this._disabled[key]) {\n\t\t\tdelete this._disabled[key];\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * Disables all adapters for specific key.\n\t *\n\t * @since 5.1.0\n\t */\n\tpublic disable<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tif (!this._disabled[key]) {\n\t\t\tthis._disabled[key] = true;\n\t\t\tthis._entity._markDirtyKey(key);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fold<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]): E[\"_settings\"][Key] {\n\t\tif (!this._disabled[key]) {\n\t\t\tconst callbacks = this._callbacks[key];\n\n\t\t\tif (callbacks !== undefined) {\n\t\t\t\tfor (let i = 0, len = callbacks.length; i < len; ++i) {\n\t\t\t\t\tvalue = callbacks[i](value, this._entity, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n\nexport interface IEntitySettings {\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTags?: Array<string>;\n\n\t/**\n\t * Tags which can be used by the theme rules.\n\t *\n\t * These tags only apply to this object, not any children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/themes/} for more info\n\t */\n\tthemeTagsSelf?: Array<string>;\n\n\t/**\n\t * A list of themes applied to the element.\n\t */\n\tthemes?: Array<Theme>;\n\n\n\t/**\n\t * Duration of transition from one state to another.\n\t */\n\tstateAnimationDuration?:number;\n\n\t/**\n\t * Easing of transition from one state to another.\n\t */\n\tstateAnimationEasing?:$ease.Easing;\n\n\t/**\n\t * A custom string ID for the element.\n\t *\n\t * If set, element can be looked up via `am5.registry.entitiesById`.\n\t *\n\t * Will raise error if an element with the same ID already exists.\n\t */\n\tid?: string;\n\n\t/**\n\t * A storage for any custom user data that needs to be associated with the\n\t * element.\n\t */\n\tuserData?: any;\n\n}\n\nexport interface IEntityPrivate {\n}\n\nexport interface IEntityEvents {\n}\n\n/**\n * Animation options.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport interface AnimationOptions<Key, Value> {\n\n\t/**\n\t * A setting key to animate value for.\n\t */\n\tkey: Key,\n\n\t/**\n\t * Initial value to animate from. If not set, will use current value.\n\t */\n\tfrom?: Value;\n\n\t/**\n\t * Target value to animate to.\n\t */\n\tto: Value;\n\n\t/**\n\t * Animation duration in milliseconds.\n\t */\n\tduration: number;\n\n\t/**\n\t * Easing function. Defaults to linear.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\teasing?: $ease.Easing;\n\n\t/**\n\t * How many times to play the animation. Defaults to 1.\n\t */\n\tloops?: number;\n}\n\nexport interface IAnimationEvents {\n\t/**\n\t * Invoked when animation was stopped, which happens in these situations:\n\t * 1. When the animation reached the end.\n\t * 2. When the `stop()` method is called.\n\t * 3. When a new animation starts for the same key.\n\t * 4. When calling `set` for the same key.\n\t */\n\tstopped: {};\n}\n\n/**\n * Animation object.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/} for more info\n */\nexport class Animation<Value> {\n\tprivate _animation: IStartAnimation;\n\tprivate _from: Value;\n\tprivate _to: Value;\n\tprivate _duration: number;\n\tprivate _easing: $ease.Easing;\n\tprivate _loops: number;\n\tprivate _interpolate: <A extends Value>(diff: Time, from: A, to: A) => A;\n\tprivate _oldTime: number | null;\n\tprivate _time: number = 0;\n\n\tpublic _stopped: boolean = false;\n\tpublic _playing: boolean = true;\n\n\tpublic events: EventDispatcher<Events<this, IAnimationEvents>> = new EventDispatcher();\n\n\tconstructor(animation: IStartAnimation, from: Value, to: Value, duration: number, easing: $ease.Easing, loops: number, startingTime: number | null) {\n\t\tthis._animation = animation;\n\t\tthis._from = from;\n\t\tthis._to = to;\n\t\tthis._duration = duration;\n\t\tthis._easing = easing;\n\t\tthis._loops = loops;\n\t\tthis._interpolate = getInterpolate(from, to);\n\t\tthis._oldTime = startingTime;\n\t}\n\n\tpublic get to() {\n\t\treturn this._to;\n\t}\n\n\tpublic get from() {\n\t\treturn this._from;\n\t}\n\n\tpublic get playing() {\n\t\treturn this._playing;\n\t}\n\n\tpublic get stopped() {\n\t\treturn this._stopped;\n\t}\n\n\tpublic stop(): void {\n\t\tif (!this._stopped) {\n\t\t\tthis._stopped = true;\n\t\t\tthis._playing = false;\n\n\t\t\tif (this.events.isEnabled(\"stopped\")) {\n\t\t\t\tthis.events.dispatch(\"stopped\", {\n\t\t\t\t\ttype: \"stopped\",\n\t\t\t\t\ttarget: this,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic pause(): void {\n\t\tthis._playing = false;\n\t\tthis._oldTime = null;\n\t}\n\n\tpublic play(): void {\n\t\tif (!this._stopped && !this._playing) {\n\t\t\tthis._playing = true;\n\t\t\tthis._animation._startAnimation();\n\t\t}\n\t}\n\n\tpublic get percentage(): Time {\n\t\treturn this._time / this._duration;\n\t}\n\n\tpublic waitForStop(): Promise<void> {\n\t\treturn new Promise((resolve, _reject) => {\n\t\t\tif (this._stopped) {\n\t\t\t\tresolve();\n\n\t\t\t} else {\n\t\t\t\tconst listener = () => {\n\t\t\t\t\tstopped.dispose();\n\t\t\t\t\tresolve();\n\t\t\t\t};\n\n\t\t\t\tconst stopped = this.events.on(\"stopped\", listener);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _checkEnded(): boolean {\n\t\tif (this._loops > 1) {\n\t\t\t--this._loops;\n\t\t\treturn false;\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic _run(currentTime: number): void {\n\t\tif (this._oldTime !== null) {\n\t\t\tthis._time += currentTime - this._oldTime;\n\n\t\t\tif (this._time > this._duration) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t}\n\t\t}\n\n\t\tthis._oldTime = currentTime;\n\t}\n\n\tpublic _reset(currentTime: number): void {\n\t\tthis._oldTime = currentTime;\n\t\tthis._time = 0;\n\t}\n\n\tpublic _value(diff: Time): Value {\n\t\treturn this._interpolate(this._easing(diff), this._from, this._to);\n\t}\n}\n\ntype Animated<P> = { [K in keyof P]?: Animation<P[K]> };\n\n\ninterface IStartAnimation {\n\t_startAnimation(): void;\n}\n\n\n/**\n * @ignore\n */\nlet counter = 0;\n\n/**\n * Base class for [[Entity]] objects that support Settings.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n */\nexport abstract class Settings implements IDisposer, IAnimation, IStartAnimation {\n\n\t/**\n\t * Unique ID.\n\t */\n\tpublic uid: number = ++counter;\n\n\tpublic _settings: {};\n\tpublic _privateSettings: {} = {};\n\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K], O extends this>(value: V, target?: O, key?: K) => void> } = {};\n\n\tpublic _prevSettings: this[\"_settings\"] = {};\n\tpublic _prevPrivateSettings: this[\"_privateSettings\"] = {};\n\n\tprotected _animatingSettings: Animated<this[\"_settings\"]> = {};\n\tprotected _animatingPrivateSettings: Animated<this[\"_privateSettings\"]> = {};\n\n\tprivate _disposed: boolean = false;\n\n\t// TODO move this into Entity\n\tprotected _userProperties: Dirty<this[\"_settings\"]> = {};\n\n\tconstructor(settings: Settings[\"_settings\"]) {\n\t\tthis._settings = settings;\n\t}\n\n\tprotected _checkDirty(): void {\n\t\t$object.keys(this._settings).forEach((key) => {\n\t\t\t(this._userProperties as any)[key] = true;\n\t\t\tthis._markDirtyKey(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetUserSettings(){\n\t\tthis._userProperties = {};\n\t}\t\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirty(): void;\n\n\tpublic _runAnimation(currentTime: number): boolean {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet playing = false;\n\n\t\t\t$object.each(this._animatingSettings, (key, animation) => {\n\t\t\t\tif (animation._stopped) {\n\t\t\t\t\tthis._stopAnimation(key);\n\n\t\t\t\t} else if (animation._playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.set(key, animation._value(1));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._set(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._set(key, animation._value(diff));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._animatingPrivateSettings, (key, animation) => {\n\t\t\t\tif (animation._stopped) {\n\t\t\t\t\tthis._stopAnimationPrivate(key);\n\n\t\t\t\t} else if (animation._playing) {\n\t\t\t\t\tanimation._run(currentTime);\n\n\t\t\t\t\tconst diff = animation.percentage;\n\n\t\t\t\t\tif (diff >= 1) {\n\t\t\t\t\t\tif (animation._checkEnded()) {\n\t\t\t\t\t\t\tthis.setPrivate(key, animation._value(1));\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\t\tanimation._reset(currentTime);\n\t\t\t\t\t\t\tthis._setPrivate(key, animation._value(1));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tplaying = true;\n\t\t\t\t\t\tthis._setPrivate(key, animation._value(diff));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn playing;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic abstract _startAnimation(): void;\n\tprotected abstract _animationTime(): number | null;\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(_key: Key) {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of settings changes\n\t * or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @param   key       Settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Sets a callback function to invoke when specific key of private settings\n\t * changes or is set.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/events/#Settings_value_change} for more info\n\t * @ignore\n\t * @param   key       Private settings key\n\t * @param   callback  Callback\n\t * @return            Disposer for event\n\t */\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: this, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getRaw<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._settings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return  {any}     Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\treturn this.getRaw(key, fallback);\n\t}\n\n\tprotected _sendKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._settingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _sendPrivateKeyEvent<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): void {\n\t\tconst events = this._privateSettingEvents[key];\n\n\t\tif (events !== undefined) {\n\t\t\t$array.each(events!, (callback) => {\n\t\t\t\tcallback(value, this, key);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevSettings[key] = old;\n\t\tthis._sendKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tconst old = (<any>this._settings)[key];\n\n\t\t(<any>this._settings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setRaw(key, old, value);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\t}\n\n\n\tprotected _stopAnimation<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst animation = this._animatingSettings[key];\n\n\t\tif (animation) {\n\t\t\tdelete this._animatingSettings[key];\n\t\t\tanimation.stop();\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._set(key, value);\n\t\tthis._stopAnimation(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tthis._prevSettings[key] = (<any>this._settings)[key];\n\n\t\t\tdelete (<any>this._settings)[key];\n\n\t\t\tthis._sendKeyEvent(key, undefined as any);\n\t\t\tthis._markDirtyKey(key);\n\t\t}\n\n\t\tthis._stopAnimation(key);\n\t}\n\n\t/**\n\t * Removes all keys;\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t */\n\tpublic removeAll(): void {\n\t\t$array.each($object.keys(this._settings), (key) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\n\t/**\n\t * Returns a value of a private setting.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/#Private_settings} for more info\n\t */\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = (<any>this._privateSettings)[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, old: Value, value: Value) {\n\t\tthis._prevPrivateSettings[key] = old;\n\t\tthis._sendPrivateKeyEvent(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprivate _setPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tconst old = (<any>this._privateSettings)[key];\n\n\t\t(<any>this._privateSettings)[key] = value;\n\n\t\tif (old !== value) {\n\t\t\tthis._setPrivateRaw(key, old, value);\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\t}\n\n\tprotected _stopAnimationPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tconst animation = this._animatingPrivateSettings[key];\n\n\t\tif (animation) {\n\t\t\tanimation.stop();\n\t\t\tdelete this._animatingPrivateSettings[key];\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._setPrivate(key, value);\n\t\tthis._stopAnimationPrivate(key);\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tthis._prevPrivateSettings[key] = (<any>this._privateSettings)[key];\n\n\t\t\tdelete (<any>this._privateSettings)[key];\n\n\t\t\tthis._markDirtyPrivateKey(key);\n\t\t}\n\n\t\tthis._stopAnimationPrivate(key);\n\t}\n\n\t/**\n\t * Sets multiple settings at once.\n\t *\n\t * `settings` must be an object with key: value pairs.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param settings Settings\n\t */\n\tpublic setAll(settings: Partial<this[\"_settings\"]>) {\n\t\t$object.each(settings, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t/**\n\t * Animates setting values from current/start values to new ones.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animating_settings} for more info\n\t * @param   options  Animation options\n\t * @return           Animation object\n\t */\n\tpublic animate<Key extends keyof this[\"_settings\"]>(options: AnimationOptions<Key, this[\"_settings\"][Key]>): Animation<this[\"_settings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.get(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.set(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.set(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.set(key, from);\n\n\t\t\t\tconst animation = this._animatingSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic animatePrivate<Key extends keyof this[\"_privateSettings\"]>(options: AnimationOptions<Key, this[\"_privateSettings\"][Key]>): Animation<this[\"_privateSettings\"][Key]> {\n\t\tconst key = options.key;\n\t\tconst to = options.to;\n\t\tconst duration = options.duration || 0;\n\t\tconst loops = options.loops || 1;\n\n\t\tconst from = (options.from === undefined ? this.getPrivate(key) : options.from);\n\t\tconst easing = (options.easing === undefined ? $ease.linear : options.easing);\n\n\t\tif (duration === 0) {\n\t\t\tthis.setPrivate(key, to);\n\n\t\t} else {\n\t\t\tif (from === undefined || from === to) {\n\t\t\t\tthis.setPrivate(key, to);\n\n\t\t\t} else {\n\t\t\t\tthis.setPrivate(key, from);\n\n\t\t\t\tconst animation = this._animatingPrivateSettings[key] = new Animation(this, from, to, duration, easing, loops, this._animationTime());\n\n\t\t\t\tthis._startAnimation();\n\n\t\t\t\treturn animation;\n\t\t\t}\n\t\t}\n\n\t\tconst animation = new Animation(this, from, to, duration, easing, loops, null);\n\t\tanimation.stop();\n\t\treturn animation;\n\t}\n\n\tprotected _dispose() {}\n\n\t/**\n\t * Returns `true` if this element is disposed.\n\t *\n\t * @return Disposed\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Disposes this object.\n\t */\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._dispose();\n\t\t}\n\t}\n}\n\n/**\n * Base class.\n *\n * @important\n */\nexport class Entity extends Settings implements IDisposer {\n\tpublic _root: Root;\n\n\tpublic _user_id:any; // for testing purposes\n\n\tdeclare public _settings: IEntitySettings;\n\tdeclare public _privateSettings: IEntityPrivate;\n\tdeclare public _events: IEntityEvents;\n\n\tpublic states: States<this> = new States(this);\n\tpublic adapters: Adapters<this> = new Adapters(this);\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = this._createEvents();\n\n\tprotected _userPrivateProperties: Dirty<this[\"_privateSettings\"]> = {};\n\n\tpublic _dirty: Dirty<this[\"_settings\"]> = {};\n\tpublic _dirtyPrivate: Dirty<this[\"_privateSettings\"]> = {};\n\n\tprotected _template: Template<this> | undefined;\n\n\t// Templates for the themes\n\tprotected _templates: Array<Template<this>> = [];\n\n\t// Internal templates which can be overridden by the user's templates\n\tprotected _internalTemplates: Array<Template<this>>;\n\n\t// Default themes which can be overridden by the user's themes\n\tpublic _defaultThemes: Array<Theme> = [];\n\n\t// Disposers for all of the templates\n\tprotected _templateDisposers: Array<IDisposer> = [];\n\n\tprotected _disposers: Array<IDisposer> = [];\n\n\t// Whether the template setup function should be run\n\tprotected _runSetup: boolean = true;\n\n\tpublic static className: string = \"Entity\";\n\tpublic static classNames: Array<string> = [\"Entity\"];\n\n\tprotected _disposerProperties: { [Key in keyof this[\"_settings\"]]?: Array<IDisposer> } = {};\n\n\t/**\n\t * IMPORTANT! Do not instantiate this class via `new Class()` syntax.\n\t *\n\t * Use static method `Class.new()` instead.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @ignore\n\t */\n\tconstructor(root: Root, settings: Entity[\"_settings\"], isReal: boolean, templates: Array<Template<Entity>> = []) {\n\t\tsuper(settings);\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\t\tthis._root = root;\n\t\tthis._internalTemplates = templates as Array<Template<this>>;\n\n\t\tif (settings.id) {\n\t\t\tthis._registerId(settings.id);\n\t\t}\n\t}\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tstatic new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], template?: Template<T>): T {\n\t\tconst x = (new this(root, settings, true)) as T;\n\t\tx._template = template;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tstatic _new<C extends typeof Entity, T extends InstanceType<C>>(this: C, root: Root, settings: T[\"_settings\"], templates: Array<Template<T>> = []): T {\n\t\tconst x = (new this(root, settings, true, templates)) as T;\n\t\tx._afterNew();\n\t\treturn x;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._checkDirty();\n\n\t\tlet shouldApply = false;\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\tshouldApply = true;\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tif (shouldApply) {\n\t\t\tthis._applyTemplates(false);\n\t\t}\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\t}\n\n\t// This is the same as _afterNew, except it also applies the themes.\n\t// This should only be used for classes which don't have a parent (because they extend from Entity and not Sprite).\n\tprotected _afterNewApplyThemes() {\n\t\tthis._checkDirty();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._setObjectTemplate(this);\n\t\t});\n\n\t\tthis.states.create(\"default\", {});\n\n\t\tthis._setDefaults();\n\n\t\tthis._applyThemes();\n\t}\n\n\tprotected _createEvents(): EventDispatcher<Events<this, this[\"_events\"]>> {\n\t\treturn new EventDispatcher();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get classNames(): Array<string> {\n\t\treturn (this.constructor as any).classNames;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic get className(): string {\n\t\treturn (this.constructor as any).className;\n\t}\n\n\tprotected _setDefaults(){\n\n\t}\n\n\tpublic _setDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!(key in this._settings)) {\n\t\t\tsuper.set(key, value);\n\t\t}\n\t}\n\n\tpublic _setRawDefault<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!(key in this._settings)) {\n\t\t\tsuper.setRaw(key, value);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\t$object.keys(this._dirty).forEach((key) => {\n\t\t\tthis._dirty[key] = false;\n\t\t});\n\n\t\t$object.keys(this._dirtyPrivate).forEach((key) => {\n\t\t\tthis._dirtyPrivate[key] = false;\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDirty<Key extends keyof this[\"_settings\"]>(key: Key): boolean {\n\t\treturn !!this._dirty[key];\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isPrivateDirty<Key extends keyof this[\"_privateSettings\"]>(key: Key): boolean {\n\t\treturn !!this._dirtyPrivate[key];\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tthis._dirty[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tthis._dirtyPrivate[key] = true;\n\t\tsuper._markDirtyKey(key);\n\t}\n\n\t/**\n\t * Checks if element is of certain class (or inherits one).\n\t *\n\t * @param   type  Class name to check\n\t * @return {boolean} Is of class?\n\t */\n\tpublic isType<A>(type: string): this is A {\n\t\treturn this.classNames.indexOf(type) !== -1;\n\t}\n\n\tprotected _pushPropertyDisposer<Key extends keyof this[\"_settings\"], D extends IDisposer>(key: Key, disposer: D): D {\n\t\tlet disposers = this._disposerProperties[key];\n\n\t\tif (disposers === undefined) {\n\t\t\tdisposers = this._disposerProperties[key] = [];\n\t\t}\n\n\t\tdisposers.push(disposer);\n\n\t\treturn disposer;\n\t}\n\n\tprotected _disposeProperty<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tconst disposers = this._disposerProperties[key];\n\n\t\tif (disposers !== undefined) {\n\t\t\t$array.each(disposers!, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\n\t\t\tdelete this._disposerProperties[key];\n\t\t}\n\t}\n\n\t/**\n\t * @todo needs description\n\t * @param  value  Template\n\t */\n\tpublic set template(value: Template<this> | undefined) {\n\t\tconst template = this._template;\n\n\t\tif (template !== value) {\n\t\t\tthis._template = value;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._removeObjectTemplate(this);\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tvalue._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\tpublic get template(): Template<this> | undefined {\n\t\treturn this._template;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tthis._root._addDirtyEntity(this);\n\t}\n\n\tpublic _startAnimation(): void {\n\t\tthis._root._addAnimation(this);\n\t}\n\n\tprotected _animationTime(): number | null {\n\t\treturn this._root.animationTime;\n\t}\n\n\tpublic _applyState(_name: string): void { }\n\tpublic _applyStateAnimated(_name: string, _duration?: number): void { }\n\n\t/**\n\t * Returns settings value for the specified `key`.\n\t *\n\t * If there is no value, `fallback` is returned instead (if set).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Settings value\n\t * @param   callback  Fallback value\n\t * @return            Value\n\t */\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this.adapters.fold(key, (<any>this._settings)[key]);\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key`, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic set<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userProperties[key] = true;\n\t\treturn super.set(key, value);\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setRaw<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userProperties[key] = true;\n\t\tsuper.setRaw(key, value);\n\t}\n\n\t/**\n\t * Sets a setting `value` for the specified `key` only if the value for this key was not set previously using set method, and returns the same `value`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t * @param   value     Setting value\n\t * @return            Setting value\n\t */\n\tpublic _setSoft<Key extends keyof this[\"_settings\"], Value extends this[\"_settings\"][Key]>(key: Key, value: Value): Value {\n\t\tif(!this._userProperties[key]){\n\t\t\treturn super.set(key, value);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes a setting value for the specified `key`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/} for more info\n\t * @param   key       Setting key\n\t */\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._userProperties[key];\n\t\tthis._removeTemplateProperty(key);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._userPrivateProperties[key] = true;\n\t\treturn super.setPrivate(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value) {\n\t\tthis._userPrivateProperties[key] = true;\n\t\tsuper.setPrivateRaw(key, value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tdelete this._userPrivateProperties[key];\n\t\tthis._removeTemplatePrivateProperty(key);\n\t}\n\n\tpublic _setTemplateProperty<Key extends keyof this[\"_settings\"]>(template: Template<this>, key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(template: Template<this>, key: Key, value: this[\"_privateSettings\"][Key]) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (template === match) {\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplateProperty<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tif (!this._userProperties[key]) {\n\t\t\tconst match = this._findTemplateByKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.set(key, match._settings[key]!);\n\n\t\t\t} else {\n\t\t\t\tsuper.remove(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _removeTemplatePrivateProperty<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tif (!this._userPrivateProperties[key]) {\n\t\t\tconst match = this._findTemplateByPrivateKey(key);\n\n\t\t\tif (match) {\n\t\t\t\t// TODO don't stop the animation if the property didn't change\n\t\t\t\tsuper.setPrivate(key, match._privateSettings[key]);\n\n\t\t\t} else {\n\t\t\t\tsuper.removePrivate(key);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _walkParents(f: (parent: Entity) => void): void {\n\t\tf(this._root._rootContainer);\n\t\tf(this);\n\t}\n\n\t// TODO faster version of this method which is specialized to just 1 key\n\tpublic _applyStateByKey(name: string): void {\n\t\tconst other = this.states.create(name, {});\n\t\tconst seen: Dirty<this[\"_settings\"]> = {};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tconst state = template.states.lookup(name);\n\n\t\t\tif (state) {\n\t\t\t\tstate._apply(other, seen);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(other._settings, (key) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tother.remove(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _applyTemplate(template: Template<this>, state: ApplyState<this>): void {\n\t\tthis._templateDisposers.push(template._apply(this, state));\n\n\t\t$object.each(template._settings, (key, value) => {\n\t\t\tif (!state.settings[key] && !this._userProperties[key]) {\n\t\t\t\tstate.settings[key] = true;\n\t\t\t\tsuper.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t$object.each(template._privateSettings, (key, value) => {\n\t\t\tif (!state.privateSettings[key] && !this._userPrivateProperties[key]) {\n\t\t\t\tstate.privateSettings[key] = true;\n\t\t\t\tsuper.setPrivate(key, value);\n\t\t\t}\n\t\t});\n\n\t\tif (this._runSetup && template.setup) {\n\t\t\tthis._runSetup = false;\n\t\t\ttemplate.setup(this);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the closure with each template and returns the first template which is true\n\t */\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tif (this._template) {\n\t\t\tif (f(this._template)) {\n\t\t\t\treturn this._template;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _eachTemplate(f: (template: Template<this>) => void): void {\n\t\tthis._findStaticTemplate((template) => {\n\t\t\tf(template);\n\t\t\treturn false;\n\t\t});\n\n\t\t// _internalTemplates is sorted with most specific to the right\n\t\t$array.eachReverse(this._internalTemplates, f);\n\n\t\t// _templates is sorted with most specific to the left\n\t\t$array.each(this._templates, f);\n\t}\n\n\tpublic _applyTemplates(remove: boolean = true): void {\n\t\tif (remove) {\n\t\t\tthis._disposeTemplates();\n\t\t}\n\n\t\tconst state: ApplyState<this> = {\n\t\t\tsettings: {},\n\t\t\tprivateSettings: {},\n\t\t\tstates: {},\n\t\t};\n\n\t\tthis._eachTemplate((template) => {\n\t\t\tthis._applyTemplate(template, state);\n\t\t});\n\n\t\tif (remove) {\n\t\t\t$object.each(this._settings, (key) => {\n\t\t\t\tif (!this._userProperties[key] && !state.settings[key]) {\n\t\t\t\t\tsuper.remove(key);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$object.each(this._privateSettings, (key) => {\n\t\t\t\tif (!this._userPrivateProperties[key] && !state.privateSettings[key]) {\n\t\t\t\t\tsuper.removePrivate(key);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _findTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\tconst value = this._findStaticTemplate(f);\n\n\t\tif (value === undefined) {\n\t\t\t// _internalTemplates is sorted with most specific to the right\n\t\t\tconst value = $array.findReverse(this._internalTemplates, f);\n\n\t\t\tif (value === undefined) {\n\t\t\t\t// _templates is sorted with most specific to the left\n\t\t\t\treturn $array.find(this._templates, f);\n\n\t\t\t} else {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tprotected _findTemplateByKey<Key extends keyof this[\"_settings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._settings;\n\t\t});\n\t}\n\n\tprotected _findTemplateByPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key): Template<this> | undefined {\n\t\treturn this._findTemplate((template) => {\n\t\t\treturn key in template._privateSettings;\n\t\t});\n\t}\n\n\tprotected _disposeTemplates() {\n\t\t$array.each(this._templateDisposers, (disposer) => {\n\t\t\tdisposer.dispose();\n\t\t});\n\n\t\tthis._templateDisposers.length = 0;\n\t}\n\n\tprotected _removeTemplates() {\n\t\t$array.each(this._templates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._templates.length = 0;\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tlet isConnected = false;\n\n\t\tconst defaults: Array<Array<Theme>> = [];\n\n\t\tlet themes: Array<Array<Theme>> = [];\n\n\t\tconst themeTags: Set<string> = new Set();\n\n\t\tconst tags = this.get(\"themeTagsSelf\");\n\n\t\tif (tags) {\n\t\t\t$array.each(tags, (tag) => {\n\t\t\t\tthemeTags.add(tag);\n\t\t\t});\n\t\t}\n\n\t\tthis._walkParents((entity) => {\n\t\t\tif (entity === this._root._rootContainer) {\n\t\t\t\tisConnected = true;\n\t\t\t}\n\n\t\t\tif (entity._defaultThemes.length > 0) {\n\t\t\t\tdefaults.push(entity._defaultThemes);\n\t\t\t}\n\n\t\t\tconst theme = entity.get(\"themes\");\n\n\t\t\tif (theme) {\n\t\t\t\tthemes.push(theme);\n\t\t\t}\n\n\t\t\tconst tags = entity.get(\"themeTags\");\n\n\t\t\tif (tags) {\n\t\t\t\t$array.each(tags, (tag) => {\n\t\t\t\t\tthemeTags.add(tag);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tthemes = defaults.concat(themes);\n\n\t\tthis._removeTemplates();\n\n\t\tif (isConnected) {\n\t\t\t$array.eachReverse(this.classNames, (name) => {\n\t\t\t\tconst allRules: Array<IRule<this>> = [];\n\n\t\t\t\t$array.each(themes, (themes) => {\n\t\t\t\t\t$array.each(themes, (theme) => {\n\t\t\t\t\t\tconst rules = theme._lookupRules<this>(name);\n\n\t\t\t\t\t\tif (rules) {\n\t\t\t\t\t\t\t$array.eachReverse(rules, (rule) => {\n\t\t\t\t\t\t\t\tconst matches = rule.tags.every((tag) => {\n\t\t\t\t\t\t\t\t\treturn themeTags.has(tag);\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\t\t\tconst result = $array.getFirstSortedIndex(allRules, (x) => {\n\t\t\t\t\t\t\t\t\t\tconst order = $order.compare(rule.tags.length, x.tags.length);\n\n\t\t\t\t\t\t\t\t\t\tif (order === 0) {\n\t\t\t\t\t\t\t\t\t\t\treturn $order.compareArray(rule.tags, x.tags, $order.compare);\n\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn order;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\tallRules.splice(result.index, 0, rule);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$array.each(allRules, (rule) => {\n\t\t\t\t\tthis._templates.push(rule.template);\n\t\t\t\t\trule.template._setObjectTemplate(this);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tthis._applyTemplates();\n\n\t\tif (isConnected) {\n\t\t\t// This causes it to only run the setup function the first time that the themes are applied\n\t\t\tthis._runSetup = false;\n\t\t}\n\n\t\treturn isConnected;\n\t}\n\n\tpublic _changed(): void { }\n\n\tpublic _beforeChanged(): void {\n\n\t\tif (this.isDirty(\"id\")) {\n\t\t\tconst id = this.get(\"id\")!;\n\t\t\tif (id) {\n\t\t\t\tthis._registerId(id);\n\t\t\t}\n\n\t\t\tconst prevId = this._prevSettings.id;\n\t\t\tif(prevId) {\n\t\t\t\tdelete registry.entitiesById[prevId];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _registerId(id: string): void {\n\t\tif (registry.entitiesById[id] && registry.entitiesById[id] !== this) {\n\t\t\tthrow new Error(\"An entity with id \\\"\" + id + \"\\\" already exists.\");\n\t\t}\n\t\tregistry.entitiesById[id] = this;\n\t}\n\n\tpublic _afterChanged(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addDisposer<T extends IDisposer>(disposer: T): T {\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst template = this._template;\n\n\t\tif (template) {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t}\n\n\t\t$array.each(this._internalTemplates, (template) => {\n\t\t\ttemplate._removeObjectTemplate(this);\n\t\t});\n\n\t\tthis._removeTemplates();\n\t\tthis._disposeTemplates();\n\n\t\tthis.events.dispose();\n\n\t\tthis._disposers.forEach((x) => {\n\t\t\tx.dispose();\n\t\t});\n\n\t\t$object.each(this._disposerProperties, (_, disposers) => {\n\t\t\t$array.each(disposers, (disposer) => {\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t});\n\n\t\tconst id = this.get(\"id\")!;\n\t\tif (id) {\n\t\t\tdelete registry.entitiesById[id];\n\t\t}\n\t}\n\n\t/**\n\t * Creates and returns a \"disposable\" timeout.\n\t *\n\t * @param   fn     Callback\n\t * @param   delay  Delay in milliseconds\n\t * @return         Timeout disposer\n\t */\n\tpublic setTimeout(fn: () => void, delay: number): IDisposer {\n\t\tconst id = setTimeout(() => {\n\t\t\tthis.removeDispose(disposer);\n\t\t\tfn();\n\t\t}, delay);\n\n\t\tconst disposer = new Disposer(() => {\n\t\t\tclearTimeout(id);\n\t\t});\n\n\t\tthis._disposers.push(disposer);\n\t\treturn disposer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeDispose(target: IDisposer): void {\n\t\tif (!this.isDisposed()) {\n\t\t\tlet index = $array.indexOf(this._disposers, target);\n\t\t\tif (index > -1) {\n\t\t\t\tthis._disposers.splice(index, 1);\n\t\t\t}\n\t\t}\n\n\t\ttarget.dispose();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hasTag(tag: string): boolean {\n\t\treturn $array.indexOf(this.get(\"themeTags\", []), tag) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addTag(tag: string): void {\n\t\tif (!this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\ttags.push(tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic removeTag(tag: string): void {\n\t\tif (this.hasTag(tag)) {\n\t\t\tconst tags = (<any>this).get(\"themeTags\", []);\n\t\t\t$array.remove(tags, tag);\n\t\t\tthis.set(\"themeTags\", tags);\n\t\t}\n\t}\n\n\tprotected _t(text: any, locale?: ILocale, ...rest: Array<string>){\n\t\treturn this._root.language.translate(text, locale, ...rest);\n\t}\n\n\t/**\n\t * An instance of [[Root]] object.\n\t *\n\t * @readonly\n\t * @since 5.0.6\n\t * @return Root object\n\t */\n\tpublic get root(): Root {\n\t\treturn this._root;\n\t}\n\n}\n","/**\n * Event Dispatcher module is used for registering listeners and dispatching\n * events across amCharts system.\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Disposer, IDisposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\n\n/**\n * @ignore\n */\nexport type Events<Target, T> = {\n\t[K in keyof T]: T[K] & { type: K, target: Target }\n};\n\n/**\n * A universal interface for event listeners.\n *\n * @ignore\n */\nexport interface EventListener {\n\tkilled: boolean;\n\tonce: boolean;\n\ttype: any | null;\n\tcallback: (event: any) => void;\n\tcontext: unknown;\n\tshouldClone: boolean;\n\tdispatch: (type: any, event: any) => void;\n\tdisposer: IDisposer;\n}\n\n/**\n * Universal Event Dispatcher.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nexport class EventDispatcher<T> implements IDisposer {\n\tprotected _listeners: Array<EventListener>;\n\tprotected _killed: Array<EventListener>;\n\tprotected _disabled: { [key in keyof T]?: number };\n\tprotected _iterating: number;\n\tprotected _enabled: boolean;\n\tprotected _disposed: boolean;\n\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor() {\n\t\tthis._listeners = [];\n\t\tthis._killed = [];\n\t\tthis._disabled = {};\n\t\tthis._iterating = 0;\n\t\tthis._enabled = true;\n\t\tthis._disposed = false;\n\t}\n\n\t/**\n\t * Returns if this object has been already disposed.\n\t *\n\t * @return Disposed?\n\t */\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\t/**\n\t * Dispose (destroy) this object.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\tconst a = this._listeners;\n\n\t\t\tthis._iterating = 1;\n\t\t\tthis._listeners = <any>null;\n\t\t\tthis._disabled = <any>null;\n\n\t\t\ttry {\n\t\t\t\t$array.each(a, (x) => {\n\t\t\t\t\tx.disposer.dispose();\n\t\t\t\t});\n\n\t\t\t} finally {\n\t\t\t\tthis._killed = <any>null;\n\t\t\t\tthis._iterating = <any>null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if this particular event dispatcher has any listeners set.\n\t *\n\t * @return Has listeners?\n\t */\n\tpublic hasListeners(): boolean {\n\t\treturn this._listeners.length !== 0;\n\t}\n\n\t/**\n\t * Checks if this particular event dispatcher has any particular listeners set.\n\t *\n\t * @return Has particular event listeners?\n\t */\n\tpublic hasListenersByType<Key extends keyof T>(type: Key): boolean {\n\t\treturn $array.any(this._listeners, (x) => (x.type === null || x.type === type) && !x.killed);\n\t}\n\n\t/**\n\t * Enable dispatching of events if they were previously disabled by\n\t * `disable()`.\n\t */\n\tpublic enable(): void {\n\t\tthis._enabled = true;\n\t}\n\n\t/**\n\t * Disable dispatching of events until re-enabled by `enable()`.\n\t */\n\tpublic disable(): void {\n\t\tthis._enabled = false;\n\t}\n\n\t/**\n\t * Enable dispatching particular event, if it was disabled before by\n\t * `disableType()`.\n\t *\n\t * @param type Event type\n\t */\n\tpublic enableType<Key extends keyof T>(type: Key): void {\n\t\tdelete this._disabled[type];\n\t}\n\n\t/**\n\t * Disable dispatching of events for a certain event type.\n\t *\n\t * Optionally, can set how many dispatches to skip before automatically\n\t * re-enabling the dispatching.\n\t *\n\t * @param type    Event type\n\t * @param amount  Number of event dispatches to skip\n\t */\n\tpublic disableType<Key extends keyof T>(type: Key, amount: number = Infinity): void {\n\t\tthis._disabled[type] = amount;\n\t}\n\n\t/**\n\t * Removes listener from dispatcher.\n\t *\n\t * Will throw an exception if such listener does not exists.\n\t *\n\t * @param listener Listener to remove\n\t */\n\tprotected _removeListener(listener: EventListener): void {\n\t\tif (this._iterating === 0) {\n\t\t\tconst index = this._listeners.indexOf(listener);\n\n\t\t\tif (index === -1) {\n\t\t\t\tthrow new Error(\"Invalid state: could not remove listener\");\n\t\t\t}\n\n\t\t\tthis._listeners.splice(index, 1);\n\n\t\t} else {\n\t\t\tthis._killed.push(listener);\n\t\t}\n\t}\n\n\t/**\n\t * Removes existing listener by certain parameters.\n\t *\n\t * @param once         Listener's once setting\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t */\n\tprotected _removeExistingListener<C, Key extends keyof T>(once: boolean, type: Key | null, callback?: (this: C, event: T[Key]) => void, context?: C): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tthis._eachListener((info) => {\n\t\t\tif (info.once === once && // TODO is this correct ?\n\t\t\t\tinfo.type === type &&\n\t\t\t\t(callback === undefined || info.callback === callback) &&\n\t\t\t\tinfo.context === context) {\n\t\t\t\tinfo.disposer.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if dispatching for particular event type is enabled.\n\t *\n\t * @param type  Event type\n\t * @return Enabled?\n\t */\n\tpublic isEnabled<Key extends keyof T>(type: Key): boolean {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\t// TODO is this check correct ?\n\t\treturn this._enabled && this._listeners.length > 0 && this.hasListenersByType(type) && this._disabled[type] === undefined;\n\t}\n\n\t/**\n\t * Removes all listeners of a particular event type\n\t *\n\t * @param type  Listener's type\n\t */\n\tpublic removeType<Key extends keyof T>(type: Key): void {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tthis._eachListener((info) => {\n\t\t\tif (info.type === type) {\n\t\t\t\tinfo.disposer.dispose();\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Checks if there's already a listener with specific parameters.\n\t *\n\t * @param type      Listener's type\n\t * @param callback  Callback function\n\t * @param context   Callback context\n\t * @return Has listener?\n\t */\n\tpublic has<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): boolean {\n\t\tconst index = $array.findIndex(this._listeners, (info) => {\n\t\t\treturn info.once !== true && // Ignoring \"once\" listeners\n\t\t\t\tinfo.type === type &&\n\t\t\t\t(callback === undefined || info.callback === callback) &&\n\t\t\t\tinfo.context === context;\n\t\t});\n\n\t\treturn index !== -1;\n\t}\n\n\t/**\n\t * Checks whether event of the particular type should be dispatched.\n\t *\n\t * @param type  Event type\n\t * @return Dispatch?\n\t */\n\tprotected _shouldDispatch<Key extends keyof T>(type: Key): boolean {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tconst count = this._disabled[type];\n\n\t\tif (!$type.isNumber(count)) {\n\t\t\treturn this._enabled;\n\n\t\t} else {\n\t\t\tif (count <= 1) {\n\t\t\t\tdelete this._disabled[type];\n\n\t\t\t} else {\n\t\t\t\t--this._disabled[type]!;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * [_eachListener description]\n\t *\n\t * All of this extra code is needed when a listener is removed while iterating\n\t *\n\t * @todo Description\n\t * @param fn [description]\n\t */\n\tprotected _eachListener(fn: (listener: EventListener) => void): void {\n\t\t++this._iterating;\n\n\t\ttry {\n\t\t\t$array.each(this._listeners, fn);\n\n\t\t} finally {\n\t\t\t--this._iterating;\n\n\t\t\t// TODO should this be inside or outside the finally ?\n\t\t\tif (this._iterating === 0 && this._killed.length !== 0) {\n\t\t\t\t// Remove killed listeners\n\t\t\t\t$array.each(this._killed, (killed) => {\n\t\t\t\t\tthis._removeListener(killed);\n\t\t\t\t});\n\n\t\t\t\tthis._killed.length = 0;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches an event immediately without waiting for next cycle.\n\t *\n\t * @param type   Event type\n\t * @param event  Event object\n\t * @todo automatically add in type and target properties if they are missing\n\t */\n\tpublic dispatch<Key extends keyof T>(type: Key, event: T[Key]): void {\n\t\tif (this._shouldDispatch(type)) {\n\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\n\t\t\t// TODO if the function throws, maybe it should keep going ?\n\t\t\tthis._eachListener((listener) => {\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\n\t\t\t\t\tlistener.dispatch(type, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Shelves the event to be dispatched within next update cycle.\n\t *\n\t * @param type   Event type\n\t * @param event  Event object\n\t * @todo automatically add in type and target properties if they are missing\n\t */\n\t/*public dispatchLater<Key extends keyof T>(type: Key, event: T[Key]): void {\n\t\tif (this._shouldDispatch(type)) {\n\t\t\tthis._eachListener((listener) => {\n\t\t\t\t// TODO check if it's faster to use an object of listeners rather than a single big array\n\t\t\t\tif (!listener.killed && (listener.type === null || listener.type === type)) {\n\t\t\t\t\t// TODO if the function throws, maybe it should keep going ?\n\t\t\t\t\t// TODO dispatch during the update cycle, rather than using whenIdle\n\t\t\t\t\t$async.whenIdle(() => {\n\t\t\t\t\t\tif (!listener.killed) {\n\t\t\t\t\t\t\tlistener.dispatch(type, event);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}*/\n\n\t/**\n\t * Creates, catalogs and returns an [[EventListener]].\n\t *\n\t * Event listener can be disposed.\n\t *\n\t * @param once         Listener's once setting\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @param dispatch\n\t * @returns An event listener\n\t */\n\tprotected _on<C, Key extends keyof T>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: T[Key]) => void): EventListener {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tthis._removeExistingListener(once, type, callback, context);\n\n\t\tconst info: EventListener = {\n\t\t\ttype: type,\n\t\t\tcallback: callback,\n\t\t\tcontext: context,\n\t\t\tshouldClone: shouldClone,\n\t\t\tdispatch: <any>dispatch,\n\t\t\tkilled: false,\n\t\t\tonce: once,\n\t\t\tdisposer: new Disposer(() => {\n\t\t\t\tinfo.killed = true;\n\t\t\t\tthis._removeListener(info);\n\t\t\t})\n\t\t};\n\n\t\tthis._listeners.push(info);\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Creates an event listener to be invoked on **any** event.\n\t *\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @returns A disposable event listener\n\t */\n\tpublic onAll<C, K extends keyof T>(callback: (this: C, event: T[K]) => void, context?: C, shouldClone: boolean = true): IDisposer {\n\t\treturn this._on(false, null, callback, context, shouldClone, (_type, event) => (<any>callback).call(context, event as any)).disposer;\n\t}\n\n\t/**\n\t * Creates an event listener to be invoked on a specific event type.\n\t *\n\t * ```TypeScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t * ```JavaScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t *\n\t * The above will invoke our custom event handler whenever series we put\n\t * event on is hidden.\n\t *\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @returns A disposable event listener\n\t */\n\tpublic on<C, Key extends keyof T>(type: Key, callback: (this: C | undefined, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\n\t\treturn this._on(false, type, callback, context, shouldClone, (_type, event) => callback.call(context, event)).disposer;\n\t}\n\n\t/**\n\t * Creates an event listener to be invoked on a specific event type once.\n\t *\n\t * Once the event listener is invoked, it is automatically disposed.\n\t *\n\t * ```TypeScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t * ```JavaScript\n\t * button.events.once(\"click\", (ev) => {\n\t *   console.log(\"Button clicked\");\n\t * }, this);\n\t * ```\n\t *\n\t * The above will invoke our custom event handler the first time series we\n\t * put event on is hidden.\n\t *\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t * @param shouldClone  Whether the listener should be copied when the EventDispatcher is copied\n\t * @returns A disposable event listener\n\t */\n\tpublic once<C, Key extends keyof T>(type: Key, callback: (this: C | undefined, event: T[Key]) => void, context?: C, shouldClone: boolean = true): IDisposer {\n\t\tconst x = this._on(true, type, callback, context, shouldClone, (_type, event) => {\n\t\t\tx.disposer.dispose();\n\t\t\tcallback.call(context, event)\n\t\t});\n\n\t\t// TODO maybe this should return a different Disposer ?\n\t\treturn x.disposer;\n\t}\n\n\t/**\n\t * Removes the event listener with specific parameters.\n\t *\n\t * @param type         Listener's type\n\t * @param callback     Callback function\n\t * @param context      Callback context\n\t */\n\tpublic off<C, Key extends keyof T>(type: Key, callback?: (this: C, event: T[Key]) => void, context?: C): void {\n\t\tthis._removeExistingListener(false, type, callback, context);\n\t}\n\n\n\t/**\n\t * Copies all dispatcher parameters, including listeners, from another event\n\t * dispatcher.\n\t *\n\t * @param source Source event dispatcher\n\t * @ignore\n\t */\n\tpublic copyFrom(source: this): IDisposer {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tif (source === this) {\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\n\t\t}\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$array.each(source._listeners, (x) => {\n\t\t\t// TODO is this correct ?\n\t\t\tif (!x.killed && x.shouldClone) {\n\t\t\t\tif (x.type === null) {\n\t\t\t\t\tdisposers.push(this.onAll(x.callback as any, x.context));\n\n\t\t\t\t} else if (x.once) {\n\t\t\t\t\tdisposers.push(this.once(x.type, x.callback, x.context));\n\n\t\t\t\t} else {\n\t\t\t\t\tdisposers.push(this.on(x.type, x.callback, x.context));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n}\n\n/**\n * A version of the [[EventDispatcher]] that dispatches events for a specific\n * target object.\n *\n * @ignore\n */\nexport class TargetedEventDispatcher<Target, T> extends EventDispatcher<T> {\n\n\t/**\n\t * A target object which is originating events using this dispatcher.\n\t */\n\tpublic target: Target;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param target Event dispatcher target\n\t */\n\tconstructor(target: Target) {\n\t\tsuper();\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * Copies all dispatcher parameters, including listeners, from another event\n\t * dispatcher.\n\t *\n\t * @param source Source event dispatcher\n\t * @ignore\n\t */\n\tpublic copyFrom(source: this): IDisposer {\n\t\tif (this._disposed) {\n\t\t\tthrow new Error(\"EventDispatcher is disposed\");\n\t\t}\n\n\t\tif (source === this) {\n\t\t\tthrow new Error(\"Cannot copyFrom the same TargetedEventDispatcher\");\n\t\t}\n\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$array.each(source._listeners, (x) => {\n\t\t\t// TODO very hacky\n\t\t\tif (x.context === source.target) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// TODO is this correct ?\n\t\t\tif (!x.killed && x.shouldClone) {\n\t\t\t\tif (x.type === null) {\n\t\t\t\t\tdisposers.push(this.onAll(x.callback as any, x.context));\n\n\t\t\t\t} else if (x.once) {\n\t\t\t\t\tdisposers.push(this.once(x.type, x.callback, x.context));\n\n\t\t\t\t} else {\n\t\t\t\t\tdisposers.push(this.on(x.type, x.callback, x.context));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n}\n","/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport type { Entity } from \"./Entity\";\nimport type { Template } from \"./Template\";\nimport type { IDisposer } from \"./Disposer\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $array from \"./Array\";\nimport type { Optional } from \"./Type\";\n\n\n/**\n * Checks if specific index fits into length.\n *\n * @param index  Index\n * @param len    Length\n * @ignore\n */\nfunction checkBounds(index: number, len: number): void {\n\tif (!(index >= 0 && index < len)) {\n\t\tthrow new Error(\"Index out of bounds: \" + index);\n\t}\n}\n\n\nexport interface IListEvents<A> {\n\tclear: {\n\t\toldValues: Array<A>,\n\t};\n\tpush: {\n\t\tnewValue: A,\n\t};\n\tinsertIndex: {\n\t\tindex: number,\n\t\tnewValue: A,\n\t};\n\tsetIndex: {\n\t\tindex: number,\n\t\toldValue: A,\n\t\tnewValue: A,\n\t};\n\tremoveIndex: {\n\t\tindex: number,\n\t\toldValue: A,\n\t};\n\tmoveIndex: {\n\t\toldIndex: number,\n\t\tnewIndex: number,\n\t\tvalue: A,\n\t};\n}\n\n\n/**\n * A List class is used to hold a number of indexed items of the same type.\n */\nexport class List<T> {\n\n\t/**\n\t * List values.\n\t */\n\tprotected _values: Array<T>;\n\n\tpublic events: EventDispatcher<Events<this, IListEvents<T>>> = new EventDispatcher();\n\n\t/**\n\t * Constructor\n\t *\n\t * @param initial  Inital list of values to add to list\n\t */\n\tconstructor(initial: Array<T> = []) {\n\t\tthis._values = initial;\n\t}\n\n\t/**\n\t * An array of values in the list.\n\t *\n\t * Do not use this property to add values. Rather use dedicated methods, like\n\t * `push()`, `removeIndex()`, etc.\n\t *\n\t * @readonly\n\t * @return List values\n\t */\n\tpublic get values(): Array<T> {\n\t\treturn this._values;\n\t}\n\n\t/**\n\t * Checks if list contains specific item reference.\n\t *\n\t * @param item  Item to search for\n\t * @return `true` if found, `false` if not found\n\t */\n\tpublic contains(value: T): boolean {\n\t\treturn this._values.indexOf(value) !== -1;\n\t}\n\n\t/**\n\t * Removes specific item from the list.\n\t *\n\t * @param item An item to remove\n\t */\n\tpublic removeValue(value: T): void {\n\t\tlet i = 0;\n\t\tlet length = this._values.length;\n\n\t\twhile (i < length) {\n\t\t\t// TODO handle NaN\n\t\t\tif (this._values[i] === value) {\n\t\t\t\tthis.removeIndex(i);\n\t\t\t\t--length;\n\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Searches the list for specific item and returns its index.\n\t *\n\t * @param item  An item to search for\n\t * @return Index or -1 if not found\n\t */\n\tpublic indexOf(value: T): number {\n\t\treturn $array.indexOf(this._values, value);\n\t}\n\n\t/**\n\t * Number of items in list.\n\t *\n\t * @readonly\n\t * @return Number of items\n\t */\n\tpublic get length(): number {\n\t\treturn this._values.length;\n\t}\n\n\t/**\n\t * Checks if there's a value at specific index.\n\t *\n\t * @param index  Index\n\t * @return Value exists?\n\t */\n\tpublic hasIndex(index: number): boolean {\n\t\treturn index >= 0 && index < this._values.length;\n\t}\n\n\t/**\n\t * Returns an item at specified index.\n\t *\n\t * @param index  Index\n\t * @return List item\n\t */\n\tpublic getIndex(index: number): T | undefined {\n\t\treturn this._values[index];\n\t}\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.events.isEnabled(\"push\")) {\n\t\t\tthis.events.dispatch(\"push\", {\n\t\t\t\ttype: \"push\",\n\t\t\t\ttarget: this,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.events.isEnabled(\"insertIndex\")) {\n\t\t\tthis.events.dispatch(\"insertIndex\", {\n\t\t\t\ttype: \"insertIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.events.isEnabled(\"setIndex\")) {\n\t\t\tthis.events.dispatch(\"setIndex\", {\n\t\t\t\ttype: \"setIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\toldValue,\n\t\t\t\tnewValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onRemoveIndex(index: number, oldValue: T) {\n\t\tif (this.events.isEnabled(\"removeIndex\")) {\n\t\t\tthis.events.dispatch(\"removeIndex\", {\n\t\t\t\ttype: \"removeIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\tindex,\n\t\t\t\toldValue\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onMoveIndex(oldIndex: number, newIndex: number, value: T) {\n\t\tif (this.events.isEnabled(\"moveIndex\")) {\n\t\t\tthis.events.dispatch(\"moveIndex\", {\n\t\t\t\ttype: \"moveIndex\",\n\t\t\t\ttarget: this,\n\t\t\t\toldIndex,\n\t\t\t\tnewIndex,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _onClear(oldValues: Array<T>) {\n\t\tif (this.events.isEnabled(\"clear\")) {\n\t\t\tthis.events.dispatch(\"clear\", {\n\t\t\t\ttype: \"clear\",\n\t\t\t\ttarget: this,\n\t\t\t\toldValues\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Sets value at specific index.\n\t *\n\t * If there's already a value at the index, it is overwritten.\n\t *\n\t * @param index  Index\n\t * @param value  New value\n\t * @return New value\n\t */\n\tpublic setIndex(index: number, value: T): T {\n\t\tcheckBounds(index, this._values.length);\n\n\t\tconst oldValue = this._values[index];\n\n\t\t// Do nothing if the old value and the new value are the same\n\t\tif (oldValue !== value) {\n\t\t\tthis._values[index] = value;\n\t\t\tthis._onSetIndex(index, oldValue, value);\n\t\t}\n\n\t\treturn oldValue;\n\t}\n\n\t/**\n\t * Adds an item to the list at a specific index, which pushes all the other\n\t * items further down the list.\n\t *\n\t * @param index Index\n\t * @param item  An item to add\n\t */\n\tpublic insertIndex<K extends T>(index: number, value: K): K {\n\t\tcheckBounds(index, this._values.length + 1);\n\n\t\t$array.insertIndex(this._values, index, value);\n\t\tthis._onInsertIndex(index, value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Swaps indexes of two items in the list.\n\t *\n\t * @param a  Item 1\n\t * @param b  Item 2\n\t */\n\tpublic swap(a: number, b: number): void {\n\t\tconst len = this._values.length;\n\n\t\tcheckBounds(a, len);\n\t\tcheckBounds(b, len);\n\n\t\tif (a !== b) {\n\t\t\tconst value_a = this._values[a];\n\t\t\tconst value_b = this._values[b];\n\n\t\t\tthis._values[a] = value_b;\n\t\t\tthis._onSetIndex(a, value_a, value_b);\n\n\t\t\tthis._values[b] = value_a;\n\t\t\tthis._onSetIndex(b, value_b, value_a);\n\t\t}\n\t}\n\n\t/**\n\t * Removes a value at specific index.\n\t *\n\t * @param index  Index of value to remove\n\t * @return Removed value\n\t */\n\tpublic removeIndex(index: number): T {\n\t\tcheckBounds(index, this._values.length);\n\n\t\tconst oldValue = this._values[index];\n\n\t\t$array.removeIndex(this._values, index);\n\t\tthis._onRemoveIndex(index, oldValue);\n\n\t\treturn oldValue;\n\t}\n\n\t/**\n\t * Moves an item to a specific index within the list.\n\t *\n\t * If the index is not specified it will move the item to the end of the\n\t * list.\n\t *\n\t * @param value  Item to move\n\t * @param index  Index to place item at\n\t */\n\tpublic moveValue<K extends T>(value: K, toIndex?: number): K {\n\t\t// TODO don't do anything if the desired index is the same as the current index\n\t\tlet index = this.indexOf(value);\n\n\t\t// TODO remove all old values rather than only the first ?\n\t\tif (index !== -1) {\n\t\t\t$array.removeIndex(this._values, index);\n\n\t\t\tif (toIndex == null) {\n\t\t\t\tconst toIndex = this._values.length;\n\t\t\t\tthis._values.push(value);\n\t\t\t\tthis._onMoveIndex(index, toIndex, value);\n\n\t\t\t} else {\n\t\t\t\t$array.insertIndex(this._values, toIndex, value);\n\t\t\t\tthis._onMoveIndex(index, toIndex, value);\n\t\t\t}\n\n\t\t} else if (toIndex == null) {\n\t\t\tthis._values.push(value);\n\t\t\tthis._onPush(value);\n\n\t\t} else {\n\t\t\t$array.insertIndex(this._values, toIndex, value);\n\t\t\tthis._onInsertIndex(toIndex, value);\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds an item to the end of the list.\n\t *\n\t * @param item  An item to add\n\t */\n\tpublic push<K extends T>(value: K): K {\n\t\tthis._values.push(value);\n\t\tthis._onPush(value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds an item as a first item in the list.\n\t *\n\t * @param item  An item to add\n\t */\n\tpublic unshift<K extends T>(value: K): K {\n\t\tthis.insertIndex(0, value);\n\t\treturn value;\n\t}\n\n\t/**\n\t * Adds multiple items to the list.\n\t *\n\t * @param items  An Array of items to add\n\t */\n\tpublic pushAll(values: Array<T>): void {\n\t\t$array.each(values, (value) => {\n\t\t\tthis.push(value);\n\t\t});\n\t}\n\n\t/**\n\t * Copies and adds items from abother list.\n\t *\n\t * @param source  A list top copy items from\n\t */\n\tpublic copyFrom(source: this): void {\n\t\tthis.pushAll(source._values);\n\t}\n\n\t/**\n\t * Returns the last item from the list, and removes it.\n\t *\n\t * @return Item\n\t */\n\tpublic pop(): Optional<T> {\n\t\tlet index = this._values.length - 1;\n\t\treturn index < 0 ? undefined : this.removeIndex(this._values.length - 1);\n\t}\n\n\t/**\n\t * Returns the first item from the list, and removes it.\n\t *\n\t * @return Item\n\t */\n\tpublic shift(): Optional<T> {\n\t\treturn this._values.length ? this.removeIndex(0) : undefined;\n\t}\n\n\t/**\n\t * Sets multiple items to the list.\n\t *\n\t * All current items are removed.\n\t *\n\t * @param newArray  New items\n\t */\n\tpublic setAll(newArray: Array<T>): void {\n\t\tconst old = this._values;\n\t\tthis._values = [];\n\t\tthis._onClear(old);\n\n\t\t$array.each(newArray, (value) => {\n\t\t\tthis._values.push(value);\n\t\t\tthis._onPush(value);\n\t\t});\n\t}\n\n\t/**\n\t * Removes all items from the list.\n\t */\n\tpublic clear(): void {\n\t\tthis.setAll([]);\n\t}\n\n\t/**\n\t * Returns an ES6 iterator for the list.\n\t */\n\tpublic *[Symbol.iterator](): Iterator<T> {\n\t\tconst length = this._values.length;\n\n\t\tfor (let i = 0; i < length; ++i) {\n\t\t\tyield this._values[i];\n\t\t}\n\t}\n\n\t/**\n\t * Calls `f` for each element in the list.\n\t *\n\t * `f` should have at least one parameter defined which will get a current\n\t * item, with optional second argument - index.\n\t */\n\tpublic each(f: (value: T, index: number) => void): void {\n\t\t$array.each(this._values, f);\n\t}\n\n\t/**\n\t * Calls `f` for each element in the list, from right to left.\n\t *\n\t * `f` should have at least one parameter defined which will get a current\n\t * item, with optional second argument - index.\n\t */\n\tpublic eachReverse(f: (value: T, index: number) => void): void {\n\t\t$array.eachReverse(this._values, f);\n\t}\n}\n\n\n/**\n * A version of a [[List]] where the elements are disposed automatically when\n * removed from the list, unless `autoDispose` is set to `false`.\n */\nexport class ListAutoDispose<A extends IDisposer> extends List<A> implements IDisposer {\n\t/**\n\t * Automatically disposes elements that are removed from the list.\n\t *\n\t * @default true\n\t */\n\tpublic autoDispose: boolean = true;\n\n\tprivate _disposed: boolean = false;\n\n\tprotected _onSetIndex(index: number, oldValue: A, newValue: A) {\n\t\tif (this.autoDispose) {\n\t\t\toldValue.dispose();\n\t\t}\n\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n\n\tprotected _onRemoveIndex(index: number, oldValue: A) {\n\t\tif (this.autoDispose) {\n\t\t\toldValue.dispose();\n\t\t}\n\n\t\tsuper._onRemoveIndex(index, oldValue);\n\t}\n\n\tprotected _onClear(oldValues: Array<A>) {\n\t\tif (this.autoDispose) {\n\t\t\t$array.each(oldValues, (x) => {\n\t\t\t\tx.dispose();\n\t\t\t});\n\t\t}\n\n\t\tsuper._onClear(oldValues);\n\t}\n\n\tpublic isDisposed(): boolean {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\n\t\t\tif (this.autoDispose) {\n\t\t\t\t$array.each(this._values, (x) => {\n\t\t\t\t\tx.dispose();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * A version of a [[List]] that is able to create new elements as well as\n * apply additional settings to newly created items.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/list-templates/} for more info\n */\nexport class ListTemplate<A extends Entity> extends ListAutoDispose<A> {\n\tpublic template: Template<A>;\n\tpublic make: () => A;\n\n\tconstructor(template: Template<A>, make: () => A) {\n\t\tsuper();\n\t\tthis.template = template;\n\t\tthis.make = make;\n\t}\n}\n","import type { IPoint } from \"./IPoint\";\nimport { isNumber } from \"./Type\";\nimport type { IBounds } from \"./IBounds\";\n\n/**\n * ============================================================================\n * CONSTANTS\n * ============================================================================\n * @hidden\n */\nexport const PI = Math.PI;\nexport const HALFPI = PI / 2;\nexport const RADIANS = PI / 180;\nexport const DEGREES = 180 / PI;\n\n/**\n * Rounds the numeric value to whole number or specific precision of set.\n *\n * @param value      Value\n * @param precision  Precision (number of decimal points)\n * @param floor  In case value ends with 0.5 and precision is 0, we might need to floor the value instead of ceiling it.\n * @return Rounded value\n */\nexport function round(value: number, precision?: number, floor?: boolean): number {\n\tif (!isNumber(precision) || precision <= 0) {\n\n\t\tlet rounded = Math.round(value);\n\t\tif (floor) {\n\t\t\tif (rounded - value == 0.5) {\n\t\t\t\trounded--;\n\t\t\t}\n\t\t}\n\t\treturn rounded;\n\t}\n\telse {\n\t\tlet d: number = Math.pow(10, precision);\n\t\treturn Math.round(value * d) / d;\n\t}\n}\n\n\n/**\n * Ceils the numeric value to whole number or specific precision of set.\n *\n * @param value      Value\n * @param precision  Precision (number of decimal points)\n * @return Rounded value\n */\nexport function ceil(value: number, precision: number): number {\n\tif (!isNumber(precision) || precision <= 0) {\n\t\treturn Math.ceil(value);\n\t}\n\telse {\n\t\tlet d: number = Math.pow(10, precision);\n\t\treturn Math.ceil(value * d) / d;\n\t}\n}\n\n\n/**\n * [getCubicControlPointA description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param p0        [description]\n * @param p1        [description]\n * @param p2        [description]\n * @param p3        [description]\n * @param tensionX  [description]\n * @param tensionY  [description]\n * @return [description]\n */\nexport function getCubicControlPointA(p0: IPoint, p1: IPoint, p2: IPoint, tensionX: number, tensionY: number): IPoint {\n\treturn { x: ((-p0.x + p1.x / tensionX + p2.x) * tensionX), y: ((-p0.y + p1.y / tensionY + p2.y) * tensionY) };\n}\n\n/**\n * [getCubicControlPointB description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param p0        [description]\n * @param p1        [description]\n * @param p2        [description]\n * @param p3        [description]\n * @param tensionX  [description]\n * @param tensionY  [description]\n * @return [description]\n */\nexport function getCubicControlPointB(p1: IPoint, p2: IPoint, p3: IPoint, tensionX: number, tensionY: number): IPoint {\n\treturn { x: ((p1.x + p2.x / tensionX - p3.x) * tensionX), y: ((p1.y + p2.y / tensionY - p3.y) * tensionY) };\n}\n\n\nexport function fitToRange(value: number, min: number, max: number): number {\n\treturn Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns sine of an angle specified in degrees.\n *\n * @param value  Value\n * @return Sine\n */\nexport function sin(angle: number): number {\n\treturn Math.sin(RADIANS * angle);\n}\n\n/**\n * Returns tan of an angle specified in degrees.\n *\n * @param value  Value\n * @return Sine\n */\nexport function tan(angle: number): number {\n\treturn Math.tan(RADIANS * angle);\n}\n\n/**\n * Returns cosine of an angle specified in degrees.\n *\n * @param value  Value\n * @return Cosine\n */\nexport function cos(angle: number): number {\n\treturn Math.cos(RADIANS * angle);\n}\n\n// 0 to 360\nexport function normalizeAngle(value: number): number {\n\tvalue = value % 360;\n\tif (value < 0) {\n\t\tvalue += 360;\n\t}\n\treturn value;\n}\n\n// TODO this doesn't work properly for skewing, and it's probably broken for rotation too\nexport function getArcBounds(cx: number, cy: number, startAngle: number, endAngle: number, radius: number): IBounds {\n\n\tlet minX = Number.MAX_VALUE;\n\tlet minY = Number.MAX_VALUE;\n\tlet maxX = -Number.MAX_VALUE;\n\tlet maxY = -Number.MAX_VALUE;\n\n\tlet bpoints = [];\n\n\tbpoints.push(getArcPoint(radius, startAngle));\n\tbpoints.push(getArcPoint(radius, endAngle));\n\n\tlet fromAngle = Math.min(Math.floor(startAngle / 90) * 90, Math.floor(endAngle / 90) * 90);\n\tlet toAngle = Math.max(Math.ceil(startAngle / 90) * 90, Math.ceil(endAngle / 90) * 90);\n\n\tfor (let angle = fromAngle; angle <= toAngle; angle += 90) {\n\t\tif (angle >= startAngle && angle <= endAngle) {\n\t\t\tbpoints.push(getArcPoint(radius, angle));\n\t\t}\n\t}\n\n\tfor (let i = 0; i < bpoints.length; i++) {\n\t\tlet pt = bpoints[i];\n\t\tif (pt.x < minX) { minX = pt.x; }\n\t\tif (pt.y < minY) { minY = pt.y; }\n\t\tif (pt.x > maxX) { maxX = pt.x; }\n\t\tif (pt.y > maxY) { maxY = pt.y; }\n\t}\n\n\treturn ({ left: cx + minX, top: cy + minY, right: cx + maxX, bottom: cy + maxY });\n}\n\n/**\n * Returns point on arc\n *\n * @param center point\n * @param radius\n * @param arc\n * @return {boolean}\n */\nexport function getArcPoint(radius: number, arc: number) {\n\treturn ({ x: radius * cos(arc), y: radius * sin(arc) });\n}\n\n\nexport function mergeBounds(bounds: IBounds[]): IBounds {\n\tconst len = bounds.length;\n\n\tif (len > 0) {\n\t\tlet bound = bounds[0];\n\t\tlet left = bound.left;\n\t\tlet top = bound.top;\n\t\tlet right = bound.right;\n\t\tlet bottom = bound.bottom;\n\n\t\tif (len > 1) {\n\t\t\tfor (let i = 1; i < len; i++) {\n\t\t\t\tbound = bounds[i];\n\t\t\t\tleft = Math.min(bound.left, left);\n\t\t\t\tright = Math.max(bound.right, right);\n\t\t\t\ttop = Math.min(bound.top, top);\n\t\t\t\tbottom = Math.max(bound.bottom, bottom);\n\t\t\t}\n\t\t}\n\n\t\treturn { left, right, top, bottom };\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n\nexport function fitAngleToRange(value: number, startAngle: number, endAngle: number): number {\n\n\tif (startAngle > endAngle) {\n\t\tlet temp: number = startAngle;\n\t\tstartAngle = endAngle;\n\t\tendAngle = temp;\n\t}\n\n\tvalue = normalizeAngle(value);\n\n\tlet count = (startAngle - normalizeAngle(startAngle)) / 360;\n\n\tif (value < startAngle) {\n\t\tvalue += 360 * (count + 1);\n\t}\n\n\tlet maxEnd: number = startAngle + (endAngle - startAngle) / 2 + 180;\n\tlet maxStart: number = startAngle + (endAngle - startAngle) / 2 - 180;\n\n\tif (value > endAngle) {\n\n\t\tif (value - 360 > startAngle) {\n\t\t\tvalue -= 360;\n\t\t}\n\t\telse {\n\t\t\tif (value < maxEnd) {\n\t\t\t\tvalue = endAngle;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = startAngle;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (value < startAngle) {\n\t\tif (value > maxStart) {\n\t\t\tvalue = startAngle;\n\t\t}\n\t\telse {\n\t\t\tvalue = endAngle;\n\t\t}\n\t}\n\n\treturn value;\n}\n\nexport function inBounds(point: IPoint, bounds: IBounds) {\n\tif (point.x >= bounds.left && point.y >= bounds.top && point.x <= bounds.right && point.y <= bounds.bottom) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function getAngle(point1: IPoint, point2?: IPoint): number {\n\tif (!point2) {\n\t\tpoint2 = { x: point1.x * 2, y: point1.y * 2 };\n\t}\n\tlet diffX: number = point2.x - point1.x;\n\tlet diffY: number = point2.y - point1.y;\n\tlet angle: number = Math.atan2(diffY, diffX) * DEGREES;\n\tif (angle < 0) {\n\t\tangle += 360;\n\t}\n\treturn normalizeAngle(angle);\n}\n\n/**\n * [getPointOnQuadraticCurve description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param pointA        [description]\n * @param pointB        [description]\n * @param controlPoint  [description]\n * @param position      [description]\n * @return [description]\n */\nexport function getPointOnQuadraticCurve(pointA: IPoint, pointB: IPoint, controlPoint: IPoint, position: number): IPoint {\n\tlet x: number = (1 - position) * (1 - position) * pointA.x + 2 * (1 - position) * position * controlPoint.x + position * position * pointB.x;\n\tlet y: number = (1 - position) * (1 - position) * pointA.y + 2 * (1 - position) * position * controlPoint.y + position * position * pointB.y;\n\treturn { x: x, y: y };\n}\n\nexport function getPointOnLine(pointA: IPoint, pointB: IPoint, position: number): IPoint {\n\treturn { x: pointA.x + (pointB.x - pointA.x) * position, y: pointA.y + (pointB.y - pointA.y) * position };\n}\n\n\n/**\n * Returns the closest value from the array of values to the reference value.\n *\n * @param values  Array of values\n * @param value   Reference value\n * @return Closes value from the array\n */\nexport function closest(values: number[], referenceValue: number): number {\n\treturn values.reduce(function(prev, curr) {\n\t\treturn (Math.abs(curr - referenceValue) < Math.abs(prev - referenceValue) ? curr : prev);\n\t});\n}\n\nexport function boundsOverlap (bounds1:IBounds, bounds2:IBounds) {  \n  return !(bounds1.bottom < bounds2.top || bounds2.bottom < bounds1.top || bounds1.right < bounds2.left || bounds2.right < bounds1.left);\n}","import * as $array from \"./Array\";\nimport type { Keyof } from \"./Type\";\n\nexport function keys<O>(object: O): Array<Keyof<O>> {\n\treturn Object.keys(object) as Array<Keyof<O>>;\n}\n\n/**\n * Returns an array of object's property names ordered using specific ordering\n * function.\n *\n * @param object  Source object\n * @param order   Ordering function\n * @returns Object property names\n */\nexport function keysOrdered<Object>(object: Object, order: (a: Keyof<Object>, b: Keyof<Object>) => number): Array<Keyof<Object>> {\n\treturn keys(object).sort(order);\n}\n\nexport function copy<O>(object: O): O {\n\treturn Object.assign({}, object);\n}\n\nexport function each<O>(object: O, f: <K extends keyof O>(key: K, value: Exclude<O[K], undefined>) => void): void {\n\tkeys(object).forEach((key) => {\n\t\tf(key, object[key] as any);\n\t});\n}\n\n/**\n * Iterates through all properties of the object calling `fn` for each of them.\n *\n * If return value of the function evaluates to `false` further iteration is\n * cancelled.\n *\n * @param object  Source object\n * @param fn      Callback function\n */\nexport function eachContinue<Object>(object: Object, fn: <Key extends Keyof<Object>>(key: Key, value: Object[Key]) => boolean): void {\n\tfor (let key in object) {\n\t\tif (hasKey(object, key)) {\n\t\t\tif (!fn(key as Keyof<Object>, object[key] as Object[Keyof<Object>])) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Orders object properties using custom `ord` function and iterates through\n * them calling `fn` for each of them.\n *\n * @param object  Source object\n * @param fn      Callback function\n * @param order   Ordering function\n */\nexport function eachOrdered<Object>(object: Object, fn: <Key extends Keyof<Object>>(key: Key, value: Object[Key]) => void, ord: (a: Keyof<Object>, b: Keyof<Object>) => number): void {\n\t$array.each(keysOrdered(object, ord), (key) => {\n\t\tfn(key, object[key]);\n\t});\n}\n\n/**\n * Checks if `object` has a specific `key`.\n *\n * @param object  Source object\n * @param key     Property name\n * @returns Has key?\n */\nexport function hasKey<Object, Key extends keyof Object>(object: Object, key: Key): boolean {\n\treturn {}.hasOwnProperty.call(object, key);\n}\n\n/**\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\n *\n * @param fromObject  Source object\n * @param toObject    Target object\n * @return Updated target object\n * @todo Maybe consolidate with utils.copy?\n */\nexport function softCopyProperties(source: Object, target: Object): Object {\n\teach(source, (key, value) => {\n\t\t// only if value is set\n\t\t//if ($type.hasValue(value) && !($type.hasValue((<any>target)[key]))) {\n\t\tif (value != null && (<any>target)[key] == null) {\n\t\t\t(<any>target)[key] = value;\n\t\t}\n\t});\n\treturn target;\n}\n","export type Order = -1 | 0 | 1;\n\n/**\n * @ignore\n */\nexport function compare<A extends string | number | boolean>(left: A, right: A): Order {\n\tif (left === right) {\n\t\treturn 0;\n\n\t} else if (left < right) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareArray<A>(left: ArrayLike<A>, right: ArrayLike<A>, f: (x: A, y: A) => Order): Order {\n\tconst leftLength = left.length;\n\tconst rightLength = right.length;\n\n\tconst length = Math.min(leftLength, rightLength);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst order = f(left[i], right[i]);\n\n\t\tif (order !== 0) {\n\t\t\treturn order;\n\t\t}\n\t}\n\n\treturn compare(leftLength, rightLength);\n}\n\n/**\n * @ignore\n */\nexport function reverse(order: Order): Order {\n\tif (order < 0) {\n\t\treturn 1;\n\n\t} else if (order > 0) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareNumber(a: number, b: number): Order {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n","/**\n * ============================================================================\n * MAIN CLASS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Represents a relative value (percent).\n *\n * The Percent object, can be instantiated using two ways:\n *\n * * Via `new Percent(X)`.\n * * Via `am5.percent(X)`.\n *\n * You can also use shortcut functions for `0%`, `50%`, and `100%`:\n * * `am5.p0`\n * * `am5.p50`\n * * `am5.p1000`\n */\nexport class Percent {\n\n\t/**\n\t * Value in percent.\n\t */\n\tprotected _value: number;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param percent  Percent value\n\t */\n\tconstructor(percent: number) {\n\t\tthis._value = percent;\n\t}\n\n\t/**\n\t * Relative value.\n\t *\n\t * E.g. 100% is 1, 50% is 0.5, etc.\n\t *\n\t * This is useful to apply transformations to other values. E.g.:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = new am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = new am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * Alternatively, you can use `am5.percent()` helper function:\n\t *\n\t * ```TypeScript\n\t * let value = 256;\n\t * let percent = am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t * ```JavaScript\n\t * var value = 256;\n\t * var percent = am5.p50;\n\t * console.log(value * percent.value); // outputs 128\n\t * ```\n\t *\n\t * @readonly\n\t * @return Relative value\n\t */\n\tpublic get value(): number {\n\t\treturn this._value / 100;\n\t}\n\n\t/**\n\t * Value in percent.\n\t *\n\t * @return Percent\n\t */\n\tpublic get percent(): number {\n\t\treturn this._value;\n\t}\n\n\tpublic toString(): string {\n\t\treturn \"\" + this._value + \"%\";\n\t}\n\n\tpublic interpolate(min: number, max: number): number {\n\t\treturn min + (this.value * (max - min));\n\t}\n\n\tstatic normalize(percent: Percent | number, min: number, max: number): Percent {\n\t\tif (percent instanceof Percent) {\n\t\t\treturn percent;\n\n\t\t} else {\n\t\t\tif (min === max) {\n\t\t\t\treturn new Percent(0);\n\n\t\t\t} else {\n\t\t\t\treturn new Percent(Math.min(Math.max((percent - min) * (1 / (max - min)), 0), 1) * 100);\n\t\t\t}\n\t\t}\n\t}\n\n\t/*public toNumber(): number {\n\t\treturn this.percent;\n\t}*/\n\n}\n\n\n/**\n * Converts numeric percent value to a proper [[Percent]] object.\n *\n * ```TypeScript\n * pieSeries.set(\"radius\", am5.percent(80));\n * ```\n * ```JavaScript\n * pieSeries.set(\"radius\", am5.percent(80));\n * ```\n *\n * @param value  Percent\n * @return Percent object\n */\nexport function percent(value: number): Percent {\n\treturn new Percent(value);\n}\n\n/**\n * A shortcut function to `am5.percent(0)`.\n */\nexport const p0 = percent(0);\n\n/**\n * A shortcut function to `am5.percent(100)`.\n */\nexport const p100 = percent(100);\n\n/**\n * A shortcut function to `am5.percent(50)`.\n */\nexport const p50 = percent(50);\n\n\n/**\n * Checks if value is a [[Percent]] object.\n *\n * @ignore Exclude from docs\n * @param value  Input value\n * @return Is percent?\n */\nexport function isPercent(value: any): boolean {\n\treturn value instanceof Percent;\n}\n","/** @ignore *//** */\n\nimport * as $type from \"./Type\";\nimport * as $utils from \"./Utils\";\nimport { Sprite } from \"../render/Sprite\";\nimport { TextFormatter } from \"./TextFormatter\";\n\n/**\n * @ignore\n */\nexport function populateString(target: Sprite, string: string): string {\n\tif (string != null) {\n\t\tstring = \"\" + string;\n\t\tstring = TextFormatter.escape(string);\n\t\tlet tags = string.match(/\\{([^}]+)\\}/g);\n\t\tlet i;\n\t\tif (tags) {\n\t\t\tfor (i = 0; i < tags.length; i++) {\n\t\t\t\tlet tag = tags[i].replace(/\\{([^}]+)\\}/, \"$1\");\n\t\t\t\tlet value = getTagValue(target, tag, \"\");\n\n\t\t\t\tif (value == null) {\n\t\t\t\t\tvalue = \"\";\n\t\t\t\t}\n\n\t\t\t\tstring = string.split(tags[i]).join(value);\n\t\t\t}\n\t\t}\n\t\tstring = TextFormatter.unescape(string);\n\t}\n\telse {\n\t\tstring = \"\";\n\t}\n\n\t// TODO: apply adapter?\n\treturn string;\n}\n\n/**\n * @ignore\n */\nfunction getTagValue(target: Sprite, tagName: string, format?: string): string {\n\tlet value: any;\n\tconst dataItem = target.dataItem;\n\n\t// Parse parts\n\tlet parts: any[] = [];\n\tlet reg = /([^.]+)\\(([^)]*)\\)|([^.]+)/g;;\n\tlet matches;\n\n\twhile (true) {\n\t\tmatches = reg.exec(tagName);\n\n\t\tif (matches === null) {\n\t\t\tbreak;\n\t\t}\n\n\t\tif (matches[3]) {\n\t\t\t// Simple property\n\t\t\tparts.push({\n\t\t\t\tprop: matches[3]\n\t\t\t});\n\n\t\t\t// Check if maybe we should force a formatter on this value\n\t\t\tconst dateFields = target.getDateFormatter().get(\"dateFields\", []);\n\t\t\tconst numericFields = target.getNumberFormatter().get(\"numericFields\", []);\n\t\t\tconst durationFields = target.getDurationFormatter().get(\"durationFields\", []);\n\t\t\tif ((<any>dateFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatDate\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((<any>numericFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatNumber\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if ((<any>durationFields).indexOf(matches[3]) !== -1) {\n\t\t\t\tparts.push({\n\t\t\t\t\tmethod: \"formatDuration\",\n\t\t\t\t\tparams: []\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Method\n\t\t\t// Parse parameters\n\t\t\tlet params: any[] = [];\n\t\t\tif ($utils.trim(matches[2]) != \"\") {\n\t\t\t\tlet reg2 = /'([^']*)'|\"([^\"]*)\"|([0-9\\-]+)/g;\n\t\t\t\tlet matches2;\n\n\t\t\t\twhile (true) {\n\t\t\t\t\tmatches2 = reg2.exec(matches[2]);\n\n\t\t\t\t\tif (matches2 === null) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparams.push(matches2[1] || matches2[2] || matches2[3])\n\t\t\t\t}\n\t\t\t}\n\t\t\tparts.push({\n\t\t\t\tmethod: matches[1],\n\t\t\t\tparams: params\n\t\t\t})\n\t\t}\n\t}\n\n\t// Check if we can retrieve the value from data item\n\tif (dataItem) {\n\n\n\t\t// Check values\n\t\tvalue = getTagValueFromObject(target, parts, dataItem._settings);\n\n\t\t// Check properties\n\t\tif (value == null || $type.isObject(value)) { // isObject helps to solve problem with date axis, as for example dateX will get dateX from values object and won't get to the dateX date.\n\t\t\tvalue = getTagValueFromObject(target, parts, dataItem);\n\t\t}\n\n\t\t// Check data context\n\t\tlet dataContext: any = dataItem.dataContext;\n\n\t\tif (value == null && dataContext) {\n\t\t\tvalue = getTagValueFromObject(target, parts, dataContext);\n\n\t\t\t// Maybe it's a literal dot-separated name of the key in dataContext?\n\t\t\tif (value == null) {\n\t\t\t\tvalue = getTagValueFromObject(target, [{\n\t\t\t\t\tprop: tagName\n\t\t\t\t}], dataContext);\n\t\t\t}\n\n\t\t\t// scond data context level sometimes exist (tree map)\n\t\t\tif (value == null && dataContext.dataContext) {\n\t\t\t\tvalue = getTagValueFromObject(target, parts, dataContext.dataContext);\n\t\t\t}\n\t\t}\n\n\t\t// Check component's data item\n\t\tif (value == null && dataItem.component && dataItem.component.dataItem !== dataItem) {\n\t\t\tvalue = getTagValue(dataItem.component, tagName, format);\n\t\t}\n\t}\n\n\t// Check sprite's properties\n\tif (value == null) {\n\t\tvalue = getTagValueFromObject(target, parts, target);\n\t}\n\n\t// Finally, check the parent\n\tif (value == null && target.parent) {\n\t\tvalue = getTagValue(target.parent, tagName, format);\n\t}\n\n\treturn value;\n}\n\n/**\n * @ignore\n */\nfunction getCustomDataValue(target: Sprite, prop: string): any {\n\tconst customData = target.getPrivate(\"customData\");\n\tif ($type.isObject(customData)) {\n\t\treturn (<any>customData)[prop];\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getTagValueFromObject(target: Sprite, parts: any[], object: any, format?: string): any {\n\tlet current: any = object;\n\tlet formatApplied = false;\n\tfor (let i = 0, len = parts.length; i < len; i++) {\n\t\tlet part = parts[i];\n\t\tif (part.prop) {\n\t\t\t// Regular property\n\t\t\tif (current instanceof Sprite) {\n\t\t\t\tlet tmp = current.get(part.prop);\n\t\t\t\tif (tmp == null) tmp = current.getPrivate(part.prop);\n\t\t\t\tif (tmp == null) tmp = (<any>current)[part.prop];\n\t\t\t\tif (tmp == null) tmp = getCustomDataValue(current, part.prop);\n\t\t\t\tcurrent = tmp;\n\t\t\t}\n\t\t\telse if (current.get) {\n\t\t\t\tlet tmp = current.get(part.prop);\n\t\t\t\tif (tmp == null) tmp = (<any>current)[part.prop];\n\t\t\t\tcurrent = tmp;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurrent = current[part.prop];\n\t\t\t}\n\n\t\t\tif (current == null) {\n\t\t\t\t// Not set, return undefined\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Method\n\n\t\t\tswitch (part.method) {\n\t\t\t\tcase \"formatNumber\":\n\t\t\t\t\tlet numberValue = $type.toNumber(current);\n\t\t\t\t\tif (numberValue != null) {\n\t\t\t\t\t\tcurrent = target.getNumberFormatter().format(\n\t\t\t\t\t\t\tnumberValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"formatDate\":\n\t\t\t\t\tlet dateValue = $type.toDate(current);\n\t\t\t\t\tif (!$type.isDate(dateValue) || $type.isNaN(dateValue.getTime())) {\n\t\t\t\t\t\t// Was not able to get date out of value, quitting and letting\n\t\t\t\t\t\t// calling method try another value\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (dateValue != null) {\n\t\t\t\t\t\tcurrent = target.getDateFormatter().format(\n\t\t\t\t\t\t\tdateValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"formatDuration\":\n\t\t\t\t\tlet durationValue = $type.toNumber(current);\n\t\t\t\t\tif (durationValue != null) {\n\t\t\t\t\t\tcurrent = target.getDurationFormatter().format(\n\t\t\t\t\t\t\tdurationValue,\n\t\t\t\t\t\t\tformat || part.params[0] || undefined,\n\t\t\t\t\t\t\tpart.params[1] || undefined\n\t\t\t\t\t\t);\n\t\t\t\t\t\tformatApplied = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"urlEncode\":\n\t\t\t\tcase \"encodeURIComponent\":\n\t\t\t\t\tcurrent = encodeURIComponent(current);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (current[part.method]) {\n\t\t\t\t\t\tcurrent[part.method].apply(object, part.params);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Apply default format if it wasn't applied explicitly\n\tif (!formatApplied) {\n\n\t\tlet formatParts = [{\n\t\t\tmethod: \"\",\n\t\t\tparams: format\n\t\t}];\n\n\t\tif (format == null) {\n\n\t\t\t// Format is not set\n\t\t\t// Determine from the type of the value\n\t\t\tif ($type.isNumber(current)) {\n\t\t\t\tformatParts[0].method = \"formatNumber\";\n\t\t\t\tformatParts[0].params = \"\";\n\t\t\t}\n\t\t\telse if ($type.isDate(current)) {\n\t\t\t\tformatParts[0].method = \"formatDate\";\n\t\t\t\tformatParts[0].params = \"\";\n\t\t\t}\n\n\t\t}\n\t\telse {\n\n\t\t\t// Format set\n\t\t\t// Try to determine formatter based on the format\n\t\t\tlet formatterType: string = $utils.getFormat(format);\n\n\t\t\t// format\n\t\t\tif (formatterType === \"number\") {\n\t\t\t\tformatParts[0].method = \"formatNumber\";\n\t\t\t}\n\t\t\telse if (formatterType === \"date\") {\n\t\t\t\tformatParts[0].method = \"formatDate\";\n\t\t\t}\n\t\t\telse if (formatterType === \"duration\") {\n\t\t\t\tformatParts[0].method = \"formatDuration\";\n\t\t\t}\n\n\t\t}\n\n\t\t// Apply format\n\t\tif (formatParts[0].method) {\n\t\t\tcurrent = getTagValueFromObject(target, formatParts, current);\n\t\t}\n\n\t}\n\n\treturn current;\n}","import type { Entity, Dirty } from \"./Entity\";\nimport type { State } from \"./States\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { IDisposer, Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\n\nexport class TemplateState<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\n\tprivate _name: string;\n\tprivate _template: Template<E>;\n\n\tconstructor(name: string, template: Template<E>, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._name = name;\n\t\tthis._template = template;\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._settings[key];\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis._settings[key] = settings[key];\n\t\t});\n\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic _apply(other: State<E>, seen: Dirty<E[\"_settings\"]>): void {\n\t\t$object.each(this._settings, (key, value) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tseen[key] = true;\n\t\t\t\tother.setRaw(key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nexport class TemplateStates<E extends Entity> {\n\tprivate _template: Template<E>;\n\tprivate _states: { [key: string]: TemplateState<E> } = {};\n\n\tconstructor(template: Template<E>) {\n\t\tthis._template = template;\n\t}\n\n\tpublic lookup(name: string): TemplateState<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): TemplateState<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new TemplateState(name, this._template, settings);\n\t\t\tthis._states[name] = state;\n\t\t\tthis._template._stateChanged(name);\n\t\t\treturn state;\n\t\t}\n\t}\n\n\tpublic remove(name: string) {\n\t\tdelete this._states[name];\n\t\tthis._template._stateChanged(name);\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): void {\n\t\t$object.each(this._states, (key, value) => {\n\t\t\tlet seen = state.states[key];\n\n\t\t\tif (seen == null) {\n\t\t\t\tseen = state.states[key] = {};\n\t\t\t}\n\n\t\t\tconst other = entity.states.create(key as string, {});\n\t\t\tvalue._apply(other, seen);\n\t\t});\n\t}\n}\n\n\nexport class TemplateAdapters<E extends Entity> {\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E>(value: O[\"_settings\"][K], target: O, key: K) => O[\"_settings\"][K]> } = {};\n\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: (value: E[\"_settings\"][Key], target: E, key: Key) => E[\"_settings\"][Key]): IDisposer {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(callbacks!, callback);\n\n\t\t\tif (callbacks!.length === 0) {\n\t\t\t\tdelete this._callbacks[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove<Key extends keyof E[\"_settings\"]>(key: Key) {\n\t\tconst callbacks = this._callbacks[key];\n\n\t\tif (callbacks !== undefined) {\n\t\t\tdelete this._callbacks[key];\n\t\t}\n\t}\n\n\tpublic _apply(entity: E): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._callbacks, (key, callbacks) => {\n\t\t\t$array.each(callbacks, (callback) => {\n\t\t\t\tdisposers.push(entity.adapters.add(key, callback));\n\t\t\t});\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n}\n\n\nexport interface ApplyState<E extends Entity> {\n\tsettings: Dirty<E[\"_settings\"]>;\n\tprivateSettings: Dirty<E[\"_privateSettings\"]>;\n\tstates: { [name: string]: Dirty<E[\"_settings\"]> };\n}\n\n\n// TODO maybe extend from Properties ?\nexport class Template<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _privateSettings: E[\"_privateSettings\"] = {};\n\n\t// TODO code duplication with Properties\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\n\tpublic _entities: Array<E> = [];\n\n\tpublic readonly states: TemplateStates<E> = new TemplateStates(this);\n\n\tpublic readonly adapters: TemplateAdapters<E> = new TemplateAdapters();\n\tpublic readonly events: EventDispatcher<Events<E, E[\"_events\"]>> = new EventDispatcher();\n\n\tpublic setup: (<O extends E>(entity: O) => void) | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tpublic static new<E extends Entity>(settings: E[\"_settings\"]): Template<E> {\n\t\treturn new Template<E>(settings, true);\n\t}\n\n\tconstructor(settings: E[\"_settings\"], isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setRaw<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\tpublic set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (this._settings[key] !== value) {\n\t\t\tthis.setRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tdelete this._settings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic removeAll(): void {\n\t\t$object.each(this._settings, (key, _value) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._privateSettings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._privateSettings[key] = value;\n\t\treturn value;\n\t}\n\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tif (this._privateSettings[key] !== value) {\n\t\t\tthis.setPrivateRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplatePrivateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tdelete this._privateSettings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplatePrivateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setAll(value: this[\"_settings\"]) {\n\t\t$object.each(value, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._settingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.on(key, event));\n\t\t\t});\n\t\t});\n\n\t\t$object.each(this._privateSettingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.onPrivate(key, event));\n\t\t\t});\n\t\t});\n\n\t\tthis.states._apply(entity, state);\n\n\t\tdisposers.push(this.adapters._apply(entity));\n\t\tdisposers.push(entity.events.copyFrom(this.events));\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n\tpublic _setObjectTemplate(entity: E) {\n\t\tthis._entities.push(entity);\n\t}\n\n\tpublic _removeObjectTemplate(entity: E) {\n\t\t$array.remove(this._entities, entity);\n\t}\n\n\tpublic _stateChanged(name: string): void {\n\t\tthis._entities.forEach((entity) => {\n\t\t\tentity._applyStateByKey(name);\n\t\t});\n\t}\n}\n","import { Color } from \"./Color\"\nimport type { ITextStyle } from \"../render/backend/Renderer\"\nimport * as $type from \"./Type\";\n\n/**\n * Defines an interface for an object that holds a chunk of text.\n */\nexport interface ITextChunk {\n\n\t/**\n\t * Type of the chunk.\n\t */\n\t\"type\": \"value\" | \"text\" | \"format\" | \"image\",\n\n\t/**\n\t * Text.\n\t */\n\t\"text\": string\n\n}\n\nexport class TextFormatter {\n\n\tpublic static prefix = \"__amcharts__\";\n\n\t/**\n\t * Replaces brackets with temporary placeholders.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Escaped text\n\t */\n\tpublic static escape(text: string): string {\n\t\treturn text.\n\t\t\treplace(/\\[\\[/g, this.prefix + \"1\").\n\t\t\treplace(/([^\\/\\]]{1})\\]\\]/g, \"$1\" + this.prefix + \"2\").\n\t\t\treplace(/\\]\\]/g, this.prefix + \"2\").\n\t\t\treplace(/\\{\\{/g, this.prefix + \"3\").\n\t\t\treplace(/\\}\\}/g, this.prefix + \"4\").\n\t\t\treplace(/\\'\\'/g, this.prefix + \"5\");\n\t}\n\n\t/**\n\t * Replaces placeholders back to brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Escaped text\n\t * @return Unescaped text\n\t */\n\tpublic static unescape(text: string): string {\n\t\treturn text.\n\t\t\treplace(new RegExp(this.prefix + \"1\", \"g\"), \"[[\").\n\t\t\treplace(new RegExp(this.prefix + \"2\", \"g\"), \"]]\").\n\t\t\treplace(new RegExp(this.prefix + \"3\", \"g\"), \"{{\").\n\t\t\treplace(new RegExp(this.prefix + \"4\", \"g\"), \"}}\").\n\t\t\treplace(new RegExp(this.prefix + \"5\", \"g\"), \"''\");\n\t}\n\n\t/**\n\t * Cleans up the text text for leftover double square brackets.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text  Input text\n\t * @return Cleaned up text\n\t */\n\tpublic static cleanUp(text: string): string {\n\t\treturn text.\n\t\t\treplace(/\\[\\[/g, \"[\").\n\t\t\treplace(/\\]\\]/g, \"]\").\n\t\t\treplace(/\\{\\{/g, \"{\").\n\t\t\treplace(/\\}\\}/g, \"}\").\n\t\t\treplace(/\\'\\'/g, \"'\");\n\t}\n\n\t/**\n\t * Splits string into chunks. (style blocks, quoted blocks, regular blocks)\n\t *\n\t * If the second parameter `quotedBlocks` is set to `true` this method will\n\t * also single out text blocks enclosed within single quotes that no\n\t * formatting should be applied to, and they should be displayed as is.\n\t *\n\t * Default for the above is `false`, so that you can use single quote in text\n\t * without escaping it.\n\t *\n\t * If enabled, single quotes can be escaped by doubling it - adding two\n\t * single quotes, which will be replaced by a one single quote in the final\n\t * output.\n\t *\n\t * @ignore Exclude from docs\n\t * @param text          Text to chunk\n\t * @param quotedBlocks  Use quoted blocks\n\t * @param noFormatting  Formatting blocks will be treated as regular text\n\t * @return Array of string chunks\n\t */\n\tpublic static chunk(text: string, quotedBlocks: boolean = false, noFormatting: boolean = false): ITextChunk[] {\n\n\t\t// Init result\n\t\tlet res: ITextChunk[] = [];\n\n\t\t// Replace double (escaped) square spaces and quotes with temporary codes\n\t\ttext = this.escape(text);\n\n\t\t// Deal with style blocks\n\t\tlet chunks = quotedBlocks ? text.split(\"'\") : [text];\n\t\tfor (let i: number = 0; i < chunks.length; i++) {\n\t\t\tlet chunk = chunks[i];\n\n\t\t\t// Empty?\n\t\t\tif (chunk === \"\") {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ((i % 2) === 0) {\n\n\t\t\t\t// Text outside quotes\n\t\t\t\t// Parse for style blocks which are \"text\" chunks, the rest chunks are\n\t\t\t\t// \"value\"\n\n\t\t\t\tchunk = chunk.replace(/\\]\\[/g, \"]\" + $type.PLACEHOLDER + \"[\");\n\t\t\t\tchunk = chunk.replace(/\\[\\]/g, \"[ ]\");\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n\n\t\t\t\t\t// Placeholder?\n\t\t\t\t\tif (chunk2 === $type.PLACEHOLDER) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Empty?\n\t\t\t\t\tif (chunk2 === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Block or value\n\t\t\t\t\tif ((i2 % 2) === 0) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"value\",\n\t\t\t\t\t\t\t\"text\": chunk2\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": noFormatting ? \"value\" : \"format\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t// A text within doublequotes\n\t\t\t\t// All chunks are \"text\"\n\n\t\t\t\tlet chunks2 = chunk.split(/[\\[\\]]+/);\n\t\t\t\tfor (let i2: number = 0; i2 < chunks2.length; i2++) {\n\t\t\t\t\tlet chunk2 = this.cleanUp(this.unescape(chunks2[i2]));\n\n\t\t\t\t\t// Empty?\n\t\t\t\t\tif (chunk2 === \"\") {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Block or text\n\t\t\t\t\tif ((i2 % 2) === 0) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": chunk2\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse if (this.isImage(chunk2)) {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"image\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tres.push({\n\t\t\t\t\t\t\t\"type\": \"format\",\n\t\t\t\t\t\t\t\"text\": \"[\" + chunk2 + \"]\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\treturn res;\n\t}\n\n\t/**\n\t * Checks if supplied format contains image information and should be\n\t * formatted as such.\n\t * I.e.: `[img: myImage.png]`\n\t *\n\t * @ignore\n\t * @param  text  Format\n\t * @return true if it is an image\n\t */\n\tpublic static isImage(text: string): boolean {\n\t\treturn text.match(/img[ ]?:/) ? true : false;\n\t}\n\n\tpublic static getTextStyle(style: string): ITextStyle {\n\n\t\t// let textStyle: string[] = [];\n\t\t// let textFill: string | undefined;\n\t\tlet format: ITextStyle = {};\n\n\t\tif (style == \"\" || style == \"[ ]\") {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Pre-process quoted text\n\t\tconst q = style.match(/('[^']*')|(\"[^\"]*\")/gi);\n\t\tif (q) {\n\t\t\tfor (let i: number = 0; i < q.length; i++) {\n\t\t\t\tstyle = style.replace(q[i], q[i].replace(/['\"]*/g, \"\").replace(/[ ]+/g, \"+\"));\n\t\t\t}\n\t\t}\n\n\t\t// Get style parts\n\t\tlet b: string[] | null = style.match(/([\\w\\-]*:[\\s]?[^;\\s\\]]*)|(\\#[\\w]{1,6})|([\\w\\-]+)|(\\/)/gi);\n\n\t\t// Empty?\n\t\tif (!b) {\n\t\t\treturn {};\n\t\t}\n\n\t\t// Check each part\n\t\tfor (let i: number = 0; i < b.length; i++) {\n\n\t\t\tif (b[i].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i)) {\n\t\t\t\t(<any>format).fontWeight = b[i];\n\t\t\t}\n\t\t\telse if (b[i].match(/^(underline|line-through)$/i)) {\n\t\t\t\t(<any>format).textDecoration = b[i];\n\t\t\t}\n\t\t\telse if (b[i] == \"/\") {\n\t\t\t\t// Just closing tag\n\t\t\t\t// Do nothing\n\t\t\t}\n\t\t\telse if (!b[i].match(/:/)) {\n\t\t\t\t// Color\n\t\t\t\tformat.fill = Color.fromString(b[i]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst p = b[i].replace(\"+\", \" \").split(/:[ ]*/);\n\t\t\t\t(<any>format)[p[0]] = p[1];\n\t\t\t\t//textStyle.push(b[i].replace(/^[a-zA-Z]:[ ]*/, \"\"));\n\t\t\t\t//b[i] = b[i].replace(/\\+/g, \" \");\n\t\t\t}\n\n\t\t}\n\n\t\treturn format;\n\t}\n\n}\n","/**\n * A collection of utility functions for various type checks and conversion\n * @hidden\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\n\n/**\n * ============================================================================\n * MISC\n * ============================================================================\n * @hidden\n */\n\ntype Cond<T, Keys extends keyof T> = Keys extends never\n\t? never\n\t: { [K in Keys]: T[K] };\n\ntype Never<T> = T extends undefined ? never : T;\n\n/**\n * Selects all the keys of T which have a value of U.\n */\nexport type SelectKeys<T, U> = Never<{ [K in keyof T]: T[K] extends U ? K : never }[keyof T]>;\n\n/**\n * Creates a new type which is the same as T except it only has the properties of type U.\n */\nexport type Select<T, U> = Cond<T, SelectKeys<T, U>>;\n\n\n/**\n * @todo Description\n * @ignore Exclude from docs\n */\nexport type Public<T> = { [P in keyof T]: T[P] };\n\n\n/**\n * `Keyof<T>` is the same as `keyof T` except it only accepts string keys, not numbers or symbols.\n */\nexport type Keyof<T> = Extract<keyof T, string>;\n\n\n\n/**\n * ============================================================================\n * TYPE CHECK\n * ============================================================================\n * @hidden\n */\n\n/**\n * Returns `true` if value is not a number (NaN).\n *\n * @param value Input value\n * @return Is NaN?\n */\nexport function isNaN(value: number): boolean {\n\treturn Number(value) !== value;\n}\n\n/**\n * Represents a type for all available JavaScript variable types.\n */\nexport type Type\n\t= \"[object Object]\"\n\t| \"[object Array]\"\n\t| \"[object String]\"\n\t| \"[object Number]\"\n\t| \"[object Boolean]\"\n\t| \"[object Date]\";\n\n/**\n * Returns a type of the value.\n *\n * @param value  Input value\n * @return Type of the value\n * @ignore\n */\nexport function getType<A>(value: A): Type {\n\treturn ({}).toString.call(value) as Type;\n}\n\n\n/**\n * ============================================================================\n * QUICK CONVERSION\n * ============================================================================\n * @hidden\n */\n\n\n/**\n * Converts any value into a `number`.\n *\n * @param value  Source value\n * @return Number representation of value\n */\nexport function toNumber(value: any): number {\n\tif (value != null && !isNumber(value)) {\n\t\tlet converted = Number(value);\n\t\tif (isNaN(converted) && isString(value) && value != \"\") {\n\t\t\treturn toNumber(value.replace(/[^0-9.\\-]+/g, ''));\n\t\t}\n\t\treturn converted;\n\t}\n\treturn value;\n}\n\n\n\n/**\n * Converts anything to Date object.\n *\n * @param value  A value of any type\n * @return Date object representing a value\n */\nexport function toDate(value: Date | number | string): Date {\n\tif (isDate(value)) {\n\t\t// TODO maybe don't create a new Date ?\n\t\treturn new Date(value);\n\t}\n\n\telse if (isNumber(value)) {\n\t\treturn new Date(value);\n\t}\n\n\telse {\n\t\t// Try converting to number (assuming timestamp)\n\t\tlet num = Number(value);\n\n\t\tif (!isNumber(num)) {\n\t\t\treturn new Date(value);\n\t\t}\n\t\telse {\n\t\t\treturn new Date(num);\n\t\t}\n\t}\n}\n\n/**\n * Converts numeric value into string. Deals with large or small numbers that\n * would otherwise use exponents.\n *\n * @param value  Numeric value\n * @return Numeric value as string\n */\nexport function numberToString(value: number): string {\n\t// TODO handle Infinity and -Infinity\n\tif (isNaN(value)) {\n\t\treturn \"NaN\";\n\t}\n\n\tif (value === Infinity) {\n\t\treturn \"Infinity\";\n\t}\n\n\tif (value === -Infinity) {\n\t\treturn \"-Infinity\";\n\t}\n\n\t// Negative 0\n\tif ((value === 0) && (1 / value === -Infinity)) {\n\t\treturn \"-0\";\n\t}\n\n\t// Preserve negative and deal with absoute values\n\tlet negative = value < 0;\n\n\tvalue = Math.abs(value);\n\n\t// TODO test this\n\tlet parsed = /^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value)!;\n\tlet digits = parsed[1];\n\tlet decimals = parsed[2] || \"\";\n\n\tlet res: string;\n\n\t// Leave the nummber as it is if it does not use exponents\n\tif (parsed[3] === undefined) {\n\t\tres = (decimals === \"\" ? digits : digits + \".\" + decimals);\n\n\t} else {\n\t\tlet exponent = +parsed[3];\n\n\t\t// Deal with decimals\n\t\tif (value < 1) {\n\t\t\tlet zeros = exponent - 1;\n\n\t\t\tres = \"0.\" + repeat(\"0\", zeros) + digits + decimals;\n\n\t\t\t// Deal with integers\n\t\t} else {\n\t\t\tlet zeros = exponent - decimals.length;\n\n\t\t\tif (zeros === 0) {\n\t\t\t\tres = digits + decimals;\n\n\t\t\t} else if (zeros < 0) {\n\t\t\t\tres = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\n\n\t\t\t} else {\n\t\t\t\tres = digits + decimals + repeat(\"0\", zeros);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn negative ? \"-\" + res : res;\n}\n\n/**\n * Repeats a `string` number of times as set in `amount`.\n *\n * @ignore Exclude from docs\n * @todo Make this faster\n * @param string  Source string\n * @param amount  Number of times to repeat string\n * @return New string\n */\nexport function repeat(string: string, amount: number): string {\n  return new Array(amount + 1).join(string);\n}\n\n\n/**\n * ============================================================================\n * VALUE PRESENCE CHECK\n * ============================================================================\n * @hidden\n */\n\n/**\n * Defines an optional value that can be of any type or `undefined`.\n */\nexport type Optional<A> = A | undefined;\n\n\n/**\n * ============================================================================\n * TYPE CHECK\n * ============================================================================\n * @hidden\n */\n\n/**\n * Checks if parameter is `Date`.\n *\n * @param value  Input value\n * @return Is Date?\n */\nexport function isDate(value: any): value is Date {\n\treturn getType(value) === \"[object Date]\";\n}\n\n/**\n * Checks if parameter is `string`.\n *\n * @param value  Input value\n * @return Is string?\n */\nexport function isString(value: any): value is string {\n\treturn typeof value === \"string\";\n}\n\n/**\n * Checks if parameter is `number`.\n *\n * @param value  Input value\n * @return Is number?\n */\nexport function isNumber(value: any): value is number {\n\treturn typeof value === \"number\" && Number(value) == value;\n}\n\n/**\n * Checks if parameter is `object`.\n *\n * @param value  Input value\n * @return Is object?\n */\nexport function isObject(value: any): value is object {\n\treturn typeof value === \"object\" && value !== null;\n}\n\n/**\n * Checks if parameter is `Array`.\n *\n * @param value  Input value\n * @return Is Array?\n */\nexport function isArray(value: any): value is Array<unknown> {\n\treturn Array.isArray(value);\n}\n\n\n/**\n * ============================================================================\n * STATIC CONSTANTS\n * ============================================================================\n * @hidden\n */\n\n\n/**\n * @ignore Exclude from docs\n */\nexport const PLACEHOLDER: string = \"__§§§__\";\n\n/**\n * @ignore Exclude from docs\n */\nexport const PLACEHOLDER2: string = \"__§§§§__\";","import type { Percent } from \"./Percent\";\nimport type { IPointerEvent } from \"../render/backend/Renderer\";\nimport type { Sprite } from \"../render/Sprite\";\n\nimport * as $type from \"./Type\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nimport type { IBounds } from \"./IBounds\";\n\nimport { Disposer, DisposerClass, IDisposer } from \"./Disposer\";\n\n/**\n * ============================================================================\n * DOM FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Execute a function when DOM is ready.\n *\n * @since 5.0.2\n * @param  f  Callback\n */\nexport function ready(f: () => void): void {\n\tif (document.readyState !== \"loading\") {\n\t\tf();\n\n\t} else {\n\t\tconst listener = () => {\n\t\t\tif (document.readyState !== \"loading\") {\n\t\t\t\tdocument.removeEventListener(\"readystatechange\", listener);\n\t\t\t\tf();\n\t\t\t}\n\t\t};\n\n\t\tdocument.addEventListener(\"readystatechange\", listener);\n\t}\n}\n\n/**\n * Removes a DOM element.\n * @param  el  Target element\n */\nexport function removeElement(el: HTMLElement): void {\n\tif (el.parentNode) {\n\t\tel.parentNode.removeChild(el);\n\t}\n}\n\n/**\n * Function that adds a disposable event listener directly to a DOM element.\n *\n * @ignore Exclude from docs\n * @param dom       A DOM element to add event to\n * @param type      Event type\n * @param listener  Event listener\n * @returns Disposable event\n */\nexport function addEventListener<E extends Event>(dom: EventTarget, type: string, listener: (event: E) => void, options?: any): IDisposer {\n\t//@todo proper type check for options: EventListenerOptions | boolean (TS for some reason gives error on passive parameter)\n\t//console.log(type, dom);\n\tdom.addEventListener(type, <EventListener>listener, options || false);\n\n\treturn new Disposer(() => {\n\t\tdom.removeEventListener(type, <EventListener>listener, options || false);\n\t});\n}\n\n/**\n * Function that adds an event listener which is triggered when the browser's zoom changes.\n *\n * @param listener  Event listener\n * @returns Disposable event\n */\nexport function onZoom(listener: () => void): IDisposer {\n\t// TODO use matchMedia instead ?\n\treturn addEventListener(window, \"resize\", (_ev) => {\n\t\tlistener();\n\t});\n}\n\n/**\n * @ignore\n */\nexport function supports(cap: \"touchevents\" | \"pointerevents\" | \"mouseevents\" | \"wheelevents\" | \"keyboardevents\"): boolean {\n\tswitch (cap) {\n\t\tcase \"touchevents\":\n\t\t\t//return \"ontouchstart\" in document.documentElement;\n\t\t\treturn window.hasOwnProperty(\"TouchEvent\");\n\n\t\tcase \"pointerevents\":\n\t\t\treturn window.hasOwnProperty(\"PointerEvent\");\n\n\t\tcase \"mouseevents\":\n\t\t\treturn window.hasOwnProperty(\"MouseEvent\");\n\n\t\tcase \"wheelevents\":\n\t\t\treturn window.hasOwnProperty(\"WheelEvent\");\n\n\t\tcase \"keyboardevents\":\n\t\t\treturn window.hasOwnProperty(\"KeyboardEvent\");\n\t}\n\treturn false;\n}\n\n/**\n * @ignore\n */\nexport function getPointerId(event: IPointerEvent) {\n\tlet id = (<any>event).pointerId || 0;\n\t//console.log(event);\n\treturn id;\n}\n\n/**\n * Removes focus from any element by shifting focus to body.\n *\n * @ignore\n */\nexport function blur(): void {\n\tif (document.activeElement && document.activeElement != document.body) {\n\t\tif ((<any>document.activeElement).blur) {\n\t\t\t(<any>document.activeElement).blur();\n\t\t}\n\t\telse {\n\t\t\tlet input = document.createElement(\"button\");\n\t\t\tinput.style.position = \"fixed\";\n\t\t\tinput.style.top = \"0px\";\n\t\t\tinput.style.left = \"-10000px\";\n\t\t\tdocument.body.appendChild(input);\n\t\t\tinput.focus();\n\t\t\tinput.blur();\n\t\t\tdocument.body.removeChild(input);\n\t\t}\n\t}\n}\n\n/**\n * Focuses element.\n *\n * @ignore\n */\nexport function focus(el: HTMLElement): void {\n\tif (el) {\n\t\tel.focus();\n\t}\n}\n\n/**\n * @ignore\n */\nexport function getRendererEvent(key: string): string {\n\tif (supports(\"pointerevents\")) {\n\t\treturn key;\n\t}\n\telse if (supports(\"touchevents\")) {\n\t\tswitch (key) {\n\t\t\tcase \"pointerover\": return \"touchstart\";\n\t\t\tcase \"pointerout\": return \"touchend\";\n\t\t\tcase \"pointerdown\": return \"touchstart\";\n\t\t\tcase \"pointermove\": return \"touchmove\";\n\t\t\tcase \"pointerup\": return \"touchend\";\n\t\t\tcase \"click\": return \"click\";\n\t\t\tcase \"dblclick\": return \"dblclick\";\n\n\t\t}\n\t}\n\telse if (supports(\"mouseevents\")) {\n\t\tswitch (key) {\n\t\t\tcase \"pointerover\": return \"mouseover\";\n\t\t\tcase \"pointerout\": return \"mouseout\";\n\t\t\tcase \"pointerdown\": return \"mousedown\";\n\t\t\tcase \"pointermove\": return \"mousemove\";\n\t\t\tcase \"pointerup\": return \"mouseup\";\n\t\t\tcase \"click\": return \"click\";\n\t\t\tcase \"dblclick\": return \"dblclick\";\n\n\t\t}\n\t}\n\treturn key;\n}\n\n/**\n * Determines if pointer event originated from a touch pointer or mouse.\n *\n * @param ev  Original event\n * @return Touch pointer?\n */\nexport function isTouchEvent(ev: MouseEvent | Touch): boolean {\n\tif (typeof Touch !== \"undefined\" && ev instanceof Touch) {\n\t\treturn true;\n\t}\n\telse if (typeof PointerEvent !== \"undefined\" && ev instanceof PointerEvent && (<any>ev).pointerType != null) {\n\t\tswitch ((<any>ev).pointerType) {\n\t\t\tcase \"touch\":\n\t\t\tcase \"pen\":\n\t\t\tcase 2:\n\t\t\t\treturn true;\n\t\t\tcase \"mouse\":\n\t\t\tcase 4:\n\t\t\t\treturn false;\n\t\t\tdefault:\n\t\t\t\treturn !(ev instanceof MouseEvent);\n\t\t}\n\t}\n\telse if ((<any>ev).type != null) {\n\t\tif ((<any>ev).type.match(/^mouse/)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Sets style property on DOM element.\n *\n * @ignore Exclude from docs\n */\nexport function setStyle(dom: HTMLElement, property: string, value: string | undefined): void {\n\t(<any>dom.style)[property] = value;\n}\n\nexport function getStyle(dom: HTMLElement, property: string): string | undefined {\n\treturn (<any>dom.style)[property];\n}\n\n/**\n * Checks of element `a` contains element `b`.\n *\n * @param a  Aleged ascendant\n * @param b  Aleged descendant\n * @return Contains?\n */\nexport function contains(a: Element, b: Element): boolean {\n\tlet cursor: Node = b;\n\n\twhile (true) {\n\t\tif (a === cursor) {\n\t\t\treturn true;\n\n\t\t} else if (cursor.parentNode === null) {\n\t\t\t// TODO better ShadowRoot detection\n\t\t\tif ((<ShadowRoot>cursor).host == null) {\n\t\t\t\treturn false;\n\n\t\t\t} else {\n\t\t\t\tcursor = (<ShadowRoot>cursor).host;\n\t\t\t}\n\n\t\t} else {\n\t\t\tcursor = cursor.parentNode;\n\t\t}\n\t}\n}\n\n/**\n * Returns `true` if pointer event originated on an element within Root.\n *\n * @since 5.2.8\n * @param  event   Event\n * @param  target  Target element\n */\nexport function isLocalEvent(event: IPointerEvent, target: Sprite) {\n\treturn event.target && contains(target.root.dom, <Element>event.target);\n}\n\n/**\n * Disables or enables interactivity of a DOM element.\n *\n * @param  target       Target element\n * @param  interactive  Interactive?\n */\nexport function setInteractive(target: HTMLElement, interactive: boolean): void {\n\tif (interactive) {\n\t\ttarget.style.pointerEvents = \"auto\";\n\t}\n\telse {\n\t\ttarget.style.pointerEvents = \"none\";\n\t}\n}\n\n/**\n * Returns the shadow root of the element or null\n *\n * @param a  Node\n * @return Root\n */\nexport function getShadowRoot(a: Node): ShadowRoot | null {\n\tlet cursor: Node = a;\n\n\twhile (true) {\n\t\tif (cursor.parentNode === null) {\n\t\t\t// TODO better ShadowRoot detection\n\t\t\tif ((<ShadowRoot>cursor).host != null) {\n\t\t\t\treturn <ShadowRoot>cursor;\n\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t} else {\n\t\t\tcursor = cursor.parentNode;\n\t\t}\n\t}\n}\n\n/**\n * [rootStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n */\nlet rootStylesheet: $type.Optional<CSSStyleSheet>;\n\n/**\n * @ignore Exclude from docs\n */\nfunction createStylesheet(element: ShadowRoot | null, text: string, nonce: string = \"\"): HTMLStyleElement {\n\t// TODO use createElementNS ?\n\tconst e = document.createElement(\"style\");\n\te.type = \"text/css\";\n\tif (nonce != \"\") {\n\t\te.setAttribute(\"nonce\", nonce)\n\t}\n\te.textContent = text;\n\n\tif (element === null) {\n\t\tdocument.head.appendChild(e);\n\t} else {\n\t\telement.appendChild(e);\n\t}\n\n\treturn e;\n}\n\n/**\n * [getStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @return [description]\n */\nfunction getStylesheet(element: ShadowRoot | null, nonce: string = \"\"): CSSStyleSheet {\n\tif (element === null) {\n\t\tif (rootStylesheet == null) {\n\t\t\t// TODO use createElementNS ?\n\t\t\tconst e = document.createElement(\"style\");\n\t\t\te.type = \"text/css\";\n\t\t\tif (nonce != \"\") {\n\t\t\t\te.setAttribute(\"nonce\", nonce)\n\t\t\t}\n\t\t\tdocument.head.appendChild(e);\n\t\t\trootStylesheet = e.sheet as CSSStyleSheet;\n\t\t}\n\n\t\treturn rootStylesheet;\n\n\t} else {\n\t\t// TODO use createElementNS ?\n\t\tconst e = document.createElement(\"style\");\n\t\te.type = \"text/css\";\n\t\tif (nonce != \"\") {\n\t\t\te.setAttribute(\"nonce\", nonce)\n\t\t}\n\t\telement.appendChild(e);\n\t\treturn e.sheet as CSSStyleSheet;\n\t}\n}\n\n/**\n * [makeStylesheet description]\n *\n * @ignore Exclude from docs\n * @todo Description\n * @param selector  [description]\n * @return [description]\n */\nfunction appendStylesheet(root: CSSStyleSheet, selector: string): CSSStyleRule {\n\tconst index = root.cssRules.length;\n\troot.insertRule(selector + \"{}\", index);\n\n\treturn root.cssRules[index] as CSSStyleRule;\n}\n\n/**\n * Defines a class for a CSS rule.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleRule extends DisposerClass {\n\tprivate _root: CSSStyleSheet;\n\n\t/**\n\t * CSS rule.\n\t */\n\tprivate _rule: CSSStyleRule;\n\n\t/**\n\t * A CSS selector text.\n\t *\n\t * E.g.: `.myClass p`\n\t *\n\t * @param selector  CSS selector\n\t */\n\tpublic set selector(selector: string) {\n\t\tthis._rule.selectorText = selector;\n\t}\n\n\t/**\n\t * @return CSS selector\n\t */\n\tpublic get selector(): string {\n\t\treturn this._rule.selectorText;\n\t}\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param selector  CSS selector\n\t * @param styles    An object of style attribute - value pairs\n\t */\n\tconstructor(element: ShadowRoot | null, selector: string, styles: { [name: string]: string }, nonce: string = \"\") {\n\t\tsuper();\n\n\t\tthis._root = getStylesheet(element, nonce);\n\n\t\ttry {\n\t\t\tthis._rule = appendStylesheet(this._root, selector);\n\n\t\t\t$object.each(styles, (key, value) => {\n\t\t\t\tthis.setStyle(<string>key, value);\n\t\t\t});\n\t\t}\n\t\tcatch(err) {\n\t\t\t// Create an empty rule on failed selectors\n\t\t\tthis._rule = new CSSStyleRule();\n\t\t}\n\t}\n\n\t// TODO test this\n\tprotected _dispose(): void {\n\t\t// TODO a bit hacky\n\t\tconst index = $array.indexOf(this._root.cssRules, this._rule);\n\n\t\tif (index === -1) {\n\t\t\tthrow new Error(\"Could not dispose StyleRule\");\n\n\t\t} else {\n\t\t\t// TODO if it's empty remove it from the DOM ?\n\t\t\tthis._root.deleteRule(index);\n\t\t}\n\t}\n\n\t/**\n\t * Sets the same style properties with browser-specific prefixes.\n\t *\n\t * @param name   Attribute name\n\t * @param value  Attribute value\n\t */\n\tprivate _setVendorPrefixName(name: string, value: string): void {\n\t\tconst style = this._rule.style;\n\t\tstyle.setProperty(\"-webkit-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-moz-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-ms-\" + name, value, \"\");\n\t\tstyle.setProperty(\"-o-\" + name, value, \"\");\n\t\tstyle.setProperty(name, value, \"\");\n\t}\n\n\t/**\n\t * Sets a value for specific style attribute.\n\t *\n\t * @param name   Attribute\n\t * @param value  Value\n\t */\n\tpublic setStyle(name: string, value: string): void {\n\t\tif (name === \"transition\") {\n\t\t\tthis._setVendorPrefixName(name, value);\n\n\t\t} else {\n\t\t\tthis._rule.style.setProperty(name, value, \"\");\n\t\t}\n\t}\n}\n\n/**\n * Defines a class for an entire CSS style sheet.\n *\n * Can be used to dynamically add CSS to the document.\n */\nexport class StyleSheet extends DisposerClass {\n\tprivate _element: HTMLStyleElement;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param text  CSS stylesheet\n\t */\n\tconstructor(element: ShadowRoot | null, text: string, nonce: string = \"\") {\n\t\tsuper();\n\t\tthis._element = createStylesheet(element, text, nonce);\n\t}\n\n\tprotected _dispose(): void {\n\t\tif (this._element.parentNode) {\n\t\t\tthis._element.parentNode.removeChild(this._element);\n\t\t}\n\t}\n}\n\n\n/**\n * Adds a class name to an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param element    Element\n * @param className  Class name to add\n */\nexport function addClass(element: HTMLElement | SVGElement, className: string): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tif (element.classList) {\n\t\tconst classes = className.split(\" \");\n\t\t$array.each(classes, (name) => {\n\t\t\telement.classList.add(name);\n\t\t});\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \") + \" \" + className);\n\t\t}\n\t\telse {\n\t\t\telement.setAttribute(\"class\", className);\n\t\t}\n\t}\n}\n\n/**\n * Removes a class name from an HTML or SVG element.\n *\n * @ignore Exclude from docs\n * @param element    Element\n * @param className  Class name to add\n */\nexport function removeClass(element: HTMLElement, className: string): void {\n\tif (!element) {\n\t\treturn;\n\t}\n\tif (element.classList) {\n\t\telement.classList.remove(className);\n\t}\n\telse {\n\t\tlet currentClassName = element.getAttribute(\"class\");\n\t\tif (currentClassName) {\n\t\t\telement.setAttribute(\"class\", currentClassName.split(\" \").filter((item) => {\n\t\t\t\treturn item !== className;\n\t\t\t}).join(\" \"));\n\t\t}\n\t}\n}\n\n// /**\n//  * Applies a set of styles to an element. Stores the original styles so they\n//  * can be restored later.\n//  *\n//  * @ignore\n//  * @param io      Element\n//   */\n// export function prepElementForDrag(dom: HTMLElement): void {\n\n// \t// @todo: save current values\n\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"none\");\n// \t\t}\n// \t}\n\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"rgba(0, 0, 0, 0)\");\n\n// }\n\n// /**\n//  * Restores replaced styles\n//  *\n//  * @ignore\n//  * @param  io  Element\n//  */\n// export function unprepElementForDrag(dom: HTMLElement): void {\n\n// \t// Define possible props\n// \tlet props = [\n// \t\t\"touchAction\", \"webkitTouchAction\", \"MozTouchAction\", \"MSTouchAction\", \"msTouchAction\", \"oTouchAction\",\n// \t\t\"userSelect\", \"webkitUserSelect\", \"MozUserSelect\", \"MSUserSelect\", \"msUserSelect\", \"oUserSelect\",\n// \t\t\"touchSelect\", \"webkitTouchSelect\", \"MozTouchSelect\", \"MSTouchSelect\", \"msTouchSelect\", \"oTouchSelect\",\n// \t\t\"touchCallout\", \"webkitTouchCallout\", \"MozTouchCallout\", \"MSTouchCallout\", \"msTouchCallout\", \"oTouchCallout\",\n// \t\t\"contentZooming\", \"webkitContentZooming\", \"MozContentZooming\", \"MSContentZooming\", \"msContentZooming\", \"oContentZooming\",\n// \t\t\"userDrag\", \"webkitUserDrag\", \"MozUserDrag\", \"MSUserDrag\", \"msUserDrag\", \"oUserDrag\"\n// \t];\n// \tfor (let i = 0; i < props.length; i++) {\n// \t\tif (props[i] in dom.style) {\n// \t\t\tsetStyle(dom, props[i], \"\");\n// \t\t}\n// \t}\n\n// \t// Remove iOS-specific selection;\n// \tsetStyle(dom, \"tapHighlightColor\", \"\");\n\n// }\n\nexport function iOS(): boolean {\n\treturn /apple/i.test(navigator.vendor) && \"ontouchend\" in document;\n}\n\nexport function getSafeResolution(): number | undefined {\n\treturn iOS() ? 1 : undefined;\n}\n\nexport function relativeToValue(percent: number | Percent | undefined | null, full: number): number {\n\tif ($type.isNumber(percent)) {\n\t\treturn percent;\n\t} else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\n\t\treturn full * percent.value;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n\n\n/**\n * Returns number of decimals\n *\n * @ignore Exclude from docs\n * @param number  Input number\n * @return Number of decimals\n */\nexport function decimalPlaces(number: number): number {\n\tlet match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\tif (!match) { return 0; }\n\treturn Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\n\n\n/**\n * ============================================================================\n * STRING FORMATTING FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Pads a string with additional characters to certain length.\n *\n * @param value  A numeric value\n * @param len    Result string length in characters\n * @param char   A character to use for padding\n * @return Padded value as string\n */\nexport function padString(value: any, len: number = 0, char: string = \"0\"): string {\n\tif (typeof value !== \"string\") {\n\t\tvalue = value.toString();\n\t}\n\n\treturn len > value.length ? Array(len - value.length + 1).join(char) + value : value;\n}\n\nexport function trimLeft(text: string): string {\n\treturn text.replace(/^[\\s]*/, \"\");\n}\n\nexport function trimRight(text: string): string {\n\treturn text.replace(/[\\s]*$/, \"\");\n}\n\nexport function trim(text: string): string {\n\treturn trimLeft(trimRight(text));\n}\n\n/**\n * Tries to determine format type.\n *\n * @ignore Exclude from docs\n * @param format  Format string\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\n */\nexport function getFormat(format: string): string {\n\n\t// Undefined?\n\tif (typeof format === \"undefined\") {\n\t\treturn \"string\";\n\t}\n\n\t// Cleanup and lowercase format\n\tformat = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\n\n\t// Remove style tags\n\tformat = format.replace(/\\[[^\\]]+\\]/, \"\");\n\n\t// Trim\n\tformat = format.trim();\n\n\t// Check for any explicit format hints (i.e. /Date)\n\tlet hints: RegExpMatchArray | null = format.match(/\\/(date|number|duration)$/);\n\n\tif (hints) {\n\t\treturn hints[1];\n\t}\n\n\t// Check for explicit hints\n\tif (format === \"number\") {\n\t\treturn \"number\";\n\t}\n\n\tif (format === \"date\") {\n\t\treturn \"date\";\n\t}\n\n\tif (format === \"duration\") {\n\t\treturn \"duration\";\n\t}\n\n\t// Detect number formatting symbols\n\tif (format.match(/[#0]/)) {\n\t\treturn \"number\";\n\t}\n\n\t// Detect date formatting symbols\n\tif (format.match(/[ymwdhnsqaxkzgtei]/)) {\n\t\treturn \"date\";\n\t}\n\n\t// Nothing? Let's display as string\n\treturn \"string\";\n}\n\n/**\n * Cleans up format:\n * * Strips out formatter hints\n *\n * @ignore Exclude from docs\n * @param format  Format\n * @return Cleaned format\n */\nexport function cleanFormat(format: string): string {\n\treturn format.replace(/\\/(date|number|duration)$/i, \"\");\n}\n\n/**\n * Strips all tags from the string.\n *\n * @param text  Source string\n * @return String without tags\n */\nexport function stripTags(text: string): string {\n\treturn text ? text.replace(/<[^>]*>/g, \"\") : text;\n}\n\n/**\n * Removes new lines and tags from a string.\n *\n * @param text  String to conver\n * @return Converted string\n */\nexport function plainText(text: string): string {\n\treturn text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\n}\n\n/**\n * Escapes string so it can safely be used in a Regex.\n *\n * @param value  Unsescaped string\n * @return Escaped string\n */\nexport function escapeForRgex(value: string): string {\n\treturn value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * ============================================================================\n * DATE-RELATED FUNCTIONS\n * ============================================================================\n * @hidden\n */\n\n/**\n * Returns a year day.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Year day\n * @todo Account for UTC\n */\nexport function getYearDay(date: Date, utc: boolean = false): number {\n\t// TODO: utc needed?\n\tutc;\n\tconst start = new Date(date.getFullYear(), 0, 0);\n\tconst diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\n\tconst oneDay = 1000 * 60 * 60 * 24;\n\treturn Math.floor(diff / oneDay);\n}\n\n/**\n * Returns week number for a given date.\n *\n * @param date  Date\n * @param utc   Assume UTC dates?\n * @return Week number\n * @todo Account for UTC\n */\nexport function getWeek(date: Date, _utc: boolean = false): number {\n\tconst d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n\tconst day = d.getUTCDay() || 7;\n\td.setUTCDate(d.getUTCDate() + 4 - day);\n\tconst firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n\treturn Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\n}\n\n/**\n * Returns a week number in the month.\n *\n * @param date  Source Date\n * @param utc   Assume UTC dates?\n * @return Week number in month\n */\nexport function getMonthWeek(date: Date, utc: boolean = false): number {\n\tconst firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\n\tlet currentWeek = getWeek(date, utc);\n\tif (currentWeek == 1) {\n\t\tcurrentWeek = 53;\n\t}\n\treturn currentWeek - firstWeek + 1;\n}\n\n/**\n * Returns a year day out of the given week number.\n *\n * @param week     Week\n * @param year     Year\n * @param weekday  Weekday\n * @param utc      Assume UTC dates\n * @return Day in a year\n */\nexport function getDayFromWeek(week: number, year: number, weekday: number = 1, utc: boolean = false): number {\n\tlet date = new Date(year, 0, 4, 0, 0, 0, 0);\n\tif (utc) {\n\t\tdate.setUTCFullYear(year);\n\t}\n\tlet day = week * 7 + weekday - ((date.getDay() || 7) + 3);\n\treturn day;\n}\n\n/**\n * Returns 12-hour representation out of the 24-hour hours.\n *\n * @param hours  24-hour number\n * @return 12-hour number\n */\nexport function get12Hours(hours: number, base?: number): number {\n\tif (hours > 12) {\n\t\thours -= 12;\n\t}\n\telse if (hours === 0) {\n\t\thours = 12;\n\t}\n\treturn base != null ? hours + (base - 1) : hours;\n}\n\n/**\n * Returns a string name of the time zone.\n *\n * @param date     Date object\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\n * @param savings  Include information if it's in daylight savings mode\n * @param utc      Assume UTC dates\n * @return Time zone name\n */\nexport function getTimeZone(date: Date, long: boolean = false, savings: boolean = false, utc: boolean = false): string {\n\tif (utc) {\n\t\treturn long ? \"Coordinated Universal Time\" : \"UTC\";\n\t}\n\tlet wotz = date.toLocaleString(\"UTC\");\n\tlet wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\n\t//wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\n\tif (savings === false) {\n\t\twtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\n\t}\n\treturn wtz;\n}\n\nexport function getTimezoneOffset(timezone: string): number {\n\tconst date = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0));\n\tconst utcDate = new Date(date.toLocaleString('en-US', { timeZone: 'UTC' }));\n\tconst tzDate = new Date(date.toLocaleString('en-US', { timeZone: timezone }));\n\treturn (tzDate.getTime() - utcDate.getTime()) / 6e4 * -1;\n}\n\n\nexport function capitalizeFirst(text: string): string {\n\treturn text.charAt(0).toUpperCase() + text.slice(1);\n}\n\n\n/**\n * ============================================================================\n * COLOR UTILS\n * ============================================================================\n */\n\n\n/**\n * Represents an interface for an object that represents an RGB color.\n */\nexport interface iRGB {\n\tr: number;\n\tg: number;\n\tb: number;\n\ta?: number;\n}\n\n/**\n * Represents an interface for an object that represents an HSL color.\n */\nexport interface iHSL {\n\th: number;\n\ts: number;\n\tl: number;\n\ta?: number;\n}\n\n/**\n * The functions below are taken and adapted from Garry Tan's blog post:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * The further attributions go mjijackson.com, which now seems to be defunct.\n */\n\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * Function adapted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * @ignore Exclude from docs\n * @param h       The hue\n * @param s       The saturation\n * @param l       The lightness\n * @return The RGB representation\n */\nexport function hslToRgb(color: iHSL): iRGB {\n\tlet r, g, b;\n\tlet h = color.h;\n\tlet s = color.s;\n\tlet l = color.l;\n\n\tif (s == 0) {\n\t\tr = g = b = l; // achromatic\n\t} else {\n\t\tlet hue2rgb = function hue2rgb(p: number, q: number, t: number) {\n\t\t\tif (t < 0) { t += 1; }\n\t\t\tif (t > 1) { t -= 1; }\n\t\t\tif (t < 1 / 6) { return p + (q - p) * 6 * t; }\n\t\t\tif (t < 1 / 2) { return q; }\n\t\t\tif (t < 2 / 3) { return p + (q - p) * (2 / 3 - t) * 6; }\n\t\t\treturn p;\n\t\t}\n\n\t\tlet q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tlet p = 2 * l - q;\n\t\tr = hue2rgb(p, q, h + 1 / 3);\n\t\tg = hue2rgb(p, q, h);\n\t\tb = hue2rgb(p, q, h - 1 / 3);\n\t}\n\n\treturn {\n\t\tr: Math.round(r * 255),\n\t\tg: Math.round(g * 255),\n\t\tb: Math.round(b * 255)\n\t};\n}\n\n/**\n * Converts an RGB color value to HSL. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and l in the set [0, 1].\n *\n * Function adapted from:\n * http://axonflux.com/handy-rgb-to-hsl-and-rgb-to-hsv-color-model-c\n *\n * @ignore Exclude from docs\n * @param r       The red color value\n * @param g       The green color value\n * @param b       The blue color value\n * @return The HSL representation\n */\nexport function rgbToHsl(color: iRGB): iHSL {\n\tlet r = color.r / 255;\n\tlet g = color.g / 255;\n\tlet b = color.b / 255;\n\tlet max = Math.max(r, g, b);\n\tlet min = Math.min(r, g, b);\n\tlet h = 0;\n\tlet s = 0;\n\tlet l = (max + min) / 2;\n\n\tif (max === min) {\n\t\th = s = 0; // achromatic\n\n\t} else {\n\t\tlet d = max - min;\n\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n\t\tswitch (max) {\n\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\tcase g: h = (b - r) / d + 2; break;\n\t\t\tcase b: h = (r - g) / d + 4; break;\n\t\t}\n\n\t\th /= 6;\n\t}\n\n\treturn {\n\t\th: h,\n\t\ts: s,\n\t\tl: l\n\t};\n}\n\n/**\n * Returns a color that is `percent` brighter than the reference color.\n *\n * @ignore Exclude from docs\n * @param color    Reference color\n * @param percent  Brightness percent\n * @return Hex code of the new color\n */\nexport function lighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\n\tif (rgb) {\n\t\treturn {\n\t\t\tr: Math.max(0, Math.min(255, rgb.r + getLightnessStep(rgb.r, percent))),\n\t\t\tg: Math.max(0, Math.min(255, rgb.g + getLightnessStep(rgb.g, percent))),\n\t\t\tb: Math.max(0, Math.min(255, rgb.b + getLightnessStep(rgb.b, percent))),\n\t\t\ta: rgb.a\n\t\t};\n\n\t} else {\n\t\t// TODO is this correct ?\n\t\treturn rgb;\n\t}\n};\n\n/**\n * Gets lightness step.\n *\n * @ignore Exclude from docs\n * @param value    Value\n * @param percent  Percent\n * @return Step\n */\nexport function getLightnessStep(value: number, percent: number): number {\n\tlet base = percent > 0 ? 255 - value : value;\n\treturn Math.round(base * percent);\n}\n\n/**\n * Returns a color that is `percent` brighter than the source `color`.\n *\n * @ignore Exclude from docs\n * @param color    Source color\n * @param percent  Brightness percent\n * @return New color\n */\nexport function brighten(rgb: $type.Optional<iRGB>, percent: number): $type.Optional<iRGB> {\n\tif (rgb) {\n\t\tlet base = Math.min(Math.max(rgb.r, rgb.g, rgb.b), 230);\n\t\t//let base = Math.max(rgb.r, rgb.g, rgb.b);\n\t\tlet step = getLightnessStep(base, percent);\n\t\treturn {\n\t\t\tr: Math.max(0, Math.min(255, Math.round(rgb.r + step))),\n\t\t\tg: Math.max(0, Math.min(255, Math.round(rgb.g + step))),\n\t\t\tb: Math.max(0, Math.min(255, Math.round(rgb.b + step))),\n\t\t\ta: rgb.a\n\t\t};\n\n\t} else {\n\t\t// TODO is this correct ?\n\t\treturn rgb;\n\t}\n};\n\n/**\n * Returns brightness step.\n *\n * @ignore Exclude from docs\n * @param value    Value\n * @param percent  Percent\n * @return Step\n */\nexport function getBrightnessStep(_value: number, percent: number): number {\n\tlet base = 255; //percent > 0 ? 255 - value : value;\n\treturn Math.round(base * percent);\n}\n\n/**\n * Returns `true` if color is \"light\". Useful indetermining which contrasting\n * color to use for elements over this color. E.g.: you would want to use\n * black text over light background, and vice versa.\n *\n * @ignore Exclude from docs\n * @param color  Source color\n * @return Light?\n */\nexport function isLight(color: iRGB): boolean {\n\treturn ((color.r * 299) + (color.g * 587) + (color.b * 114)) / 1000 >= 128;\n}\n\n/**\n * Returns a new [[iRGB]] object based on `rgb` parameter with specific\n * saturation applied.\n *\n * `saturation` can be in the range of 0 (fully desaturated) to 1 (fully\n * saturated).\n *\n * @ignore Exclude from docs\n * @param color       Base color\n * @param saturation  Saturation (0-1)\n * @return New color\n */\nexport function saturate(rgb: $type.Optional<iRGB>, saturation: number): $type.Optional<iRGB> {\n\tif (rgb === undefined || saturation == 1) {\n\t\treturn rgb;\n\t}\n\n\tlet hsl = rgbToHsl(rgb);\n\thsl.s = saturation;\n\treturn hslToRgb(hsl);\n}\n\nexport function alternativeColor(color: iRGB, lightAlternative: iRGB = { r: 255, g: 255, b: 255 }, darkAlternative: iRGB = { r: 255, g: 255, b: 255 }): iRGB {\n\tlet light = lightAlternative;\n\tlet dark = darkAlternative;\n\tif (isLight(darkAlternative)) {\n\t\tlight = darkAlternative;\n\t\tdark = lightAlternative;\n\t}\n\treturn isLight(color) ? dark : light;\n}\n\n/**\n * @ignore\n * @deprecated\n */\n// export function unshiftThemeClass(settings: any, themeClass: string) {\n// \tlet themeClasses = settings.themeClasses;\n// \tif (!themeClasses) {\n// \t\tthemeClasses = [];\n// \t}\n// \tthemeClasses.unshift(themeClass);\n// \tsettings.themeClasses = themeClasses;\n// }\n\n/**\n * @ignore\n * @deprecated\n */\n// export function pushThemeClass(settings: any, themeClass: string) {\n// \tlet themeClasses = settings.themeClasses;\n// \tif (!themeClasses) {\n// \t\tthemeClasses = [];\n// \t}\n// \tthemeClasses.push(themeClass);\n// \tsettings.themeClasses = themeClasses;\n// }\n\n/**\n * @ignore\n */\nexport function mergeTags(tags1: string[] | undefined, tags2: string[]): string[] {\n\tif (!tags1) {\n\t\ttags1 = [];\n\t}\n\treturn [...tags1, ...tags2].filter((value, index, self) => {\n\t\treturn self.indexOf(value) === index;\n\t});\n}\n\n/**\n * @ignore\n */\nexport function sameBounds(a: IBounds, b?: IBounds): boolean {\n\tif (!b) {\n\t\treturn false;\n\t}\n\tif (a.left != b.left) {\n\t\treturn false\n\t}\n\tif (a.right != b.right) {\n\t\treturn false\n\t}\n\tif (a.top != b.top) {\n\t\treturn false\n\t}\n\tif (a.bottom != b.bottom) {\n\t\treturn false\n\t}\n\treturn true;\n}\n","import type { InterfaceColors, IInterfaceColorsSettings } from \"../core/util/InterfaceColors\";\n\nimport { Theme } from \"../core/Theme\";\nimport { p100, p50 } from \"../core/util/Percent\";\nimport { Color } from \"../core/util/Color\";\nimport { GridLayout } from \"../core/render/GridLayout\"\n\nimport * as $ease from \"../core/util/Ease\";\n\n\ninterface Settable<A> {\n\t_settings: A;\n\tset<K extends keyof A>(key: K, value: A[K]): void;\n}\n\n/**\n * @ignore\n */\nexport function setColor<A, K extends keyof A>(rule: Settable<A>, key: K, ic: InterfaceColors, name: keyof IInterfaceColorsSettings) {\n\t// TODO this shouldn't use get, figure out a better way\n\trule.set(key, ic.get(name) as any);\n\n\tic.on(name, (value) => {\n\t\trule.set(key, value as any);\n\t});\n}\n\n/**\n * @ignore\n */\nexport class DefaultTheme extends Theme {\n\tprotected setupDefaultRules() {\n\t\tsuper.setupDefaultRules();\n\n\t\tconst language = this._root.language;\n\n\t\tconst ic = this._root.interfaceColors;\n\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\tconst verticalLayout = this._root.verticalLayout;\n\n\t\tconst r = this.rule.bind(this);\n\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * core\n\t\t * ========================================================================\n\t\t */\n\n\t\tr(\"InterfaceColors\").setAll({\n\t\t\tstroke: Color.fromHex(0xe5e5e5),\n\t\t\tfill: Color.fromHex(0xf3f3f3),\n\t\t\tprimaryButton: Color.fromHex(0x6794dc),\n\t\t\tprimaryButtonHover: Color.fromHex(0x6771dc),\n\t\t\tprimaryButtonDown: Color.fromHex(0x68dc76),\n\t\t\tprimaryButtonActive: Color.fromHex(0x68dc76),\n\t\t\tprimaryButtonText: Color.fromHex(0xffffff),\n\t\t\tprimaryButtonStroke: Color.fromHex(0xffffff),\n\t\t\tsecondaryButton: Color.fromHex(0xd9d9d9),\n\t\t\tsecondaryButtonHover: Color.fromHex(0xa3a3a3),\n\t\t\tsecondaryButtonDown: Color.fromHex(0x8d8d8d),\n\t\t\tsecondaryButtonActive: Color.fromHex(0xe6e6e6),\n\t\t\tsecondaryButtonText: Color.fromHex(0x000000),\n\t\t\tsecondaryButtonStroke: Color.fromHex(0xffffff),\n\t\t\tgrid: Color.fromHex(0x000000),\n\t\t\tbackground: Color.fromHex(0xffffff),\n\t\t\talternativeBackground: Color.fromHex(0x000000),\n\t\t\ttext: Color.fromHex(0x000000),\n\t\t\talternativeText: Color.fromHex(0xffffff),\n\t\t\tdisabled: Color.fromHex(0xadadad),\n\t\t\tpositive: Color.fromHex(0x50b300),\n\t\t\tnegative: Color.fromHex(0xb30000)\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"ColorSet\");\n\n\t\t\trule.setAll({\n\t\t\t\tpassOptions: {\n\t\t\t\t\thue: 0.05,\n\t\t\t\t\tsaturation: 0,\n\t\t\t\t\tlightness: 0\n\t\t\t\t},\n\t\t\t\tcolors: [\n\t\t\t\t\tColor.fromHex(0x67b7dc)\n\t\t\t\t],\n\t\t\t\tstep: 1,\n\t\t\t\t//baseColor: Color.fromRGB(103, 183, 220),\n\t\t\t\t//count: 20,\n\t\t\t\treuse: false,\n\t\t\t\tstartIndex: 0\n\t\t\t});\n\n\t\t\trule.setPrivate(\"currentStep\", 0);\n\t\t\trule.setPrivate(\"currentPass\", 0);\n\t\t}\n\n\t\tr(\"Entity\").setAll({\n\t\t\tstateAnimationDuration: 0,\n\t\t\tstateAnimationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Component\").setAll({\n\t\t\tinterpolationDuration: 0,\n\t\t\tinterpolationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Sprite\").setAll({\n\t\t\tvisible: true,\n\t\t\tscale: 1,\n\t\t\topacity: 1,\n\t\t\trotation: 0,\n\t\t\tposition: \"relative\",\n\t\t\ttooltipX: p50,\n\t\t\ttooltipY: p50,\n\t\t\ttooltipPosition: \"fixed\",\n\t\t\tisMeasured: true\n\t\t});\n\n\t\tr(\"Sprite\").states.create(\"default\", { \"visible\": true, opacity: 1 });\n\n\t\tr(\"Container\").setAll({\n\t\t\tinteractiveChildren: true,\n\t\t\tsetStateOnChildren: false\n\t\t});\n\n\t\tr(\"Graphics\").setAll({\n\t\t\tstrokeWidth: 1\n\t\t});\n\n\n\t\tr(\"Chart\").setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\tinteractiveChildren: false\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: alignment\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Sprite\", [\"horizontal\", \"center\"]).setAll({\n\t\t\tcenterX: p50,\n\t\t\tx: p50\n\t\t});\n\n\t\tr(\"Sprite\", [\"vertical\", \"center\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\ty: p50\n\t\t});\n\n\t\tr(\"Container\", [\"horizontal\", \"layout\"]).setAll({\n\t\t\tlayout: horizontalLayout\n\t\t});\n\n\t\tr(\"Container\", [\"vertical\", \"layout\"]).setAll({\n\t\t\tlayout: verticalLayout\n\t\t});\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: patterns\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Pattern\").setAll({\n\t\t\trepetition: \"repeat\",\n\t\t\twidth: 50,\n\t\t\theight: 50,\n\t\t\trotation: 0,\n\t\t\tfillOpacity: 1\n\t\t});\n\n\t\tr(\"LinePattern\").setAll({\n\t\t\tgap: 6,\n\t\t\tcolorOpacity: 1,\n\t\t\twidth: 49,\n\t\t\theight: 49\n\t\t});\n\n\t\tr(\"RectanglePattern\").setAll({\n\t\t\tgap: 6,\n\t\t\tcheckered: false,\n\t\t\tcentered: true,\n\t\t\tmaxWidth: 5,\n\t\t\tmaxHeight: 5,\n\t\t\twidth: 48,\n\t\t\theight: 48,\n\t\t\tstrokeWidth: 0\n\t\t});\n\n\t\tr(\"CirclePattern\").setAll({\n\t\t\tgap: 5,\n\t\t\tcheckered: false,\n\t\t\tcentered: false,\n\t\t\tradius: 3,\n\t\t\tstrokeWidth: 0,\n\t\t\twidth: 45,\n\t\t\theight: 45\n\t\t});\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: gradients\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"LinearGradient\").setAll({\n\t\t\trotation: 90\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Legend\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Legend\").setAll({\n\t\t\tfillField: \"fill\",\n\t\t\tstrokeField: \"stroke\",\n\t\t\tnameField: \"name\",\n\t\t\tlayout: GridLayout.new(this._root, {}),\n\t\t\tlayer: 30,\n\t\t\tclickTarget: \"itemContainer\"\n\t\t});\n\n\t\t// Class: Container\n\t\tr(\"Container\", [\"legend\", \"item\", \"itemcontainer\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingBottom: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tlayout: horizontalLayout,\n\t\t\tsetStateOnChildren: true,\n\t\t\tinteractiveChildren: false,\n\t\t\tariaChecked: true,\n\t\t\tfocusable: true,\n\t\t\tariaLabel: language.translate(\"Press ENTER to toggle\"),\n\t\t\trole: \"checkbox\"\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Rectangle\", [\"legend\", \"item\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tfillOpacity: 0,\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\n\t\t}\n\n\t\tr(\"Container\", [\"legend\", \"marker\"]).setAll({\n\t\t\tsetStateOnChildren: true,\n\t\t\tcenterY: p50,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tpaddingTop: 0,\n\t\t\twidth: 18,\n\t\t\theight: 18\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).setAll({\n\t\t\twidth: p100,\n\t\t\theight: p100,\n\t\t\tcornerRadiusBL: 3,\n\t\t\tcornerRadiusTL: 3,\n\t\t\tcornerRadiusBR: 3,\n\t\t\tcornerRadiusTR: 3\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"legend\", \"marker\", \"rectangle\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\n\t\t}\n\n\t\tr(\"Label\", [\"legend\", \"label\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\tmarginLeft: 5,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\tpopulateText: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"legend\", \"label\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t}\n\n\t\tr(\"Label\", [\"legend\", \"value\", \"label\"]).setAll({\n\t\t\tcenterY: p50,\n\t\t\tmarginLeft: 5,\n\t\t\tpaddingRight: 0,\n\t\t\tpaddingLeft: 0,\n\t\t\tpaddingTop: 0,\n\t\t\tpaddingBottom: 0,\n\t\t\twidth: 50,\n\t\t\tcenterX: p100,\n\t\t\tpopulateText: true\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"legend\", \"value\", \"label\"]).states.create(\"disabled\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"disabled\");\n\t\t}\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: HeatLegend\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"HeatLegend\").setAll({\n\t\t\tstepCount: 1\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"heatlegend\", \"marker\"]).setAll({\n\t\t\tcornerRadiusTR: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusBL: 0\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"vertical\", \"heatlegend\", \"marker\"]).setAll({\n\t\t\theight: p100,\n\t\t\twidth: 15\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"horizontal\", \"heatlegend\", \"marker\"]).setAll({\n\t\t\twidth: p100,\n\t\t\theight: 15\n\t\t});\n\n\t\tr(\"HeatLegend\", [\"vertical\"]).setAll({\n\t\t\theight: p100\n\t\t});\n\n\t\tr(\"HeatLegend\", [\"horizontal\"]).setAll({\n\t\t\twidth: p100\n\t\t});\n\n\t\tr(\"Label\", [\"heatlegend\", \"start\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tpaddingBottom: 5\n\t\t});\n\n\t\tr(\"Label\", [\"heatlegend\", \"end\"]).setAll({\n\t\t\tpaddingLeft: 5,\n\t\t\tpaddingRight: 5,\n\t\t\tpaddingTop: 5,\n\t\t\tpaddingBottom: 5\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Labels\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\t{\n\t\t\tconst rule = r(\"Label\");\n\n\t\t\trule.setAll({\n\t\t\t\tpaddingTop: 8,\n\t\t\t\tpaddingBottom: 8,\n\t\t\t\tpaddingLeft: 10,\n\t\t\t\tpaddingRight: 10,\n\t\t\t\tfontFamily: \"-apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\"\",\n\t\t\t\tfontSize: \"1em\",\n\t\t\t\tpopulateText: false\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"text\");\n\t\t}\n\n\t\tr(\"RadialLabel\").setAll({\n\t\t\ttextType: \"regular\",\n\t\t\tcenterY: p50,\n\t\t\tcenterX: p50,\n\t\t\tinside: false,\n\t\t\tradius: 0,\n\t\t\tbaseRadius: p100,\n\t\t\torientation: \"auto\",\n\t\t\ttextAlign: \"center\"\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Elements and shapes\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"RoundedRectangle\").setAll({\n\t\t\tcornerRadiusTL: 8,\n\t\t\tcornerRadiusBL: 8,\n\t\t\tcornerRadiusTR: 8,\n\t\t\tcornerRadiusBR: 8\n\t\t});\n\n\t\tr(\"PointedRectangle\").setAll({\n\t\t\tpointerBaseWidth: 15,\n\t\t\tpointerLength: 10,\n\t\t\tcornerRadius: 8\n\t\t});\n\n\t\tr(\"Slice\").setAll({\n\t\t\tshiftRadius: 0,\n\t\t\tdRadius: 0,\n\t\t\tdInnerRadius: 0\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Tick\");\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: .15,\n\t\t\t\tisMeasured: false,\n\t\t\t\tlength: 4.5,\n\t\t\t\tposition: \"absolute\"\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\n\t\t}\n\n\t\tr(\"Bullet\").setAll({\n\t\t\tlocationX: 0.5,\n\t\t\tlocationY: 0.5\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Tooltip\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Tooltip\").setAll({\n\t\t\tposition: \"absolute\",\n\t\t\tgetFillFromSprite: true,\n\t\t\tgetStrokeFromSprite: false,\n\t\t\tautoTextColor: true,\n\t\t\tpaddingTop: 9,\n\t\t\tpaddingBottom: 8,\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tmarginBottom: 5,\n\t\t\tpointerOrientation: \"vertical\",\n\t\t\tcenterX: p50,\n\t\t\tcenterY: p50,\n\t\t\tanimationEasing: $ease.out($ease.cubic),\n\t\t\texportable: false\n\t\t\t//layer: 100\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"PointedRectangle\", [\"tooltip\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.9,\n\t\t\t\tcornerRadius: 4,\n\t\t\t\tpointerLength: 4,\n\t\t\t\tpointerBaseWidth: 8,\n\t\t\t\tfillOpacity: 0.9,\n\t\t\t\tstroke: Color.fromHex(0xffffff)\n\t\t\t});\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"tooltip\"]);\n\n\t\t\trule.setAll({\n\t\t\t\trole: \"tooltip\",\n\t\t\t\tpopulateText: true,\n\t\t\t\tpaddingRight: 0,\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tpaddingLeft: 0,\n\t\t\t\tpaddingBottom: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeText\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Button\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\").setAll({\n\t\t\tpaddingTop: 8,\n\t\t\tpaddingBottom: 8,\n\t\t\tpaddingLeft: 10,\n\t\t\tpaddingRight: 10,\n\t\t\tinteractive: true,\n\t\t\tlayout: horizontalLayout,\n\t\t\tinteractiveChildren: false,\n\t\t\tsetStateOnChildren: true,\n\t\t\tfocusable: true\n\t\t});\n\n\t\tr(\"Button\").states.create(\"hover\", {});\n\t\tr(\"Button\").states.create(\"down\", { stateAnimationDuration: 0 });\n\t\tr(\"Button\").states.create(\"active\", {});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]);\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonStroke\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"button\", \"background\"]).states.create(\"active\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonActive\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"button\", \"icon\"]);\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Label\", [\"button\"]);\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * charts/xy: ZoomOutButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"zoom\"]).setAll({\n\t\t\tpaddingTop: 18,\n\t\t\tpaddingBottom: 18,\n\t\t\tpaddingLeft: 12,\n\t\t\tpaddingRight: 12,\n\t\t\tcenterX: 46,\n\t\t\tcenterY: -10,\n\t\t\ty: 0,\n\t\t\tx: p100,\n\t\t\trole: \"button\",\n\t\t\tariaLabel: language.translate(\"Zoom Out\"),\n\t\t\tlayer: 30\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusBL: 40,\n\t\t\t\tcornerRadiusBR: 40,\n\t\t\t\tcornerRadiusTL: 40,\n\t\t\t\tcornerRadiusTR: 40\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"button\", \"zoom\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"icon\", \"button\", \"zoom\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\t\tdisplay.lineTo(12, 0);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"primaryButtonText\");\n\t\t}\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: ResizeButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"resize\"]).setAll({\n\t\t\tpaddingTop: 9,\n\t\t\tpaddingBottom: 9,\n\t\t\tpaddingLeft: 13,\n\t\t\tpaddingRight: 13,\n\t\t\tdraggable: true,\n\t\t\tcenterX: p50,\n\t\t\tcenterY: p50,\n\t\t\tposition: \"absolute\",\n\t\t\trole: \"slider\",\n\t\t\tariaValueMin: \"0\",\n\t\t\tariaValueMax: \"100\",\n\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusBL: 40,\n\t\t\t\tcornerRadiusBR: 40,\n\t\t\t\tcornerRadiusTL: 40,\n\t\t\t\tcornerRadiusTR: 40\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButton\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonStroke\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"background\", \"resize\", \"button\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"resize\", \"button\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\t\tdisplay.lineTo(0, 12);\n\t\t\t\t\tdisplay.moveTo(4, 0);\n\t\t\t\t\tdisplay.lineTo(4, 12);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\n\t\t}\n\n\t\tr(\"Button\", [\"resize\", \"vertical\"]).setAll({\n\t\t\trotation: 90,\n\t\t\tcursorOverStyle: \"ns-resize\"\n\t\t});\n\n\t\tr(\"Button\", [\"resize\", \"horizontal\"]).setAll({\n\t\t\tcursorOverStyle: \"ew-resize\"\n\t\t});\n\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: PlayButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"play\"]).setAll({\n\t\t\tpaddingTop: 13,\n\t\t\tpaddingBottom: 13,\n\t\t\tpaddingLeft: 14,\n\t\t\tpaddingRight: 14,\n\t\t\tariaLabel: language.translate(\"Play\"),\n\t\t\ttoggleKey: \"active\"\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"play\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tcornerRadiusBL: 100,\n\t\t\t\tcornerRadiusBR: 100,\n\t\t\t\tcornerRadiusTL: 100,\n\t\t\t\tcornerRadiusTR: 100\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Graphics\", [\"play\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstateAnimationDuration: 0,\n\t\t\t\tdx: 1,\n\t\t\t\tdraw: (display: any) => {\n\t\t\t\t\tdisplay.moveTo(0, -5);\n\t\t\t\t\tdisplay.lineTo(8, 0);\n\t\t\t\t\tdisplay.lineTo(0, 5);\n\t\t\t\t\tdisplay.lineTo(0, -5);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"play\", \"icon\"]).states.create(\"default\", {\n\t\t\tstateAnimationDuration: 0\n\t\t})\n\n\t\tr(\"Graphics\", [\"play\", \"icon\"]).states.create(\"active\", {\n\t\t\tstateAnimationDuration: 0,\n\t\t\tdraw: (display: any) => {\n\t\t\t\tdisplay.moveTo(-4, -5);\n\t\t\t\tdisplay.lineTo(-1, -5);\n\t\t\t\tdisplay.lineTo(-1, 5);\n\t\t\t\tdisplay.lineTo(-4, 5);\n\t\t\t\tdisplay.lineTo(-4, -5);\n\n\t\t\t\tdisplay.moveTo(4, -5);\n\t\t\t\tdisplay.lineTo(1, -5);\n\t\t\t\tdisplay.lineTo(1, 5);\n\t\t\t\tdisplay.lineTo(4, 5);\n\t\t\t\tdisplay.lineTo(4, -5);\n\t\t\t}\n\t\t})\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: SwitchButton\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Button\", [\"switch\"]).setAll({\n\t\t\tpaddingTop: 4,\n\t\t\tpaddingBottom: 4,\n\t\t\tpaddingLeft: 4,\n\t\t\tpaddingRight: 4,\n\t\t\tariaLabel: language.translate(\"Press ENTER to toggle\"),\n\t\t\ttoggleKey: \"active\",\n\t\t\twidth: 40,\n\t\t\theight: 24,\n\t\t\tlayout: null\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"switch\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tcornerRadiusBL: 100,\n\t\t\t\tcornerRadiusBR: 100,\n\t\t\t\tcornerRadiusTL: 100,\n\t\t\t\tcornerRadiusTR: 100\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"Circle\", [\"switch\", \"icon\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tradius: 8,\n\t\t\t\tcenterY: 0,\n\t\t\t\tcenterX: 0,\n\t\t\t\tdx: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButtonText\");\n\t\t}\n\n\t\tr(\"Graphics\", [\"switch\", \"icon\"]).states.create(\"active\", {\n\t\t\tdx: 16\n\t\t});\n\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * core: Scrollbar\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\tr(\"Scrollbar\").setAll({\n\t\t\tstart: 0,\n\t\t\tend: 1,\n\t\t\tlayer: 30,\n\t\t\tanimationEasing: $ease.out($ease.cubic)\n\t\t});\n\n\t\tr(\"Scrollbar\", [\"vertical\"]).setAll({\n\t\t\tmarginRight: 13,\n\t\t\tmarginLeft: 13,\n\t\t\tminWidth: 12,\n\t\t\theight: p100\n\t\t});\n\n\t\tr(\"Scrollbar\", [\"horizontal\"]).setAll({\n\t\t\tmarginTop: 13,\n\t\t\tmarginBottom: 13,\n\t\t\tminHeight: 12,\n\t\t\twidth: p100\n\t\t});\n\n\t\tthis.rule(\"Button\", [\"scrollbar\"]).setAll({\n\t\t\texportable: false\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"main\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadiusTL: 8,\n\t\t\t\tcornerRadiusBL: 8,\n\t\t\t\tcornerRadiusTR: 8,\n\t\t\t\tcornerRadiusBR: 8,\n\t\t\t\tfillOpacity: 0.8,\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"fill\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]);\n\n\t\t\trule.setAll({\n\t\t\t\trole: \"slider\",\n\t\t\t\tariaLive: \"polite\",\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tdraggable: true\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButton\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"hover\", {});\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonHover\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"scrollbar\", \"thumb\"]).states.create(\"down\", { stateAnimationDuration: 0 });\n\t\t\tsetColor(rule, \"fill\", ic, \"secondaryButtonDown\");\n\t\t}\n\n\t\tr(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"vertical\"]).setAll({\n\t\t\tx: p50,\n\t\t\twidth: p100,\n\t\t\tcenterX: p50,\n\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"scrollbar\", \"thumb\", \"horizontal\"]).setAll({\n\t\t\ty: p50,\n\t\t\tcenterY: p50,\n\t\t\theight: p100,\n\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\n\t\t});\n\n\t\t// @todo: is this needed? used to be \"ContentScrollbar\"\n\t\t// r(\"Scrollbar\", [\"content?\"]).setAll({\n\t\t// \tmarginRight: 0,\n\t\t// \tmarginLeft: 5,\n\t\t// \tlayer: 5\n\t\t// });\n\n\t\t/**\n\t\t * ========================================================================\n\t\t * charts/xy\n\t\t * ========================================================================\n\t\t *\n\t\t * This needs to be in DefaultTheme because it's the only theme that is\n\t\t * automatically applied to Root, and tooltips different ancestors\n\t\t * than actual charts using them.\n\t\t */\n\n\t\t{\n\t\t\tconst rule = r(\"PointedRectangle\", [\"axis\", \"tooltip\", \"background\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tcornerRadius: 0\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\"]).setAll({\n\t\t\trole: undefined\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"y\"]).setAll({\n\t\t\ttextAlign: \"right\"\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"y\", \"opposite\"]).setAll({\n\t\t\ttextAlign: \"left\"\n\t\t});\n\n\t\tr(\"Label\", [\"axis\", \"tooltip\", \"x\"]).setAll({\n\t\t\ttextAlign: \"center\"\n\t\t});\n\n\t\tr(\"Tooltip\", [\"categoryaxis\"]).setAll({\n\t\t\tlabelText: \"{category}\"\n\t\t})\n\n\t\t/**\n\t\t * ------------------------------------------------------------------------\n\t\t * Shapes\n\t\t * ------------------------------------------------------------------------\n\t\t */\n\n\t\t// Class: Graphics\n\t\tr(\"Star\").setAll({\n\t\t\tspikes: 5,\n\t\t\tinnerRadius: 5,\n\t\t\tradius: 10\n\t\t})\n\n\t\t// STOCK\n\t\tr(\"Tooltip\", [\"stock\"]).setAll({\n\t\t\tpaddingTop: 6,\n\t\t\tpaddingBottom: 5,\n\t\t\tpaddingLeft: 7,\n\t\t\tpaddingRight: 7\n\t\t});\n\n\t\tr(\"PointedRectangle\", [\"tooltip\", \"stock\", \"axis\"]).setAll({\n\t\t\tpointerLength: 0,\n\t\t\tpointerBaseWidth: 0,\n\t\t\tcornerRadius: 3\n\t\t});\n\n\t\tr(\"Label\", [\"tooltip\", \"stock\"]).setAll({\n\t\t\tfontSize: \"0.8em\"\n\t\t});\n\n\t\t// resizer\n\n\t\tr(\"SpriteResizer\").setAll({\n\t\t\trotationStep: 10\n\t\t})\n\n\t\t{\n\t\t\tconst rule = r(\"Container\", [\"resizer\", \"grip\"]);\n\t\t\trule.states.create(\"hover\", {});\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0.7,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfillOpacity: 1,\n\t\t\t\twidth: 12,\n\t\t\t\theight: 12\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\t{\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"resizer\", \"grip\", \"outline\"]);\n\n\t\t\trule.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tfillOpacity: 0,\n\t\t\t\twidth: 20,\n\t\t\t\theight: 20\n\t\t\t});\n\n\t\t\trule.states.create(\"hover\", {\n\t\t\t\tfillOpacity: 0.3\n\t\t\t});\n\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\n\t\t}\n\n\t\tr(\"RoundedRectangle\", [\"resizer\", \"grip\", \"left\"]).setAll({\n\t\t\tcornerRadiusBL: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusTR: 0\n\t\t});\n\n\t\tr(\"RoundedRectangle\", [\"resizer\", \"grip\", \"right\"]).setAll({\n\t\t\tcornerRadiusBL: 0,\n\t\t\tcornerRadiusBR: 0,\n\t\t\tcornerRadiusTL: 0,\n\t\t\tcornerRadiusTR: 0\n\t\t});\n\n\t\t{\n\t\t\tconst rule = r(\"Rectangle\", [\"resizer\", \"rectangle\"]);\n\t\t\trule.setAll({\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstrokeOpacity: 0.5,\n\t\t\t\tstrokeWidth: 1\n\t\t\t});\n\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\n\t\t}\n\t}\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","export default x => x;\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n"],"names":["x00","y00","x0","y0","__extends","_super","setupDefaultRules","rule","ic","this","_root","interfaceColors","r","bind","setAll","projection","geoMercator","panX","panY","pinchZoom","zoomStep","zoomLevel","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","$ease","wheelEasing","wheelDuration","wheelSensitivity","maxPanOut","centerMapOnZoomOut","precision","role","setColor","affectsBounds","clipFront","clipBack","autoScale","isMeasured","fillOpacity","position","strokeWidth","strokeOpacity","x","p50","y","draw","display","moveTo","lineTo","step","p100","centerX","centerY","paddingRight","paddingBottom","Theme","Object","_this","children","push","Container","width","height","interactiveChildren","Chart","className","ListAutoDispose","_afterNew","_disposers","series","seriesContainer","events","onAll","change","type","$array","oldValues","_removeSeries","colors","get","reset","moveValue","newValue","_processSeries","setIndex","index","insertIndex","oldValue","Error","value","newIndex","chart","_placeBulletsContainer","isDisposed","removeValue","_removeBulletsContainer","classNames","concat","SerialChart","areaSum","Adder","areaRingSum","areaStream","point","noop","lineStart","lineEnd","polygonStart","areaRingStart","areaRingEnd","polygonEnd","add","abs","result","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","NaN","centroidPointFirstLine","centroidPointLine","dx","dy","z","sqrt","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","prototype","_radius","pointRadius","_","_line","_point","closePath","arc","tau","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","length","PathString","_string","circle","radius","_circle","join","geometries","longitude","latitude","left","right","top","bottom","path","projectionStream","contextStream","object","apply","arguments","stream","pathArea","measure","pathMeasure","bounds","pathBounds","pathCentroid","identity","geoPath","setPrivateRaw","invert","toGlobal","_geoCentroid","_geoBounds","chartContainer","_wheelDp","dispose","on","event","wheelEvent","originalEvent","$utils","preventDefault","_display","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_prepareChildren","w","innerWidth","h","innerHeight","isDirty","_makeGeoPath","markDirtyProjection","_fitMap","scale","getPrivate","rotate","prev","_prevSettings","hw","hh","centerLocation","xy","translate","xx","yy","setRaw","_handleSetWheel","previousGeometries","_geometryColection","_dirtyGeometries","each","_geometries","_pw","_ph","fitSize","newScale","_centerLocation","_centerX","_centerY","geoPath_1","_mapBounds","previous","zoomControl","_disposeProperty","setPrivate","isType","dataItems","dataItem","bullets","bullet","sprite","set","_setUpTouch","geoPath_2","$mapUtils","$math","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","homeGeoPoint","top_1","duration","zoomToGeoPoint","_updateChildren","_afterChanged","isEnabled","dispatch","target","cancelTouch","markDirty","_defaultThemes","MapChartDefaultTheme","_settings","themeTags","bulletsContainer","Rectangle","fill","Color","_handleChartDown","_handleChartUp","_handleChartMove","license","i","registry","match","_showBranding","_downZoomLevel","count","$object","_downPoints","downPoint","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","stop","_txa","_tya","_rxa","_rya","l0","l1","_pLon","Math","_pLat","ll","_event","downPoints","movePoints","k","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","hypot","level","moveCenter","downCenter","tx","ty","_getDownPoint","downPointId","pointerId","_handlePinch","local","disableType","$type","ww","cx","min","max","cy","downLocation","location","delta","easing","animate","key","to","newZoomLevel","zoomToPoint","geoBounds","mapBounds","p0","convert","p1","zl","geoPoint","center","readerAlert","_t","locale","_clearDirty","geometry","MapChart","lambda0","sinPhi0","cosPhi0","sphere","lengthLineEnd","lambda","phi","radians","sin","cos","sinPhi","cosPhi","cosDelta","atan2","coordinates","a","b","_beforeChanged","_projectionDirty","geometry_1","series_1","chart_1","projection_1","clipAngle_1","clipAngle","_clear","geometry_2","segments_1","s","segment","gp0","p","gp","pn","lineType","totalDistance","geoLength","currentDistance","positionA","positionB","pointA","pointB","segments","geoDistance","location_1","positionAB","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","asin","haversin","interpolate","t","B","A","degrees","distance","geoInterpolate","Graphics","MapLine","ListTemplate","Template","mapLines","template","fields","_setRawDefault","mapLine","make","_setDataItem","processDataItem","makeMapLine","_handlePointsToConnect","_addGeometry","pointsToConnect","markDirtyValues","coordinates_1","coords","disposeDataItem","_excludeDataItem","_unexcludeDataItem","_notIncludeDataItem","_unNotIncludeDataItem","MapSeries","MapLineSeries","_positionBullets","bulletFunction","_setBulletParent","_makeBullet","i_1","parent","dataItem_1","line_1","lineDataItem","fixed","lineId_1","lineDI","getDataItemById","polygon_1","polygonDataItem","polygonId_1","polygonDI","positionOnLine","angle","visualCentroid","positionToGeoPoint","geoPoint0","geoPoint1","point0","point1","_positionBulletReal","_index","visible","di","MapPointSeries","isHover","showTooltip","biggestArea","geoArea","$polylabel","MapPolygon","mapPolygons","mapPolygon","makeMapPolygon","_removeGeometry","polygon","zoomToGeoBounds","MapPolygonSeries","processor","processRow","_onPush","_onInsertIndex","_onSetIndex","List","_value","component","dataContext","settings","_checkDirty","_addAnimation","animationTime","_dispose","showDataItem","hideDataItem","Settings","ListData","_dataItems","Component","_data","data","incrementRef","decrementRef","_updateFields","_mainDataItems","_markDirtyGroup","_dataChanged","_onDataClear","DataItem","_makeDataItem","properties_1","forEach","splice","oldIndex","_afterDataChange","valueFields","_valueFields","_valueFieldsF","fieldKey","workingKey","_fields","_fieldsF","_dataItem","output","field","undefined","makeDataItem","_duration","_valuesDirty","inited","_dataGrouped","_sizeDirty","_handleBullets","len","id","_shouldMakeBullet","_aggregatesCalculated","_selectionAggregatesCalculated","startIndex","endIndex","isPrivateDirty","baseValueSeries","onPrivate","_dataProcessed","_calculateAggregates","_psi","_pei","tooltip","hide","markerRectangle","legendDataItem","isVisible","stroke","updateLegendMarker","startIndex_1","endIndex_1","_makeBullets","sum","absSum","low","high","open","close","average","changePercent","changePrevious","changePreviousPercent","changeSelection","changeSelectionPercent","openKey","_getBase","rules","minValue","dataField","maxValue","_entities","percent","propertyValue","logarithmic","log","LOG10E","Infinity","Percent","percentInterpolate","customFunction","call","neutral","_hideBullets","_positionBullet","_markDirtyKey","markDirtySize","walkChildren","child","Label","text","markDirtyText","_bullet","promises","show","Promise","all","_a","startIndex_2","endIndex_2","realDuration","delay","ms","resolve","_reject","setTimeout","valueLabel","txt","label","_onHide","getTooltip","Series","geoJSON","clear","_geoJSONparsed","_parseGeoJSON","exclude","_excluded","include_1","indexOf","_notIncluded","includes","excludes","features","console","geodataNames","idField","feature","type_1","id_1","properties","name","this_1","_types","dataObject","geometryType","madeFromGeoData","_chart","markDirtyGeometries","W0","W1","lambda00","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","m","v","phi0","lambda1","phi1","lambda2","deltaSum","ranges","range","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","epsilon","linePoint","cartesian","normal","cartesianCross","equatorial","inflection","cartesianNormalizeInPlace","spherical","phii","sign","lambdai","antimeridian","rangeCompare","rangeContains","getGeoCentroid","epsilon2","geoCentroid","getGeoBounds","n","merged","deltaMax","sort","geoBounds_1","wSign","hSign","minSide","crtl","crtr","crbr","crbl","maxcr","arcTo","RoundedRectangle","background","icon","Button","verticalLayout","plusButton","layout","minusButton","_prevPrivateSettings","_disposer","MultiDisposer","zoomIn","zoomOut","ZoomControl","_observer","ResizeObserver","entries","entry","_targets","callback","observe","box","unobserve","_timer","lastTime_1","loop_1","currentTime","Date","now","Raf","newSize","getBoundingClientRect","size","requestAnimationFrame","cancelAnimationFrame","observer","element","_sensor","Native","_element","_listener","addTarget","_disposed","removeTarget","ResizeSensor","Entity","InterfaceColors","_changed","markDirtyBounds","cr","bwh","d1","d2","stemX","round","stemY","PointedRectangle","root","isReal","templates","_label","_updateBackground","_updateTextColor","tooltipContainer","_tooltips","Tooltip","updateBackgroundColor","_keepHoverDp","_ev","hover","unhover","_onShow","tooltipTarget","_fillDp","_strokeDp","_labelDp","updateBackground","container","cw","ch","parentW","parentH","layerMargin","_updateBounds","_w","_h","pointTo","pointerOrientation","pointerLength","bgStrokeSizeY","bgStrokeSizeX","pointerX","pointerY","boundsW","boundsH","_fx","_fy","animationDuration","_setDefault","bns","sns","bs","suffix","_setDefaults","format","formatted","toLowerCase","source","Number","Intl","NumberFormat","e","info","parseFormat","language","details","positive","negative","zero","mod","decimals","active","split","applyFormat","thousandSeparator","translateEmpty","decimalSeparator","parts","replace","_part","item","parsed","partFormat","chunks","TextFormatter","chunk","matches","mods","modSpacing","thousands","passive","interval","pop","prefix","a_1","applyPrefix","a_2","ol","toString","parseFloat","toPrecision","exp","toExponential","pow","res","ints","Array","ip","intsr","reverse","c","substr","unshift","separator","decs","prefixes","force","newvalue","applied","number","floor","parseDate","timezone","date","year","month","day","hour","minute","second","millisecond","weekday","formatToParts","toUTCDate","UTC","_utc","DateTimeFormat","hour12","timeZone","fractionalSecondDigits","_dtf","offset","offsetUTC","userOffset","getTimezoneOffset","setUTCMinutes","getUTCMinutes","newUserOffset","locales","utc","convertLocal","getTime","toUpperCase","fullYear","hours","minutes","seconds","milliseconds","timestamp","getUTCFullYear","getUTCMonth","getUTCDay","getUTCDate","getUTCHours","getUTCSeconds","getUTCMilliseconds","getFullYear","getMonth","getDay","getDate","getHours","getMinutes","getSeconds","getMilliseconds","ceil","_getMonth","_getShortMonth","translateFunc","_getShortWeekday","_getWeekday","firstDayOfWeek","Timezone","tz","tzh","tzm","toISOString","toUTCString","dateFormat","_months","_shortMonths","_weekdays","_shortWeekdays","reg","parsedIndexes","resValues","indexAdjust","year3","year2","year1","getStringList","monthLong","monthShort","week","yearDay","weekdayLong","weekdayShort","am","hour12Base1","hourBase0","hour12Base0","hourBase1","millisecondDigits","zone","iso","regex","RegExp","parseInt","val","resolveMonth","resolveShortMonth","isAm","ts","resolveTimezoneOffset","dir","isDefault","translateAll","list","dmillisecond","dsecond","dminute","dhour","dday","dweek","dmonth","aminute","ahour","aday","aweek","amonth","ayear","base","baseUnit","getFormat","color","dirs","absolute","_unitAliases","tstamp","toTimeStamp","part","unit","_toTimeUnit","digits","_getUnitValue","code","maxUnit","getValueUnit","currentUnit","_getUnitValues","timeUnit","en","prompt","_i","rest","translation","pivotX","pivotY","rotation","origin","matrix","a1","b1","c1","tx1","_slicedToArray","arr","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","next","done","err","sliceIterator","TypeError","TAU","PI","mapToEllipse","_ref","rx","ry","cosphi","sinphi","centerx","centery","approxUnitArc","ang1","ang2","tan","x2","y2","vectorAngle","ux","uy","vx","vy","dot","acos","_ref2","px","py","_ref2$xAxisRotation","xAxisRotation","_ref2$largeArcFlag","largeArcFlag","_ref2$sweepFlag","sweepFlag","curves","pxp","pyp","_getArcCenter","rxsq","rysq","pxpsq","pypsq","radicant","centerxp","centeryp","vx1","vy1","vx2","vy2","getArcCenter","_getArcCenter2","ratio","map","curve","_mapToEllipse","_mapToEllipse2","_mapToEllipse3","checkArgs","actual","expected","checkMinArgs","checkEvenArgs","splitArcFlags","args","flag","exec","assertBinary","eachTargets","hitTarget","f","interactive","_parent","onPointerEvent","touches","changedTouches","isTainted","image","canvas","document","createElement","getContext","willReadFrequently","drawImage","getImageData","warn","src","clearCanvas","view","style","CanvasPivot","_x","_y","renderer","Matrix","_renderer","_removeObject","getLayer","self","_layer","defaultLayer","order","margin","registerChildLayer","resizeLayer","dirty","invalidateBounds","_localBounds","_bounds","_colorId","paintId","inactive","_forceInteractive","_isInteractive","_matrix","applyInverse","_uMatrix","setTransform","pivot","bn","_addBounds","_setMatrix","getLocalMatrix","p2","p3","_addEvent","Disposer","_localMatrix","copyFrom","prepend","resolution","layer","_transformMargin","_transform","parentLayer","exportable","_omitTainted","resolution_1","layers","ghostContext","_ghostContext","mask_1","mask","save","_transformLayer","_runPath","clip","globalAlpha","compoundAlpha","alpha","filter","_isInteractiveMask","_render","restore","tainted","_hovering","has","_dragging","some","tapToActivate","_touchActive","shouldCancelTouch","DisposerClass","_children","render","_childLayers","deep","markDirtyLayer","CanvasDisplayObject","setPoint","_forceColor","forceColor","fillStyle","Op","clearShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","lineJoin","strokeStyle","lineWidth","dash","setLineDash","dashOffset","lineDashOffset","rect","l","radiusX","radiusY","ellipse","startAngle","endAngle","anticlockwise","arcBounds","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","quadraticCurveTo","blur","offsetX","offsetY","opacity","BlendMode","_operations","op","_fillAlpha","_pushOp","BeginFill","toCSS","EndFill","_hasShadows","EndStroke","_strokeAlpha","LineStyle","LineDash","LineDashOffset","DrawRect","DrawCircle","DrawEllipse","Arc","ArcTo","LineTo","MoveTo","BezierCurveTo","QuadraticCurveTo","ClosePath","Shadow","GraphicsImage","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","name_1","relative","arcToBezier","beginPath","layerDirty","color_1","context_1","ghostContext_1","globalCompositeOperation","blendMode","_getColorId","colorize","addBounds","_textInfo","textAlign","direction","textBaseline","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","shadowOpacity","_shared","style2","fontVariant","fontWeight","fontSize","fontFamily","_measure","_textVisible","interactive_1","context_2","layerDirty_1","ghostContext_2","_prerender","line","textChunks","fillText","textDecoration","thickness","test","navigator","vendor","rtl","oversizedBehavior","maxWidth","truncate","wrap","_ignoreFontWeight","currentStyle","refText","lines","styleRestored","minX","maxX","ignoreFormatting","currentFormat","lineInfo","ascent","metrics","_measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","currentFill","currentChunkWidth","currentVerticalAlign","currentDecoration","skipFurtherText","firstTextChunk","leftoverChunks","verticalAlign","metrics_1","height_1","metrics_2","chunkWidth","actualBoundingBoxLeft","actualBoundingBoxRight","breakWords","ellipsis","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","slice","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","_fitRatio","minScale","_originalScale","maxW","maxH","maxHeight","fallbackBreakWords","tmp","measureText","fakeMetrics","div","innerText","visibility","body","appendChild","bbox","removeChild","w_1","fontBoundingBoxAscent","fontBoundingBoxDescent","textType","_renderCircular","interactive_2","context_3","layerDirty_2","ghostContext_3","radius_1","startAngle_1","deltaAngle_1","orientation_1","orientation","inward_1","inside_1","inside","align_1","kerning_1","kerning","clockwise_1","shouldReverse_1","_textReversed","maxAngle_1","midAngle","deltaAngle","textHeight","lineStartAngle","angleShift","char","charWidth","_measureCircular","totalWidth","chars","CanvasText","_imageMask","naturalWidth","naturalHeight","_getMask","imageSmoothingEnabled","fillRect","Touch","identifier","_patternCanvas","Set","window","devicePixelRatio","_layerDom","_events","_key","disposer","exportableView","_ghostView","getEvent","_getHitTarget","debug","listener","ev","_touchActiveTimeout","_delayTouchDeactivate","prevent","obj","wheelable","clearTimeout","tapToActivateTimeout","CanvasRenderer","parentNode","createLinearGradient","radius1","radius2","createRadialGradient","graphics","repetition","_patternContext","clearRect","renderDetached","createPattern","CanvasContainer","CanvasGraphics","CanvasTextStyle","CanvasRadialText","CanvasImage","resize","_clientWidth","_clientHeight","_width","_height","CanvasLayer","existingLayer","getLayerByOrder","createDetachedLayer","insertBefore","_dirtyLayers","_lastPointerMoveEvent","native_1","native","_dispatchGlobalMousemove","rgb","distributeId","_colorMap","adjustPoint","DOMRect","CanvasRendererEvent","clientX","clientY","pixel","colorId","dispatching","cleanup","callbacks","disposed","interactionsEnabled","_withEvents","dispatched","button","dragged_1","_mousedown","_dispatchEvent","contains","delete","cursorOverStyle","_replacedCursorStyle","_dispatchEventAll","event_1","id_2","clickevent","target_1","_listeners","listener_1","CounterDisposer","increment","timer","_makeSharedEvent","_onPointerEvent","mouseup","_dispatchGlobalMouseup","pointercancel","mousedown","_dispatchMousedown","mousemove","_dispatchDragMove","_dispatchDragEnd","_dispatchDoubleClick","_dispatchWheel","_initEvent","options","maxScale","minWidth","minHeight","maintainPixelRatio","canvases","forceRender","canvasWidth","canvasHeight","needRerender","exportableContext","clientWidth","clientHeight","ArrayDisposer","rAF","fps","EventDispatcher","Language","NumberFormatter","DateFormatter","DurationFormatter","VerticalLayout","HorizontalLayout","GridLayout","dom","useSafeResolution","HTMLElement","getElementById","inner","tooltipContainerBounds","_tooltipContainerSettings","_inner","_updateComputedStyles","Root","_init","childNodes","_initResizeSensor","_logo","offsetWidth","offsetHeight","logo","setStateOnChildren","paddingTop","paddingLeft","tooltipText","tooltipX","tooltipY","states","create","svgPath","_handleLogo","rootContainer","_rootContainer","DefaultTheme","_htmlElementContainer","pointerEvents","overflow","readerAlertElement","setAttribute","zIndex","_readerAlertElement","focusElementContainer","_focusElementContainer","_tooltipElementContainer","keyCode","_isShift","focusedSprite","_focusedSprite","dragOffsetX","dragOffsetY","downEvent","MouseEvent","simulated","isDragging","_keyboardDragPoint","dragPoint","moveEvent","upEvent","group_1","items","_tabindexes","lastIndex","_startTicker","setThemes","_addTooltip","_hasLicense","_resizeSensorDisposer","autoResize","htmlElementContainer","_focusElementDirty","_updateCurrentFocus","_tickers","_animations","animation","_runAnimation","allParents","_isDirtyParents","_dirtyParents","uid","objects","_dirty","entity","_isDirty","depths","_dirtyBounds","depth","$order","dirtyPositions","_dirtyPositions","_updatePosition","_checkComputedStyles","_runTickers","_runAnimations","_runDirties","_positionHTMLElements","_renderFrame","_ticker","performance","_runTicker","once","markDirtyGlobal","_isDisposed","horizontalLayout","innerHTML","themes","_applyThemes","_tooltip","_invalidateTabindexes","aindex","bindex","groups","_moveFocusElement","_makeFocusElement","group","_decorateFocusElement","_positionFocusElement","focusElement","isHidden","getAttribute","tabindex","removeAttribute","ariaLabel","populateString","ariaLive","ariaChecked","ariaOrientation","ariaValueNow","ariaValueMin","ariaValueMax","ariaValueText","ariaControls","tabIndex","disposers","_handleFocus","_handleBlur","append","globalBounds","focused","isVisibleDeep","_focusNext","el","focusableElements","from","querySelectorAll","focus","_getText","tooltipElement","_makeTooltipElement","remove","removePrivate","_removeFocusElement","styles","getComputedStyle","fontHash","changed","_fontHash","_invalidateLabelBounds","Text","debugGhostView","htmlElement","boxSizing","_positionHTMLElement","_htmlEnabledContainers","setting","opacity_1","compositeOpacity","_adjustedLocalBounds","html","_makeHTMLElement","themeClass","_rules","tags","ruleRaw","_afterNewApplyThemes","Bullet","drawCircle","Circle","_container","_onRemoved","_onInserted","_setParent","childrenDisplay","_childrenDisplay","addChild","addChildAt","values","makeContainer","Children","allChildren","_removeHTMLContent","_prevWidth","_prevHeight","markDirtyPosition","contentMask","_contentMask","_updateSize","_percentageSizeChildren","_percentagePositionChildren","verticalScrollbar","_contentHeight","eachChildren","_applyState","_applyStateAnimated","applyAnimate","pWidth","pHeight","horizontal","vertical","MAX_VALUE","l_1","r_1","t_1","b_1","childBounds","adjustedLocalBounds","childX","childY","cl","ct","cb","_contentWidth","updateContainer","_addDirtyParent","horizontal_1","vertical_1","_handleStates","_setHTMLContent","verticalScrollbar_1","startGrip","endGrip","_vsbd0","shiftY","start","end","_vsbd1","Sprite","_processTemplateField","updated","makeGraphics","Pattern","_pattern","_backgroundDisplay","beginFill","drawRect","endFill","_draw","_load","_image","patternWidth","patternHeight","fit","image_1","Image","decode","then","catch","_error","PicturePattern","gradient","gradientTarget","strokeDasharray","strokeDashoffset","setLineDashOffset","fill_1","fillGradient","fillPattern","fillOpacity_1","stroke_1","strokeGradient","strokePattern","shadow","pattern","stops","colorInherited","opacityInherited","getFill","strokeOpacity_1","lineStyle","endStroke","availableWidth","minCellWidth","maxCellWidth","childWidth","columnCount","columnWidths","getColumnWidths","prevY","column","maxColumnHeight","prevX","marginTop","marginBottom","marginLeft","marginRight","Layout","totalPercent","privateWidth","_text","_makeText","_textKeys","property","propValue","_setMaxDimentions","eachReverse","_sprite","_rendererDisposers","disposer_1","shouldClone","_on","rendererEvent","SpriteEventDispatcher","RENDERER_EVENTS","_onRenderer","_dispatchParents","old","dispatchParents","_hasDown","_hasMoved","_makePointerEvent","_addPercentagePositionChildren","_markDirtyPrivateKey","_templateField","_removeObjectTemplate","_removeTemplateField","_setObjectTemplate","_applyTemplates","oldDataItem","eventType","newDataItem","parent_1","_addDirtyPosition","setLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","_statesHandled","markDirtyAccessibility","draggable","_dragDp","dragStart","dragMove","dragStop","tooltipHTML","showTooltipOn","_tooltipDp","hideTooltip","toggleKey_1","_toggleDp","_isDragging","updatePivotPoint","_addPercentageSizeChildren","parent_2","_registerTabindexOrder","_unregisterTabindexOrder","_focusDp","events_1","_hoverDp","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","_dragEvent","stopParentDispatch","_dragPoint","lookup","_downPoint","dragEvent","parent_3","getLocalBounds","_addDirtyBounds","parent_4","isFocus","_invalidateAccessibility","newBounds","oldBounds","_getBounds","_fixMinBounds","getAdjustedBounds","privateHeight","tooltipPosition","_getTooltipPoint","promise","timeout","parent_5","_removeParent","localBounds","success","_isShowing","_isHidden","_isHiding","animations","waitForAnimations","hovering","parent_6","parent_7","_findStaticTemplate","_walkParent","updateChildren","prevParent","numberFormatter","dateFormatter","durationFormatter","makeTextStyle","makeText","textStyle","updateTooltip","wordWrapWidth","_textStyles","styleName","getNumberFormatter","getDateFormatter","getDurationFormatter","availableHeight","childHeight","promises_1","waitForStop","diff","defaultInterpolate","colorInterpolate","getInterpolate","_entity","_playingDuration","_startingTime","_from","_to","_current","_stopEvent","progress","AnimationTime","jumpTo","_play","array","any","fn","eachContinue","pushAll","input","found","removeFirst","move","toIndex","removeIndex","pushOne","copy","findIndex","find","findReverse","findIndexReverse","getSortedIndex","ordering","getFirstSortedIndex","keepIf","keep","string2hex","string","repeat","fromAny","hex","_hex","g","fromRGB","toCSSHex","rgba2hex","fromString","fromCSS","fromHex","lightAlternative","darkAlternative","mode","fromHSL","toHSL","_counter","linear","cubic","out","ease","period","fallback","_userSettings","seen","defaultState","_eachSetting","stateAnimationDuration","stateAnimationEasing","_states","state","state_1","State","newState","_callbacks","_disabled","loops","startingTime","_animation","_easing","_loops","_interpolate","_oldTime","Animation","_playing","_stopped","_startAnimation","_time","stopped_1","counter","_userProperties","playing_1","_animatingSettings","_stopAnimation","_run","percentage","_checkEnded","_reset","_set","_animatingPrivateSettings","_stopAnimationPrivate","_setPrivate","_settingEvents","_privateSettingEvents","getRaw","_sendKeyEvent","_setRaw","_privateSettings","_sendPrivateKeyEvent","_setPrivateRaw","animation_1","_animationTime","animation_2","States","Adapters","_createEvents","_internalTemplates","_registerId","_template","shouldApply","constructor","_dirtyPrivate","_disposerProperties","_addDirtyEntity","_name","adapters","fold","_removeTemplateProperty","_userPrivateProperties","_removeTemplatePrivateProperty","_findTemplateByKey","_findTemplateByPrivateKey","other","_eachTemplate","_apply","_templateDisposers","privateSettings","_runSetup","setup","_templates","_disposeTemplates","_applyTemplate","value_1","_findTemplate","isConnected","defaults","tag","_walkParents","theme","_removeTemplates","allRules","_lookupRules","every","prevId","removeDispose","hasTag","_killed","_iterating","_enabled","killed","amount","_eachListener","hasListenersByType","_removeListener","_shouldDispatch","_removeExistingListener","_type","checkBounds","initial","_values","value_a","value_b","_onRemoveIndex","toIndex_1","_onMoveIndex","newArray","_onClear","autoDispose","RADIANS","DEGREES","isNumber","rounded","fitToRange","normalizeAngle","getArcBounds","minY","maxY","bpoints","getArcPoint","fromAngle","toAngle","pt","getAngle","point2","diffX","diffY","keys","keysOrdered","assign","hasKey","hasOwnProperty","softCopyProperties","compare","compareArray","leftLength","rightLength","getTagValue","tagName","prop","dateFields","numericFields","durationFields","method","params","reg2","matches2","getTagValueFromObject","getCustomDataValue","customData","current","formatApplied","numberValue","dateValue","durationValue","encodeURIComponent","formatParts","formatterType","_stateChanged","TemplateState","TemplateStates","TemplateAdapters","_setTemplateProperty","_setTemplatePrivateProperty","_applyStateByKey","quotedBlocks","noFormatting","escape","chunks2","i2","chunk2","cleanUp","unescape","isImage","q","isNaN","toNumber","converted","isString","toDate","isDate","num","numberToString","zeros","exponent","getType","isObject","PLACEHOLDER","PLACEHOLDER2","rootStylesheet","removeElement","addEventListener","removeEventListener","onZoom","supports","cap","getPointerId","activeElement","getRendererEvent","isTouchEvent","PointerEvent","pointerType","setStyle","getStyle","isLocalEvent","cursor","host","setInteractive","selector","nonce","head","sheet","getStylesheet","_rule","cssRules","insertRule","appendStylesheet","CSSStyleRule","StyleRule","selectorText","deleteRule","setProperty","_setVendorPrefixName","textContent","createStylesheet","getSafeResolution","relativeToValue","full","padString","trim","trimLeft","trimRight","hints","cleanFormat","stripTags","escapeForRgex","getYearDay","getWeek","setUTCDate","firstDay","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","setUTCFullYear","get12Hours","getTimeZone","long","savings","wotz","toLocaleString","wtz","timeZoneName","utcDate","hslToRgb","hue2rgb","rgbToHsl","lighten","getLightnessStep","brighten","isLight","saturate","saturation","hsl","alternativeColor","light","dark","mergeTags","tags1","tags2","__spreadArray","sameBounds","primaryButton","primaryButtonHover","primaryButtonDown","primaryButtonActive","primaryButtonText","primaryButtonStroke","secondaryButton","secondaryButtonHover","secondaryButtonDown","secondaryButtonActive","secondaryButtonText","secondaryButtonStroke","grid","alternativeBackground","alternativeText","disabled","passOptions","hue","lightness","reuse","interpolationDuration","interpolationEasing","gap","colorOpacity","checkered","centered","fillField","strokeField","nameField","clickTarget","focusable","cornerRadiusBL","cornerRadiusTL","cornerRadiusBR","cornerRadiusTR","populateText","stepCount","baseRadius","pointerBaseWidth","cornerRadius","shiftRadius","dRadius","dInnerRadius","locationX","locationY","getFillFromSprite","getStrokeFromSprite","autoTextColor","toggleKey","labelText","spikes","innerRadius","rotationStep","Queue","require","polylabel","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","points","j","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","minDistSq","ring","getSegDistSq","pointToPolygonDist","SQRT2","default","module","exports","TinyQueue","defaultCompare","_down","_up","peek","pos","halfLength","best","extendStatics","setPrototypeOf","__proto__","String","__","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","rejected","__generator","sent","trys","ops","verb","__read","o","ar","error","pack","_partials","Float64Array","hi","lo","valueOf","areaRing","quarterPi","dLambda","sdLambda","adLambda","u","cartesianDot","cartesianAddInPlace","cartesianScale","vector","pi","halfPi","atan","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","rejoin","shift","Intersection","compareIntersection","startInside","subject","pointEqual","link","isSubject","merge","arrays","flatten","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","circleStream","t0","t1","cosRadius","sinRadius","circleRadius","smallRadius","notHemisphere","intersect","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","t2","polar","q1","c0","v0","v00","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","a0","b0","polygonInside","cleanInside","ax","ay","transformer","methods","TransformStream","fitBounds","clipExtent","geoStream","fitExtent","extent","cosMinDistance","project","delta2","resampleLineTo","phi2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","recenter","transformRotate","clipCircle","reflectX","reflectY","fitWidth","fitHeight","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","streamGeometry","streamGeometryType","streamObjectType","Feature","FeatureCollection","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","closed","coordinate"],"sourceRoot":""}